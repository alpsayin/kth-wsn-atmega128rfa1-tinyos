<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="12:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoAppC.nc">
      <from><interface-ref name="PacketTypes" scoped="" ref="0x40642c20"/></from>
      <to><interface-ref name="PacketTypes" scoped="" ref="0x4072d848"/></to>
    </wire>
    <wire loc="13:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x40639d30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40673330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40673330"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4067d028"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="14:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x406370e8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4071b0f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4071b0f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4067d028"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x4062d180"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403f1670"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403f1670"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x405f03a8"/></to>
    </wire>
    <wire loc="16:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoAppC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x4062d500"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40674878"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40674878"/></from>
      <to><interface-ref name="Uart1Stream" scoped="" ref="0x4042a190"/></to>
    </wire>
    <wire loc="17:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoAppC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x4062ddb0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x406711c8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x406711c8"/></from>
      <to><interface-ref name="Uart1Byte" scoped="" ref="0x4041f090"/></to>
    </wire>
    <wire loc="18:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4062e4e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4047cdf8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4047cdf8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40495280"/></to>
    </wire>
    <wire loc="19:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoAppC.nc">
      <from><interface-ref name="DataQueue" scoped="" ref="0x4063cd00"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x40778ce8"/></to>
    </wire>
    <wire loc="20:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoAppC.nc">
      <from><interface-ref name="StatusQueue" scoped="" ref="0x4063e9e0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x4078a178"/></to>
    </wire>
    <wire loc="21:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoAppC.nc">
      <from><interface-ref name="CommandQueue" scoped="" ref="0x4064d708"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x40776748"/></to>
    </wire>
    <wire loc="27:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoAppC.nc">
      <from><interface-ref name="CommandNotification" scoped="" ref="0x40782e90"/></from>
      <to><interface-ref name="CommandNotification" scoped="" ref="0x40648c80"/></to>
    </wire>
    <wire loc="35:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoAppC.nc">
      <from><interface-ref name="CommandNotification" scoped="" ref="0x40782e90"/></from>
      <to><interface-ref name="CommandNotification" scoped="" ref="0x40648c80"/></to>
    </wire>
    <wire loc="28:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoAppC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40786de8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x406711c8"/></to>
    </wire>
    <wire loc="29:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoAppC.nc">
      <from><interface-ref name="PacketTypes" scoped="" ref="0x407832a0"/></from>
      <to><interface-ref name="PacketTypes" scoped="" ref="0x40785ce0"/></to>
    </wire>
    <wire loc="30:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x40797d20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4079b2c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4079b2c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4067d028"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x407930e8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407af0a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x407af0a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4067d028"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40783ce8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403f1670"/></to>
    </wire>
    <wire loc="33:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40782060"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4047cdf8"/></to>
    </wire>
    <wire loc="36:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoAppC.nc">
      <from><interface-ref name="ForwardCommand" scoped="" ref="0x40799de8"/></from>
      <to><interface-ref name="ForwardCommand" scoped="" ref="0x40659918"/></to>
    </wire>
    <wire loc="37:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoAppC.nc">
      <from><interface-ref name="ForwardData" scoped="" ref="0x40798888"/></from>
      <to><interface-ref name="ForwardData" scoped="" ref="0x40649430"/></to>
    </wire>
    <wire loc="38:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoAppC.nc">
      <from><interface-ref name="ForwardStatus" scoped="" ref="0x40797338"/></from>
      <to><interface-ref name="ForwardStatus" scoped="" ref="0x40646010"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x405f0740"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x402ff378"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x402ff378"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403c83e0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x405f0d08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403f9b40"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403f9b40"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403f8a10"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405ec130"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x403f9358"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x403f51f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404b0ba8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x403f51f8"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x403f8010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x403f8e00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404020f8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404020f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40402ef0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x403f55c0"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x405ef0b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerInit" scoped="" ref="0x40402500"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408fa7a0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40402500"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4055a440"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x403ffac8"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x40402500"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="SerialInit" scoped="" ref="0x403ff318"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x40420300"/></to>
    </wire>
    <wire loc="14:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Init" scoped="" ref="0x40420300"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x4041d520"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x403ff700"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4040cb48"/></to>
    </wire>
    <wire loc="15:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Byte" scoped="" ref="0x4041f090"/></from>
      <to><interface-ref name="Uart1Byte" scoped="" ref="0x4041de50"/></to>
    </wire>
    <wire loc="16:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Stream" scoped="" ref="0x4042a190"/></from>
      <to><interface-ref name="Uart1Stream" scoped="" ref="0x40427388"/></to>
    </wire>
    <wire loc="17:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x4041f5f0"/></from>
      <to><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x40427d48"/></to>
    </wire>
    <wire loc="13:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Control" scoped="" ref="0x4041ee00"/></from>
      <to><interface-ref name="Uart1Control" scoped="" ref="0x4041d960"/></to>
    </wire>
    <wire loc="18:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40485360"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4047cdf8"/></to>
    </wire>
    <wire loc="19:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40433d18"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405368f0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x405368f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40542320"/></to>
    </wire>
    <wire loc="20:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Interrupts" scoped="" ref="0x40431010"/></from>
      <to><interface-ref name="Uart1Interrupts" scoped="" ref="0x4047d678"/></to>
    </wire>
    <wire loc="21:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40430e40"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4047cdf8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403e5218"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x4058d1e0"/></to>
    </wire>
    <wire loc="22:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403e5218"/></from>
      <to><interface-ref name="Uart1PowerOverride" scoped="" ref="0x40432758"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="sendBlockingDoneTask" scoped="" ref="0x4043b010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="sendDoneTask" scoped="" ref="0x4043a170"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="unexpectedByteReceivedTask" scoped="" ref="0x404392c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="receiveBlockingDoneTask" scoped="" ref="0x4043b888"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="receiveDoneTask" scoped="" ref="0x4043a990"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404b0ba8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40498f20"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x404930a0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40497d48"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40497d48"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x404bd0a0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40493a88"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x404b1768"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x404b1768"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x404bda98"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x4049e4a0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x404b0220"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x404b0220"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x404bc4b0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x404bd0a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40503e48"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x404bda98"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405027d0"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x404bc4b0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40501170"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x404b52f0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404fdb80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404fdb80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4080c3b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x405027d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4083b538"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x404c5ce8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40507030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40507030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40872a88"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x404c10a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4050fdc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4050fdc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408b0938"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x404cc2f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4051ae48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4051ae48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408c6c08"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x404b9830"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40509d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40509d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408766c0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x404af698"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404ea8e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404ea8e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407c1bb0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x404b3210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404fb7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404fb7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40806228"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x404ab590"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404f65d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404f65d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407d9a88"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x404bf210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404f94f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404f94f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4081b0b0"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x404bb8e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404ff4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404ff4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40852538"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x404be670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x405034f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x405034f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4083e010"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x404c3c08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40506c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40506c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408899e8"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x404c0ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4050dac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4050dac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408ab7f8"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x404b74b0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404f4250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404f4250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407d49e8"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x404c1a98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4050e790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4050e790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408ae3b0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x404b5ce8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404fc4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404fc4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4080bd70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40501170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40855010"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x404c4750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40507988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40507988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4088c538"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x404ac0c0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404f7250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404f7250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407dc6c0"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x404b3c88"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404fa170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x404fa170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40805c08"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x404b8010"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404f6f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404f6f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407d7538"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x404ba2f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404ffe48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404ffe48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40850010"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x404c2670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405136b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x405136b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40887538"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x404b68e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404fd228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404fd228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4080e938"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40503e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4083d9e8"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x404c52f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405086b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x405086b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408740b0"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x404cd8e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4051a4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4051a4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408c7228"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x404b7ea8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404f4ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404f4ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407d2538"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x404b4750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404fce48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404fce48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408097f8"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x404bcea8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40501ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40501ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408549e8"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x404acab8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404f7ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404f7ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407da0b0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x404b2750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404faac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404faac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4081d6c0"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x404bace8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405093d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x405093d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40878c20"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x404c3210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40506330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40506330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4088a010"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x404bfc08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40504b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40504b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40840538"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x404c04b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4050d170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4050d170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408add70"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x404b8a08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404f5890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x404f5890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407d5010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405197d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408c46c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40518170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408c20b0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x405415f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4054d368"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4054d368"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4055a878"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x4056aa48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40566c90"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40566c90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4057e278"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="BeaconCapture" scoped="" ref="0x405739a8"/></from>
      <to><interface-ref name="BeaconCapture" scoped="" ref="0x4058f158"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x40574860"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x40592010"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40571470"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x4057b408"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40571470"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40588830"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40571470"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40586bd0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x4058d5d0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403dc148"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c8c18"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403d18b8"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x403df470"/></to>
    </wire>
    <wire loc="41:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoC.nc">
      <from><interface-ref name="processReceiveBufferTask" scoped="" ref="0x40646e50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoC.nc">
      <from><interface-ref name="forwardNextPacketTask" scoped="" ref="0x406576e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x406743f8"/></from>
      <to><interface-ref name="Uart1Control" scoped="" ref="0x4041ee00"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x4067d028"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406f2cc8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x406e1cc8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40679f20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40679f20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x409025a0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x407220c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406cd968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x408ff380"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40906ae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40906ae0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x408fabd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x409000a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405368f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x409165f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40566c90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x409135a8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40571470"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x406f5658"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x4071f2b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="McuInitC" loc="36:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128Rfa1SerialC" loc="1:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <configuration/>
    </component>
    <component qname="Atm128Rfa1SerialP" loc="13:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <module/>
    </component>
    <component qname="Atm128Rfa1Uart1InterruptsP" loc="5:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1Uart1InterruptsP.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="38:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
        <short>&#10; The implementation of the LED mote abstraction for the RCB128RFA1&#10; Platform.</short>
        <long>&#10; The implementation of the LED mote abstraction for the RCB128RFA1&#10; Platform.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="25:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the Atmega128RFA1's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the Atmega128RFA1's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega128RFA1 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG" loc="40(HplAtm128GeneralIOC.PortG):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit0" loc="41(HplAtm128GeneralIOC.PortG.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit1" loc="41(HplAtm128GeneralIOC.PortG.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit2" loc="41(HplAtm128GeneralIOC.PortG.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit3" loc="41(HplAtm128GeneralIOC.PortG.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit4" loc="41(HplAtm128GeneralIOC.PortG.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit5" loc="41(HplAtm128GeneralIOC.PortG.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit6" loc="41(HplAtm128GeneralIOC.PortG.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit7" loc="41(HplAtm128GeneralIOC.PortG.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.3 2010-08-10 01:28:33 mmaroti Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40436450"/>
            <typename><typedef-ref name="TMilli" ref="0x40436618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048dee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405310a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter62khz32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterP):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048dee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405310a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="SerialEchoC" loc="14:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoC.nc" safe="">
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="37:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="SerialEchoAppC.Timer0" loc="44(SerialEchoAppC.Timer0):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C" loc="37(TimerMilliP.AlarmMilli32C.Alarm62khz32C):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP" loc="35(TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048dee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405310a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40436450"/>
            <typename><typedef-ref name="TMilli" ref="0x40436618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048dee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405310a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40436450"/>
            <typename><typedef-ref name="TMilli" ref="0x40436618"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40436450"/>
            <typename><typedef-ref name="TMilli" ref="0x40436618"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialEchoAppC.Timer1" loc="44(SerialEchoAppC.Timer1):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialEchoAppC.PacketTypesImpl" loc="11(SerialEchoAppC.PacketTypesImpl):/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypesP.nc">
      <instance number="0">
        <component-ref qname="PacketTypesP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialEchoAppC.DataQueue" loc="42(SerialEchoAppC.DataQueue):/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-tag size="I:14" alignment="I:1"><struct-ref name="data_packet" ref="0x405f62c8"/>
            <typename><typedef-ref name="data_packet_t" ref="0x405f4010"/></typename>
          </type-tag>
          <value cst="I:255">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialEchoAppC.CommandQueue" loc="42(SerialEchoAppC.CommandQueue):/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x405f4220"/>
            <typename><typedef-ref name="command_packet_t" ref="0x405f4ee8"/></typename>
          </type-tag>
          <value cst="I:32">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialEchoAppC.StatusQueue" loc="42(SerialEchoAppC.StatusQueue):/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="status_packet" ref="0x4030b7e0"/>
            <typename><typedef-ref name="status_packet_t" ref="0x405f76d8"/></typename>
          </type-tag>
          <value cst="I:32">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyNotificationReceiverP" loc="4:/home/alpsayin/tinyos_workspace/SerialEcho/src/DummyNotificationReceiverP.nc">
      <module/>
    </component>
    <component qname="SerialEchoAppC.PacketTypesDummy" loc="11(SerialEchoAppC.PacketTypesDummy):/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypesP.nc">
      <instance number="1">
        <component-ref qname="PacketTypesP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialEchoAppC.Timer2" loc="44(SerialEchoAppC.Timer2):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialEchoAppC.Timer3" loc="44(SerialEchoAppC.Timer3):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404c80e8" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404c8300" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404c8518" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404d04f8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404d0720" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404d0948" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404d0b38" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40533888" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40533888"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40533ce8" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40533ce8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40540010" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40540010"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40540480" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40540480"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x405406e8" loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40540b70" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40540b70"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x4054cd20" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4054cd20"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40559168" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40559168"/></type-var>
        </typedef>
        <constant name="mode" ref="0x40559358" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCompareP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x40691010" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40691010"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40691440" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40691440"/></type-var>
        </typedef>
        <constant name="mode" ref="0x40691630" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x40691838" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x406aa410" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x406aa410"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x406aa870" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x406aa870"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x406aaad8" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x406aaad8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x406bf010" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x406bf010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x406bf278" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406cb368" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406cb368"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406f3ef8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406f3ef8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x406f00f0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PacketTypesP" loc="11:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypesP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x4072ce50" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x4072ce50"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x4076d088" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x403f9358" loc="58:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x403f9358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f9530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403f1670" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403f1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403f1848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403f9b40" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403f9b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f9d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x403f8010" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x403f8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f81e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x403f55c0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x403f55c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f5798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403f8a10" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403f8a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f8be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x403f51f8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x403f51f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f53d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x403f8e00" loc="43:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x403f8e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404020f8" loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404020f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404022d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x40402500" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x40402500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404026d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40402ef0" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40402ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ff0e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialInit" ref="0x403ff318" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialInit" scoped="" ref="0x403ff318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ff4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x403ff700" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x403ff700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ff8d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x403ffac8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x403ffac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ffca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4040cb48" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4040cb48"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4040cd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404103c0" loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404103c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40410598"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40410678"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40410758"/>
        <function-ref name="actualMicro" scoped="" ref="0x40410838"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40410918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Byte" ref="0x4041f090" loc="6:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Byte" scoped="" ref="0x4041f090"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4041f268"/>
        <function-ref name="receive" scoped="" ref="0x4041f348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Stream" ref="0x4042a190" loc="5:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Stream" scoped="" ref="0x4042a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4042a368"/>
        <function-ref name="receivedByte" scoped="" ref="0x4042a448"/>
        <function-ref name="receive" scoped="" ref="0x4042a528"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x4042a608"/>
        <function-ref name="receiveDone" scoped="" ref="0x4042a6e8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4042a7c8"/>
        <function-ref name="sendDone" scoped="" ref="0x4042a8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x40420300" loc="4:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x40420300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404204d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1StreamBlocking" ref="0x4041f5f0" loc="7:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x4041f5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4041f7c8"/>
        <function-ref name="receivedByte" scoped="" ref="0x4041f8a8"/>
        <function-ref name="receive" scoped="" ref="0x4041f988"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x4041fa68"/>
        <function-ref name="receiveDone" scoped="" ref="0x4041fb48"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4041fc28"/>
        <function-ref name="sendDone" scoped="" ref="0x4041fd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Control" ref="0x4041ee00" loc="3:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Control" scoped="" ref="0x4041ee00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40420010"/>
        <function-ref name="stop" scoped="" ref="0x404200f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Byte" ref="0x4041de50" loc="17:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Byte" scoped="" ref="0x4041de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40427050"/>
        <function-ref name="receive" scoped="" ref="0x40427130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBlockingDoneTask" ref="0x4043b010" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBlockingDoneTask" scoped="" ref="0x4043b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4043b1e8"/>
        <function-ref name="runTask" scoped="" ref="0x4043b2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDoneTask" ref="0x4043a170" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDoneTask" scoped="" ref="0x4043a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4043a348"/>
        <function-ref name="runTask" scoped="" ref="0x4043a428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Stream" ref="0x40427388" loc="18:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Stream" scoped="" ref="0x40427388"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40427560"/>
        <function-ref name="receivedByte" scoped="" ref="0x40427640"/>
        <function-ref name="receive" scoped="" ref="0x40427720"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40427800"/>
        <function-ref name="receiveDone" scoped="" ref="0x404278e0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x404279c0"/>
        <function-ref name="sendDone" scoped="" ref="0x40427aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="unexpectedByteReceivedTask" ref="0x404392c8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="unexpectedByteReceivedTask" scoped="" ref="0x404392c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404394a0"/>
        <function-ref name="runTask" scoped="" ref="0x40439580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1StreamBlocking" ref="0x40427d48" loc="19:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x40427d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40427f20"/>
        <function-ref name="receivedByte" scoped="" ref="0x40432018"/>
        <function-ref name="receive" scoped="" ref="0x404320f8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x404321d8"/>
        <function-ref name="receiveDone" scoped="" ref="0x404322b8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40432398"/>
        <function-ref name="sendDone" scoped="" ref="0x40432478"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x4041d520" loc="15:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x4041d520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4041d6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Uart1Interrupts" ref="0x40431010" loc="22:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Interrupts" scoped="" ref="0x40431010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxInterruptPending" scoped="" ref="0x40431aa8"/>
        <function-ref name="txInterruptHandler" scoped="" ref="0x404312c8"/>
        <function-ref name="rxInterruptHandler" scoped="" ref="0x404313a8"/>
        <function-ref name="enableRxInterrupt" scoped="" ref="0x40431488"/>
        <function-ref name="enableTxInterrupt" scoped="" ref="0x40431568"/>
        <function-ref name="disableRxInterrupt" scoped="" ref="0x40431648"/>
        <function-ref name="clearTxInterrupt" scoped="" ref="0x40431728"/>
        <function-ref name="isRxInterruptPending" scoped="" ref="0x40431808"/>
        <function-ref name="disableTxInterrupt" scoped="" ref="0x404318e8"/>
        <function-ref name="setSendData" scoped="" ref="0x404311e8"/>
        <function-ref name="clearRxInterrupt" scoped="" ref="0x404319c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40433d18" loc="23:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40433d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40436450"/>
            <typename><typedef-ref name="TMilli" ref="0x40436618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40430478"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40430968"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x404306f0"/>
        <function-ref name="overflow" scoped="" ref="0x40430be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40430e40" loc="24:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40430e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40437050"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40437130"/>
        <function-ref name="led1On" scoped="" ref="0x40437210"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404372f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404373d0"/>
        <function-ref name="get" scoped="" ref="0x404374b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40437590"/>
        <function-ref name="led2Off" scoped="" ref="0x40437910"/>
        <function-ref name="set" scoped="" ref="0x40437670"/>
        <function-ref name="led0On" scoped="" ref="0x40437750"/>
        <function-ref name="led2On" scoped="" ref="0x40437830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Control" ref="0x4041d960" loc="16:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Control" scoped="" ref="0x4041d960"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4041db38"/>
        <function-ref name="stop" scoped="" ref="0x4041dc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1PowerOverride" ref="0x40432758" loc="20:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1PowerOverride" scoped="" ref="0x40432758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40432930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveBlockingDoneTask" ref="0x4043b888" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveBlockingDoneTask" scoped="" ref="0x4043b888"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4043ba60"/>
        <function-ref name="runTask" scoped="" ref="0x4043bb40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDoneTask" ref="0x4043a990" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDoneTask" scoped="" ref="0x4043a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4043abe8"/>
        <function-ref name="runTask" scoped="" ref="0x4043acc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Interrupts" ref="0x4047d678" loc="7:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1Uart1InterruptsP.nc">
      <component-ref qname="Atm128Rfa1Uart1InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Interrupts" scoped="" ref="0x4047d678"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxInterruptPending" scoped="" ref="0x404851d0"/>
        <function-ref name="txInterruptHandler" scoped="" ref="0x4047d930"/>
        <function-ref name="rxInterruptHandler" scoped="" ref="0x4047da10"/>
        <function-ref name="enableRxInterrupt" scoped="" ref="0x4047daf0"/>
        <function-ref name="enableTxInterrupt" scoped="" ref="0x4047dbd0"/>
        <function-ref name="disableRxInterrupt" scoped="" ref="0x4047dcb0"/>
        <function-ref name="clearTxInterrupt" scoped="" ref="0x4047dd90"/>
        <function-ref name="isRxInterruptPending" scoped="" ref="0x4047de70"/>
        <function-ref name="disableTxInterrupt" scoped="" ref="0x40485010"/>
        <function-ref name="setSendData" scoped="" ref="0x4047d850"/>
        <function-ref name="clearRxInterrupt" scoped="" ref="0x404850f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40485360" loc="8:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1Uart1InterruptsP.nc">
      <component-ref qname="Atm128Rfa1Uart1InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40485360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40485538"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40485618"/>
        <function-ref name="led1On" scoped="" ref="0x404856f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404857d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404858b8"/>
        <function-ref name="get" scoped="" ref="0x40485998"/>
        <function-ref name="led1Off" scoped="" ref="0x40485a78"/>
        <function-ref name="led2Off" scoped="" ref="0x40485df8"/>
        <function-ref name="set" scoped="" ref="0x40485b58"/>
        <function-ref name="led0On" scoped="" ref="0x40485c38"/>
        <function-ref name="led2On" scoped="" ref="0x40485d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4047cdf8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4047cdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40498010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404980f0"/>
        <function-ref name="led1On" scoped="" ref="0x404981d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404982b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40498390"/>
        <function-ref name="get" scoped="" ref="0x40498470"/>
        <function-ref name="led1Off" scoped="" ref="0x40498550"/>
        <function-ref name="led2Off" scoped="" ref="0x404988d0"/>
        <function-ref name="set" scoped="" ref="0x40498630"/>
        <function-ref name="led0On" scoped="" ref="0x40498710"/>
        <function-ref name="led2On" scoped="" ref="0x404987f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x404930a0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x404930a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40493278"/>
        <function-ref name="isInput" scoped="" ref="0x40493358"/>
        <function-ref name="toggle" scoped="" ref="0x40493438"/>
        <function-ref name="isOutput" scoped="" ref="0x40493518"/>
        <function-ref name="get" scoped="" ref="0x404935f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404936d8"/>
        <function-ref name="set" scoped="" ref="0x404937b8"/>
        <function-ref name="clr" scoped="" ref="0x40493898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40498f20" loc="40:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40498f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40495110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40493a88" loc="45:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40493a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40493c60"/>
        <function-ref name="isInput" scoped="" ref="0x40493d40"/>
        <function-ref name="toggle" scoped="" ref="0x40493e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40493f00"/>
        <function-ref name="get" scoped="" ref="0x4049e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049e0f0"/>
        <function-ref name="set" scoped="" ref="0x4049e1d0"/>
        <function-ref name="clr" scoped="" ref="0x4049e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40495280" loc="41:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40495280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40495458"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40495538"/>
        <function-ref name="led1On" scoped="" ref="0x40495618"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404956f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404957d8"/>
        <function-ref name="get" scoped="" ref="0x404958b8"/>
        <function-ref name="led1Off" scoped="" ref="0x40495998"/>
        <function-ref name="led2Off" scoped="" ref="0x40495d18"/>
        <function-ref name="set" scoped="" ref="0x40495a78"/>
        <function-ref name="led0On" scoped="" ref="0x40495b58"/>
        <function-ref name="led2On" scoped="" ref="0x40495c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x4049e4a0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x4049e4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049e678"/>
        <function-ref name="isInput" scoped="" ref="0x4049e758"/>
        <function-ref name="toggle" scoped="" ref="0x4049e838"/>
        <function-ref name="isOutput" scoped="" ref="0x4049e918"/>
        <function-ref name="get" scoped="" ref="0x4049e9f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049ead8"/>
        <function-ref name="set" scoped="" ref="0x4049ebb8"/>
        <function-ref name="clr" scoped="" ref="0x4049ec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40497d48" loc="37:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40497d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40497f20"/>
        <function-ref name="isInput" scoped="" ref="0x404b1018"/>
        <function-ref name="toggle" scoped="" ref="0x404b10f8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b11d8"/>
        <function-ref name="get" scoped="" ref="0x404b12b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b1398"/>
        <function-ref name="set" scoped="" ref="0x404b1478"/>
        <function-ref name="clr" scoped="" ref="0x404b1558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x404b1768" loc="38:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x404b1768"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b1940"/>
        <function-ref name="isInput" scoped="" ref="0x404b1a20"/>
        <function-ref name="toggle" scoped="" ref="0x404b1b00"/>
        <function-ref name="isOutput" scoped="" ref="0x404b1be0"/>
        <function-ref name="get" scoped="" ref="0x404b1cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b1da0"/>
        <function-ref name="set" scoped="" ref="0x404b1e80"/>
        <function-ref name="clr" scoped="" ref="0x404b0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x404b0ba8" loc="40:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404b0ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b0d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x404b0220" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x404b0220"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b03f8"/>
        <function-ref name="isInput" scoped="" ref="0x404b04d8"/>
        <function-ref name="toggle" scoped="" ref="0x404b05b8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b0698"/>
        <function-ref name="get" scoped="" ref="0x404b0778"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b0858"/>
        <function-ref name="set" scoped="" ref="0x404b0938"/>
        <function-ref name="clr" scoped="" ref="0x404b0a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x404b52f0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x404b52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b54c8"/>
        <function-ref name="isInput" scoped="" ref="0x404b55a8"/>
        <function-ref name="toggle" scoped="" ref="0x404b5688"/>
        <function-ref name="isOutput" scoped="" ref="0x404b5768"/>
        <function-ref name="get" scoped="" ref="0x404b5848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b5928"/>
        <function-ref name="set" scoped="" ref="0x404b5a08"/>
        <function-ref name="clr" scoped="" ref="0x404b5ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x404bda98" loc="58:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x404bda98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bdc70"/>
        <function-ref name="isInput" scoped="" ref="0x404bdd50"/>
        <function-ref name="toggle" scoped="" ref="0x404bde30"/>
        <function-ref name="isOutput" scoped="" ref="0x404bdf10"/>
        <function-ref name="get" scoped="" ref="0x404bc010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bc0f0"/>
        <function-ref name="set" scoped="" ref="0x404bc1d0"/>
        <function-ref name="clr" scoped="" ref="0x404bc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x404c5ce8" loc="67:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x404c5ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c5ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404c4010"/>
        <function-ref name="toggle" scoped="" ref="0x404c40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404c41d0"/>
        <function-ref name="get" scoped="" ref="0x404c42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c4390"/>
        <function-ref name="set" scoped="" ref="0x404c4470"/>
        <function-ref name="clr" scoped="" ref="0x404c4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x404c10a0" loc="74:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x404c10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c1278"/>
        <function-ref name="isInput" scoped="" ref="0x404c1358"/>
        <function-ref name="toggle" scoped="" ref="0x404c1438"/>
        <function-ref name="isOutput" scoped="" ref="0x404c1518"/>
        <function-ref name="get" scoped="" ref="0x404c15f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c16d8"/>
        <function-ref name="set" scoped="" ref="0x404c17b8"/>
        <function-ref name="clr" scoped="" ref="0x404c1898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x404cc2f0" loc="79:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x404cc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cc4c8"/>
        <function-ref name="isInput" scoped="" ref="0x404cc5a8"/>
        <function-ref name="toggle" scoped="" ref="0x404cc688"/>
        <function-ref name="isOutput" scoped="" ref="0x404cc768"/>
        <function-ref name="get" scoped="" ref="0x404cc848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cc928"/>
        <function-ref name="set" scoped="" ref="0x404cca08"/>
        <function-ref name="clr" scoped="" ref="0x404ccae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x404b9830" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x404b9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b9a08"/>
        <function-ref name="isInput" scoped="" ref="0x404b9ae8"/>
        <function-ref name="toggle" scoped="" ref="0x404b9bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b9ca8"/>
        <function-ref name="get" scoped="" ref="0x404b9d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b9e68"/>
        <function-ref name="set" scoped="" ref="0x404c5010"/>
        <function-ref name="clr" scoped="" ref="0x404c50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x404af698" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x404af698"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404af870"/>
        <function-ref name="isInput" scoped="" ref="0x404af950"/>
        <function-ref name="toggle" scoped="" ref="0x404afa30"/>
        <function-ref name="isOutput" scoped="" ref="0x404afb10"/>
        <function-ref name="get" scoped="" ref="0x404afbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404afcd0"/>
        <function-ref name="set" scoped="" ref="0x404afdb0"/>
        <function-ref name="clr" scoped="" ref="0x404afe90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x404b3210" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x404b3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b3468"/>
        <function-ref name="isInput" scoped="" ref="0x404b3548"/>
        <function-ref name="toggle" scoped="" ref="0x404b3628"/>
        <function-ref name="isOutput" scoped="" ref="0x404b3708"/>
        <function-ref name="get" scoped="" ref="0x404b37e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b38c8"/>
        <function-ref name="set" scoped="" ref="0x404b39a8"/>
        <function-ref name="clr" scoped="" ref="0x404b3a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x404ab590" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x404ab590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ab768"/>
        <function-ref name="isInput" scoped="" ref="0x404ab848"/>
        <function-ref name="toggle" scoped="" ref="0x404ab928"/>
        <function-ref name="isOutput" scoped="" ref="0x404aba08"/>
        <function-ref name="get" scoped="" ref="0x404abae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404abbc8"/>
        <function-ref name="set" scoped="" ref="0x404abca8"/>
        <function-ref name="clr" scoped="" ref="0x404abd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x404bf210" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x404bf210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bf3e8"/>
        <function-ref name="isInput" scoped="" ref="0x404bf4c8"/>
        <function-ref name="toggle" scoped="" ref="0x404bf5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404bf688"/>
        <function-ref name="get" scoped="" ref="0x404bf768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bf848"/>
        <function-ref name="set" scoped="" ref="0x404bf928"/>
        <function-ref name="clr" scoped="" ref="0x404bfa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x404bb8e0" loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x404bb8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bbab8"/>
        <function-ref name="isInput" scoped="" ref="0x404bbb98"/>
        <function-ref name="toggle" scoped="" ref="0x404bbc78"/>
        <function-ref name="isOutput" scoped="" ref="0x404bbd58"/>
        <function-ref name="get" scoped="" ref="0x404bbe38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bbf18"/>
        <function-ref name="set" scoped="" ref="0x404ba010"/>
        <function-ref name="clr" scoped="" ref="0x404ba0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x404be670" loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x404be670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404be848"/>
        <function-ref name="isInput" scoped="" ref="0x404be928"/>
        <function-ref name="toggle" scoped="" ref="0x404bea08"/>
        <function-ref name="isOutput" scoped="" ref="0x404beae8"/>
        <function-ref name="get" scoped="" ref="0x404bebc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404beca8"/>
        <function-ref name="set" scoped="" ref="0x404bed88"/>
        <function-ref name="clr" scoped="" ref="0x404bee68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x404c3c08" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x404c3c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c3de0"/>
        <function-ref name="isInput" scoped="" ref="0x404c3ec0"/>
        <function-ref name="toggle" scoped="" ref="0x404c2010"/>
        <function-ref name="isOutput" scoped="" ref="0x404c20f0"/>
        <function-ref name="get" scoped="" ref="0x404c21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c22b0"/>
        <function-ref name="set" scoped="" ref="0x404c2390"/>
        <function-ref name="clr" scoped="" ref="0x404c2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x404c0ea8" loc="77:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x404c0ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cd0c0"/>
        <function-ref name="isInput" scoped="" ref="0x404cd1a0"/>
        <function-ref name="toggle" scoped="" ref="0x404cd280"/>
        <function-ref name="isOutput" scoped="" ref="0x404cd360"/>
        <function-ref name="get" scoped="" ref="0x404cd440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cd520"/>
        <function-ref name="set" scoped="" ref="0x404cd600"/>
        <function-ref name="clr" scoped="" ref="0x404cd6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x404b74b0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x404b74b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b7688"/>
        <function-ref name="isInput" scoped="" ref="0x404b7768"/>
        <function-ref name="toggle" scoped="" ref="0x404b7848"/>
        <function-ref name="isOutput" scoped="" ref="0x404b7928"/>
        <function-ref name="get" scoped="" ref="0x404b7a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b7ae8"/>
        <function-ref name="set" scoped="" ref="0x404b7bc8"/>
        <function-ref name="clr" scoped="" ref="0x404b7ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x404c1a98" loc="75:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x404c1a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c1c70"/>
        <function-ref name="isInput" scoped="" ref="0x404c1d50"/>
        <function-ref name="toggle" scoped="" ref="0x404c1e30"/>
        <function-ref name="isOutput" scoped="" ref="0x404c1f10"/>
        <function-ref name="get" scoped="" ref="0x404c0010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c00f0"/>
        <function-ref name="set" scoped="" ref="0x404c01d0"/>
        <function-ref name="clr" scoped="" ref="0x404c02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x404b5ce8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x404b5ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b5ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404b4010"/>
        <function-ref name="toggle" scoped="" ref="0x404b40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b41d0"/>
        <function-ref name="get" scoped="" ref="0x404b42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b4390"/>
        <function-ref name="set" scoped="" ref="0x404b4470"/>
        <function-ref name="clr" scoped="" ref="0x404b4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x404bc4b0" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x404bc4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bc688"/>
        <function-ref name="isInput" scoped="" ref="0x404bc768"/>
        <function-ref name="toggle" scoped="" ref="0x404bc848"/>
        <function-ref name="isOutput" scoped="" ref="0x404bc928"/>
        <function-ref name="get" scoped="" ref="0x404bca08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bcae8"/>
        <function-ref name="set" scoped="" ref="0x404bcbc8"/>
        <function-ref name="clr" scoped="" ref="0x404bcca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x404c4750" loc="68:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x404c4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c4928"/>
        <function-ref name="isInput" scoped="" ref="0x404c4a08"/>
        <function-ref name="toggle" scoped="" ref="0x404c4ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404c4bc8"/>
        <function-ref name="get" scoped="" ref="0x404c4ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c4d88"/>
        <function-ref name="set" scoped="" ref="0x404c4e68"/>
        <function-ref name="clr" scoped="" ref="0x404c3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x404ac0c0" loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x404ac0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ac298"/>
        <function-ref name="isInput" scoped="" ref="0x404ac378"/>
        <function-ref name="toggle" scoped="" ref="0x404ac458"/>
        <function-ref name="isOutput" scoped="" ref="0x404ac538"/>
        <function-ref name="get" scoped="" ref="0x404ac618"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ac6f8"/>
        <function-ref name="set" scoped="" ref="0x404ac7d8"/>
        <function-ref name="clr" scoped="" ref="0x404ac8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x404b3c88" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x404b3c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b3e60"/>
        <function-ref name="isInput" scoped="" ref="0x404b2010"/>
        <function-ref name="toggle" scoped="" ref="0x404b20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b21d0"/>
        <function-ref name="get" scoped="" ref="0x404b22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b2390"/>
        <function-ref name="set" scoped="" ref="0x404b2470"/>
        <function-ref name="clr" scoped="" ref="0x404b2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x404b8010" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x404b8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b81e8"/>
        <function-ref name="isInput" scoped="" ref="0x404b82c8"/>
        <function-ref name="toggle" scoped="" ref="0x404b83a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b8488"/>
        <function-ref name="get" scoped="" ref="0x404b8568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b8648"/>
        <function-ref name="set" scoped="" ref="0x404b8728"/>
        <function-ref name="clr" scoped="" ref="0x404b8808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x404ba2f0" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x404ba2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ba4c8"/>
        <function-ref name="isInput" scoped="" ref="0x404ba5a8"/>
        <function-ref name="toggle" scoped="" ref="0x404ba688"/>
        <function-ref name="isOutput" scoped="" ref="0x404ba768"/>
        <function-ref name="get" scoped="" ref="0x404ba848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ba928"/>
        <function-ref name="set" scoped="" ref="0x404baa08"/>
        <function-ref name="clr" scoped="" ref="0x404baae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x404c2670" loc="71:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x404c2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c2848"/>
        <function-ref name="isInput" scoped="" ref="0x404c2928"/>
        <function-ref name="toggle" scoped="" ref="0x404c2a08"/>
        <function-ref name="isOutput" scoped="" ref="0x404c2ae8"/>
        <function-ref name="get" scoped="" ref="0x404c2bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c2ca8"/>
        <function-ref name="set" scoped="" ref="0x404c2d88"/>
        <function-ref name="clr" scoped="" ref="0x404c2e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x404b68e0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x404b68e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b6ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404b6b98"/>
        <function-ref name="toggle" scoped="" ref="0x404b6c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404b6d58"/>
        <function-ref name="get" scoped="" ref="0x404b6e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b6f18"/>
        <function-ref name="set" scoped="" ref="0x404b5010"/>
        <function-ref name="clr" scoped="" ref="0x404b50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x404bd0a0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x404bd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bd278"/>
        <function-ref name="isInput" scoped="" ref="0x404bd358"/>
        <function-ref name="toggle" scoped="" ref="0x404bd438"/>
        <function-ref name="isOutput" scoped="" ref="0x404bd518"/>
        <function-ref name="get" scoped="" ref="0x404bd5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bd6d8"/>
        <function-ref name="set" scoped="" ref="0x404bd7b8"/>
        <function-ref name="clr" scoped="" ref="0x404bd898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x404c52f0" loc="66:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x404c52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c54c8"/>
        <function-ref name="isInput" scoped="" ref="0x404c55a8"/>
        <function-ref name="toggle" scoped="" ref="0x404c5688"/>
        <function-ref name="isOutput" scoped="" ref="0x404c5768"/>
        <function-ref name="get" scoped="" ref="0x404c5848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c5928"/>
        <function-ref name="set" scoped="" ref="0x404c5a08"/>
        <function-ref name="clr" scoped="" ref="0x404c5ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x404cd8e0" loc="78:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x404cd8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cdab8"/>
        <function-ref name="isInput" scoped="" ref="0x404cdb98"/>
        <function-ref name="toggle" scoped="" ref="0x404cdc78"/>
        <function-ref name="isOutput" scoped="" ref="0x404cdd58"/>
        <function-ref name="get" scoped="" ref="0x404cde38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cdf18"/>
        <function-ref name="set" scoped="" ref="0x404cc010"/>
        <function-ref name="clr" scoped="" ref="0x404cc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x404b7ea8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x404b7ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b60c0"/>
        <function-ref name="isInput" scoped="" ref="0x404b61a0"/>
        <function-ref name="toggle" scoped="" ref="0x404b6280"/>
        <function-ref name="isOutput" scoped="" ref="0x404b6360"/>
        <function-ref name="get" scoped="" ref="0x404b6440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b6520"/>
        <function-ref name="set" scoped="" ref="0x404b6600"/>
        <function-ref name="clr" scoped="" ref="0x404b66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x404b4750" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x404b4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b4928"/>
        <function-ref name="isInput" scoped="" ref="0x404b4a08"/>
        <function-ref name="toggle" scoped="" ref="0x404b4ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b4bc8"/>
        <function-ref name="get" scoped="" ref="0x404b4ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b4d88"/>
        <function-ref name="set" scoped="" ref="0x404b4e68"/>
        <function-ref name="clr" scoped="" ref="0x404b3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x404bcea8" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x404bcea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bb0c0"/>
        <function-ref name="isInput" scoped="" ref="0x404bb1a0"/>
        <function-ref name="toggle" scoped="" ref="0x404bb280"/>
        <function-ref name="isOutput" scoped="" ref="0x404bb360"/>
        <function-ref name="get" scoped="" ref="0x404bb440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bb520"/>
        <function-ref name="set" scoped="" ref="0x404bb600"/>
        <function-ref name="clr" scoped="" ref="0x404bb6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x404acab8" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x404acab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404acc90"/>
        <function-ref name="isInput" scoped="" ref="0x404acd70"/>
        <function-ref name="toggle" scoped="" ref="0x404ace50"/>
        <function-ref name="isOutput" scoped="" ref="0x404ab010"/>
        <function-ref name="get" scoped="" ref="0x404ab0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ab1d0"/>
        <function-ref name="set" scoped="" ref="0x404ab2b0"/>
        <function-ref name="clr" scoped="" ref="0x404ab390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x404b2750" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x404b2750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b2928"/>
        <function-ref name="isInput" scoped="" ref="0x404b2a08"/>
        <function-ref name="toggle" scoped="" ref="0x404b2ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b2bc8"/>
        <function-ref name="get" scoped="" ref="0x404b2ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b2d88"/>
        <function-ref name="set" scoped="" ref="0x404b2e68"/>
        <function-ref name="clr" scoped="" ref="0x404bf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x404bace8" loc="64:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x404bace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b9010"/>
        <function-ref name="isInput" scoped="" ref="0x404b90f0"/>
        <function-ref name="toggle" scoped="" ref="0x404b91d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b92b0"/>
        <function-ref name="get" scoped="" ref="0x404b9390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b9470"/>
        <function-ref name="set" scoped="" ref="0x404b9550"/>
        <function-ref name="clr" scoped="" ref="0x404b9630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x404c3210" loc="69:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x404c3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c33e8"/>
        <function-ref name="isInput" scoped="" ref="0x404c34c8"/>
        <function-ref name="toggle" scoped="" ref="0x404c35a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404c3688"/>
        <function-ref name="get" scoped="" ref="0x404c3768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c3848"/>
        <function-ref name="set" scoped="" ref="0x404c3928"/>
        <function-ref name="clr" scoped="" ref="0x404c3a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x404bfc08" loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x404bfc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bfde0"/>
        <function-ref name="isInput" scoped="" ref="0x404bfec0"/>
        <function-ref name="toggle" scoped="" ref="0x404be010"/>
        <function-ref name="isOutput" scoped="" ref="0x404be0f0"/>
        <function-ref name="get" scoped="" ref="0x404be1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404be2b0"/>
        <function-ref name="set" scoped="" ref="0x404be390"/>
        <function-ref name="clr" scoped="" ref="0x404be470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x404c04b0" loc="76:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x404c04b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c0688"/>
        <function-ref name="isInput" scoped="" ref="0x404c0768"/>
        <function-ref name="toggle" scoped="" ref="0x404c0848"/>
        <function-ref name="isOutput" scoped="" ref="0x404c0928"/>
        <function-ref name="get" scoped="" ref="0x404c0a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c0ae8"/>
        <function-ref name="set" scoped="" ref="0x404c0bc8"/>
        <function-ref name="clr" scoped="" ref="0x404c0ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x404b8a08" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x404b8a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b8be0"/>
        <function-ref name="isInput" scoped="" ref="0x404b8cc0"/>
        <function-ref name="toggle" scoped="" ref="0x404b8da0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b8e80"/>
        <function-ref name="get" scoped="" ref="0x404b7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b70f0"/>
        <function-ref name="set" scoped="" ref="0x404b71d0"/>
        <function-ref name="clr" scoped="" ref="0x404b72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404f7ba8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404f7ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f7d80"/>
        <function-ref name="isInput" scoped="" ref="0x404f7e60"/>
        <function-ref name="toggle" scoped="" ref="0x404f6010"/>
        <function-ref name="isOutput" scoped="" ref="0x404f60f0"/>
        <function-ref name="get" scoped="" ref="0x404f61d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f62b0"/>
        <function-ref name="set" scoped="" ref="0x404f6390"/>
        <function-ref name="clr" scoped="" ref="0x404f6470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404f5890" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404f5890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f5a68"/>
        <function-ref name="isInput" scoped="" ref="0x404f5b48"/>
        <function-ref name="toggle" scoped="" ref="0x404f5c28"/>
        <function-ref name="isOutput" scoped="" ref="0x404f5d08"/>
        <function-ref name="get" scoped="" ref="0x404f5de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f5ec8"/>
        <function-ref name="set" scoped="" ref="0x404f4010"/>
        <function-ref name="clr" scoped="" ref="0x404f40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404ea8e0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404ea8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404eaab8"/>
        <function-ref name="isInput" scoped="" ref="0x404eab98"/>
        <function-ref name="toggle" scoped="" ref="0x404eac78"/>
        <function-ref name="isOutput" scoped="" ref="0x404ead58"/>
        <function-ref name="get" scoped="" ref="0x404eae38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404eaf18"/>
        <function-ref name="set" scoped="" ref="0x404f7010"/>
        <function-ref name="clr" scoped="" ref="0x404f70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404f65d0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404f65d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f67a8"/>
        <function-ref name="isInput" scoped="" ref="0x404f6888"/>
        <function-ref name="toggle" scoped="" ref="0x404f6968"/>
        <function-ref name="isOutput" scoped="" ref="0x404f6a48"/>
        <function-ref name="get" scoped="" ref="0x404f6b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f6c08"/>
        <function-ref name="set" scoped="" ref="0x404f6ce8"/>
        <function-ref name="clr" scoped="" ref="0x404f6dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404f4250" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404f4250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f4428"/>
        <function-ref name="isInput" scoped="" ref="0x404f4508"/>
        <function-ref name="toggle" scoped="" ref="0x404f45e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404f46c8"/>
        <function-ref name="get" scoped="" ref="0x404f47a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f4888"/>
        <function-ref name="set" scoped="" ref="0x404f4968"/>
        <function-ref name="clr" scoped="" ref="0x404f4a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404f7250" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404f7250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f7428"/>
        <function-ref name="isInput" scoped="" ref="0x404f7508"/>
        <function-ref name="toggle" scoped="" ref="0x404f75e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404f76c8"/>
        <function-ref name="get" scoped="" ref="0x404f77a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f7888"/>
        <function-ref name="set" scoped="" ref="0x404f7968"/>
        <function-ref name="clr" scoped="" ref="0x404f7a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404f6f28" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404f6f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f5110"/>
        <function-ref name="isInput" scoped="" ref="0x404f51f0"/>
        <function-ref name="toggle" scoped="" ref="0x404f52d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404f53b0"/>
        <function-ref name="get" scoped="" ref="0x404f5490"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f5570"/>
        <function-ref name="set" scoped="" ref="0x404f5650"/>
        <function-ref name="clr" scoped="" ref="0x404f5730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404f4ba8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404f4ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f4d80"/>
        <function-ref name="isInput" scoped="" ref="0x404f4e60"/>
        <function-ref name="toggle" scoped="" ref="0x404f3010"/>
        <function-ref name="isOutput" scoped="" ref="0x404f30f0"/>
        <function-ref name="get" scoped="" ref="0x404f31d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f32b0"/>
        <function-ref name="set" scoped="" ref="0x404f3390"/>
        <function-ref name="clr" scoped="" ref="0x404f3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407c1bb0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407c1bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407c1d88"/>
        <function-ref name="isInput" scoped="" ref="0x407c1e68"/>
        <function-ref name="toggle" scoped="" ref="0x407dd010"/>
        <function-ref name="isOutput" scoped="" ref="0x407dd0f0"/>
        <function-ref name="get" scoped="" ref="0x407dd1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407dd2b0"/>
        <function-ref name="set" scoped="" ref="0x407dd390"/>
        <function-ref name="clr" scoped="" ref="0x407dd470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407dc6c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407dc6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407dc898"/>
        <function-ref name="isInput" scoped="" ref="0x407dc978"/>
        <function-ref name="toggle" scoped="" ref="0x407dca58"/>
        <function-ref name="isOutput" scoped="" ref="0x407dcb38"/>
        <function-ref name="get" scoped="" ref="0x407dcc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x407dccf8"/>
        <function-ref name="set" scoped="" ref="0x407dcdd8"/>
        <function-ref name="clr" scoped="" ref="0x407dceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407da0b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407da0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407da288"/>
        <function-ref name="isInput" scoped="" ref="0x407da368"/>
        <function-ref name="toggle" scoped="" ref="0x407da448"/>
        <function-ref name="isOutput" scoped="" ref="0x407da528"/>
        <function-ref name="get" scoped="" ref="0x407da608"/>
        <function-ref name="makeOutput" scoped="" ref="0x407da6e8"/>
        <function-ref name="set" scoped="" ref="0x407da7c8"/>
        <function-ref name="clr" scoped="" ref="0x407da8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407d9a88" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407d9a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407d9c60"/>
        <function-ref name="isInput" scoped="" ref="0x407d9d40"/>
        <function-ref name="toggle" scoped="" ref="0x407d9e20"/>
        <function-ref name="isOutput" scoped="" ref="0x407d9f00"/>
        <function-ref name="get" scoped="" ref="0x407d8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d80f0"/>
        <function-ref name="set" scoped="" ref="0x407d81d0"/>
        <function-ref name="clr" scoped="" ref="0x407d82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407d7538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407d7538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407d7710"/>
        <function-ref name="isInput" scoped="" ref="0x407d77f0"/>
        <function-ref name="toggle" scoped="" ref="0x407d78d0"/>
        <function-ref name="isOutput" scoped="" ref="0x407d79b0"/>
        <function-ref name="get" scoped="" ref="0x407d7a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d7b70"/>
        <function-ref name="set" scoped="" ref="0x407d7c50"/>
        <function-ref name="clr" scoped="" ref="0x407d7d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407d5010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407d5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407d51e8"/>
        <function-ref name="isInput" scoped="" ref="0x407d52c8"/>
        <function-ref name="toggle" scoped="" ref="0x407d53a8"/>
        <function-ref name="isOutput" scoped="" ref="0x407d5488"/>
        <function-ref name="get" scoped="" ref="0x407d5568"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d5648"/>
        <function-ref name="set" scoped="" ref="0x407d5728"/>
        <function-ref name="clr" scoped="" ref="0x407d5808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407d49e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407d49e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407d4bc0"/>
        <function-ref name="isInput" scoped="" ref="0x407d4ca0"/>
        <function-ref name="toggle" scoped="" ref="0x407d4d80"/>
        <function-ref name="isOutput" scoped="" ref="0x407d4e60"/>
        <function-ref name="get" scoped="" ref="0x407d3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d30f0"/>
        <function-ref name="set" scoped="" ref="0x407d31d0"/>
        <function-ref name="clr" scoped="" ref="0x407d32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407d2538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407d2538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407d2710"/>
        <function-ref name="isInput" scoped="" ref="0x407d27f0"/>
        <function-ref name="toggle" scoped="" ref="0x407d28d0"/>
        <function-ref name="isOutput" scoped="" ref="0x407d29b0"/>
        <function-ref name="get" scoped="" ref="0x407d2a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x407d2b70"/>
        <function-ref name="set" scoped="" ref="0x407d2c50"/>
        <function-ref name="clr" scoped="" ref="0x407d2d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404fc4f0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404fc4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fc6c8"/>
        <function-ref name="isInput" scoped="" ref="0x404fc7a8"/>
        <function-ref name="toggle" scoped="" ref="0x404fc888"/>
        <function-ref name="isOutput" scoped="" ref="0x404fc968"/>
        <function-ref name="get" scoped="" ref="0x404fca48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fcb28"/>
        <function-ref name="set" scoped="" ref="0x404fcc08"/>
        <function-ref name="clr" scoped="" ref="0x404fcce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404fa170" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404fa170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fa348"/>
        <function-ref name="isInput" scoped="" ref="0x404fa428"/>
        <function-ref name="toggle" scoped="" ref="0x404fa508"/>
        <function-ref name="isOutput" scoped="" ref="0x404fa5e8"/>
        <function-ref name="get" scoped="" ref="0x404fa6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fa7a8"/>
        <function-ref name="set" scoped="" ref="0x404fa888"/>
        <function-ref name="clr" scoped="" ref="0x404fa968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404fd228" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404fd228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fd400"/>
        <function-ref name="isInput" scoped="" ref="0x404fd4e0"/>
        <function-ref name="toggle" scoped="" ref="0x404fd5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404fd6a0"/>
        <function-ref name="get" scoped="" ref="0x404fd780"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fd860"/>
        <function-ref name="set" scoped="" ref="0x404fd940"/>
        <function-ref name="clr" scoped="" ref="0x404fda20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404fce48" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404fce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fb050"/>
        <function-ref name="isInput" scoped="" ref="0x404fb130"/>
        <function-ref name="toggle" scoped="" ref="0x404fb210"/>
        <function-ref name="isOutput" scoped="" ref="0x404fb2f0"/>
        <function-ref name="get" scoped="" ref="0x404fb3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fb4b0"/>
        <function-ref name="set" scoped="" ref="0x404fb590"/>
        <function-ref name="clr" scoped="" ref="0x404fb670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404faac8" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404faac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404faca0"/>
        <function-ref name="isInput" scoped="" ref="0x404fad80"/>
        <function-ref name="toggle" scoped="" ref="0x404fae60"/>
        <function-ref name="isOutput" scoped="" ref="0x404f9010"/>
        <function-ref name="get" scoped="" ref="0x404f90f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f91d0"/>
        <function-ref name="set" scoped="" ref="0x404f92b0"/>
        <function-ref name="clr" scoped="" ref="0x404f9390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404fdb80" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404fdb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fdd58"/>
        <function-ref name="isInput" scoped="" ref="0x404fde38"/>
        <function-ref name="toggle" scoped="" ref="0x404fdf18"/>
        <function-ref name="isOutput" scoped="" ref="0x404fc010"/>
        <function-ref name="get" scoped="" ref="0x404fc0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fc1d0"/>
        <function-ref name="set" scoped="" ref="0x404fc2b0"/>
        <function-ref name="clr" scoped="" ref="0x404fc390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404fb7d0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404fb7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fb9a8"/>
        <function-ref name="isInput" scoped="" ref="0x404fba88"/>
        <function-ref name="toggle" scoped="" ref="0x404fbb68"/>
        <function-ref name="isOutput" scoped="" ref="0x404fbc48"/>
        <function-ref name="get" scoped="" ref="0x404fbd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fbe08"/>
        <function-ref name="set" scoped="" ref="0x404fbee8"/>
        <function-ref name="clr" scoped="" ref="0x404fa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404f94f0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404f94f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f96c8"/>
        <function-ref name="isInput" scoped="" ref="0x404f97a8"/>
        <function-ref name="toggle" scoped="" ref="0x404f9888"/>
        <function-ref name="isOutput" scoped="" ref="0x404f9968"/>
        <function-ref name="get" scoped="" ref="0x404f9a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f9b28"/>
        <function-ref name="set" scoped="" ref="0x404f9c08"/>
        <function-ref name="clr" scoped="" ref="0x404f9ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4080e938" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4080e938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4080eb10"/>
        <function-ref name="isInput" scoped="" ref="0x4080ebf0"/>
        <function-ref name="toggle" scoped="" ref="0x4080ecd0"/>
        <function-ref name="isOutput" scoped="" ref="0x4080edb0"/>
        <function-ref name="get" scoped="" ref="0x4080ee90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4080d010"/>
        <function-ref name="set" scoped="" ref="0x4080d0f0"/>
        <function-ref name="clr" scoped="" ref="0x4080d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4080c3b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4080c3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4080c588"/>
        <function-ref name="isInput" scoped="" ref="0x4080c668"/>
        <function-ref name="toggle" scoped="" ref="0x4080c748"/>
        <function-ref name="isOutput" scoped="" ref="0x4080c828"/>
        <function-ref name="get" scoped="" ref="0x4080c908"/>
        <function-ref name="makeOutput" scoped="" ref="0x4080c9e8"/>
        <function-ref name="set" scoped="" ref="0x4080cac8"/>
        <function-ref name="clr" scoped="" ref="0x4080cba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4080bd70" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4080bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4080a010"/>
        <function-ref name="isInput" scoped="" ref="0x4080a0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4080a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4080a2b0"/>
        <function-ref name="get" scoped="" ref="0x4080a390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4080a470"/>
        <function-ref name="set" scoped="" ref="0x4080a550"/>
        <function-ref name="clr" scoped="" ref="0x4080a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408097f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408097f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408099d0"/>
        <function-ref name="isInput" scoped="" ref="0x40809ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40809b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40809c70"/>
        <function-ref name="get" scoped="" ref="0x40809d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40809e30"/>
        <function-ref name="set" scoped="" ref="0x40809f10"/>
        <function-ref name="clr" scoped="" ref="0x40807010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40806228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40806228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40806400"/>
        <function-ref name="isInput" scoped="" ref="0x408064e0"/>
        <function-ref name="toggle" scoped="" ref="0x408065c0"/>
        <function-ref name="isOutput" scoped="" ref="0x408066a0"/>
        <function-ref name="get" scoped="" ref="0x40806780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40806860"/>
        <function-ref name="set" scoped="" ref="0x40806940"/>
        <function-ref name="clr" scoped="" ref="0x40806a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40805c08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40805c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40805de0"/>
        <function-ref name="isInput" scoped="" ref="0x40805ec0"/>
        <function-ref name="toggle" scoped="" ref="0x4081e010"/>
        <function-ref name="isOutput" scoped="" ref="0x4081e0f0"/>
        <function-ref name="get" scoped="" ref="0x4081e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4081e2b0"/>
        <function-ref name="set" scoped="" ref="0x4081e390"/>
        <function-ref name="clr" scoped="" ref="0x4081e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4081d6c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4081d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4081d898"/>
        <function-ref name="isInput" scoped="" ref="0x4081d978"/>
        <function-ref name="toggle" scoped="" ref="0x4081da58"/>
        <function-ref name="isOutput" scoped="" ref="0x4081db38"/>
        <function-ref name="get" scoped="" ref="0x4081dc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4081dcf8"/>
        <function-ref name="set" scoped="" ref="0x4081ddd8"/>
        <function-ref name="clr" scoped="" ref="0x4081deb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4081b0b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4081b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4081b288"/>
        <function-ref name="isInput" scoped="" ref="0x4081b368"/>
        <function-ref name="toggle" scoped="" ref="0x4081b448"/>
        <function-ref name="isOutput" scoped="" ref="0x4081b528"/>
        <function-ref name="get" scoped="" ref="0x4081b608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4081b6e8"/>
        <function-ref name="set" scoped="" ref="0x4081b7c8"/>
        <function-ref name="clr" scoped="" ref="0x4081b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40503e48" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40503e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40502050"/>
        <function-ref name="isInput" scoped="" ref="0x40502130"/>
        <function-ref name="toggle" scoped="" ref="0x40502210"/>
        <function-ref name="isOutput" scoped="" ref="0x405022f0"/>
        <function-ref name="get" scoped="" ref="0x405023d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405024b0"/>
        <function-ref name="set" scoped="" ref="0x40502590"/>
        <function-ref name="clr" scoped="" ref="0x40502670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40501ac8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40501ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40501ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40501d80"/>
        <function-ref name="toggle" scoped="" ref="0x40501e60"/>
        <function-ref name="isOutput" scoped="" ref="0x404ff010"/>
        <function-ref name="get" scoped="" ref="0x404ff0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ff1d0"/>
        <function-ref name="set" scoped="" ref="0x404ff2b0"/>
        <function-ref name="clr" scoped="" ref="0x404ff390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40504b00" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40504b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40504cd8"/>
        <function-ref name="isInput" scoped="" ref="0x40504db8"/>
        <function-ref name="toggle" scoped="" ref="0x40504e98"/>
        <function-ref name="isOutput" scoped="" ref="0x40503010"/>
        <function-ref name="get" scoped="" ref="0x405030f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405031d0"/>
        <function-ref name="set" scoped="" ref="0x405032b0"/>
        <function-ref name="clr" scoped="" ref="0x40503390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405027d0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405027d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405029a8"/>
        <function-ref name="isInput" scoped="" ref="0x40502a88"/>
        <function-ref name="toggle" scoped="" ref="0x40502b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40502c48"/>
        <function-ref name="get" scoped="" ref="0x40502d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40502e08"/>
        <function-ref name="set" scoped="" ref="0x40502ee8"/>
        <function-ref name="clr" scoped="" ref="0x40501010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404ff4f0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404ff4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ff6c8"/>
        <function-ref name="isInput" scoped="" ref="0x404ff7a8"/>
        <function-ref name="toggle" scoped="" ref="0x404ff888"/>
        <function-ref name="isOutput" scoped="" ref="0x404ff968"/>
        <function-ref name="get" scoped="" ref="0x404ffa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ffb28"/>
        <function-ref name="set" scoped="" ref="0x404ffc08"/>
        <function-ref name="clr" scoped="" ref="0x404ffce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x405034f0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x405034f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405036c8"/>
        <function-ref name="isInput" scoped="" ref="0x405037a8"/>
        <function-ref name="toggle" scoped="" ref="0x40503888"/>
        <function-ref name="isOutput" scoped="" ref="0x40503968"/>
        <function-ref name="get" scoped="" ref="0x40503a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40503b28"/>
        <function-ref name="set" scoped="" ref="0x40503c08"/>
        <function-ref name="clr" scoped="" ref="0x40503ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40501170" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40501170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40501348"/>
        <function-ref name="isInput" scoped="" ref="0x40501428"/>
        <function-ref name="toggle" scoped="" ref="0x40501508"/>
        <function-ref name="isOutput" scoped="" ref="0x405015e8"/>
        <function-ref name="get" scoped="" ref="0x405016c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405017a8"/>
        <function-ref name="set" scoped="" ref="0x40501888"/>
        <function-ref name="clr" scoped="" ref="0x40501968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404ffe48" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404ffe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050c050"/>
        <function-ref name="isInput" scoped="" ref="0x4050c130"/>
        <function-ref name="toggle" scoped="" ref="0x4050c210"/>
        <function-ref name="isOutput" scoped="" ref="0x4050c2f0"/>
        <function-ref name="get" scoped="" ref="0x4050c3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050c4b0"/>
        <function-ref name="set" scoped="" ref="0x4050c590"/>
        <function-ref name="clr" scoped="" ref="0x4050c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40840538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40840538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40840710"/>
        <function-ref name="isInput" scoped="" ref="0x408407f0"/>
        <function-ref name="toggle" scoped="" ref="0x408408d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408409b0"/>
        <function-ref name="get" scoped="" ref="0x40840a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40840b70"/>
        <function-ref name="set" scoped="" ref="0x40840c50"/>
        <function-ref name="clr" scoped="" ref="0x40840d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4083e010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4083e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4083e1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4083e2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4083e3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4083e488"/>
        <function-ref name="get" scoped="" ref="0x4083e568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4083e648"/>
        <function-ref name="set" scoped="" ref="0x4083e728"/>
        <function-ref name="clr" scoped="" ref="0x4083e808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4083d9e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4083d9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4083dbc0"/>
        <function-ref name="isInput" scoped="" ref="0x4083dca0"/>
        <function-ref name="toggle" scoped="" ref="0x4083dd80"/>
        <function-ref name="isOutput" scoped="" ref="0x4083de60"/>
        <function-ref name="get" scoped="" ref="0x4083c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4083c0f0"/>
        <function-ref name="set" scoped="" ref="0x4083c1d0"/>
        <function-ref name="clr" scoped="" ref="0x4083c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4083b538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4083b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4083b710"/>
        <function-ref name="isInput" scoped="" ref="0x4083b7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4083b8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4083b9b0"/>
        <function-ref name="get" scoped="" ref="0x4083ba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4083bb70"/>
        <function-ref name="set" scoped="" ref="0x4083bc50"/>
        <function-ref name="clr" scoped="" ref="0x4083bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40855010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40855010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408551e8"/>
        <function-ref name="isInput" scoped="" ref="0x408552c8"/>
        <function-ref name="toggle" scoped="" ref="0x408553a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40855488"/>
        <function-ref name="get" scoped="" ref="0x40855568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40855648"/>
        <function-ref name="set" scoped="" ref="0x40855728"/>
        <function-ref name="clr" scoped="" ref="0x40855808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408549e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408549e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40854bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40854ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40854d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40854e60"/>
        <function-ref name="get" scoped="" ref="0x40853010"/>
        <function-ref name="makeOutput" scoped="" ref="0x408530f0"/>
        <function-ref name="set" scoped="" ref="0x408531d0"/>
        <function-ref name="clr" scoped="" ref="0x408532b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40852538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40852538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40852710"/>
        <function-ref name="isInput" scoped="" ref="0x408527f0"/>
        <function-ref name="toggle" scoped="" ref="0x408528d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408529b0"/>
        <function-ref name="get" scoped="" ref="0x40852a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40852b70"/>
        <function-ref name="set" scoped="" ref="0x40852c50"/>
        <function-ref name="clr" scoped="" ref="0x40852d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40850010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40850010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408501e8"/>
        <function-ref name="isInput" scoped="" ref="0x408502c8"/>
        <function-ref name="toggle" scoped="" ref="0x408503a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40850488"/>
        <function-ref name="get" scoped="" ref="0x40850568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40850648"/>
        <function-ref name="set" scoped="" ref="0x40850728"/>
        <function-ref name="clr" scoped="" ref="0x40850808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405086b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405086b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40508888"/>
        <function-ref name="isInput" scoped="" ref="0x40508968"/>
        <function-ref name="toggle" scoped="" ref="0x40508a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40508b28"/>
        <function-ref name="get" scoped="" ref="0x40508c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40508ce8"/>
        <function-ref name="set" scoped="" ref="0x40508dc8"/>
        <function-ref name="clr" scoped="" ref="0x40508ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40506330" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40506330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40506508"/>
        <function-ref name="isInput" scoped="" ref="0x405065e8"/>
        <function-ref name="toggle" scoped="" ref="0x405066c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405067a8"/>
        <function-ref name="get" scoped="" ref="0x40506888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40506968"/>
        <function-ref name="set" scoped="" ref="0x40506a48"/>
        <function-ref name="clr" scoped="" ref="0x40506b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405093d8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405093d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405095b0"/>
        <function-ref name="isInput" scoped="" ref="0x40509690"/>
        <function-ref name="toggle" scoped="" ref="0x40509770"/>
        <function-ref name="isOutput" scoped="" ref="0x40509850"/>
        <function-ref name="get" scoped="" ref="0x40509930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40509a10"/>
        <function-ref name="set" scoped="" ref="0x40509af0"/>
        <function-ref name="clr" scoped="" ref="0x40509bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40507030" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40507030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40507208"/>
        <function-ref name="isInput" scoped="" ref="0x405072e8"/>
        <function-ref name="toggle" scoped="" ref="0x405073c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405074a8"/>
        <function-ref name="get" scoped="" ref="0x40507588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40507668"/>
        <function-ref name="set" scoped="" ref="0x40507748"/>
        <function-ref name="clr" scoped="" ref="0x40507828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40506c88" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40506c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40506e60"/>
        <function-ref name="isInput" scoped="" ref="0x40513010"/>
        <function-ref name="toggle" scoped="" ref="0x405130f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405131d0"/>
        <function-ref name="get" scoped="" ref="0x405132b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40513390"/>
        <function-ref name="set" scoped="" ref="0x40513470"/>
        <function-ref name="clr" scoped="" ref="0x40513550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40509d30" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40509d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40509f08"/>
        <function-ref name="isInput" scoped="" ref="0x40508010"/>
        <function-ref name="toggle" scoped="" ref="0x405080f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405081d0"/>
        <function-ref name="get" scoped="" ref="0x405082b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40508390"/>
        <function-ref name="set" scoped="" ref="0x40508470"/>
        <function-ref name="clr" scoped="" ref="0x40508550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40507988" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40507988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40507b60"/>
        <function-ref name="isInput" scoped="" ref="0x40507c40"/>
        <function-ref name="toggle" scoped="" ref="0x40507d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40507e00"/>
        <function-ref name="get" scoped="" ref="0x40507ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40506010"/>
        <function-ref name="set" scoped="" ref="0x405060f0"/>
        <function-ref name="clr" scoped="" ref="0x405061d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405136b0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405136b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40513888"/>
        <function-ref name="isInput" scoped="" ref="0x40513968"/>
        <function-ref name="toggle" scoped="" ref="0x40513a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40513b28"/>
        <function-ref name="get" scoped="" ref="0x40513c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40513ce8"/>
        <function-ref name="set" scoped="" ref="0x40513dc8"/>
        <function-ref name="clr" scoped="" ref="0x40513ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40878c20" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40878c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40878df8"/>
        <function-ref name="isInput" scoped="" ref="0x40878ed8"/>
        <function-ref name="toggle" scoped="" ref="0x40877010"/>
        <function-ref name="isOutput" scoped="" ref="0x408770f0"/>
        <function-ref name="get" scoped="" ref="0x408771d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408772b0"/>
        <function-ref name="set" scoped="" ref="0x40877390"/>
        <function-ref name="clr" scoped="" ref="0x40877470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408766c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408766c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40876898"/>
        <function-ref name="isInput" scoped="" ref="0x40876978"/>
        <function-ref name="toggle" scoped="" ref="0x40876a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40876b38"/>
        <function-ref name="get" scoped="" ref="0x40876c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40876cf8"/>
        <function-ref name="set" scoped="" ref="0x40876dd8"/>
        <function-ref name="clr" scoped="" ref="0x40876eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408740b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408740b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40874288"/>
        <function-ref name="isInput" scoped="" ref="0x40874368"/>
        <function-ref name="toggle" scoped="" ref="0x40874448"/>
        <function-ref name="isOutput" scoped="" ref="0x40874528"/>
        <function-ref name="get" scoped="" ref="0x40874608"/>
        <function-ref name="makeOutput" scoped="" ref="0x408746e8"/>
        <function-ref name="set" scoped="" ref="0x408747c8"/>
        <function-ref name="clr" scoped="" ref="0x408748a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40872a88" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40872a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40872c60"/>
        <function-ref name="isInput" scoped="" ref="0x40872d40"/>
        <function-ref name="toggle" scoped="" ref="0x40872e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40872f00"/>
        <function-ref name="get" scoped="" ref="0x4088d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4088d0f0"/>
        <function-ref name="set" scoped="" ref="0x4088d1d0"/>
        <function-ref name="clr" scoped="" ref="0x4088d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4088c538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4088c538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4088c710"/>
        <function-ref name="isInput" scoped="" ref="0x4088c7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4088c8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4088c9b0"/>
        <function-ref name="get" scoped="" ref="0x4088ca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4088cb70"/>
        <function-ref name="set" scoped="" ref="0x4088cc50"/>
        <function-ref name="clr" scoped="" ref="0x4088cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4088a010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4088a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4088a1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4088a2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4088a3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4088a488"/>
        <function-ref name="get" scoped="" ref="0x4088a568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4088a648"/>
        <function-ref name="set" scoped="" ref="0x4088a728"/>
        <function-ref name="clr" scoped="" ref="0x4088a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408899e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408899e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40889bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40889ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40889d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40889e60"/>
        <function-ref name="get" scoped="" ref="0x40888010"/>
        <function-ref name="makeOutput" scoped="" ref="0x408880f0"/>
        <function-ref name="set" scoped="" ref="0x408881d0"/>
        <function-ref name="clr" scoped="" ref="0x408882b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40887538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40887538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40887710"/>
        <function-ref name="isInput" scoped="" ref="0x408877f0"/>
        <function-ref name="toggle" scoped="" ref="0x408878d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408879b0"/>
        <function-ref name="get" scoped="" ref="0x40887a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40887b70"/>
        <function-ref name="set" scoped="" ref="0x40887c50"/>
        <function-ref name="clr" scoped="" ref="0x40887d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4050d170" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4050d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050d348"/>
        <function-ref name="isInput" scoped="" ref="0x4050d428"/>
        <function-ref name="toggle" scoped="" ref="0x4050d508"/>
        <function-ref name="isOutput" scoped="" ref="0x4050d5e8"/>
        <function-ref name="get" scoped="" ref="0x4050d6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050d7a8"/>
        <function-ref name="set" scoped="" ref="0x4050d888"/>
        <function-ref name="clr" scoped="" ref="0x4050d968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4051ae48" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4051ae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40519050"/>
        <function-ref name="isInput" scoped="" ref="0x40519130"/>
        <function-ref name="toggle" scoped="" ref="0x40519210"/>
        <function-ref name="isOutput" scoped="" ref="0x405192f0"/>
        <function-ref name="get" scoped="" ref="0x405193d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405194b0"/>
        <function-ref name="set" scoped="" ref="0x40519590"/>
        <function-ref name="clr" scoped="" ref="0x40519670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4050fdc8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4050fdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050e010"/>
        <function-ref name="isInput" scoped="" ref="0x4050e0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4050e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4050e2b0"/>
        <function-ref name="get" scoped="" ref="0x4050e390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050e470"/>
        <function-ref name="set" scoped="" ref="0x4050e550"/>
        <function-ref name="clr" scoped="" ref="0x4050e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4050dac8" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4050dac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050dca0"/>
        <function-ref name="isInput" scoped="" ref="0x4050dd80"/>
        <function-ref name="toggle" scoped="" ref="0x4050de60"/>
        <function-ref name="isOutput" scoped="" ref="0x4051a010"/>
        <function-ref name="get" scoped="" ref="0x4051a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051a1d0"/>
        <function-ref name="set" scoped="" ref="0x4051a2b0"/>
        <function-ref name="clr" scoped="" ref="0x4051a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405197d0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405197d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405199a8"/>
        <function-ref name="isInput" scoped="" ref="0x40519a88"/>
        <function-ref name="toggle" scoped="" ref="0x40519b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40519c48"/>
        <function-ref name="get" scoped="" ref="0x40519d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40519e08"/>
        <function-ref name="set" scoped="" ref="0x40519ee8"/>
        <function-ref name="clr" scoped="" ref="0x40518010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4050e790" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4050e790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050e968"/>
        <function-ref name="isInput" scoped="" ref="0x4050ea48"/>
        <function-ref name="toggle" scoped="" ref="0x4050eb28"/>
        <function-ref name="isOutput" scoped="" ref="0x4050ec08"/>
        <function-ref name="get" scoped="" ref="0x4050ece8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050edc8"/>
        <function-ref name="set" scoped="" ref="0x4050eea8"/>
        <function-ref name="clr" scoped="" ref="0x4050d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4051a4f0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4051a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051a6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4051a7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4051a888"/>
        <function-ref name="isOutput" scoped="" ref="0x4051a968"/>
        <function-ref name="get" scoped="" ref="0x4051aa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051ab28"/>
        <function-ref name="set" scoped="" ref="0x4051ac08"/>
        <function-ref name="clr" scoped="" ref="0x4051ace8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40518170" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40518170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40518348"/>
        <function-ref name="isInput" scoped="" ref="0x40518428"/>
        <function-ref name="toggle" scoped="" ref="0x40518508"/>
        <function-ref name="isOutput" scoped="" ref="0x405185e8"/>
        <function-ref name="get" scoped="" ref="0x405186c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405187a8"/>
        <function-ref name="set" scoped="" ref="0x40518888"/>
        <function-ref name="clr" scoped="" ref="0x40518968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408b0938" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408b0938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408b0b10"/>
        <function-ref name="isInput" scoped="" ref="0x408b0bf0"/>
        <function-ref name="toggle" scoped="" ref="0x408b0cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x408b0db0"/>
        <function-ref name="get" scoped="" ref="0x408b0e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x408af010"/>
        <function-ref name="set" scoped="" ref="0x408af0f0"/>
        <function-ref name="clr" scoped="" ref="0x408af1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408ae3b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408ae3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408ae588"/>
        <function-ref name="isInput" scoped="" ref="0x408ae668"/>
        <function-ref name="toggle" scoped="" ref="0x408ae748"/>
        <function-ref name="isOutput" scoped="" ref="0x408ae828"/>
        <function-ref name="get" scoped="" ref="0x408ae908"/>
        <function-ref name="makeOutput" scoped="" ref="0x408ae9e8"/>
        <function-ref name="set" scoped="" ref="0x408aeac8"/>
        <function-ref name="clr" scoped="" ref="0x408aeba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408add70" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408add70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408ac010"/>
        <function-ref name="isInput" scoped="" ref="0x408ac0f0"/>
        <function-ref name="toggle" scoped="" ref="0x408ac1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408ac2b0"/>
        <function-ref name="get" scoped="" ref="0x408ac390"/>
        <function-ref name="makeOutput" scoped="" ref="0x408ac470"/>
        <function-ref name="set" scoped="" ref="0x408ac550"/>
        <function-ref name="clr" scoped="" ref="0x408ac630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408ab7f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408ab7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408ab9d0"/>
        <function-ref name="isInput" scoped="" ref="0x408abab0"/>
        <function-ref name="toggle" scoped="" ref="0x408abb90"/>
        <function-ref name="isOutput" scoped="" ref="0x408abc70"/>
        <function-ref name="get" scoped="" ref="0x408abd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x408abe30"/>
        <function-ref name="set" scoped="" ref="0x408abf10"/>
        <function-ref name="clr" scoped="" ref="0x408aa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408c7228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408c7228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408c7400"/>
        <function-ref name="isInput" scoped="" ref="0x408c74e0"/>
        <function-ref name="toggle" scoped="" ref="0x408c75c0"/>
        <function-ref name="isOutput" scoped="" ref="0x408c76a0"/>
        <function-ref name="get" scoped="" ref="0x408c7780"/>
        <function-ref name="makeOutput" scoped="" ref="0x408c7860"/>
        <function-ref name="set" scoped="" ref="0x408c7940"/>
        <function-ref name="clr" scoped="" ref="0x408c7a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408c6c08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408c6c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408c6de0"/>
        <function-ref name="isInput" scoped="" ref="0x408c6ec0"/>
        <function-ref name="toggle" scoped="" ref="0x408c5010"/>
        <function-ref name="isOutput" scoped="" ref="0x408c50f0"/>
        <function-ref name="get" scoped="" ref="0x408c51d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408c52b0"/>
        <function-ref name="set" scoped="" ref="0x408c5390"/>
        <function-ref name="clr" scoped="" ref="0x408c5470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408c46c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408c46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408c4898"/>
        <function-ref name="isInput" scoped="" ref="0x408c4978"/>
        <function-ref name="toggle" scoped="" ref="0x408c4a58"/>
        <function-ref name="isOutput" scoped="" ref="0x408c4b38"/>
        <function-ref name="get" scoped="" ref="0x408c4c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x408c4cf8"/>
        <function-ref name="set" scoped="" ref="0x408c4dd8"/>
        <function-ref name="clr" scoped="" ref="0x408c4eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408c20b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408c20b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408c2288"/>
        <function-ref name="isInput" scoped="" ref="0x408c2368"/>
        <function-ref name="toggle" scoped="" ref="0x408c2448"/>
        <function-ref name="isOutput" scoped="" ref="0x408c2528"/>
        <function-ref name="get" scoped="" ref="0x408c2608"/>
        <function-ref name="makeOutput" scoped="" ref="0x408c26e8"/>
        <function-ref name="set" scoped="" ref="0x408c27c8"/>
        <function-ref name="clr" scoped="" ref="0x408c28a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403e5218" loc="88:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403e5218"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403e53f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x403e9560" loc="89:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x403e9560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x403e9738"/>
        <function-ref name="led0Toggle" scoped="" ref="0x403e9818"/>
        <function-ref name="led1On" scoped="" ref="0x403e98f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x403e99d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x403e9ab8"/>
        <function-ref name="get" scoped="" ref="0x403e9b98"/>
        <function-ref name="led1Off" scoped="" ref="0x403e9c78"/>
        <function-ref name="led2Off" scoped="" ref="0x403de010"/>
        <function-ref name="set" scoped="" ref="0x403e9d58"/>
        <function-ref name="led0On" scoped="" ref="0x403e9e38"/>
        <function-ref name="led2On" scoped="" ref="0x403e9f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x403df470" loc="84:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403df470"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403df648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403dc148" loc="85:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403dc148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403dc320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x405368f0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x405368f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40436450"/>
            <typename><typedef-ref name="TMilli" ref="0x40436618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40534068"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40534558"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405342e0"/>
        <function-ref name="overflow" scoped="" ref="0x405347d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x405415f8" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x405415f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048dee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405310a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40541d48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40550288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40550010"/>
        <function-ref name="overflow" scoped="" ref="0x40550500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40542320" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40542320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40436450"/>
            <typename><typedef-ref name="TMilli" ref="0x40436618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40542a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40541010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40542ce8"/>
        <function-ref name="overflow" scoped="" ref="0x40541288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4054d368" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4054d368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048dee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405310a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4054dab8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4054c010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4054dd30"/>
        <function-ref name="overflow" scoped="" ref="0x4054c288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4055a440" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4055a440"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4055a618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4055a878" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4055a878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048dee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405310a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4056a010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4056a500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4056a288"/>
        <function-ref name="overflow" scoped="" ref="0x4056a778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x4056aa48" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x4056aa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40567500"/>
        <function-ref name="test" scoped="" ref="0x40569838"/>
        <function-ref name="get" scoped="" ref="0x405690a8"/>
        <function-ref name="reset" scoped="" ref="0x40569ab0"/>
        <function-ref name="getMode" scoped="" ref="0x405677a0"/>
        <function-ref name="overflow" scoped="" ref="0x405695c0"/>
        <function-ref name="isOn" scoped="" ref="0x40567288"/>
        <function-ref name="set" scoped="" ref="0x40569320"/>
        <function-ref name="start" scoped="" ref="0x40569d28"/>
        <function-ref name="stop" scoped="" ref="0x40567010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconCapture" ref="0x405739a8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconCapture" scoped="" ref="0x405739a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40581418"/>
        <function-ref name="test" scoped="" ref="0x405827a0"/>
        <function-ref name="fired" scoped="" ref="0x40582528"/>
        <function-ref name="get" scoped="" ref="0x40582010"/>
        <function-ref name="reset" scoped="" ref="0x40582a18"/>
        <function-ref name="getMode" scoped="" ref="0x405816b8"/>
        <function-ref name="isOn" scoped="" ref="0x405811a0"/>
        <function-ref name="set" scoped="" ref="0x40582288"/>
        <function-ref name="start" scoped="" ref="0x40582c90"/>
        <function-ref name="stop" scoped="" ref="0x40582f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40566c90" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40566c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40572778"/>
        <function-ref name="test" scoped="" ref="0x40563a78"/>
        <function-ref name="get" scoped="" ref="0x405632e8"/>
        <function-ref name="reset" scoped="" ref="0x40563cf0"/>
        <function-ref name="getMode" scoped="" ref="0x40572a18"/>
        <function-ref name="overflow" scoped="" ref="0x40563800"/>
        <function-ref name="isOn" scoped="" ref="0x40572500"/>
        <function-ref name="set" scoped="" ref="0x40563560"/>
        <function-ref name="start" scoped="" ref="0x40572010"/>
        <function-ref name="stop" scoped="" ref="0x40572288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x40574860" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40574860"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405732e0"/>
        <function-ref name="test" scoped="" ref="0x40579668"/>
        <function-ref name="fired" scoped="" ref="0x405793f0"/>
        <function-ref name="get" scoped="" ref="0x40574ea8"/>
        <function-ref name="reset" scoped="" ref="0x405798e0"/>
        <function-ref name="getMode" scoped="" ref="0x40573580"/>
        <function-ref name="isOn" scoped="" ref="0x40573068"/>
        <function-ref name="set" scoped="" ref="0x40579150"/>
        <function-ref name="start" scoped="" ref="0x40579b58"/>
        <function-ref name="stop" scoped="" ref="0x40579dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40571470" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40571470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4056bee0"/>
        <function-ref name="test" scoped="" ref="0x4056b288"/>
        <function-ref name="fired" scoped="" ref="0x4056b010"/>
        <function-ref name="force" scoped="" ref="0x4057a438"/>
        <function-ref name="get" scoped="" ref="0x40571ab8"/>
        <function-ref name="reset" scoped="" ref="0x4056b500"/>
        <function-ref name="getMode" scoped="" ref="0x4057a1c0"/>
        <function-ref name="isOn" scoped="" ref="0x4056bc68"/>
        <function-ref name="set" scoped="" ref="0x40571d30"/>
        <function-ref name="start" scoped="" ref="0x4056b778"/>
        <function-ref name="stop" scoped="" ref="0x4056b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x4057b408" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x4057b408"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4058aee0"/>
        <function-ref name="test" scoped="" ref="0x4058a288"/>
        <function-ref name="fired" scoped="" ref="0x4058a010"/>
        <function-ref name="force" scoped="" ref="0x40588438"/>
        <function-ref name="get" scoped="" ref="0x4057ba50"/>
        <function-ref name="reset" scoped="" ref="0x4058a500"/>
        <function-ref name="getMode" scoped="" ref="0x405881c0"/>
        <function-ref name="isOn" scoped="" ref="0x4058ac68"/>
        <function-ref name="set" scoped="" ref="0x4057bcc8"/>
        <function-ref name="start" scoped="" ref="0x4058a778"/>
        <function-ref name="stop" scoped="" ref="0x4058a9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconCapture" ref="0x4058f158" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconCapture" scoped="" ref="0x4058f158"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4058ec68"/>
        <function-ref name="test" scoped="" ref="0x4058e010"/>
        <function-ref name="fired" scoped="" ref="0x4058fcb8"/>
        <function-ref name="get" scoped="" ref="0x4058f7a0"/>
        <function-ref name="reset" scoped="" ref="0x4058e288"/>
        <function-ref name="getMode" scoped="" ref="0x4058ef08"/>
        <function-ref name="isOn" scoped="" ref="0x4058e9f0"/>
        <function-ref name="set" scoped="" ref="0x4058fa18"/>
        <function-ref name="start" scoped="" ref="0x4058e500"/>
        <function-ref name="stop" scoped="" ref="0x4058e778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x4058d1e0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4058d1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4058d3b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40588830" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40588830"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405862c0"/>
        <function-ref name="test" scoped="" ref="0x40587628"/>
        <function-ref name="fired" scoped="" ref="0x405873b0"/>
        <function-ref name="force" scoped="" ref="0x405867d8"/>
        <function-ref name="get" scoped="" ref="0x40588e78"/>
        <function-ref name="reset" scoped="" ref="0x405878a0"/>
        <function-ref name="getMode" scoped="" ref="0x40586560"/>
        <function-ref name="isOn" scoped="" ref="0x40586048"/>
        <function-ref name="set" scoped="" ref="0x40587110"/>
        <function-ref name="start" scoped="" ref="0x40587b18"/>
        <function-ref name="stop" scoped="" ref="0x40587d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4057e278" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4057e278"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4057ccc0"/>
        <function-ref name="test" scoped="" ref="0x4057c068"/>
        <function-ref name="get" scoped="" ref="0x4057e8c0"/>
        <function-ref name="reset" scoped="" ref="0x4057c2e0"/>
        <function-ref name="getMode" scoped="" ref="0x4057b010"/>
        <function-ref name="overflow" scoped="" ref="0x4057edd8"/>
        <function-ref name="isOn" scoped="" ref="0x4057ca48"/>
        <function-ref name="set" scoped="" ref="0x4057eb38"/>
        <function-ref name="start" scoped="" ref="0x4057c558"/>
        <function-ref name="stop" scoped="" ref="0x4057c7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x4058d5d0" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x4058d5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4058d7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x40592010" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40592010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40590a68"/>
        <function-ref name="test" scoped="" ref="0x40592de8"/>
        <function-ref name="fired" scoped="" ref="0x40592b70"/>
        <function-ref name="get" scoped="" ref="0x40592658"/>
        <function-ref name="reset" scoped="" ref="0x40590088"/>
        <function-ref name="getMode" scoped="" ref="0x40590d08"/>
        <function-ref name="isOn" scoped="" ref="0x405907f0"/>
        <function-ref name="set" scoped="" ref="0x405928d0"/>
        <function-ref name="start" scoped="" ref="0x40590300"/>
        <function-ref name="stop" scoped="" ref="0x40590578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40586bd0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40586bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40583640"/>
        <function-ref name="test" scoped="" ref="0x405849c8"/>
        <function-ref name="fired" scoped="" ref="0x40584750"/>
        <function-ref name="force" scoped="" ref="0x40583b58"/>
        <function-ref name="get" scoped="" ref="0x40584238"/>
        <function-ref name="reset" scoped="" ref="0x40584c40"/>
        <function-ref name="getMode" scoped="" ref="0x405838e0"/>
        <function-ref name="isOn" scoped="" ref="0x405833c8"/>
        <function-ref name="set" scoped="" ref="0x405844b0"/>
        <function-ref name="start" scoped="" ref="0x40584eb8"/>
        <function-ref name="stop" scoped="" ref="0x40583150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x405ef0b0" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x405ef0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405ef288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x405ec130" loc="60:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x405ec130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405ec308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x405f03a8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x405f03a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x405f0580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x405f0d08" loc="59:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x405f0d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405f0ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x405f0740" loc="58:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x405f0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405f0918"/>
        <function-ref name="taskLoop" scoped="" ref="0x405f09f8"/>
        <function-ref name="runNextTask" scoped="" ref="0x405f0ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40304a98" loc="48:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40304c70"/>
        <function-ref name="runTask" scoped="" ref="0x40304d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x402ff378" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x402ff378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x402ff550"/>
        <function-ref name="taskLoop" scoped="" ref="0x402ff630"/>
        <function-ref name="runNextTask" scoped="" ref="0x402ff710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403c8c18" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403c8c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403c8df0"/>
        <function-ref name="runTask" scoped="" ref="0x403c8ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403d18b8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403d18b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403d1a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403c83e0" loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403c83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403c85b8"/>
        <function-ref name="taskLoop" scoped="" ref="0x403c8698"/>
        <function-ref name="runNextTask" scoped="" ref="0x403c8778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x40639d30" loc="22:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoC.nc">
      <component-ref qname="SerialEchoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x40639d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40436450"/>
            <typename><typedef-ref name="TMilli" ref="0x40436618"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4062a8a8"/>
        <function-ref name="fired" scoped="" ref="0x4062bac8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4062a268"/>
        <function-ref name="isOneShot" scoped="" ref="0x4062a010"/>
        <function-ref name="getdt" scoped="" ref="0x4062ad58"/>
        <function-ref name="gett0" scoped="" ref="0x4062ab00"/>
        <function-ref name="isRunning" scoped="" ref="0x4062bd20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4062b370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4062a588"/>
        <function-ref name="startOneShot" scoped="" ref="0x4062b5f0"/>
        <function-ref name="stop" scoped="" ref="0x4062b870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="processReceiveBufferTask" ref="0x40646e50" loc="41:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoC.nc">
      <component-ref qname="SerialEchoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="processReceiveBufferTask" scoped="" ref="0x40646e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40657050"/>
        <function-ref name="runTask" scoped="" ref="0x40657130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x4062d180" loc="19:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoC.nc">
      <component-ref qname="SerialEchoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4062d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4062d358"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x4062ddb0" loc="21:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoC.nc">
      <component-ref qname="SerialEchoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x4062ddb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4062c010"/>
        <function-ref name="receive" scoped="" ref="0x4062c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StatusQueue" ref="0x4063e9e0" loc="27:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoC.nc">
      <component-ref qname="SerialEchoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StatusQueue" scoped="" ref="0x4063e9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="status_packet" ref="0x4030b7e0"/>
            <typename><typedef-ref name="status_packet_t" ref="0x405f76d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x4064f750"/>
        <function-ref name="enqueue" scoped="" ref="0x4064fe30"/>
        <function-ref name="element" scoped="" ref="0x4064d1a8"/>
        <function-ref name="maxSize" scoped="" ref="0x4064f4f8"/>
        <function-ref name="dequeue" scoped="" ref="0x4064fac0"/>
        <function-ref name="empty" scoped="" ref="0x4064f048"/>
        <function-ref name="size" scoped="" ref="0x4064f2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CommandNotification" ref="0x40648c80" loc="32:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoC.nc">
      <component-ref qname="SerialEchoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommandNotification" scoped="" ref="0x40648c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x405f4220"/>
            <typename><typedef-ref name="command_packet_t" ref="0x405f4ee8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x4064a520"/>
        <function-ref name="enable" scoped="" ref="0x4064a2c8"/>
        <function-ref name="notify" scoped="" ref="0x4064a778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardCommand" ref="0x40659918" loc="33:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoC.nc">
      <component-ref qname="SerialEchoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardCommand" scoped="" ref="0x40659918"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetNow"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x405f4220"/>
            <typename><typedef-ref name="command_packet_t" ref="0x405f4ee8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setNow" scoped="" ref="0x40649010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x406370e8" loc="23:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoC.nc">
      <component-ref qname="SerialEchoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x406370e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40436450"/>
            <typename><typedef-ref name="TMilli" ref="0x40436618"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40636be0"/>
        <function-ref name="fired" scoped="" ref="0x40637e68"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406365a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40636348"/>
        <function-ref name="getdt" scoped="" ref="0x406350b8"/>
        <function-ref name="gett0" scoped="" ref="0x40636e38"/>
        <function-ref name="isRunning" scoped="" ref="0x406360f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40637710"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406368c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40637990"/>
        <function-ref name="stop" scoped="" ref="0x40637c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataQueue" ref="0x4063cd00" loc="26:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoC.nc">
      <component-ref qname="SerialEchoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataQueue" scoped="" ref="0x4063cd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:14" alignment="I:1"><struct-ref name="data_packet" ref="0x405f62c8"/>
            <typename><typedef-ref name="data_packet_t" ref="0x405f4010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40640a58"/>
        <function-ref name="enqueue" scoped="" ref="0x4063e150"/>
        <function-ref name="element" scoped="" ref="0x4063e4a0"/>
        <function-ref name="maxSize" scoped="" ref="0x40640800"/>
        <function-ref name="dequeue" scoped="" ref="0x40640dc8"/>
        <function-ref name="empty" scoped="" ref="0x40640350"/>
        <function-ref name="size" scoped="" ref="0x406405a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x4062d500" loc="20:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoC.nc">
      <component-ref qname="SerialEchoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x4062d500"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4062d6d8"/>
        <function-ref name="receivedByte" scoped="" ref="0x4062d7b8"/>
        <function-ref name="receive" scoped="" ref="0x4062d898"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x4062d978"/>
        <function-ref name="receiveDone" scoped="" ref="0x4062da58"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4062db38"/>
        <function-ref name="sendDone" scoped="" ref="0x4062dc18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4062e4e0" loc="18:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoC.nc">
      <component-ref qname="SerialEchoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4062e4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4062e6b8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4062e798"/>
        <function-ref name="led1On" scoped="" ref="0x4062e878"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4062e958"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4062ea38"/>
        <function-ref name="get" scoped="" ref="0x4062eb18"/>
        <function-ref name="led1Off" scoped="" ref="0x4062ebf8"/>
        <function-ref name="led2Off" scoped="" ref="0x4062d010"/>
        <function-ref name="set" scoped="" ref="0x4062ecd8"/>
        <function-ref name="led0On" scoped="" ref="0x4062edb8"/>
        <function-ref name="led2On" scoped="" ref="0x4062ee98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardData" ref="0x40649430" loc="34:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoC.nc">
      <component-ref qname="SerialEchoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardData" scoped="" ref="0x40649430"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetNow"/>
        <arguments>
          <type-tag size="I:14" alignment="I:1"><struct-ref name="data_packet" ref="0x405f62c8"/>
            <typename><typedef-ref name="data_packet_t" ref="0x405f4010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setNow" scoped="" ref="0x40649af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CommandQueue" ref="0x4064d708" loc="28:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoC.nc">
      <component-ref qname="SerialEchoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommandQueue" scoped="" ref="0x4064d708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x405f4220"/>
            <typename><typedef-ref name="command_packet_t" ref="0x405f4ee8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x4064c4c0"/>
        <function-ref name="enqueue" scoped="" ref="0x4064cba0"/>
        <function-ref name="element" scoped="" ref="0x4064cef0"/>
        <function-ref name="maxSize" scoped="" ref="0x4064c268"/>
        <function-ref name="dequeue" scoped="" ref="0x4064c830"/>
        <function-ref name="empty" scoped="" ref="0x4064dd30"/>
        <function-ref name="size" scoped="" ref="0x4064c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardStatus" ref="0x40646010" loc="35:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoC.nc">
      <component-ref qname="SerialEchoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardStatus" scoped="" ref="0x40646010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetNow"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="status_packet" ref="0x4030b7e0"/>
            <typename><typedef-ref name="status_packet_t" ref="0x405f76d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setNow" scoped="" ref="0x40646658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTypes" ref="0x40642c20" loc="24:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoC.nc">
      <component-ref qname="SerialEchoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTypes" scoped="" ref="0x40642c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTypes"/>
      </instance>
      <interface-functions>
        <function-ref name="asciihexToNum" scoped="" ref="0x40634550"/>
        <function-ref name="getTypeOfPacket" scoped="" ref="0x40642ed8"/>
        <function-ref name="statusPacketToStr" scoped="" ref="0x40634010"/>
        <function-ref name="dataPacketToStr" scoped="" ref="0x406340f0"/>
        <function-ref name="strToCommandPacket" scoped="" ref="0x406341d0"/>
        <function-ref name="commandToBuffer" scoped="" ref="0x406342b0"/>
        <function-ref name="strToDataPacket" scoped="" ref="0x40634390"/>
        <function-ref name="commandPacketToStr" scoped="" ref="0x40642df8"/>
        <function-ref name="strToStatusPacket" scoped="" ref="0x40634470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="forwardNextPacketTask" ref="0x406576e0" loc="42:/home/alpsayin/tinyos_workspace/SerialEcho/src/SerialEchoC.nc">
      <component-ref qname="SerialEchoC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="forwardNextPacketTask" scoped="" ref="0x406576e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406578b8"/>
        <function-ref name="runTask" scoped="" ref="0x40657998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x406711c8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x406711c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406713a0"/>
        <function-ref name="receive" scoped="" ref="0x40671480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40674878" loc="40:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40674878"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40674a50"/>
        <function-ref name="receivedByte" scoped="" ref="0x40674b30"/>
        <function-ref name="receive" scoped="" ref="0x40674c10"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40674cf0"/>
        <function-ref name="receiveDone" scoped="" ref="0x40674dd0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40674eb0"/>
        <function-ref name="sendDone" scoped="" ref="0x40671010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartControl" ref="0x406743f8" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartControl" scoped="" ref="0x406743f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406745d0"/>
        <function-ref name="stop" scoped="" ref="0x406746b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40673330" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="SerialEchoAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40673330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40436450"/>
            <typename><typedef-ref name="TMilli" ref="0x40436618"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40672e38"/>
        <function-ref name="fired" scoped="" ref="0x406720f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406727f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x406725a0"/>
        <function-ref name="getdt" scoped="" ref="0x4071c310"/>
        <function-ref name="gett0" scoped="" ref="0x4071c0b8"/>
        <function-ref name="isRunning" scoped="" ref="0x40672348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40673958"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40672b18"/>
        <function-ref name="startOneShot" scoped="" ref="0x40673bd8"/>
        <function-ref name="stop" scoped="" ref="0x40673e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x4067d028" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x4067d028"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40436450"/>
            <typename><typedef-ref name="TMilli" ref="0x40436618"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4067cb00"/>
        <function-ref name="fired" scoped="" ref="0x4067dda8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4067c4c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4067c268"/>
        <function-ref name="getdt" scoped="" ref="0x4067a010"/>
        <function-ref name="gett0" scoped="" ref="0x4067cd58"/>
        <function-ref name="isRunning" scoped="" ref="0x4067c010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4067d650"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4067c7e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x4067d8d0"/>
        <function-ref name="stop" scoped="" ref="0x4067db50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40679f20" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40679f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40436450"/>
            <typename><typedef-ref name="TMilli" ref="0x40436618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406ce3e8"/>
        <function-ref name="fired" scoped="" ref="0x40678ba0"/>
        <function-ref name="startAt" scoped="" ref="0x406ce0a8"/>
        <function-ref name="isRunning" scoped="" ref="0x40678e18"/>
        <function-ref name="getAlarm" scoped="" ref="0x406ce660"/>
        <function-ref name="start" scoped="" ref="0x40678688"/>
        <function-ref name="stop" scoped="" ref="0x40678928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40906ae0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40906ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048dee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405310a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40904068"/>
        <function-ref name="fired" scoped="" ref="0x40905820"/>
        <function-ref name="startAt" scoped="" ref="0x40905d10"/>
        <function-ref name="isRunning" scoped="" ref="0x40905a98"/>
        <function-ref name="getAlarm" scoped="" ref="0x409042e0"/>
        <function-ref name="start" scoped="" ref="0x40905308"/>
        <function-ref name="stop" scoped="" ref="0x409055a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x409135a8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x409135a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40911010"/>
        <function-ref name="test" scoped="" ref="0x409123a8"/>
        <function-ref name="fired" scoped="" ref="0x40912130"/>
        <function-ref name="force" scoped="" ref="0x40911528"/>
        <function-ref name="get" scoped="" ref="0x40913bf0"/>
        <function-ref name="reset" scoped="" ref="0x40912620"/>
        <function-ref name="getMode" scoped="" ref="0x409112b0"/>
        <function-ref name="isOn" scoped="" ref="0x40912d88"/>
        <function-ref name="set" scoped="" ref="0x40913e68"/>
        <function-ref name="start" scoped="" ref="0x40912898"/>
        <function-ref name="stop" scoped="" ref="0x40912b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x408fabd8" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x408fabd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048dee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405310a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409160a8"/>
        <function-ref name="fired" scoped="" ref="0x40917858"/>
        <function-ref name="startAt" scoped="" ref="0x40917d48"/>
        <function-ref name="isRunning" scoped="" ref="0x40917ad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40916320"/>
        <function-ref name="start" scoped="" ref="0x40917340"/>
        <function-ref name="stop" scoped="" ref="0x409175e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408fa7a0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408fa7a0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408fa978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x409165f0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x409165f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40913068"/>
        <function-ref name="test" scoped="" ref="0x409143e8"/>
        <function-ref name="get" scoped="" ref="0x40916c38"/>
        <function-ref name="reset" scoped="" ref="0x40914660"/>
        <function-ref name="getMode" scoped="" ref="0x40913308"/>
        <function-ref name="overflow" scoped="" ref="0x40914170"/>
        <function-ref name="isOn" scoped="" ref="0x40914dc8"/>
        <function-ref name="set" scoped="" ref="0x40916eb0"/>
        <function-ref name="start" scoped="" ref="0x409148d8"/>
        <function-ref name="stop" scoped="" ref="0x40914b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x409025a0" loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x409025a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40436450"/>
            <typename><typedef-ref name="TMilli" ref="0x40436618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40901ab8"/>
        <function-ref name="fired" scoped="" ref="0x40901288"/>
        <function-ref name="startAt" scoped="" ref="0x40901778"/>
        <function-ref name="isRunning" scoped="" ref="0x40901500"/>
        <function-ref name="getAlarm" scoped="" ref="0x40901d30"/>
        <function-ref name="start" scoped="" ref="0x40902cf0"/>
        <function-ref name="stop" scoped="" ref="0x40901010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x408ff380" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x408ff380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048dee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405310a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408fe840"/>
        <function-ref name="fired" scoped="" ref="0x408fe010"/>
        <function-ref name="startAt" scoped="" ref="0x408fe500"/>
        <function-ref name="isRunning" scoped="" ref="0x408fe288"/>
        <function-ref name="getAlarm" scoped="" ref="0x408feab8"/>
        <function-ref name="start" scoped="" ref="0x408ffad0"/>
        <function-ref name="stop" scoped="" ref="0x408ffd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x409000a0" loc="68:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x409000a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40436450"/>
            <typename><typedef-ref name="TMilli" ref="0x40436618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409007f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40900ce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40900a68"/>
        <function-ref name="overflow" scoped="" ref="0x408ff010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x406f5658" loc="74:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x406f5658"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406f5830"/>
        <function-ref name="runTask" scoped="" ref="0x406f5910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x406e1cc8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x406e1cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40436450"/>
            <typename><typedef-ref name="TMilli" ref="0x40436618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406f5190"/>
        <function-ref name="fired" scoped="" ref="0x406f6950"/>
        <function-ref name="startAt" scoped="" ref="0x406f6e40"/>
        <function-ref name="isRunning" scoped="" ref="0x406f6bc8"/>
        <function-ref name="getAlarm" scoped="" ref="0x406f5408"/>
        <function-ref name="start" scoped="" ref="0x406f6438"/>
        <function-ref name="stop" scoped="" ref="0x406f66d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406cd968" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406cd968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40436450"/>
            <typename><typedef-ref name="TMilli" ref="0x40436618"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406e14c8"/>
        <function-ref name="fired" scoped="" ref="0x406e2768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406e2e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x406e2c18"/>
        <function-ref name="getdt" scoped="" ref="0x406e1978"/>
        <function-ref name="gett0" scoped="" ref="0x406e1720"/>
        <function-ref name="isRunning" scoped="" ref="0x406e29c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406e2010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406e11a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x406e2290"/>
        <function-ref name="stop" scoped="" ref="0x406e2510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x4071f2b8" loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x4071f2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4071f490"/>
        <function-ref name="runTask" scoped="" ref="0x4071f570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x407220c0" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x407220c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40436450"/>
            <typename><typedef-ref name="TMilli" ref="0x40436618"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40720ba8"/>
        <function-ref name="fired" scoped="" ref="0x40722e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40720568"/>
        <function-ref name="isOneShot" scoped="" ref="0x40720310"/>
        <function-ref name="getdt" scoped="" ref="0x4071f068"/>
        <function-ref name="gett0" scoped="" ref="0x40720e00"/>
        <function-ref name="isRunning" scoped="" ref="0x407200b8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407226e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40720888"/>
        <function-ref name="startOneShot" scoped="" ref="0x40722968"/>
        <function-ref name="stop" scoped="" ref="0x40722be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406f2cc8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406f2cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40436450"/>
            <typename><typedef-ref name="TMilli" ref="0x40436618"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4070d8d8"/>
        <function-ref name="fired" scoped="" ref="0x406f1ad8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4070d278"/>
        <function-ref name="isOneShot" scoped="" ref="0x4070d010"/>
        <function-ref name="getdt" scoped="" ref="0x4070dda8"/>
        <function-ref name="gett0" scoped="" ref="0x4070db40"/>
        <function-ref name="isRunning" scoped="" ref="0x406f1d40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406f1350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4070d5a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x406f15e0"/>
        <function-ref name="stop" scoped="" ref="0x406f1870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4071b0f0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="SerialEchoAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4071b0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40436450"/>
            <typename><typedef-ref name="TMilli" ref="0x40436618"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4071abe0"/>
        <function-ref name="fired" scoped="" ref="0x4071be70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4071a5a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4071a348"/>
        <function-ref name="getdt" scoped="" ref="0x407190b8"/>
        <function-ref name="gett0" scoped="" ref="0x4071ae38"/>
        <function-ref name="isRunning" scoped="" ref="0x4071a0f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4071b718"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4071a8c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x4071b998"/>
        <function-ref name="stop" scoped="" ref="0x4071bc18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTypes" ref="0x4072d848" loc="13:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypesP.nc">
      <component-ref qname="SerialEchoAppC.PacketTypesImpl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTypes" scoped="" ref="0x4072d848"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTypes"/>
      </instance>
      <interface-functions>
        <function-ref name="strToStatusPacket" scoped="" ref="0x4072c1d0"/>
        <function-ref name="getTypeOfPacket" scoped="" ref="0x4072db00"/>
        <function-ref name="statusPacketToStr" scoped="" ref="0x4072dbe0"/>
        <function-ref name="dataPacketToStr" scoped="" ref="0x4072dcc0"/>
        <function-ref name="strToCommandPacket" scoped="" ref="0x4072dda0"/>
        <function-ref name="commandToBuffer" scoped="" ref="0x4072de80"/>
        <function-ref name="strToDataPacket" scoped="" ref="0x4072c010"/>
        <function-ref name="commandPacketToStr" scoped="" ref="0x4072c0f0"/>
        <function-ref name="asciihexToNum" scoped="" ref="0x4072da20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x40778ce8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="SerialEchoAppC.DataQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40778ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:14" alignment="I:1"><struct-ref name="data_packet" ref="0x405f62c8"/>
            <typename><typedef-ref name="data_packet_t" ref="0x405f4010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x4076ea58"/>
        <function-ref name="enqueue" scoped="" ref="0x40777150"/>
        <function-ref name="element" scoped="" ref="0x407774a0"/>
        <function-ref name="maxSize" scoped="" ref="0x4076e800"/>
        <function-ref name="dequeue" scoped="" ref="0x4076edc8"/>
        <function-ref name="empty" scoped="" ref="0x4076e350"/>
        <function-ref name="size" scoped="" ref="0x4076e5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x40776748" loc="43:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="SerialEchoAppC.CommandQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40776748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x405f4220"/>
            <typename><typedef-ref name="command_packet_t" ref="0x405f4ee8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x4078d4c0"/>
        <function-ref name="enqueue" scoped="" ref="0x4078dba0"/>
        <function-ref name="element" scoped="" ref="0x4078def0"/>
        <function-ref name="maxSize" scoped="" ref="0x4078d268"/>
        <function-ref name="dequeue" scoped="" ref="0x4078d830"/>
        <function-ref name="empty" scoped="" ref="0x40776d70"/>
        <function-ref name="size" scoped="" ref="0x4078d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x4078a178" loc="43:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="SerialEchoAppC.StatusQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4078a178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="status_packet" ref="0x4030b7e0"/>
            <typename><typedef-ref name="status_packet_t" ref="0x405f76d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x4078aea8"/>
        <function-ref name="enqueue" scoped="" ref="0x407895b8"/>
        <function-ref name="element" scoped="" ref="0x40789908"/>
        <function-ref name="maxSize" scoped="" ref="0x4078ac50"/>
        <function-ref name="dequeue" scoped="" ref="0x40789248"/>
        <function-ref name="empty" scoped="" ref="0x4078a7a0"/>
        <function-ref name="size" scoped="" ref="0x4078a9f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x40797d20" loc="18:/home/alpsayin/tinyos_workspace/SerialEcho/src/DummyNotificationReceiverP.nc">
      <component-ref qname="DummyNotificationReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x40797d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40436450"/>
            <typename><typedef-ref name="TMilli" ref="0x40436618"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407948a8"/>
        <function-ref name="fired" scoped="" ref="0x40795ac8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40794268"/>
        <function-ref name="isOneShot" scoped="" ref="0x40794010"/>
        <function-ref name="getdt" scoped="" ref="0x40794d58"/>
        <function-ref name="gett0" scoped="" ref="0x40794b00"/>
        <function-ref name="isRunning" scoped="" ref="0x40795d20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40795370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40794588"/>
        <function-ref name="startOneShot" scoped="" ref="0x407955f0"/>
        <function-ref name="stop" scoped="" ref="0x40795870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x40786de8" loc="8:/home/alpsayin/tinyos_workspace/SerialEcho/src/DummyNotificationReceiverP.nc">
      <component-ref qname="DummyNotificationReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40786de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40783010"/>
        <function-ref name="receive" scoped="" ref="0x407830f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40783ce8" loc="10:/home/alpsayin/tinyos_workspace/SerialEcho/src/DummyNotificationReceiverP.nc">
      <component-ref qname="DummyNotificationReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40783ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40783ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CommandNotification" ref="0x40782e90" loc="13:/home/alpsayin/tinyos_workspace/SerialEcho/src/DummyNotificationReceiverP.nc">
      <component-ref qname="DummyNotificationReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommandNotification" scoped="" ref="0x40782e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x405f4220"/>
            <typename><typedef-ref name="command_packet_t" ref="0x405f4ee8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x40799730"/>
        <function-ref name="enable" scoped="" ref="0x407994d8"/>
        <function-ref name="notify" scoped="" ref="0x40799988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardCommand" ref="0x40799de8" loc="14:/home/alpsayin/tinyos_workspace/SerialEcho/src/DummyNotificationReceiverP.nc">
      <component-ref qname="DummyNotificationReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardCommand" scoped="" ref="0x40799de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetNow"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x405f4220"/>
            <typename><typedef-ref name="command_packet_t" ref="0x405f4ee8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setNow" scoped="" ref="0x40798468"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x407930e8" loc="19:/home/alpsayin/tinyos_workspace/SerialEcho/src/DummyNotificationReceiverP.nc">
      <component-ref qname="DummyNotificationReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x407930e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40436450"/>
            <typename><typedef-ref name="TMilli" ref="0x40436618"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40792be0"/>
        <function-ref name="fired" scoped="" ref="0x40793e68"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407925a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40792348"/>
        <function-ref name="getdt" scoped="" ref="0x407900b8"/>
        <function-ref name="gett0" scoped="" ref="0x40792e38"/>
        <function-ref name="isRunning" scoped="" ref="0x407920f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40793710"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407928c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40793990"/>
        <function-ref name="stop" scoped="" ref="0x40793c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40782060" loc="11:/home/alpsayin/tinyos_workspace/SerialEcho/src/DummyNotificationReceiverP.nc">
      <component-ref qname="DummyNotificationReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40782060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40782238"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40782318"/>
        <function-ref name="led1On" scoped="" ref="0x407823f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407824d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407825b8"/>
        <function-ref name="get" scoped="" ref="0x40782698"/>
        <function-ref name="led1Off" scoped="" ref="0x40782778"/>
        <function-ref name="led2Off" scoped="" ref="0x40782af8"/>
        <function-ref name="set" scoped="" ref="0x40782858"/>
        <function-ref name="led0On" scoped="" ref="0x40782938"/>
        <function-ref name="led2On" scoped="" ref="0x40782a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardData" ref="0x40798888" loc="15:/home/alpsayin/tinyos_workspace/SerialEcho/src/DummyNotificationReceiverP.nc">
      <component-ref qname="DummyNotificationReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardData" scoped="" ref="0x40798888"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetNow"/>
        <arguments>
          <type-tag size="I:14" alignment="I:1"><struct-ref name="data_packet" ref="0x405f62c8"/>
            <typename><typedef-ref name="data_packet_t" ref="0x405f4010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setNow" scoped="" ref="0x40798ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardStatus" ref="0x40797338" loc="16:/home/alpsayin/tinyos_workspace/SerialEcho/src/DummyNotificationReceiverP.nc">
      <component-ref qname="DummyNotificationReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardStatus" scoped="" ref="0x40797338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetNow"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="status_packet" ref="0x4030b7e0"/>
            <typename><typedef-ref name="status_packet_t" ref="0x405f76d8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setNow" scoped="" ref="0x40797980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTypes" ref="0x407832a0" loc="9:/home/alpsayin/tinyos_workspace/SerialEcho/src/DummyNotificationReceiverP.nc">
      <component-ref qname="DummyNotificationReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTypes" scoped="" ref="0x407832a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTypes"/>
      </instance>
      <interface-functions>
        <function-ref name="asciihexToNum" scoped="" ref="0x40783b78"/>
        <function-ref name="getTypeOfPacket" scoped="" ref="0x40783558"/>
        <function-ref name="statusPacketToStr" scoped="" ref="0x40783638"/>
        <function-ref name="dataPacketToStr" scoped="" ref="0x40783718"/>
        <function-ref name="strToCommandPacket" scoped="" ref="0x407837f8"/>
        <function-ref name="commandToBuffer" scoped="" ref="0x407838d8"/>
        <function-ref name="strToDataPacket" scoped="" ref="0x407839b8"/>
        <function-ref name="commandPacketToStr" scoped="" ref="0x40783478"/>
        <function-ref name="strToStatusPacket" scoped="" ref="0x40783a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTypes" ref="0x40785ce0" loc="13:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypesP.nc">
      <component-ref qname="SerialEchoAppC.PacketTypesDummy"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTypes" scoped="" ref="0x40785ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTypes"/>
      </instance>
      <interface-functions>
        <function-ref name="strToStatusPacket" scoped="" ref="0x40784630"/>
        <function-ref name="getTypeOfPacket" scoped="" ref="0x40784010"/>
        <function-ref name="statusPacketToStr" scoped="" ref="0x407840f0"/>
        <function-ref name="dataPacketToStr" scoped="" ref="0x407841d0"/>
        <function-ref name="strToCommandPacket" scoped="" ref="0x407842b0"/>
        <function-ref name="commandToBuffer" scoped="" ref="0x40784390"/>
        <function-ref name="strToDataPacket" scoped="" ref="0x40784470"/>
        <function-ref name="commandPacketToStr" scoped="" ref="0x40784550"/>
        <function-ref name="asciihexToNum" scoped="" ref="0x40785eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4079b2c0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="SerialEchoAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4079b2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40436450"/>
            <typename><typedef-ref name="TMilli" ref="0x40436618"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4079adb0"/>
        <function-ref name="fired" scoped="" ref="0x4079a068"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4079a770"/>
        <function-ref name="isOneShot" scoped="" ref="0x4079a518"/>
        <function-ref name="getdt" scoped="" ref="0x407b02a0"/>
        <function-ref name="gett0" scoped="" ref="0x407b0048"/>
        <function-ref name="isRunning" scoped="" ref="0x4079a2c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4079b8e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4079aa90"/>
        <function-ref name="startOneShot" scoped="" ref="0x4079bb68"/>
        <function-ref name="stop" scoped="" ref="0x4079bde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407af0a0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="SerialEchoAppC.Timer3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407af0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40436450"/>
            <typename><typedef-ref name="TMilli" ref="0x40436618"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407aeb88"/>
        <function-ref name="fired" scoped="" ref="0x407afe20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407ae548"/>
        <function-ref name="isOneShot" scoped="" ref="0x407ae2f0"/>
        <function-ref name="getdt" scoped="" ref="0x407ad048"/>
        <function-ref name="gett0" scoped="" ref="0x407aede0"/>
        <function-ref name="isRunning" scoped="" ref="0x407ae098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407af6c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407ae868"/>
        <function-ref name="startOneShot" scoped="" ref="0x407af948"/>
        <function-ref name="stop" scoped="" ref="0x407afbc8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403f9010" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x403f13e0" loc="60:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x40410168" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x40410010" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x4040a7c0" loc="31:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x4040adf8" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4040aca0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x404114e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40411390" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x40411a40" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4042b188" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x4042b030" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x4042ba20" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x4042b6b8" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x4042b8c0" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40425010" loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40420c60" loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40420e50" loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40423410" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x404232b8" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40423c18" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x404238c8" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40423ab8" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x40424850" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x4042caa8" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x4042c558" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4042c748" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x4042c940" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x40424dd8" loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40425e70" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40425920" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40425b10" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40425d08" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x4041e5a0" loc="95:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4041ea68" loc="105:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x40304010" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40304528" loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialInterrupts" loc="3:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
      <function command="" provided="0" name="setSendData" ref="0x404383f0" loc="17:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="txInterruptHandler" ref="0x40438dc0" loc="20:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxInterruptHandler" ref="0x40438998" loc="19:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40438840" loc="19:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxInterrupt" ref="0x4042f5e8" loc="6:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxInterrupt" ref="0x4042f1c8" loc="5:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxInterrupt" ref="0x4042fe38" loc="9:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearTxInterrupt" ref="0x4042d2b8" loc="11:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxInterruptPending" ref="0x4042db40" loc="14:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxInterrupt" ref="0x4042fa10" loc="8:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearRxInterrupt" ref="0x4042d6d0" loc="12:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxInterruptPending" ref="0x40438010" loc="15:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40434480" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40434480"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x404345e8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404345e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40434ad0" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404345e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40433510" loc="76:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40433010" loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40433938" loc="82:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x403e3750" loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x403e3b98" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x403e1038" loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x403e18a8" loc="83:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x403ea5b0" loc="100:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403eaa58" loc="117:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x403e1460" loc="77:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403e91c0" loc="134:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x403e9068" loc="134:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x403e3328" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x403e1d28" loc="89:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x403ea168" loc="94:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403dcd68" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x403b7bc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x4049c300" loc="44:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x4049c6e8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x40494b58" loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x4049ceb8" loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40494f18" loc="43:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x4049cac0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40494418" loc="40:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x404947a8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403d16e0" loc="76:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403dfeb8" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCounter" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x40556298" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
          <interfacedef-ref qname="AtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40556298"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x40562970" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40562818" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x405534d8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40556790" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40556298"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40553890" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x40562d80" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x405530f8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40562418" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40556cd0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40556298"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40556b78" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40556298"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40553c58" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40562038" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCapture" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x4057a998" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
          <interfacedef-ref qname="AtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4057a998"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x40574168" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40574010" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40577b98" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x405777b8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4057ae90" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4057a998"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40575010" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x40574578" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40575b68" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405773f0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4057a998"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40577298" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4057a998"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405753d8" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40575788" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCompare" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x4056f010" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
          <interfacedef-ref qname="AtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4056f010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x4056c690" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x4056c538" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4056d210" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4056fe10" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x4056ce68" loc="78:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4056f508" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4056f010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4056d5c8" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x4056caa0" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4056c138" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4056fa48" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4056f010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4056f8f0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4056f010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4056d990" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4056dd40" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403327e0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402ff138" loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40332c20" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4062c7d0" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4062c7d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40639038" loc="136:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40629e28" loc="83:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x4063a010" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40628c48" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40628e30" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x406287a0" loc="98:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x406399b0" loc="151:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40639480" loc="144:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x406282e0" loc="92:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x4062ce28" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4062ccd0" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x4063a9f8" loc="129:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4063a6b0" loc="129:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4063a898" loc="129:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40629590" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40629438" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40629a60" loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40634c18" loc="43:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40634c18"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x4063fe28" loc="73:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40634c18"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x4063dcf8" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40634c18"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x4063dba0" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40634c18"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x401b8840"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x401b8840"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x4063c608" loc="101:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40634c18"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x4063c4b0" loc="101:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x4063f9f8" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x4063d4e8" loc="81:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40634c18"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x4063f0f8" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x4063f540" loc="58:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Notify" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Notify.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Notify.nc">
        <short>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates.</short>
        <long>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates. For example, a&#10; driver for a motion detector or a switch might provide this&#10; interface. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, both calls must be&#10; guaranteed to succeed. This interface should be used when a single&#10; logical unit supports both getting and setting.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x4064b8a8" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Notify.nc">
          <interfacedef-ref qname="Notify"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4064b8a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="disable" ref="0x40648258" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Notify.nc">
        <documentation loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Notify.nc">
          <short>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x4064bd68" loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Notify.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Notify.nc">
          <short>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="notify" ref="0x40648850" loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Notify.nc">
        <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Notify.nc">
          <short>&#10; Signals the arrival of a new value from the device.</short>
          <long>&#10; Signals the arrival of a new value from the device.&#10;&#10; @param val the value arriving from the device&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4064b8a8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x406486f8" loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Notify.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4064b8a8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SetNow" loc="44:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SetNow.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SetNow.nc">
        <short> &#10; Similar to the &#60;tt>Set&#60;/tt> interface (see TEP 114) this interface can be&#10; used for storing small values, but in contrast to the &#60;tt>Set&#60;/tt> interface&#10; the value is stored asynchronously.</short>
        <long> &#10; Similar to the &#60;tt>Set&#60;/tt> interface (see TEP 114) this interface can be&#10; used for storing small values, but in contrast to the &#60;tt>Set&#60;/tt> interface&#10; the value is stored asynchronously.&#10;&#10; @param data_type the type of the object that will be stored&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_type" ref="0x4064ae30" loc="44:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SetNow.nc">
          <interfacedef-ref qname="SetNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_type" scoped="" ref="0x4064ae30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setNow" ref="0x406594f0" loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SetNow.nc">
        <documentation loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SetNow.nc">
          <short>&#10; Stores a value of type &#60;tt>data_type&#60;/tt>.</short>
          <long>&#10; Stores a value of type &#60;tt>data_type&#60;/tt>.&#10;&#10; @param val the value to be stored&#10; @return SUCCESS if the value was stored,&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SetNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="data_type" scoped="" ref="0x4064ae30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40659398" loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SetNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="data_type" scoped="" ref="0x4064ae30"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTypes" loc="4:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
      <function command="" provided="0" name="commandPacketToStr" ref="0x40643420" loc="11:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
        <interfacedef-ref qname="PacketTypes"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x405f4220"/>
                <typename><typedef-ref name="command_packet_t" ref="0x405f4ee8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dp" ref="0x406430c0" loc="11:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x405f4220"/>
                <typename><typedef-ref name="command_packet_t" ref="0x405f4ee8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x406432c0" loc="11:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTypeOfPacket" ref="0x40642ab8" loc="14:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
        <interfacedef-ref qname="PacketTypes"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40642960" loc="14:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="statusPacketToStr" ref="0x406424d8" loc="13:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
        <interfacedef-ref qname="PacketTypes"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="status_packet" ref="0x4030b7e0"/>
                <typename><typedef-ref name="status_packet_t" ref="0x405f76d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dp" ref="0x40642178" loc="13:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="status_packet" ref="0x4030b7e0"/>
                <typename><typedef-ref name="status_packet_t" ref="0x405f76d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x40642378" loc="13:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dataPacketToStr" ref="0x40643c40" loc="12:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
        <interfacedef-ref qname="PacketTypes"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:14" alignment="I:1"><struct-ref name="data_packet" ref="0x405f62c8"/>
                <typename><typedef-ref name="data_packet_t" ref="0x405f4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dp" ref="0x406438e0" loc="12:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:14" alignment="I:1"><struct-ref name="data_packet" ref="0x405f62c8"/>
                <typename><typedef-ref name="data_packet_t" ref="0x405f4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x40643ae0" loc="12:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="strToCommandPacket" ref="0x40632290" loc="7:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
        <interfacedef-ref qname="PacketTypes"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x405f4220"/>
                <typename><typedef-ref name="command_packet_t" ref="0x405f4ee8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cp" ref="0x40635f00" loc="7:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x405f4220"/>
                <typename><typedef-ref name="command_packet_t" ref="0x405f4ee8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x40632130" loc="7:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="commandToBuffer" ref="0x40644bb0" loc="10:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
        <interfacedef-ref qname="PacketTypes"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x405f4220"/>
                <typename><typedef-ref name="command_packet_t" ref="0x405f4ee8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cp" ref="0x40644850" loc="10:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x405f4220"/>
                <typename><typedef-ref name="command_packet_t" ref="0x405f4ee8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x40644a50" loc="10:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="strToDataPacket" ref="0x40632ab0" loc="8:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
        <interfacedef-ref qname="PacketTypes"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:14" alignment="I:1"><struct-ref name="data_packet" ref="0x405f62c8"/>
                <typename><typedef-ref name="data_packet_t" ref="0x405f4010"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dp" ref="0x40632750" loc="8:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:14" alignment="I:1"><struct-ref name="data_packet" ref="0x405f62c8"/>
                <typename><typedef-ref name="data_packet_t" ref="0x405f4010"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x40632950" loc="8:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="strToStatusPacket" ref="0x40644370" loc="9:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
        <interfacedef-ref qname="PacketTypes"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="status_packet" ref="0x4030b7e0"/>
                <typename><typedef-ref name="status_packet_t" ref="0x405f76d8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sp" ref="0x40644010" loc="9:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="status_packet" ref="0x4030b7e0"/>
                <typename><typedef-ref name="status_packet_t" ref="0x405f76d8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x40644210" loc="9:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="asciihexToNum" ref="0x40635a00" loc="6:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
        <interfacedef-ref qname="PacketTypes"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x406358a8" loc="6:/home/alpsayin/tinyos_workspace/SerialEcho/src/PacketTypes.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4067ae80" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4067ae80"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40689010" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40689010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40687350" loc="109:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40689010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40688010" loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40688cd8" loc="103:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40689010"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40689010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40688988" loc="103:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40689010"/></type-var>
          </variable>
          <variable name="dt" ref="0x40688b78" loc="103:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40689010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40688480" loc="88:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x406877e0" loc="116:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40689010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40689640" loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40689010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x406894e8" loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40689010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40689b20" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
