<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="35:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40407e88"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404b4a08"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x404b4a08"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404bfa38"/></to>
    </wire>
    <wire loc="36:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x4040b390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406a80e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x406a80e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406c84a0"/></to>
    </wire>
    <wire loc="37:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x4040ba90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40f67848"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40f67848"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40f9cd20"/></to>
    </wire>
    <wire loc="38:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x40409158"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40cc6878"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40cc6878"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40cdd1c8"/></to>
    </wire>
    <wire loc="39:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="DisseminationControl" scoped="" ref="0x404096c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40b1c468"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40b1c468"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40b19040"/></to>
    </wire>
    <wire loc="40:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4040a010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40547580"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40547580"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40553a88"/></to>
    </wire>
    <wire loc="41:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4045b8e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40f51f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40f51f28"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40c24028"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="DisseminationPeriod" scoped="" ref="0x404103b8"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x40bb86e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationValue" scoped="" ref="0x40bb86e0"/></from>
      <to><interface-ref name="DisseminationValue" scoped="" ref="0x413e6200"/></to>
    </wire>
    <wire loc="43:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4044f860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40f526a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40f526a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41592210"/></to>
    </wire>
    <wire loc="44:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="ReadSensor" scoped="" ref="0x404552a0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40f42680"/></to>
    </wire>
    <wire loc="45:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40458a58"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x40cbcf00"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40cbcf00"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x40cd61c0"/></to>
    </wire>
    <wire loc="46:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40461d50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40cc3a20"/>
      <arguments>
        <value cst="I:238">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="UARTSend" scoped="" ref="0x40465408"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40f75dd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40f75dd0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41586030"/></to>
    </wire>
    <wire loc="48:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x4046e7f0"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x40cc18d0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x40cc18d0"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x40cdbb98"/></to>
    </wire>
    <wire loc="49:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x40474400"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x40cbdd78"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x40cbdd78"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x40cd84b8"/></to>
    </wire>
    <wire loc="50:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x40460d28"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x40cbca98"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x40cbca98"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x40cd0cf8"/></to>
    </wire>
    <wire loc="51:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4046df28"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x409c4d40"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x409c4d40"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x409c27f0"/></to>
    </wire>
    <wire loc="52:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x4047ea38"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x410c8ef0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x410c8ef0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41603030"/></to>
    </wire>
    <wire loc="53:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x404797d8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x410b95b0"/></to>
    </wire>
    <wire loc="54:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x4047c0a0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406b04d0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x406b04d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406c2668"/></to>
    </wire>
    <wire loc="59:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x410b8460"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404b4a08"/></to>
    </wire>
    <wire loc="60:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="UARTSend" scoped="" ref="0x410b4bb0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41081030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41081030"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41617af8"/></to>
    </wire>
    <wire loc="61:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x410b8928"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x410c26c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x410c26c8"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x415f9790"/></to>
    </wire>
    <wire loc="62:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x410b5010"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x410bfa90"/></to>
    </wire>
    <wire loc="63:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x40ce03c0"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x4107fc98"/></to>
    </wire>
    <wire loc="64:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x40485768"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x4107fc98"/></to>
    </wire>
    <wire loc="66:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40491628"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b0bc0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x406b0bc0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406c2d58"/></to>
    </wire>
    <wire loc="42:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkC.nc">
      <from><interface-ref name="uartEchoTask" scoped="" ref="0x4047cc40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404bd6b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x415f93e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404bd6b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41605c68"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404bd6b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f9c988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404bd6b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x414de2e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404bd6b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x414ee350"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404bd6b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x414f9b70"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404bd6b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f14c38"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404bd6b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d9f3f8"/></to>
    </wire>
    <wire loc="218:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404bd6b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40df0b38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404bd6b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x413d5d50"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404bd6b0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40a796d8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404bd6b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409c69c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404bd6b0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x412f4ed8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404bd6b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4092cd80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404bd6b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41310e60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404bd6b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x412a74b8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x404bfdd0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x402ff378"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x402ff378"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403c83e0"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x406a5400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40a79078"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x406a5400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404bde98"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404bde98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404bccf8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x406a5808"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x404bd6b0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x404b94c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4056a600"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x404b94c8"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x404bc2f8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x404b9108"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404bb3f0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404bb3f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404cb1f8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x404b9890"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x404ba6d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerInit" scoped="" ref="0x404bb7f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4142d140"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerInit" scoped="" ref="0x404bb7f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41220878"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x404bb7f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4061c010"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x404cbdb8"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x404bb7f8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="SerialInit" scoped="" ref="0x404cb608"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x404e7650"/></to>
    </wire>
    <wire loc="14:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Init" scoped="" ref="0x404e7650"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x404e5790"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x404cb9f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404d2eb0"/></to>
    </wire>
    <wire loc="15:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Byte" scoped="" ref="0x404f7340"/></from>
      <to><interface-ref name="Uart1Byte" scoped="" ref="0x404f60e0"/></to>
    </wire>
    <wire loc="16:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Stream" scoped="" ref="0x404ec490"/></from>
      <to><interface-ref name="Uart1Stream" scoped="" ref="0x404f65f0"/></to>
    </wire>
    <wire loc="17:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x404f78a0"/></from>
      <to><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x404f5010"/></to>
    </wire>
    <wire loc="13:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Control" scoped="" ref="0x404e7188"/></from>
      <to><interface-ref name="Uart1Control" scoped="" ref="0x404e5bd0"/></to>
    </wire>
    <wire loc="18:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40545c38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40547580"/></to>
    </wire>
    <wire loc="19:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x404fad98"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40554470"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40554470"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405ebe60"/></to>
    </wire>
    <wire loc="20:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Interrupts" scoped="" ref="0x404fc240"/></from>
      <to><interface-ref name="Uart1Interrupts" scoped="" ref="0x40545010"/></to>
    </wire>
    <wire loc="21:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x404f4ed0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40547580"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403e5218"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40650970"/></to>
    </wire>
    <wire loc="22:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403e5218"/></from>
      <to><interface-ref name="Uart1PowerOverride" scoped="" ref="0x404f5a08"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="sendBlockingDoneTask" scoped="" ref="0x40505d48"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="sendDoneTask" scoped="" ref="0x40504de0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="unexpectedByteReceivedTask" scoped="" ref="0x40501010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="receiveBlockingDoneTask" scoped="" ref="0x405045d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="receiveDoneTask" scoped="" ref="0x40503658"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4056a600"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40553740"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x4055b9a8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x405527a0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x405527a0"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x4057ca98"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x4055f3c0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x4056b220"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x4056b220"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x4057b4b0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x4055fda8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x4056bc28"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x4056bc28"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x4057bea8"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x4057ca98"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405cc4f0"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x4057b4b0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405cce48"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x4057bea8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x405ca7d0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x40572ce8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x405c2250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x405c2250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4111f0b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x405cce48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41162228"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x40585750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405d57d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x405d57d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411aac08"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x40582aa8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405ce3d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x405ce3d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411fa938"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x4058fce8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x405dd330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x405dd330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411f2c08"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x405862f0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x405c44f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x405c44f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411ad7f8"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x40577120"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405b9010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x405b9010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4111b228"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x40580c08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x405c1f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x405c1f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41158010"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x40575010"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405b8c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x405b8c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411160b0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x4057ec08"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405bfba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x405bfba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41153010"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x405792f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405c9ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405c9ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4115d0b0"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x4057c0a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x405bbb80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x405bbb80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41166de0"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x40583670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405d34f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405d34f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411a5a88"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x405908e0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405de030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x405de030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411f57f8"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x40574ea8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405b6988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405b6988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41111010"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x405814b8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x405ced30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x405ced30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411f83b0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x40571750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405c2ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x405c2ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4111da88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x405ca7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41161c08"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x40584210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x405d4170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x405d4170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411a86c0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x40577b18"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x405b9968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x405b9968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4111ac08"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x4057f750"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x405c0890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x405c0890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411579e8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x40575a08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x405b76b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x405b76b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41115a88"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x40579ce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405c84f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x405c84f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4115ca88"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x405820a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405d3e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x405d3e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411a3538"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x405722f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405c3888"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x405c3888"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411216c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x405cc4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411647f8"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x40586ce8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405c4e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x405c4e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411ab228"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x4058f2f0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x405de988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x405de988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411f3228"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x405738e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405b5330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x405b5330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411109e8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x40580210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405c15d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x405c15d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4115a538"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x4057a8e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x405c9170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x405c9170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4115f6c0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x40576590"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405b8330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x405b8330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411186c0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x4057e210"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405bf250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405bf250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41155538"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x40587750"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405c5b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x405c5b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411b3de8"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x40584c08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x405d4ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x405d4ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411a60b0"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x4057d670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405bb228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x405bb228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41167418"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x40581eb0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405cd6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x405cd6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411f7d70"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x405744b0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x405b6030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x405b6030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41113538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405ddc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411f06c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x405dc6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x411ee0b0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x405fd0e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4060de60"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4060de60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4061c448"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x4061b5f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406177f8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406177f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4063bc08"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="BeaconCapture" scoped="" ref="0x40629350"/></from>
      <to><interface-ref name="BeaconCapture" scoped="" ref="0x4063e988"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x4062a218"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x40641840"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40632f08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40636d28"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40632f08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40646100"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40632f08"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40644480"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40650d60"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403dc148"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c8c18"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403d18b8"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x403df470"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x406c84a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406dd8f8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x406b0178"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x406c3520"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x406c3520"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x406d98e0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x406a89b8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x406c8d78"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x406c8d78"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x406da1f8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x406b2a30"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x406c4e90"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x406c4e90"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x406d9268"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x406c2668"/></from>
      <to><interface-ref name="PacketForActiveMessage" scoped="" ref="0x406ec7d0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x406bbb30"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x406d5110"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x406d5110"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x406f5978"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x406b2398"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406c47f8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x406c47f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406dabb8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406b6da0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406cc2e8"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406cc2e8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406fce40"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406bfe00"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406d6af0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406d6af0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406f53f0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x406b94a8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x406d5748"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x406d5748"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x406f1010"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x406c2d58"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406d7a60"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406bc780"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406e1ca0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406e1ca0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406fa840"/></to>
    </wire>
    <wire loc="213:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x406dd8f8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40955e28"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x406cf658"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x406fff08"/></to>
    </wire>
    <wire loc="292:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x406fff08"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40a64980"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x406d98e0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40810108"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x406ec7d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40813a80"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x406da1f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x408121e8"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x406d9268"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40812d08"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x406d02f0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40701ae8"/></to>
    </wire>
    <wire loc="290:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40701ae8"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a65618"/></to>
    </wire>
    <wire loc="214:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x406f5978"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x409673f0"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x406dabb8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40812928"/></to>
    </wire>
    <wire loc="263:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406fce40"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a47ec8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x406e0728"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x406fc2a8"/></to>
    </wire>
    <wire loc="293:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x406fc2a8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a5e4e8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x406d1e58"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x406f1700"/></to>
    </wire>
    <wire loc="291:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x406f1700"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a5f158"/></to>
    </wire>
    <wire loc="245:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406f53f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409daf00"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x406c3c20"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x406d7010"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x406d7010"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x408104e8"/></to>
    </wire>
    <wire loc="222:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x406f1010"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x409aa860"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x406d7a60"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40814e90"/></to>
    </wire>
    <wire loc="264:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406fa840"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409f66f8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x406c2310"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x406d76f0"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x406d76f0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x408108c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40955e28"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x409679f8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40a64980"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40a75de0"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x406ea778"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40869808"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x406f3f18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408338c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x408338c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x412a67f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40810108"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x4124fef0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x408121e8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4124f010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Snoop" scoped="" ref="0x40812d08"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x4124fb30"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x40702098"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x408f5b10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x408f5b10"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x412b0e38"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40702bf8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4086a6d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x409673f0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x412f65b8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a65618"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a76a70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40812928"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4124f750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40813a80"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41250850"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a47ec8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x41379378"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a5e4e8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40af8cf8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a5f158"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a715b8"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x406f6ab8"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x4086ad70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x408104e8"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x4124e2e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioChannel" scoped="" ref="0x409aa860"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x41337a30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40814e90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41251bc8"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x406ea328"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x408694f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409f66f8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4137eb78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x408108c8"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x4124e6c8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40739278"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x408f6110"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x408f6110"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x412b1490"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40721da0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a5e4e8"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40733af8"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a47ec8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RFA1Packet" scoped="" ref="0x40733130"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a66c48"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40a66c48"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a760d0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40764c00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4079aab0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x4079aab0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41220cb0"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4080fc40"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x4071d8a8"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4080f410"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x40824948"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4080f908"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x4087fb78"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40810c40"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x4087feb0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40823370"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408338c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40824e70"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x4087f680"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40869b50"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x408f6110"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40885d68"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40880668"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40884330"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x40880b60"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x408855d0"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40880e98"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4089a6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4090fed8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4090fed8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41310590"/></to>
    </wire>
    <wire loc="172:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4089aba8"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x4093e150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareReceive" scoped="" ref="0x4093e150"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x4095b010"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4089aee0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x408f45b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x408f45b0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x412af890"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x408f4d78"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x4095d940"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x4095d940"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x409598c0"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40930170"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x40714360"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4090e808"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x4094dc38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareSend" scoped="" ref="0x4094dc38"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x4095cab0"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubBareSend" scoped="" ref="0x4095cab0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40954450"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40954450"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40966010"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubBareReceive" scoped="" ref="0x4095b010"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40954948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40954948"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40966508"/></to>
    </wire>
    <wire loc="197:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x409598c0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40954c60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40954c60"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40966840"/></to>
    </wire>
    <wire loc="209:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x409679f8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40961a58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40961a58"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x412f4900"/></to>
    </wire>
    <wire loc="210:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40966010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x409aa050"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x409aa050"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41337220"/></to>
    </wire>
    <wire loc="211:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40966508"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409aa548"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x409aa548"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41337718"/></to>
    </wire>
    <wire loc="212:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40966840"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a445b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40a445b0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x413789f8"/></to>
    </wire>
    <wire loc="219:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x409a95b0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409a6898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x409a6898"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x41318768"/></to>
    </wire>
    <wire loc="220:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409a9a88"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4090e3c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4090e3c0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x41310a68"/></to>
    </wire>
    <wire loc="221:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x409aad68"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40a4d070"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x40a4d070"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40a4be68"/></to>
    </wire>
    <wire loc="226:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4090ed00"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409a6d70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409a6d70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x41318c40"/></to>
    </wire>
    <wire loc="235:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409c3250"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x4070e278"/></to>
    </wire>
    <wire loc="236:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409a5280"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409da630"/></to>
    </wire>
    <wire loc="237:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409a5778"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409dab08"/></to>
    </wire>
    <wire loc="238:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x409a5b70"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40764348"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="243:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x409e2d68"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40a3faf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="244:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x409d9d30"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40764348"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409e2410"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40718be0"/></to>
    </wire>
    <wire loc="247:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409d9440"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409fe3f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x409fe3f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409fb330"/></to>
    </wire>
    <wire loc="248:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409d9938"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409fe8c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409fe8c8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x409fb828"/></to>
    </wire>
    <wire loc="253:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x409fa828"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x40712868"/></to>
    </wire>
    <wire loc="254:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409fb330"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40a4d7e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x40a4d7e8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40a496a0"/></to>
    </wire>
    <wire loc="255:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409fb828"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40a4dcc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40a4dcc0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40a49b98"/></to>
    </wire>
    <wire loc="256:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x409fbc40"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40a667e0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40a667e0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40a78c38"/></to>
    </wire>
    <wire loc="261:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a44e08"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a5e4e8"/></to>
    </wire>
    <wire loc="262:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40a43698"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a3d150"/></to>
    </wire>
    <wire loc="265:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x40a43e30"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40a3faf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="270:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40a3d918"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a66c48"/></to>
    </wire>
    <wire loc="280:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a48bc0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x40712868"/></to>
    </wire>
    <wire loc="281:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40a496a0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40a69d98"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40a69d98"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40a78290"/></to>
    </wire>
    <wire loc="282:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40a49b98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40a66390"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40a66390"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40a787e8"/></to>
    </wire>
    <wire loc="283:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40a4be68"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40a695c0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40a695c0"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40a79a58"/></to>
    </wire>
    <wire loc="288:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a5ee98"/></from>
      <to><interface-ref name="RFA1DriverConfig" scoped="" ref="0x40707878"/></to>
    </wire>
    <wire loc="289:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a5d7d0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a47ec8"/></to>
    </wire>
    <wire loc="295:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a5a010"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40a3faf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="296:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40a5a728"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40a3faf0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="297:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a5ade8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40a3faf0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40764348"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x4122ca08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x4122a2a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40764c00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Tasklet" scoped="" ref="0x41229be0"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x4078ed48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x4121e6b8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406177f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x412656e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40632f08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4124c3f0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40804428"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x4124ea40"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40810c40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x4124d250"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4080f410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x4124d748"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4080f908"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Config" scoped="" ref="0x4124da80"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x4080fc40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40832030"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x412a4010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40832438"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x412a4418"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x412a48d8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x408328e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x412a4d00"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x412a77f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x412a3350"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x412ae070"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40804428"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x412ae648"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x408f4d78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Neighborhood" scoped="" ref="0x4130d150"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x4092c1a8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x4092c1a8"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x409291d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4130d7e8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4130cc28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4130cc28"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40929bf8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x4130f1e0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4090e808"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x4130f6d8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4090ed00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x4130fad0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40930170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x4094d680"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x4095c4d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x4095d548"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x409594a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x4093e468"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x4095b348"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x4095c170"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40958090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4095d150"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40959090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x4093ebe0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4095bb60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x41336010"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x409aad68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Tasklet" scoped="" ref="0x41336788"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x4078ed48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x41336d40"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x409a95b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x41335230"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409a9a88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="sendTask" scoped="" ref="0x41335aa0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x41335ed8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="deliverTask" scoped="" ref="0x41335668"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x413160a0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409a5280"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Config" scoped="" ref="0x4135b458"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409c3250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x41316598"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x409a5778"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x41316990"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x409a5b70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Random" scoped="" ref="0x4135b040"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x409c4d40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x4135ba50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x409c4480"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x409c6ee0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x409c7188"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409c69c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40a01d70"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x409fdc50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x409fecc0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x409fbc40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x409ffbe0"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x409fca80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409fd150"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x409fa090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x409fd8e8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x409fa828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareReceive" scoped="" ref="0x409ff8c8"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x409fc748"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareSend" scoped="" ref="0x409ff3f0"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x409fc250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x41376b48"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40a43698"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x413778e8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a44e08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x413762d0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40a308c0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40a308c0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40a26bf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x41377280"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x40a43e30"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40a2c5c8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40554470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40a4e2b0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40a4b060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40a4c150"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40a48010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40a4c548"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40a48428"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40a4cce0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40a48bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareReceive" scoped="" ref="0x40a4ed40"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40a4bb30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareSend" scoped="" ref="0x40a4e868"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40a4b638"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a62d80"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a72208"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LocalTime62khzC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40af8cf8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40af3260"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a6f8c0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40a5ee98"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a6e0e0"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a5a010"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40a6e7f8"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x40a5a728"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a6eeb8"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a5ade8"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a8f8a0"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a5d7d0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40a8c088"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40af8cf8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x40a6d698"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x4062a218"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40a8c928"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x4078ed48"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LocalTime62khzC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40af3bf8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4060de60"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40b19040"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40b388b0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x40b35100"/></from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x40b3bda8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x40b35bf0"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x40b17210"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x40b34748"/></from>
      <to><interface-ref name="DisseminatorControl" scoped="" ref="0x40b17ce0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40b34b80"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40b56e08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40b56e08"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41396200"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40b33278"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40ba7758"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40ba7758"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406b2398"/>
      <arguments>
        <value cst="I:96">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeAMSend" scoped="" ref="0x40b33660"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40ba11f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40ba11f8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x413aec00"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="ProbeReceive" scoped="" ref="0x40b33de0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bc76c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40bc76c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406b2398"/>
      <arguments>
        <value cst="I:97">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40b32180"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40bc1060"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41396200"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41392d98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40b544d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41396898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41396898"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406b04d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40b54b68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41395010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41395010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b0bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40baa790"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41395c08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41395c08"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406bfe00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4138e500"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40b68db8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4138eb98"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b0bc0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40b68db8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40b8bda0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40bb3598"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x406a89b8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40bb3c40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b0bc0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40bb2850"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406b04d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40bb2f28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40bb1370"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40ba7a70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406b04d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40ba6150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b0bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x413aec00"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x413a4700"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40ba1890"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x413aa310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x413aa310"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406b04d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40ba1f28"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x413aa9a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x413aa9a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b0bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40ba0b30"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x413a95d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x413a95d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406bfe00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x413a4dc8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40b68db8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x413f54d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b0bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40bc79d8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406b04d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40bc6150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b0bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationUpdate" scoped="" ref="0x40bea570"/></from>
      <to><interface-ref name="DisseminationUpdate" scoped="" ref="0x413e5030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminationCache" scoped="" ref="0x40b3bda8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="DisseminationCache" scoped="" ref="0x413e59b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DisseminatorControl" scoped="" ref="0x40b17ce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="StdControl" scoped="" ref="0x413e8cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x40b17210"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x40bec688"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x413e4170"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40547580"/></to>
    </wire>
    <wire>
      <from><interface-ref name="changedTask" scoped="" ref="0x413e4d88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationTimerP.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x40bec688"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x40cc9588"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x40cc9588"/></from>
      <to><interface-ref name="TrickleTimer" scoped="" ref="0x413d4110"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x413d4878"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41417810"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x41417810"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40c24028"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Random" scoped="" ref="0x4141ad48"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x409c4d40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Changed" scoped="" ref="0x4141a410"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x41411098"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pending" scoped="" ref="0x413d2a68"/></from>
      <to><interface-ref name="BitVector" scoped="" ref="0x41413848"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Leds" scoped="" ref="0x41419158"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40547580"/></to>
    </wire>
    <wire>
      <from><interface-ref name="timerTask" scoped="" ref="0x41419d70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40c24028"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40c89cc8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40c62cc8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40c1f010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40c1f010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41436030"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40c8d0c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40c4b968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x41433d00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41439618"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x41439618"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4142d578"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x41435aa8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40554470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x4142b010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406177f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x41428010"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40632f08"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x40c5f658"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40c8a2b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40cd61c0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x40f17d80"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionPacket" scoped="" ref="0x40cdbb98"/></from>
      <to><interface-ref name="CollectionPacket" scoped="" ref="0x40d9d530"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x40cbfd58"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x40cdb100"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Intercept" scoped="" ref="0x40cdb100"/></from>
      <to><interface-ref name="Intercept" scoped="" ref="0x40d9eb48"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40cc1190"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40cdb458"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40cdb458"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40d9ee70"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40cc2100"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40cdc9c8"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40cdc9c8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40d9e788"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40cc3010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40cdd8f8"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40cdd8f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40d9fba0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x40cd84b8"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x40f16310"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40cc3a20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40cdc318"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40cdc318"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d9e3a8"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x40cd0cf8"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x40d9cd30"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x40ce3d40"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x40cd9450"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpPacket" scoped="" ref="0x40cd9450"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x40d9dca8"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40cdd1c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40d9f710"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40cdd1c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40f16ee8"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40cdd1c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40df10d8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x40cd6a60"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x40ce0010"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x40cd6e90"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x40ce03c0"/></to>
    </wire>
    <wire loc="190:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x40cd0178"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x40df0010"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionId" scoped="" ref="0x40d8c5e8"/></from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x40cd6a60"/></to>
    </wire>
    <wire loc="127:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="QEntryPool" scoped="" ref="0x40d93488"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x40dcd010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x40dcd010"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x414ee6f8"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="MessagePool" scoped="" ref="0x40d92a30"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x40db3b18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pool" scoped="" ref="0x40db3b18"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x414f9f18"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x40d968d8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x40dc9408"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SentCache" scoped="" ref="0x40d8f010"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x40deadc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Cache" scoped="" ref="0x40deadc0"/></from>
      <to><interface-ref name="Cache" scoped="" ref="0x414de6b0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x40d97070"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x40df0010"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconSend" scoped="" ref="0x40f13010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40df1560"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconReceive" scoped="" ref="0x40f136c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40df1c40"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkEstimator" scoped="" ref="0x40f139e0"/></from>
      <to><interface-ref name="LinkEstimator" scoped="" ref="0x40df0010"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CompareBit" scoped="" ref="0x40f0bcc0"/></from>
      <to><interface-ref name="CompareBit" scoped="" ref="0x40dec948"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f125b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b0bc0"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x40f11250"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406a80e0"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="BeaconTimer" scoped="" ref="0x40f118b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40dff838"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40dff838"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40c24028"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RouteTimer" scoped="" ref="0x40f0fb48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40dfc670"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40dfc670"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40c24028"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x40f0b230"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x40cd6e90"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CollectionDebug" scoped="" ref="0x40d8a708"/></from>
      <to><interface-ref name="CollectionDebug" scoped="" ref="0x40cd6e90"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpInfo" scoped="" ref="0x40d8d488"/></from>
      <to><interface-ref name="CtpInfo" scoped="" ref="0x40f16310"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="CtpCongestion" scoped="" ref="0x40f0b8c8"/></from>
      <to><interface-ref name="CtpCongestion" scoped="" ref="0x40d9cd30"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RetxmitTimer" scoped="" ref="0x40d9bdc0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40f3a6a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40f3a6a8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40c24028"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40f0cd98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x409c4d40"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40d8a310"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x409c4d40"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40d9b1a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40df6e18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40df6e18"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x415146f0"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40d8fd68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40e71ce8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40e71ce8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406b2398"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubSnoop" scoped="" ref="0x40d8d170"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40e6d758"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40e6d758"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x406b2a30"/>
      <arguments>
        <value cst="I:113">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40d96170"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40e734d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40e734d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41514d88"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x40d8c078"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x40f17d80"/></to>
    </wire>
    <wire loc="181:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x40d97b68"/></from>
      <to><interface-ref name="Routing" scoped="" ref="0x40f177c8"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x40d8adc0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406a80e0"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40d9b838"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40e72790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40e72790"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41512170"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d8ca10"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40e73b68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e73b68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x415134d0"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40d8b690"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40547580"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40deb010"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x409c4d40"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40decce0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40f35a58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40f35a58"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41558680"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40ded978"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f32a48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40f32a48"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x406b2398"/>
      <arguments>
        <value cst="I:112">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40ded210"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40f34150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f34150"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41558d18"/></to>
    </wire>
    <wire loc="197:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="SubAMPacket" scoped="" ref="0x40dee4d8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40f347e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f347e8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x415573f0"/></to>
    </wire>
    <wire loc="213:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40e1bbf0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40f2ebb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="sendTask" scoped="" ref="0x40d89430"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CtpPacket" scoped="" ref="0x414dd4d0"/></from>
      <to><interface-ref name="CtpPacket" scoped="" ref="0x40cd9450"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x415146f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41510db8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41514d88"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406b04d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x415134d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b0bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41512170"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406bfe00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x4150c500"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40b68db8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x4150cb98"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b0bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40e70030"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406b04d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e706c8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b0bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40e6da70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406b04d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e6c150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b0bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="updateRouteTask" scoped="" ref="0x40f0a468"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="sendBeaconTask" scoped="" ref="0x40f0a030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x41558680"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41554d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x41558d18"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406b04d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x415573f0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b0bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40f33410"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x41556010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41556010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406bfe00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x415a1420"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40b68db8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x415a1ab8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b0bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f32d60"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x406b04d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f304d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x406b0bc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40f52d40"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x415928a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x415928a8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40cc1190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41592210"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40cc3010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CollectionId" scoped="" ref="0x40ce0010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CollectionId" scoped="" ref="0x41590a28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="readDone" scoped="" ref="0x40f77230"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x410844d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40f63e70"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40f63e70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40f9e310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41084b68"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40f62588"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f62588"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40f5e6d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41083790"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40f61310"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40f61310"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40f9e9a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x415866f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40f6f6f8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41586d90"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40f62588"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40f6f6f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40f6ce28"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40f6b5d8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40f63158"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40f63158"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40f5fc58"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40f6bc80"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40f62588"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40f6a930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40f63e70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40f69030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40f69468"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40f9cd20"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40fbbde8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40f63b18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f5e3b0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40f9c988"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40fbba50"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40fcc840"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40f61848"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40f9eed0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40f99c20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40f9d5a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40f99618"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40fcc338"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x4108f738"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40f99c20"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4106ea90"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40f99618"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4106e6d0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x4106d238"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40fcc338"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40fb9340"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40fcc840"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4106c230"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40fcc840"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41067898"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40fcc840"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4106d720"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40fb4778"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x4106dbf8"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x40fb65b8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x40fea9f8"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x4106a6b8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x40fb80b8"/></from>
      <to><interface-ref name="UartControl" scoped="" ref="0x41069740"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x41069740"/></from>
      <to><interface-ref name="Uart1Control" scoped="" ref="0x404e7188"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x41067010"/></from>
      <to><interface-ref name="UartStreamBlocking" scoped="" ref="0x41069c98"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="UartStreamBlocking" scoped="" ref="0x41069c98"/></from>
      <to><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x404f78a0"/></to>
    </wire>
    <wire loc="328:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x40ff5b90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x40fd9518"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x40ff6970"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="337:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40ff2880"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="receiveTask" scoped="" ref="0x4106ce48"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="signalSendDone" scoped="" ref="0x4106b2b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x41092628"/></from>
      <to><interface-ref name="Uart1Byte" scoped="" ref="0x404f7340"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x410816c8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40f63e70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41081d60"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40f62588"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x41080a30"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40f61310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x41614260"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40f6f6f8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x416148f8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40f62588"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/net/UARTDebugSenderP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x410afad8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="TestNetworkC" loc="17:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="McuInitC" loc="36:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128Rfa1SerialC" loc="1:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <configuration/>
    </component>
    <component qname="Atm128Rfa1SerialP" loc="10:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <module/>
    </component>
    <component qname="Atm128Rfa1Uart1InterruptsP" loc="5:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1Uart1InterruptsP.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="38:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
        <short>&#10; The implementation of the LED mote abstraction for the RCB128RFA1&#10; Platform.</short>
        <long>&#10; The implementation of the LED mote abstraction for the RCB128RFA1&#10; Platform.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="25:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the Atmega128RFA1's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the Atmega128RFA1's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega128RFA1 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG" loc="40(HplAtm128GeneralIOC.PortG):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit0" loc="41(HplAtm128GeneralIOC.PortG.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit1" loc="41(HplAtm128GeneralIOC.PortG.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit2" loc="41(HplAtm128GeneralIOC.PortG.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit3" loc="41(HplAtm128GeneralIOC.PortG.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit4" loc="41(HplAtm128GeneralIOC.PortG.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit5" loc="41(HplAtm128GeneralIOC.PortG.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit6" loc="41(HplAtm128GeneralIOC.PortG.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit7" loc="41(HplAtm128GeneralIOC.PortG.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.3 2010-08-10 01:28:33 mmaroti Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="T62khz" ref="0x40419eb8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter62khz32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterP):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="T62khz" ref="0x40419eb8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="37:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RFA1ActiveMessageC" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioC" loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioP" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC" loc="37(RFA1RadioC.RadioAlarmC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC.RadioAlarmP" loc="39(RFA1RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.AlarmC" loc="37(RFA1RadioC.AlarmC):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.AlarmC.AtmegaCompareP" loc="35(RFA1RadioC.AlarmC.AtmegaCompareP):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="T62khz" ref="0x40419eb8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.ActiveMessageLayerC" loc="35(RFA1RadioC.ActiveMessageLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-main/src/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.AutoResourceAcquireLayerC" loc="35(RFA1RadioC.AutoResourceAcquireLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC" loc="83(RFA1RadioC.SendResourceC):/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Queue" loc="42(RFA1RadioC.SendResourceC.Queue):/opt/tinyos-main/src/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Arbiter" loc="49(RFA1RadioC.SendResourceC.Arbiter):/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154MessageLayerC" loc="35(RFA1RadioC.Ieee154MessageLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TinyosNetworkLayerC" loc="50(RFA1RadioC.TinyosNetworkLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC" loc="35(RFA1RadioC.Ieee154PacketLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC" loc="35(RFA1RadioC.UniqueLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.UniqueLayerP" loc="38(RFA1RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RFA1RadioC.UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.PacketLinkLayerC" loc="35(RFA1RadioC.PacketLinkLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC" loc="35(RFA1RadioC.LowPowerListeningLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC" loc="35(RFA1RadioC.MessageBufferLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC" loc="35(RFA1RadioC.CollisionAvoidanceLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-main/src/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.SoftwareAckLayerC" loc="38(RFA1RadioC.SoftwareAckLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CsmaLayerC" loc="35(RFA1RadioC.CsmaLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC" loc="37(RFA1RadioC.TimeStampingLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <configuration/>
    </component>
    <component qname="LocalTimeMilliC.CounterToLocalTimeC" loc="46(LocalTimeMilliC.CounterToLocalTimeC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.MetadataFlagsLayerC" loc="38(RFA1RadioC.MetadataFlagsLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TrafficMonitorLayerC" loc="35(RFA1RadioC.TrafficMonitorLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="2">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerP" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <module/>
    </component>
    <component qname="LocalTime62khzC" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LocalTime62khzC.nc">
      <configuration/>
    </component>
    <component qname="LocalTime62khzC.LocalTime62khzC" loc="46(LocalTime62khzC.LocalTime62khzC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="T62khz" ref="0x40419eb8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationC.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationC.nc">
        <short>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol.</short>
        <long>&#10; The DisseminationC component is the top-level interface to the&#10; dissemination protocol. StdControl controls all of the trickle&#10; timers used for all of the keys. &#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
        <short>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.</short>
        <long>&#10; The DisseminationEngineP component retrieves values from the&#10; DisseminatorP components and disseminates them over the radio.&#10;&#10; TODO: Hook DisseminationProbe up to the serial instead of the radio.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DisseminationEngineImplP" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
        <short>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.</short>
        <long>&#10; The DisseminationEngineImplP component implements the dissemination&#10; logic.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC" loc="47(DisseminationEngineP.DisseminationSendC):/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC" loc="47(DisseminationEngineP.DisseminationSendC.SenderC):/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP):/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationReceiveC" loc="43(DisseminationEngineP.DisseminationReceiveC):/opt/tinyos-main/src/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:96">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC" loc="47(DisseminationEngineP.DisseminationProbeSendC):/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC" loc="47(DisseminationEngineP.DisseminationProbeSendC.SenderC):/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP" loc="43(DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP):/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationEngineP.DisseminationProbeReceiveC" loc="43(DisseminationEngineP.DisseminationProbeReceiveC):/opt/tinyos-main/src/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:97">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/NoLedsC.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestNetworkAppC.Object32C" loc="49(TestNetworkAppC.Object32C):/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorC"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.Object32C.DisseminatorP" loc="45(TestNetworkAppC.Object32C.DisseminatorP):/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DisseminatorP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40b1f858"/></type-var>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationTimerP.nc">
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC" loc="51(DisseminationTimerP.TrickleTimerMilliC):/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerMilliC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1024">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP" loc="51(DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP):/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <instance number="0">
        <component-ref qname="TrickleTimerImplP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC" loc="44(DisseminationTimerP.TrickleTimerMilliC.TimerMilliC):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C" loc="37(TimerMilliP.AlarmMilli32C.Alarm62khz32C):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="1">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP" loc="35(TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="T62khz" ref="0x40419eb8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="T62khz" ref="0x40419eb8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.PendingVector):/opt/tinyos-main/src/tinyos-main/tos/system/BitVectorC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector" loc="44(DisseminationTimerP.TrickleTimerMilliC.ChangeVector):/opt/tinyos-main/src/tinyos-main/tos/system/BitVectorC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="BitVectorC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CollectionC" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP" loc="77:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <documentation loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
        <short>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.</short>
        <long>&#10; A data collection service that uses a tree routing protocol&#10; to deliver data to collection roots, following TEP 119.&#10;&#10; @author Rodrigo Fonseca&#10; @author Omprakash Gnawali&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CtpP.Forwarder" loc="107(CtpP.Forwarder):/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <instance number="0">
        <component-ref qname="CtpForwardingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.MessagePoolP" loc="41(CtpP.MessagePoolP):/opt/tinyos-main/src/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
            <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.MessagePoolP.PoolP" loc="53(CtpP.MessagePoolP.PoolP):/opt/tinyos-main/src/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40db4410"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.QEntryPoolP" loc="41(CtpP.QEntryPoolP):/opt/tinyos-main/src/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40cf8ec0"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40cf7188"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.QEntryPoolP.PoolP" loc="53(CtpP.QEntryPoolP.PoolP):/opt/tinyos-main/src/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40db4410"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SendQueueP" loc="42(CtpP.SendQueueP):/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40cf8ec0"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40cf7188"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:13">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.SentCacheP" loc="38(CtpP.SentCacheP):/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheC"/>
        <arguments>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SentCacheP.CacheP" loc="43(CtpP.SentCacheP.CacheP):/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LruCtpMsgCacheP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RoutingBeaconTimer" loc="44(CtpP.RoutingBeaconTimer):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.RouteUpdateTimer" loc="44(CtpP.RouteUpdateTimer):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkEstimatorP" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <module/>
    </component>
    <component qname="CtpP.AMSenderC" loc="47(CtpP.AMSenderC):/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC" loc="47(CtpP.AMSenderC.SenderC):/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSenderC.SenderC.AMQueueEntryP" loc="43(CtpP.AMSenderC.SenderC.AMQueueEntryP):/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.AMReceiverC" loc="43(CtpP.AMReceiverC):/opt/tinyos-main/src/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.AMSnooperC" loc="44(CtpP.AMSnooperC):/opt/tinyos-main/src/tinyos-main/tos/system/AMSnooperC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSnooperC"/>
        <arguments>
          <value cst="I:113">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.Router" loc="107(CtpP.Router):/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <documentation loc="38:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CtpRoutingEngineP"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:128">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:512000">
            <type-int cname="long" size="I:4" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.RetxmitTimer" loc="44(CtpP.RetxmitTimer):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl" loc="47(CtpP.SendControl):/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC" loc="47(CtpP.SendControl.SenderC):/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CtpP.SendControl.SenderC.AMQueueEntryP" loc="43(CtpP.SendControl.SenderC.AMQueueEntryP):/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CtpP.ReceiveControl" loc="43(CtpP.ReceiveControl):/opt/tinyos-main/src/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:112">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="DummyActiveMessageP" loc="1:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/DummyActiveMessageP.nc">
      <module/>
    </component>
    <component qname="TestNetworkAppC.CollectionSenderC" loc="43(TestNetworkAppC.CollectionSenderC):/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionSenderC"/>
        <arguments>
          <value cst="I:238">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.CollectionSenderC.CollectionSenderP" loc="34(TestNetworkAppC.CollectionSenderC.CollectionSenderP):/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <instance number="0">
        <component-ref qname="CollectionSenderP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x403f07f8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.CollectionSenderC.CollectionSenderP.CollectionIdP" loc="45(TestNetworkAppC.CollectionSenderC.CollectionSenderP.CollectionIdP):/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionIdP.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CollectionIdP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x403f07f8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestNetworkAppC.TimerMilliC" loc="44(TestNetworkAppC.TimerMilliC):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.DemoSensorC" loc="38(TestNetworkAppC.DemoSensorC):/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/DemoSensorC.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/DemoSensorC.nc">
        <short> &#10; Dummy sensor component&#10; </short>
        <long> &#10; Dummy sensor component&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch>&#10; &#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DemoSensorC"/>
      </instance>
      <module/>
    </component>
    <component qname="TestNetworkAppC.SerialAMSenderC" loc="47(TestNetworkAppC.SerialAMSenderC):/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:238">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.SerialAMSenderC.AMQueueEntryP" loc="43(TestNetworkAppC.SerialAMSenderC.AMQueueEntryP):/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="37:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TestNetworkAppC.UARTSender" loc="47(TestNetworkAppC.UARTSender):/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:22">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.UARTSender.AMQueueEntryP" loc="43(TestNetworkAppC.UARTSender.AMQueueEntryP):/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UARTDebugSenderP" loc="2:/opt/tinyos-main/src/tinyos-main/tos/lib/net/UARTDebugSenderP.nc">
      <module/>
    </component>
    <component qname="TestNetworkAppC.QueueC" loc="42(TestNetworkAppC.QueueC):/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
              <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestNetworkAppC.PoolC" loc="41(TestNetworkAppC.PoolC):/opt/tinyos-main/src/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
            <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.PoolC.PoolP" loc="53(TestNetworkAppC.PoolC.PoolP):/opt/tinyos-main/src/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40db4410"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestNetworkAppC.DebugMessagePool" loc="41(TestNetworkAppC.DebugMessagePool):/opt/tinyos-main/src/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
            <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
          </type-tag>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="TestNetworkAppC.DebugMessagePool.PoolP" loc="53(TestNetworkAppC.DebugMessagePool.PoolP):/opt/tinyos-main/src/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40db4410"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TestNetworkAppC.DebugSendQueue" loc="42(TestNetworkAppC.DebugSendQueue):/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
              <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4058db18" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4058dd30" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4058a010" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40595f20" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40591160" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40591388" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40591578" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x405fa488" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x405fa488"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x405fa8e8" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x405fa8e8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x405fab50" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x405fab50"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x405f9010" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x405f9010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x405f9278" loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x405f9700" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x405f9700"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x406097f8" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406097f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40609c28" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40609c28"/></type-var>
        </typedef>
        <constant name="mode" ref="0x40609e18" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCompareP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x40796400" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40796400"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40796830" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40796830"/></type-var>
        </typedef>
        <constant name="mode" ref="0x40796a20" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x40796c28" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40834720" loc="83:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x4082f670" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="DummyLayerC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a2dba8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a2dba8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40b36430" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40b76010" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40b74af0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40b8a340" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/opt/tinyos-main/src/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40ba5010" loc="43:/opt/tinyos-main/src/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorC" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminatorC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
        <short>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.</short>
        <long>&#10; The DisseminatorC component holds and synchronizes a single value&#10; of a chosen type, and identifies that value by a chosen 16-bit key.&#10; Different nodes should use the same key for the same value.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10; @param key the 16-bit identifier of the disseminated object&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-09-14 00:22:18 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40b1f858" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40b1f858"/></type-var>
        </typedef>
        <constant name="key" ref="0x40b1fa48" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
          <component-ref qname="DisseminatorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DisseminatorP" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminatorP.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
        <short>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.</short>
        <long>&#10; The DisseminatorP module holds and synchronizes a single value of a&#10; chosen type.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @param t the type of the object that will be disseminated&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008-02-16 01:31:50 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40bb54d8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
          <component-ref qname="DisseminatorP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40bb54d8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TrickleTimerMilliC" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x40be9868" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x40be9a78" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x40be9c58" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x40be9e60" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
          <component-ref qname="TrickleTimerMilliC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="TrickleTimerImplP" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimerImplP.nc" abstract="">
      <parameters>
        <constant name="low" ref="0x40be5370" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </constant>
        <constant name="high" ref="0x40be5580" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </constant>
        <constant name="k" ref="0x40be5760" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="count" ref="0x40be5968" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="scale" ref="0x40be5b70" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
          <component-ref qname="TrickleTimerImplP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40c447d8" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40c447d8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40c44c38" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40c44c38"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40c44ea0" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40c44ea0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40c41370" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40c41370"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40c415d8" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40c4e450" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40c4e450"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40c5eef8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40c5eef8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40c870f0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BitVectorC" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/BitVectorC.nc" abstract="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/system/BitVectorC.nc">
        <short>&#10; Generic bit vector implementation.</short>
        <long>&#10; Generic bit vector implementation. Note that if you use this bit vector&#10; from interrupt code, you must use appropriate &#60;code>atomic&#60;/code>&#10; statements to ensure atomicity.&#10;&#10; @param max_bits Bit vector length.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <constant name="max_bits" ref="0x40cb00e0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/BitVectorC.nc">
          <component-ref qname="BitVectorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CtpForwardingEngineP" loc="107:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/tinyos-main/src/tinyos-main/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40db4410" loc="41:/opt/tinyos-main/src/tinyos-main/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40db4410"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x40db4630" loc="41:/opt/tinyos-main/src/tinyos-main/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/tinyos-main/src/tinyos-main/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x40daf978" loc="53:/opt/tinyos-main/src/tinyos-main/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x40daf978"/></type-var>
        </typedef>
        <constant name="size" ref="0x40dafb68" loc="53:/opt/tinyos-main/src/tinyos-main/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x40dca450" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x40dca450"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x40dca678" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LruCtpMsgCacheC" loc="38:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
        <short>&#10; An LRU cache CTP packet instances, where insertion represents use.</short>
        <long>&#10; An LRU cache CTP packet instances, where insertion represents use.&#10;&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="CACHE_SIZE" ref="0x40db9be8" loc="38:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
          <component-ref qname="LruCtpMsgCacheC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LruCtpMsgCacheP" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
        <short>&#10; An LRU cache that stores the signature of a CTP packet instance.</short>
        <long>&#10; An LRU cache that stores the signature of a CTP packet instance.&#10; An insert operation indicates &#34;use&#34;.  Inserting an element not in&#10; the cache will replace the oldest, and inserting an element already&#10; in the cache will refresh its age.&#10;&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x40de7718" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
          <component-ref qname="LruCtpMsgCacheP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSnooperC" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/AMSnooperC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/AMSnooperC.nc">
        <short>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node.</short>
        <long>&#10; The virtualization of snooping on overheard packets that are not&#10; destined to this node. &#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40e6b010" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/AMSnooperC.nc">
          <component-ref qname="AMSnooperC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CtpRoutingEngineP" loc="107:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc" abstract="">
      <documentation loc="38:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
        <short> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.</short>
        <long> &#10;  The TreeRoutingEngine is responsible for computing the routes for&#10;  collection.  It builds a set of trees rooted at specific nodes (roots) and&#10;  maintains these trees using information provided by the link estimator on&#10;  the quality of one hop links.&#10; &#10;  &#60;p>Each node is part of only one tree at any given time, but there is no&#10;  difference from the node's point of view of which tree it is part. In other&#10;  words, a message is sent towards &#60;i>a&#60;/i> root, but which one is not&#10;  specified. It is assumed that the roots will work together to have all data&#10;  aggregated later if need be.  The tree routing engine's responsibility is&#10;  for each node to find the path with the least number of transmissions to&#10;  any one root.&#10;&#10;  &#60;p>The tree is proactively maintained by periodic beacons sent by each&#10;  node. These beacons are jittered in time to prevent synchronizations in the&#10;  network. All nodes maintain the same &#60;i>average&#60;/i> beacon sending rate&#10;  (defined by BEACON_INTERVAL +- 50%). The beacon contains the node's parent,&#10;  the current hopcount, and the cumulative path quality metric. The metric is&#10;  defined as the parent's metric plus the bidirectional quality of the link&#10;  between the current node and its parent.  The metric represents the&#10;  expected number of transmissions along the path to the root, and is 0 by&#10;  definition at the root.&#10; &#10;  &#60;p>Every time a node receives an update from a neighbor it records the&#10;  information if the node is part of the neighbor table. The neighbor table&#10;  keeps the best candidates for being parents i.e., the nodes with the best&#10;  path metric. The neighbor table does not store the full path metric,&#10;  though. It stores the parent's path metric, and the link quality to the&#10;  parent is only added when the information is needed: (i) when choosing a&#10;  parent and (ii) when choosing a route. The nodes in the neighbor table are&#10;  a subset of the nodes in the link estimator table, as a node is not&#10;  admitted in the neighbor table with an estimate of infinity.&#10; &#10;  &#60;p>There are two uses for the neighbor table, as mentioned above. The first&#10;  one is to select a parent. The parent is just the neighbor with the best&#10;  path metric. It serves to define the node's own path metric and hopcount,&#10;  and the set of child-parent links is what defines the tree. In a sense the&#10;  tree is defined to form a coherent propagation substrate for the path&#10;  metrics. The parent is (re)-selected periodically, immediately before a&#10;  node sends its own beacon, in the updateRouteTask.&#10;  &#10;  &#60;p>The second use is to actually choose a next hop towards any root at&#10;  message forwarding time.  This need not be the current parent, even though&#10;  it is currently implemented as such.&#10;&#10;  &#60;p>The operation of the routing engine has two main tasks and one main&#10;  event: updateRouteTask is called periodically and chooses a new parent;&#10;  sendBeaconTask broadcasts the current route information to the neighbors.&#10;  The main event is the receiving of a neighbor's beacon, which updates the&#10;  neighbor table.&#10;  &#10;  &#60;p> The interface with the ForwardingEngine occurs through the nextHop()&#10;  call.&#10; &#10;  &#60;p> Any node can become a root, and routed messages from a subset of the&#10;  network will be routed towards it. The RootControl interface allows&#10;  setting, unsetting, and querying the root state of a node. By convention,&#10;  when a node is root its hopcount and metric are 0, and the parent is&#10;  itself. A root always has a valid route, to itself.&#10;&#10;  @author Rodrigo Fonseca&#10;  @author Philip Levis (added trickle-like updates)&#10;  Acknowledgment: based on MintRoute, MultiHopLQI, BVR tree construction, Berkeley's MTree&#10;                           &#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;  @see Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="routingTableSize" ref="0x40e95030" loc="107:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="minInterval" ref="0x40e95270" loc="107:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </constant>
        <constant name="maxInterval" ref="0x40e954b0" loc="107:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
          <component-ref qname="CtpRoutingEngineP"/>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CollectionSenderC" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
        <short>&#10; The virtualized collection sender abstraction.</short>
        <long>&#10; The virtualized collection sender abstraction.&#10;&#10; @author Kyle Jamieson&#10; @author Philip Levis&#10; @date April 25 2006&#10; @see TinyOS Net2-WG&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x40f53be0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
          <component-ref qname="CollectionSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x403f07f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionSenderP" loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc" abstract="">
      <parameters>
        <constant name="collectid" ref="0x40f4f6f0" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x403f07f8"/></typename>
          </type-int>
        </constant>
        <constant name="clientid" ref="0x40f4f908" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
          <component-ref qname="CollectionSenderP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CollectionIdP" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionIdP.nc" abstract="">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionIdP.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="collectid" ref="0x40f49368" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionIdP.nc">
          <component-ref qname="CollectionIdP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x403f07f8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DemoSensorC" loc="38:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/DemoSensorC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/DemoSensorC.nc">
        <short> &#10; Dummy sensor component&#10; </short>
        <long> &#10; Dummy sensor component&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch>&#10; &#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40f74010" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="RootControl" ref="0x40458a58" loc="28:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40458a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40458c30"/>
        <function-ref name="setRoot" scoped="" ref="0x40458d10"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40458df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionPacket" ref="0x4046e7f0" loc="31:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x4046e7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x4046e9c8"/>
        <function-ref name="setOrigin" scoped="" ref="0x4046eaa8"/>
        <function-ref name="setType" scoped="" ref="0x4046eb88"/>
        <function-ref name="getOrigin" scoped="" ref="0x4046ec68"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x4046ed48"/>
        <function-ref name="getType" scoped="" ref="0x4046ee28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x40485768" loc="37:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x40485768"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x40485940"/>
        <function-ref name="logEventMsg" scoped="" ref="0x40485a20"/>
        <function-ref name="logEventSimple" scoped="" ref="0x40485b00"/>
        <function-ref name="logEventRoute" scoped="" ref="0x40485be0"/>
        <function-ref name="logEventDbg" scoped="" ref="0x40485cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40407e88" loc="18:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40407e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40405070"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x4040ba90" loc="20:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x4040ba90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4040bc68"/>
        <function-ref name="stopDone" scoped="" ref="0x4040bd48"/>
        <function-ref name="start" scoped="" ref="0x4040be28"/>
        <function-ref name="stop" scoped="" ref="0x4040bf08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTSend" ref="0x40465408" loc="30:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTSend" scoped="" ref="0x40465408"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40465660"/>
        <function-ref name="getPayload" scoped="" ref="0x40465740"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40465820"/>
        <function-ref name="cancel" scoped="" ref="0x40465900"/>
        <function-ref name="sendDone" scoped="" ref="0x404659e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x404797d8" loc="35:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x404797d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
              <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40471518"/>
        <function-ref name="enqueue" scoped="" ref="0x40471bf8"/>
        <function-ref name="element" scoped="" ref="0x40470010"/>
        <function-ref name="maxSize" scoped="" ref="0x404712c0"/>
        <function-ref name="dequeue" scoped="" ref="0x40471888"/>
        <function-ref name="empty" scoped="" ref="0x40479e00"/>
        <function-ref name="size" scoped="" ref="0x40471068"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pool" ref="0x4047ea38" loc="36:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x4047ea38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
            <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40477b20"/>
        <function-ref name="maxSize" scoped="" ref="0x40477538"/>
        <function-ref name="empty" scoped="" ref="0x40477088"/>
        <function-ref name="put" scoped="" ref="0x40477790"/>
        <function-ref name="size" scoped="" ref="0x404772e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x4040b390" loc="19:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x4040b390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4040b568"/>
        <function-ref name="stopDone" scoped="" ref="0x4040b648"/>
        <function-ref name="start" scoped="" ref="0x4040b728"/>
        <function-ref name="stop" scoped="" ref="0x4040b808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationControl" ref="0x404096c8" loc="22:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationControl" scoped="" ref="0x404096c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x404098a0"/>
        <function-ref name="stop" scoped="" ref="0x40409980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4044f860" loc="24:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4044f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4044fa38"/>
        <function-ref name="getPayload" scoped="" ref="0x4044fb18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4044fbf8"/>
        <function-ref name="cancel" scoped="" ref="0x4044fcd8"/>
        <function-ref name="sendDone" scoped="" ref="0x4044fdb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x40474400" loc="32:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x40474400"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x404745d8"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x404746b8"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40474798"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40474878"/>
        <function-ref name="getEtx" scoped="" ref="0x40474958"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40474a38"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40474b18"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40474bf8"/>
        <function-ref name="getParent" scoped="" ref="0x40474cd8"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40474db8"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x40474e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationPeriod" ref="0x404103b8" loc="23:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationPeriod" scoped="" ref="0x404103b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x40410f18"/>
        <function-ref name="get" scoped="" ref="0x40410a00"/>
        <function-ref name="set" scoped="" ref="0x40410c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadSensor" ref="0x404552a0" loc="26:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadSensor" scoped="" ref="0x404552a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x404558c8"/>
        <function-ref name="readDone" scoped="" ref="0x40455b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x4046df28" loc="34:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4046df28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40473110"/>
        <function-ref name="rand32" scoped="" ref="0x404731f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x40409158" loc="21:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x40409158"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40409330"/>
        <function-ref name="stop" scoped="" ref="0x40409410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x40461d50" loc="29:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40461d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40461f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x40460d28" loc="33:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40460d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x40460f00"/>
        <function-ref name="setClientCongested" scoped="" ref="0x4046d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x4047c0a0" loc="39:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4047c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4047c278"/>
        <function-ref name="payloadLength" scoped="" ref="0x4047c358"/>
        <function-ref name="getPayload" scoped="" ref="0x4047c438"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4047c518"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4047c5f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4040a010" loc="25:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4040a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4040a1e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4040a2c8"/>
        <function-ref name="led1On" scoped="" ref="0x4040a3a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4040a488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4040a568"/>
        <function-ref name="get" scoped="" ref="0x4040a648"/>
        <function-ref name="led1Off" scoped="" ref="0x4040a728"/>
        <function-ref name="led2Off" scoped="" ref="0x4040aaa8"/>
        <function-ref name="set" scoped="" ref="0x4040a808"/>
        <function-ref name="led0On" scoped="" ref="0x4040a8e8"/>
        <function-ref name="led2On" scoped="" ref="0x4040a9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40491628" loc="38:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40491628"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40491800"/>
        <function-ref name="source" scoped="" ref="0x404918e0"/>
        <function-ref name="address" scoped="" ref="0x404919c0"/>
        <function-ref name="destination" scoped="" ref="0x40491aa0"/>
        <function-ref name="setSource" scoped="" ref="0x40491b80"/>
        <function-ref name="setDestination" scoped="" ref="0x40491c60"/>
        <function-ref name="type" scoped="" ref="0x40491d40"/>
        <function-ref name="setType" scoped="" ref="0x40491e20"/>
        <function-ref name="isForMe" scoped="" ref="0x40491f00"/>
        <function-ref name="setGroup" scoped="" ref="0x4047d010"/>
        <function-ref name="localGroup" scoped="" ref="0x4047d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4045b8e0" loc="27:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4045b8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4044c3d8"/>
        <function-ref name="fired" scoped="" ref="0x4040f678"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4040fd80"/>
        <function-ref name="isOneShot" scoped="" ref="0x4040fb28"/>
        <function-ref name="getdt" scoped="" ref="0x4044c888"/>
        <function-ref name="gett0" scoped="" ref="0x4044c630"/>
        <function-ref name="isRunning" scoped="" ref="0x4040f8d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4045bf08"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4044c0b8"/>
        <function-ref name="startOneShot" scoped="" ref="0x4040f1a0"/>
        <function-ref name="stop" scoped="" ref="0x4040f420"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartEchoTask" ref="0x4047cc40" loc="42:/home/alpsayin/tinyos_workspace/TestNetwork/src/TestNetworkC.nc">
      <component-ref qname="TestNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartEchoTask" scoped="" ref="0x4047cc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4047ce18"/>
        <function-ref name="runTask" scoped="" ref="0x4047cef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x404bd6b0" loc="58:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404bd6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404bd888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x404b4a08" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404b4a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404b4be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404bde98" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404bde98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404bc0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x404bc2f8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x404bc2f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404bc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x404b9890" loc="45:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x404b9890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b9a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404bccf8" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404bccf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404bced0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x404b94c8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x404b94c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b96a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x404b9108" loc="43:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x404b9108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b92e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404bb3f0" loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404bb3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404bb5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x404bb7f8" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x404bb7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404bb9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404cb1f8" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404cb1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404cb3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialInit" ref="0x404cb608" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialInit" scoped="" ref="0x404cb608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404cb7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x404cb9f0" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x404cb9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404cbbc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x404cbdb8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x404cbdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ca010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404d2eb0" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404d2eb0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404d10c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404d9740" loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404d9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404d9918"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404d99f8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404d9ad8"/>
        <function-ref name="actualMicro" scoped="" ref="0x404d9bb8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404d9c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Byte" ref="0x404f7340" loc="6:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Byte" scoped="" ref="0x404f7340"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404f7518"/>
        <function-ref name="receive" scoped="" ref="0x404f75f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Stream" ref="0x404ec490" loc="5:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Stream" scoped="" ref="0x404ec490"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404ec668"/>
        <function-ref name="receivedByte" scoped="" ref="0x404ec748"/>
        <function-ref name="receive" scoped="" ref="0x404ec828"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x404ec908"/>
        <function-ref name="receiveDone" scoped="" ref="0x404ec9e8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x404ecac8"/>
        <function-ref name="sendDone" scoped="" ref="0x404ecba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x404e7650" loc="4:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x404e7650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404e7828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1StreamBlocking" ref="0x404f78a0" loc="7:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x404f78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404f7a78"/>
        <function-ref name="receivedByte" scoped="" ref="0x404f7b58"/>
        <function-ref name="receive" scoped="" ref="0x404f7c38"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x404f7d18"/>
        <function-ref name="receiveDone" scoped="" ref="0x404f7df8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x404f7ed8"/>
        <function-ref name="sendDone" scoped="" ref="0x404e5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Control" ref="0x404e7188" loc="3:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Control" scoped="" ref="0x404e7188"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x404e7360"/>
        <function-ref name="stop" scoped="" ref="0x404e7440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Byte" ref="0x404f60e0" loc="14:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Byte" scoped="" ref="0x404f60e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404f62b8"/>
        <function-ref name="receive" scoped="" ref="0x404f6398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBlockingDoneTask" ref="0x40505d48" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBlockingDoneTask" scoped="" ref="0x40505d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40505f20"/>
        <function-ref name="runTask" scoped="" ref="0x40504018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDoneTask" ref="0x40504de0" loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDoneTask" scoped="" ref="0x40504de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40503010"/>
        <function-ref name="runTask" scoped="" ref="0x405030f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Stream" ref="0x404f65f0" loc="15:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Stream" scoped="" ref="0x404f65f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404f67c8"/>
        <function-ref name="receivedByte" scoped="" ref="0x404f68a8"/>
        <function-ref name="receive" scoped="" ref="0x404f6988"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x404f6a68"/>
        <function-ref name="receiveDone" scoped="" ref="0x404f6b48"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x404f6c28"/>
        <function-ref name="sendDone" scoped="" ref="0x404f6d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="unexpectedByteReceivedTask" ref="0x40501010" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="unexpectedByteReceivedTask" scoped="" ref="0x40501010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405011e8"/>
        <function-ref name="runTask" scoped="" ref="0x405012c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1StreamBlocking" ref="0x404f5010" loc="16:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x404f5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404f51e8"/>
        <function-ref name="receivedByte" scoped="" ref="0x404f52c8"/>
        <function-ref name="receive" scoped="" ref="0x404f53a8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x404f5488"/>
        <function-ref name="receiveDone" scoped="" ref="0x404f5568"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x404f5648"/>
        <function-ref name="sendDone" scoped="" ref="0x404f5728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x404e5790" loc="12:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x404e5790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404e5968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Uart1Interrupts" ref="0x404fc240" loc="19:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Interrupts" scoped="" ref="0x404fc240"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxInterruptPending" scoped="" ref="0x404fccd8"/>
        <function-ref name="txInterruptHandler" scoped="" ref="0x404fc4f8"/>
        <function-ref name="rxInterruptHandler" scoped="" ref="0x404fc5d8"/>
        <function-ref name="enableRxInterrupt" scoped="" ref="0x404fc6b8"/>
        <function-ref name="enableTxInterrupt" scoped="" ref="0x404fc798"/>
        <function-ref name="disableRxInterrupt" scoped="" ref="0x404fc878"/>
        <function-ref name="clearTxInterrupt" scoped="" ref="0x404fc958"/>
        <function-ref name="isRxInterruptPending" scoped="" ref="0x404fca38"/>
        <function-ref name="disableTxInterrupt" scoped="" ref="0x404fcb18"/>
        <function-ref name="setSendData" scoped="" ref="0x404fc418"/>
        <function-ref name="clearRxInterrupt" scoped="" ref="0x404fcbf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x404fad98" loc="20:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x404fad98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x404f4508"/>
        <function-ref name="clearOverflow" scoped="" ref="0x404f49f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x404f4780"/>
        <function-ref name="overflow" scoped="" ref="0x404f4c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x404f4ed0" loc="21:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404f4ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404f90c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404f91a0"/>
        <function-ref name="led1On" scoped="" ref="0x404f9280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404f9360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404f9440"/>
        <function-ref name="get" scoped="" ref="0x404f9520"/>
        <function-ref name="led1Off" scoped="" ref="0x404f9600"/>
        <function-ref name="led2Off" scoped="" ref="0x404f9980"/>
        <function-ref name="set" scoped="" ref="0x404f96e0"/>
        <function-ref name="led0On" scoped="" ref="0x404f97c0"/>
        <function-ref name="led2On" scoped="" ref="0x404f98a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Control" ref="0x404e5bd0" loc="13:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Control" scoped="" ref="0x404e5bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x404e5da8"/>
        <function-ref name="stop" scoped="" ref="0x404e5e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1PowerOverride" ref="0x404f5a08" loc="17:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1PowerOverride" scoped="" ref="0x404f5a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x404f5be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveBlockingDoneTask" ref="0x405045d8" loc="36:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveBlockingDoneTask" scoped="" ref="0x405045d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405047b0"/>
        <function-ref name="runTask" scoped="" ref="0x40504890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDoneTask" ref="0x40503658" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDoneTask" scoped="" ref="0x40503658"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405038b0"/>
        <function-ref name="runTask" scoped="" ref="0x40503990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Interrupts" ref="0x40545010" loc="7:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1Uart1InterruptsP.nc">
      <component-ref qname="Atm128Rfa1Uart1InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Interrupts" scoped="" ref="0x40545010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxInterruptPending" scoped="" ref="0x40545aa8"/>
        <function-ref name="txInterruptHandler" scoped="" ref="0x405452c8"/>
        <function-ref name="rxInterruptHandler" scoped="" ref="0x405453a8"/>
        <function-ref name="enableRxInterrupt" scoped="" ref="0x40545488"/>
        <function-ref name="enableTxInterrupt" scoped="" ref="0x40545568"/>
        <function-ref name="disableRxInterrupt" scoped="" ref="0x40545648"/>
        <function-ref name="clearTxInterrupt" scoped="" ref="0x40545728"/>
        <function-ref name="isRxInterruptPending" scoped="" ref="0x40545808"/>
        <function-ref name="disableTxInterrupt" scoped="" ref="0x405458e8"/>
        <function-ref name="setSendData" scoped="" ref="0x405451e8"/>
        <function-ref name="clearRxInterrupt" scoped="" ref="0x405459c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40545c38" loc="8:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1Uart1InterruptsP.nc">
      <component-ref qname="Atm128Rfa1Uart1InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40545c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40545e10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40545ef0"/>
        <function-ref name="led1On" scoped="" ref="0x40544010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405440f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405441d0"/>
        <function-ref name="get" scoped="" ref="0x405442b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40544390"/>
        <function-ref name="led2Off" scoped="" ref="0x40544710"/>
        <function-ref name="set" scoped="" ref="0x40544470"/>
        <function-ref name="led0On" scoped="" ref="0x40544550"/>
        <function-ref name="led2On" scoped="" ref="0x40544630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40547580" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40547580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40547758"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40547838"/>
        <function-ref name="led1On" scoped="" ref="0x40547918"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405479f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40547ad8"/>
        <function-ref name="get" scoped="" ref="0x40547bb8"/>
        <function-ref name="led1Off" scoped="" ref="0x40547c98"/>
        <function-ref name="led2Off" scoped="" ref="0x405530f0"/>
        <function-ref name="set" scoped="" ref="0x40547d78"/>
        <function-ref name="led0On" scoped="" ref="0x40547e58"/>
        <function-ref name="led2On" scoped="" ref="0x40553010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x4055b9a8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x4055b9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4055bb80"/>
        <function-ref name="isInput" scoped="" ref="0x4055bc60"/>
        <function-ref name="toggle" scoped="" ref="0x4055bd40"/>
        <function-ref name="isOutput" scoped="" ref="0x4055be20"/>
        <function-ref name="get" scoped="" ref="0x4055bf00"/>
        <function-ref name="makeOutput" scoped="" ref="0x4055f010"/>
        <function-ref name="set" scoped="" ref="0x4055f0f0"/>
        <function-ref name="clr" scoped="" ref="0x4055f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40553740" loc="40:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40553740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40553918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x4055f3c0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x4055f3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4055f598"/>
        <function-ref name="isInput" scoped="" ref="0x4055f678"/>
        <function-ref name="toggle" scoped="" ref="0x4055f758"/>
        <function-ref name="isOutput" scoped="" ref="0x4055f838"/>
        <function-ref name="get" scoped="" ref="0x4055f918"/>
        <function-ref name="makeOutput" scoped="" ref="0x4055f9f8"/>
        <function-ref name="set" scoped="" ref="0x4055fad8"/>
        <function-ref name="clr" scoped="" ref="0x4055fbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40553a88" loc="41:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40553a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40553c60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40553d40"/>
        <function-ref name="led1On" scoped="" ref="0x40553e20"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40553f00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40560010"/>
        <function-ref name="get" scoped="" ref="0x405600f0"/>
        <function-ref name="led1Off" scoped="" ref="0x405601d0"/>
        <function-ref name="led2Off" scoped="" ref="0x40560550"/>
        <function-ref name="set" scoped="" ref="0x405602b0"/>
        <function-ref name="led0On" scoped="" ref="0x40560390"/>
        <function-ref name="led2On" scoped="" ref="0x40560470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x4055fda8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x4055fda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4055e010"/>
        <function-ref name="isInput" scoped="" ref="0x4055e0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4055e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4055e2b0"/>
        <function-ref name="get" scoped="" ref="0x4055e390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4055e470"/>
        <function-ref name="set" scoped="" ref="0x4055e550"/>
        <function-ref name="clr" scoped="" ref="0x4055e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x405527a0" loc="37:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x405527a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40552978"/>
        <function-ref name="isInput" scoped="" ref="0x40552a58"/>
        <function-ref name="toggle" scoped="" ref="0x40552b38"/>
        <function-ref name="isOutput" scoped="" ref="0x40552c18"/>
        <function-ref name="get" scoped="" ref="0x40552cf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40552dd8"/>
        <function-ref name="set" scoped="" ref="0x40552eb8"/>
        <function-ref name="clr" scoped="" ref="0x4056b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x4056b220" loc="38:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x4056b220"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056b3f8"/>
        <function-ref name="isInput" scoped="" ref="0x4056b4d8"/>
        <function-ref name="toggle" scoped="" ref="0x4056b5b8"/>
        <function-ref name="isOutput" scoped="" ref="0x4056b698"/>
        <function-ref name="get" scoped="" ref="0x4056b778"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056b858"/>
        <function-ref name="set" scoped="" ref="0x4056b938"/>
        <function-ref name="clr" scoped="" ref="0x4056ba18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x4056a600" loc="40:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4056a600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4056a7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x4056bc28" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x4056bc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056be00"/>
        <function-ref name="isInput" scoped="" ref="0x4056bee0"/>
        <function-ref name="toggle" scoped="" ref="0x4056a010"/>
        <function-ref name="isOutput" scoped="" ref="0x4056a0f0"/>
        <function-ref name="get" scoped="" ref="0x4056a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056a2b0"/>
        <function-ref name="set" scoped="" ref="0x4056a390"/>
        <function-ref name="clr" scoped="" ref="0x4056a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x40572ce8" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x40572ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40572ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40571010"/>
        <function-ref name="toggle" scoped="" ref="0x405710f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405711d0"/>
        <function-ref name="get" scoped="" ref="0x405712b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40571390"/>
        <function-ref name="set" scoped="" ref="0x40571470"/>
        <function-ref name="clr" scoped="" ref="0x40571550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x4057b4b0" loc="58:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x4057b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057b688"/>
        <function-ref name="isInput" scoped="" ref="0x4057b768"/>
        <function-ref name="toggle" scoped="" ref="0x4057b848"/>
        <function-ref name="isOutput" scoped="" ref="0x4057b928"/>
        <function-ref name="get" scoped="" ref="0x4057ba08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057bae8"/>
        <function-ref name="set" scoped="" ref="0x4057bbc8"/>
        <function-ref name="clr" scoped="" ref="0x4057bca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x40585750" loc="67:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x40585750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40585928"/>
        <function-ref name="isInput" scoped="" ref="0x40585a08"/>
        <function-ref name="toggle" scoped="" ref="0x40585ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40585bc8"/>
        <function-ref name="get" scoped="" ref="0x40585ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40585d88"/>
        <function-ref name="set" scoped="" ref="0x40585e68"/>
        <function-ref name="clr" scoped="" ref="0x40584010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x40582aa8" loc="74:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x40582aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40582c80"/>
        <function-ref name="isInput" scoped="" ref="0x40582d60"/>
        <function-ref name="toggle" scoped="" ref="0x40582e40"/>
        <function-ref name="isOutput" scoped="" ref="0x40582f20"/>
        <function-ref name="get" scoped="" ref="0x40581018"/>
        <function-ref name="makeOutput" scoped="" ref="0x405810f8"/>
        <function-ref name="set" scoped="" ref="0x405811d8"/>
        <function-ref name="clr" scoped="" ref="0x405812b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x4058fce8" loc="79:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x4058fce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4058fec0"/>
        <function-ref name="isInput" scoped="" ref="0x4058e010"/>
        <function-ref name="toggle" scoped="" ref="0x4058e0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4058e1d0"/>
        <function-ref name="get" scoped="" ref="0x4058e2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4058e390"/>
        <function-ref name="set" scoped="" ref="0x4058e470"/>
        <function-ref name="clr" scoped="" ref="0x4058e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x405862f0" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x405862f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405864c8"/>
        <function-ref name="isInput" scoped="" ref="0x405865a8"/>
        <function-ref name="toggle" scoped="" ref="0x40586688"/>
        <function-ref name="isOutput" scoped="" ref="0x40586768"/>
        <function-ref name="get" scoped="" ref="0x40586848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40586928"/>
        <function-ref name="set" scoped="" ref="0x40586a08"/>
        <function-ref name="clr" scoped="" ref="0x40586ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x40577120" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x40577120"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405772f8"/>
        <function-ref name="isInput" scoped="" ref="0x405773d8"/>
        <function-ref name="toggle" scoped="" ref="0x405774b8"/>
        <function-ref name="isOutput" scoped="" ref="0x40577598"/>
        <function-ref name="get" scoped="" ref="0x40577678"/>
        <function-ref name="makeOutput" scoped="" ref="0x40577758"/>
        <function-ref name="set" scoped="" ref="0x40577838"/>
        <function-ref name="clr" scoped="" ref="0x40577918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x40580c08" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x40580c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40580e60"/>
        <function-ref name="isInput" scoped="" ref="0x4057f010"/>
        <function-ref name="toggle" scoped="" ref="0x4057f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4057f1d0"/>
        <function-ref name="get" scoped="" ref="0x4057f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057f390"/>
        <function-ref name="set" scoped="" ref="0x4057f470"/>
        <function-ref name="clr" scoped="" ref="0x4057f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x40575010" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x40575010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405751e8"/>
        <function-ref name="isInput" scoped="" ref="0x405752c8"/>
        <function-ref name="toggle" scoped="" ref="0x405753a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40575488"/>
        <function-ref name="get" scoped="" ref="0x40575568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40575648"/>
        <function-ref name="set" scoped="" ref="0x40575728"/>
        <function-ref name="clr" scoped="" ref="0x40575808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x4057ec08" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x4057ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057ede0"/>
        <function-ref name="isInput" scoped="" ref="0x4057eec0"/>
        <function-ref name="toggle" scoped="" ref="0x4057d010"/>
        <function-ref name="isOutput" scoped="" ref="0x4057d0f0"/>
        <function-ref name="get" scoped="" ref="0x4057d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057d2b0"/>
        <function-ref name="set" scoped="" ref="0x4057d390"/>
        <function-ref name="clr" scoped="" ref="0x4057d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x405792f0" loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x405792f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405794c8"/>
        <function-ref name="isInput" scoped="" ref="0x405795a8"/>
        <function-ref name="toggle" scoped="" ref="0x40579688"/>
        <function-ref name="isOutput" scoped="" ref="0x40579768"/>
        <function-ref name="get" scoped="" ref="0x40579848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40579928"/>
        <function-ref name="set" scoped="" ref="0x40579a08"/>
        <function-ref name="clr" scoped="" ref="0x40579ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x4057c0a0" loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x4057c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057c278"/>
        <function-ref name="isInput" scoped="" ref="0x4057c358"/>
        <function-ref name="toggle" scoped="" ref="0x4057c438"/>
        <function-ref name="isOutput" scoped="" ref="0x4057c518"/>
        <function-ref name="get" scoped="" ref="0x4057c5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057c6d8"/>
        <function-ref name="set" scoped="" ref="0x4057c7b8"/>
        <function-ref name="clr" scoped="" ref="0x4057c898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x40583670" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x40583670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40583848"/>
        <function-ref name="isInput" scoped="" ref="0x40583928"/>
        <function-ref name="toggle" scoped="" ref="0x40583a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40583ae8"/>
        <function-ref name="get" scoped="" ref="0x40583bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40583ca8"/>
        <function-ref name="set" scoped="" ref="0x40583d88"/>
        <function-ref name="clr" scoped="" ref="0x40583e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x405908e0" loc="77:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x405908e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40590ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40590b98"/>
        <function-ref name="toggle" scoped="" ref="0x40590c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40590d58"/>
        <function-ref name="get" scoped="" ref="0x40590e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40590f18"/>
        <function-ref name="set" scoped="" ref="0x4058f010"/>
        <function-ref name="clr" scoped="" ref="0x4058f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x40574ea8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x40574ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405730c0"/>
        <function-ref name="isInput" scoped="" ref="0x405731a0"/>
        <function-ref name="toggle" scoped="" ref="0x40573280"/>
        <function-ref name="isOutput" scoped="" ref="0x40573360"/>
        <function-ref name="get" scoped="" ref="0x40573440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40573520"/>
        <function-ref name="set" scoped="" ref="0x40573600"/>
        <function-ref name="clr" scoped="" ref="0x405736e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x405814b8" loc="75:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x405814b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40581690"/>
        <function-ref name="isInput" scoped="" ref="0x40581770"/>
        <function-ref name="toggle" scoped="" ref="0x40581850"/>
        <function-ref name="isOutput" scoped="" ref="0x40581930"/>
        <function-ref name="get" scoped="" ref="0x40581a10"/>
        <function-ref name="makeOutput" scoped="" ref="0x40581af0"/>
        <function-ref name="set" scoped="" ref="0x40581bd0"/>
        <function-ref name="clr" scoped="" ref="0x40581cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x40571750" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x40571750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40571928"/>
        <function-ref name="isInput" scoped="" ref="0x40571a08"/>
        <function-ref name="toggle" scoped="" ref="0x40571ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40571bc8"/>
        <function-ref name="get" scoped="" ref="0x40571ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40571d88"/>
        <function-ref name="set" scoped="" ref="0x40571e68"/>
        <function-ref name="clr" scoped="" ref="0x40580010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x4057bea8" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x4057bea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057a0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4057a1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4057a280"/>
        <function-ref name="isOutput" scoped="" ref="0x4057a360"/>
        <function-ref name="get" scoped="" ref="0x4057a440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057a520"/>
        <function-ref name="set" scoped="" ref="0x4057a600"/>
        <function-ref name="clr" scoped="" ref="0x4057a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x40584210" loc="68:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x40584210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405843e8"/>
        <function-ref name="isInput" scoped="" ref="0x405844c8"/>
        <function-ref name="toggle" scoped="" ref="0x405845a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40584688"/>
        <function-ref name="get" scoped="" ref="0x40584768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40584848"/>
        <function-ref name="set" scoped="" ref="0x40584928"/>
        <function-ref name="clr" scoped="" ref="0x40584a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x40577b18" loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x40577b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40577cf0"/>
        <function-ref name="isInput" scoped="" ref="0x40577dd0"/>
        <function-ref name="toggle" scoped="" ref="0x40577eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x40576010"/>
        <function-ref name="get" scoped="" ref="0x405760f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405761d0"/>
        <function-ref name="set" scoped="" ref="0x405762b0"/>
        <function-ref name="clr" scoped="" ref="0x40576390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x4057f750" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x4057f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057f928"/>
        <function-ref name="isInput" scoped="" ref="0x4057fa08"/>
        <function-ref name="toggle" scoped="" ref="0x4057fae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4057fbc8"/>
        <function-ref name="get" scoped="" ref="0x4057fca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057fd88"/>
        <function-ref name="set" scoped="" ref="0x4057fe68"/>
        <function-ref name="clr" scoped="" ref="0x4057e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x40575a08" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x40575a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40575be0"/>
        <function-ref name="isInput" scoped="" ref="0x40575cc0"/>
        <function-ref name="toggle" scoped="" ref="0x40575da0"/>
        <function-ref name="isOutput" scoped="" ref="0x40575e80"/>
        <function-ref name="get" scoped="" ref="0x40574010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405740f0"/>
        <function-ref name="set" scoped="" ref="0x405741d0"/>
        <function-ref name="clr" scoped="" ref="0x405742b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x40579ce8" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x40579ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40579ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40587010"/>
        <function-ref name="toggle" scoped="" ref="0x405870f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405871d0"/>
        <function-ref name="get" scoped="" ref="0x405872b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40587390"/>
        <function-ref name="set" scoped="" ref="0x40587470"/>
        <function-ref name="clr" scoped="" ref="0x40587550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x405820a0" loc="71:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x405820a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40582278"/>
        <function-ref name="isInput" scoped="" ref="0x40582358"/>
        <function-ref name="toggle" scoped="" ref="0x40582438"/>
        <function-ref name="isOutput" scoped="" ref="0x40582518"/>
        <function-ref name="get" scoped="" ref="0x405825f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405826d8"/>
        <function-ref name="set" scoped="" ref="0x405827b8"/>
        <function-ref name="clr" scoped="" ref="0x40582898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x405722f0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x405722f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405724c8"/>
        <function-ref name="isInput" scoped="" ref="0x405725a8"/>
        <function-ref name="toggle" scoped="" ref="0x40572688"/>
        <function-ref name="isOutput" scoped="" ref="0x40572768"/>
        <function-ref name="get" scoped="" ref="0x40572848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40572928"/>
        <function-ref name="set" scoped="" ref="0x40572a08"/>
        <function-ref name="clr" scoped="" ref="0x40572ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x4057ca98" loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x4057ca98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057cc70"/>
        <function-ref name="isInput" scoped="" ref="0x4057cd50"/>
        <function-ref name="toggle" scoped="" ref="0x4057ce30"/>
        <function-ref name="isOutput" scoped="" ref="0x4057cf10"/>
        <function-ref name="get" scoped="" ref="0x4057b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057b0f0"/>
        <function-ref name="set" scoped="" ref="0x4057b1d0"/>
        <function-ref name="clr" scoped="" ref="0x4057b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x40586ce8" loc="66:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x40586ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40586ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40585010"/>
        <function-ref name="toggle" scoped="" ref="0x405850f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405851d0"/>
        <function-ref name="get" scoped="" ref="0x405852b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40585390"/>
        <function-ref name="set" scoped="" ref="0x40585470"/>
        <function-ref name="clr" scoped="" ref="0x40585550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x4058f2f0" loc="78:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x4058f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4058f4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4058f5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4058f688"/>
        <function-ref name="isOutput" scoped="" ref="0x4058f768"/>
        <function-ref name="get" scoped="" ref="0x4058f848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4058f928"/>
        <function-ref name="set" scoped="" ref="0x4058fa08"/>
        <function-ref name="clr" scoped="" ref="0x4058fae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x405738e0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x405738e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40573ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40573b98"/>
        <function-ref name="toggle" scoped="" ref="0x40573c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40573d58"/>
        <function-ref name="get" scoped="" ref="0x40573e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40573f18"/>
        <function-ref name="set" scoped="" ref="0x40572010"/>
        <function-ref name="clr" scoped="" ref="0x405720f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x40580210" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x40580210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405803e8"/>
        <function-ref name="isInput" scoped="" ref="0x405804c8"/>
        <function-ref name="toggle" scoped="" ref="0x405805a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40580688"/>
        <function-ref name="get" scoped="" ref="0x40580768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40580848"/>
        <function-ref name="set" scoped="" ref="0x40580928"/>
        <function-ref name="clr" scoped="" ref="0x40580a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x4057a8e0" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x4057a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057aab8"/>
        <function-ref name="isInput" scoped="" ref="0x4057ab98"/>
        <function-ref name="toggle" scoped="" ref="0x4057ac78"/>
        <function-ref name="isOutput" scoped="" ref="0x4057ad58"/>
        <function-ref name="get" scoped="" ref="0x4057ae38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057af18"/>
        <function-ref name="set" scoped="" ref="0x40579010"/>
        <function-ref name="clr" scoped="" ref="0x405790f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x40576590" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x40576590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40576768"/>
        <function-ref name="isInput" scoped="" ref="0x40576848"/>
        <function-ref name="toggle" scoped="" ref="0x40576928"/>
        <function-ref name="isOutput" scoped="" ref="0x40576a08"/>
        <function-ref name="get" scoped="" ref="0x40576ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40576bc8"/>
        <function-ref name="set" scoped="" ref="0x40576ca8"/>
        <function-ref name="clr" scoped="" ref="0x40576d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x4057e210" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x4057e210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057e3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4057e4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4057e5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4057e688"/>
        <function-ref name="get" scoped="" ref="0x4057e768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057e848"/>
        <function-ref name="set" scoped="" ref="0x4057e928"/>
        <function-ref name="clr" scoped="" ref="0x4057ea08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x40587750" loc="64:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x40587750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40587a28"/>
        <function-ref name="isInput" scoped="" ref="0x40587b08"/>
        <function-ref name="toggle" scoped="" ref="0x40587be8"/>
        <function-ref name="isOutput" scoped="" ref="0x40587cc8"/>
        <function-ref name="get" scoped="" ref="0x40587da8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40587e88"/>
        <function-ref name="set" scoped="" ref="0x40586010"/>
        <function-ref name="clr" scoped="" ref="0x405860f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x40584c08" loc="69:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x40584c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40584de0"/>
        <function-ref name="isInput" scoped="" ref="0x40584ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40583010"/>
        <function-ref name="isOutput" scoped="" ref="0x405830f0"/>
        <function-ref name="get" scoped="" ref="0x405831d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405832b0"/>
        <function-ref name="set" scoped="" ref="0x40583390"/>
        <function-ref name="clr" scoped="" ref="0x40583470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x4057d670" loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x4057d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057d848"/>
        <function-ref name="isInput" scoped="" ref="0x4057d928"/>
        <function-ref name="toggle" scoped="" ref="0x4057da08"/>
        <function-ref name="isOutput" scoped="" ref="0x4057dae8"/>
        <function-ref name="get" scoped="" ref="0x4057dbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057dca8"/>
        <function-ref name="set" scoped="" ref="0x4057dd88"/>
        <function-ref name="clr" scoped="" ref="0x4057de68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x40581eb0" loc="76:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x40581eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405900c0"/>
        <function-ref name="isInput" scoped="" ref="0x405901a0"/>
        <function-ref name="toggle" scoped="" ref="0x40590280"/>
        <function-ref name="isOutput" scoped="" ref="0x40590360"/>
        <function-ref name="get" scoped="" ref="0x40590440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40590520"/>
        <function-ref name="set" scoped="" ref="0x40590600"/>
        <function-ref name="clr" scoped="" ref="0x405906e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x405744b0" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x405744b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40574688"/>
        <function-ref name="isInput" scoped="" ref="0x40574768"/>
        <function-ref name="toggle" scoped="" ref="0x40574848"/>
        <function-ref name="isOutput" scoped="" ref="0x40574928"/>
        <function-ref name="get" scoped="" ref="0x40574a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40574ae8"/>
        <function-ref name="set" scoped="" ref="0x40574bc8"/>
        <function-ref name="clr" scoped="" ref="0x40574ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405b8330" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405b8330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405b8508"/>
        <function-ref name="isInput" scoped="" ref="0x405b85e8"/>
        <function-ref name="toggle" scoped="" ref="0x405b86c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405b87a8"/>
        <function-ref name="get" scoped="" ref="0x405b8888"/>
        <function-ref name="makeOutput" scoped="" ref="0x405b8968"/>
        <function-ref name="set" scoped="" ref="0x405b8a48"/>
        <function-ref name="clr" scoped="" ref="0x405b8b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x405b6030" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x405b6030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405b6208"/>
        <function-ref name="isInput" scoped="" ref="0x405b62e8"/>
        <function-ref name="toggle" scoped="" ref="0x405b63c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405b64a8"/>
        <function-ref name="get" scoped="" ref="0x405b6588"/>
        <function-ref name="makeOutput" scoped="" ref="0x405b6668"/>
        <function-ref name="set" scoped="" ref="0x405b6748"/>
        <function-ref name="clr" scoped="" ref="0x405b6828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405b9010" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405b9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405b91e8"/>
        <function-ref name="isInput" scoped="" ref="0x405b92c8"/>
        <function-ref name="toggle" scoped="" ref="0x405b93a8"/>
        <function-ref name="isOutput" scoped="" ref="0x405b9488"/>
        <function-ref name="get" scoped="" ref="0x405b9568"/>
        <function-ref name="makeOutput" scoped="" ref="0x405b9648"/>
        <function-ref name="set" scoped="" ref="0x405b9728"/>
        <function-ref name="clr" scoped="" ref="0x405b9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405b8c88" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405b8c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405b8e60"/>
        <function-ref name="isInput" scoped="" ref="0x405b7010"/>
        <function-ref name="toggle" scoped="" ref="0x405b70f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405b71d0"/>
        <function-ref name="get" scoped="" ref="0x405b72b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405b7390"/>
        <function-ref name="set" scoped="" ref="0x405b7470"/>
        <function-ref name="clr" scoped="" ref="0x405b7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405b6988" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405b6988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405b6b60"/>
        <function-ref name="isInput" scoped="" ref="0x405b6c40"/>
        <function-ref name="toggle" scoped="" ref="0x405b6d20"/>
        <function-ref name="isOutput" scoped="" ref="0x405b6e00"/>
        <function-ref name="get" scoped="" ref="0x405b6ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405b5010"/>
        <function-ref name="set" scoped="" ref="0x405b50f0"/>
        <function-ref name="clr" scoped="" ref="0x405b51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x405b9968" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x405b9968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405b9b40"/>
        <function-ref name="isInput" scoped="" ref="0x405b9c20"/>
        <function-ref name="toggle" scoped="" ref="0x405b9d00"/>
        <function-ref name="isOutput" scoped="" ref="0x405b9de0"/>
        <function-ref name="get" scoped="" ref="0x405b9ec0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405b8010"/>
        <function-ref name="set" scoped="" ref="0x405b80f0"/>
        <function-ref name="clr" scoped="" ref="0x405b81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x405b76b0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x405b76b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405b7888"/>
        <function-ref name="isInput" scoped="" ref="0x405b7968"/>
        <function-ref name="toggle" scoped="" ref="0x405b7a48"/>
        <function-ref name="isOutput" scoped="" ref="0x405b7b28"/>
        <function-ref name="get" scoped="" ref="0x405b7c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x405b7ce8"/>
        <function-ref name="set" scoped="" ref="0x405b7dc8"/>
        <function-ref name="clr" scoped="" ref="0x405b7ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405b5330" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405b5330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405b5508"/>
        <function-ref name="isInput" scoped="" ref="0x405b55e8"/>
        <function-ref name="toggle" scoped="" ref="0x405b56c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405b57a8"/>
        <function-ref name="get" scoped="" ref="0x405b5888"/>
        <function-ref name="makeOutput" scoped="" ref="0x405b5968"/>
        <function-ref name="set" scoped="" ref="0x405b5a48"/>
        <function-ref name="clr" scoped="" ref="0x405b5b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4111b228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4111b228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4111b400"/>
        <function-ref name="isInput" scoped="" ref="0x4111b4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4111b5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4111b6a0"/>
        <function-ref name="get" scoped="" ref="0x4111b780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4111b860"/>
        <function-ref name="set" scoped="" ref="0x4111b940"/>
        <function-ref name="clr" scoped="" ref="0x4111ba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4111ac08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4111ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4111ade0"/>
        <function-ref name="isInput" scoped="" ref="0x4111aec0"/>
        <function-ref name="toggle" scoped="" ref="0x41119010"/>
        <function-ref name="isOutput" scoped="" ref="0x411190f0"/>
        <function-ref name="get" scoped="" ref="0x411191d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x411192b0"/>
        <function-ref name="set" scoped="" ref="0x41119390"/>
        <function-ref name="clr" scoped="" ref="0x41119470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411186c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411186c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41118898"/>
        <function-ref name="isInput" scoped="" ref="0x41118978"/>
        <function-ref name="toggle" scoped="" ref="0x41118a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41118b38"/>
        <function-ref name="get" scoped="" ref="0x41118c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41118cf8"/>
        <function-ref name="set" scoped="" ref="0x41118dd8"/>
        <function-ref name="clr" scoped="" ref="0x41118eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411160b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411160b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41116288"/>
        <function-ref name="isInput" scoped="" ref="0x41116368"/>
        <function-ref name="toggle" scoped="" ref="0x41116448"/>
        <function-ref name="isOutput" scoped="" ref="0x41116528"/>
        <function-ref name="get" scoped="" ref="0x41116608"/>
        <function-ref name="makeOutput" scoped="" ref="0x411166e8"/>
        <function-ref name="set" scoped="" ref="0x411167c8"/>
        <function-ref name="clr" scoped="" ref="0x411168a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41115a88" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41115a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41115c60"/>
        <function-ref name="isInput" scoped="" ref="0x41115d40"/>
        <function-ref name="toggle" scoped="" ref="0x41115e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41115f00"/>
        <function-ref name="get" scoped="" ref="0x41114010"/>
        <function-ref name="makeOutput" scoped="" ref="0x411140f0"/>
        <function-ref name="set" scoped="" ref="0x411141d0"/>
        <function-ref name="clr" scoped="" ref="0x411142b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41113538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41113538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41113710"/>
        <function-ref name="isInput" scoped="" ref="0x411137f0"/>
        <function-ref name="toggle" scoped="" ref="0x411138d0"/>
        <function-ref name="isOutput" scoped="" ref="0x411139b0"/>
        <function-ref name="get" scoped="" ref="0x41113a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41113b70"/>
        <function-ref name="set" scoped="" ref="0x41113c50"/>
        <function-ref name="clr" scoped="" ref="0x41113d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41111010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41111010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411111e8"/>
        <function-ref name="isInput" scoped="" ref="0x411112c8"/>
        <function-ref name="toggle" scoped="" ref="0x411113a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41111488"/>
        <function-ref name="get" scoped="" ref="0x41111568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41111648"/>
        <function-ref name="set" scoped="" ref="0x41111728"/>
        <function-ref name="clr" scoped="" ref="0x41111808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411109e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411109e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41110bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41110ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41110d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41110e60"/>
        <function-ref name="get" scoped="" ref="0x4110f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4110f0f0"/>
        <function-ref name="set" scoped="" ref="0x4110f1d0"/>
        <function-ref name="clr" scoped="" ref="0x4110f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405c2ba8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405c2ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c2d80"/>
        <function-ref name="isInput" scoped="" ref="0x405c2e60"/>
        <function-ref name="toggle" scoped="" ref="0x405c1010"/>
        <function-ref name="isOutput" scoped="" ref="0x405c10f0"/>
        <function-ref name="get" scoped="" ref="0x405c11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c12b0"/>
        <function-ref name="set" scoped="" ref="0x405c1390"/>
        <function-ref name="clr" scoped="" ref="0x405c1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x405c0890" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x405c0890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c0a68"/>
        <function-ref name="isInput" scoped="" ref="0x405c0b48"/>
        <function-ref name="toggle" scoped="" ref="0x405c0c28"/>
        <function-ref name="isOutput" scoped="" ref="0x405c0d08"/>
        <function-ref name="get" scoped="" ref="0x405c0de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c0ec8"/>
        <function-ref name="set" scoped="" ref="0x405bf010"/>
        <function-ref name="clr" scoped="" ref="0x405bf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405c3888" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405c3888"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c3a60"/>
        <function-ref name="isInput" scoped="" ref="0x405c3b40"/>
        <function-ref name="toggle" scoped="" ref="0x405c3c20"/>
        <function-ref name="isOutput" scoped="" ref="0x405c3d00"/>
        <function-ref name="get" scoped="" ref="0x405c3de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c3ec0"/>
        <function-ref name="set" scoped="" ref="0x405c2010"/>
        <function-ref name="clr" scoped="" ref="0x405c20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405c15d0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405c15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c17a8"/>
        <function-ref name="isInput" scoped="" ref="0x405c1888"/>
        <function-ref name="toggle" scoped="" ref="0x405c1968"/>
        <function-ref name="isOutput" scoped="" ref="0x405c1a48"/>
        <function-ref name="get" scoped="" ref="0x405c1b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c1c08"/>
        <function-ref name="set" scoped="" ref="0x405c1ce8"/>
        <function-ref name="clr" scoped="" ref="0x405c1dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405bf250" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405bf250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405bf428"/>
        <function-ref name="isInput" scoped="" ref="0x405bf508"/>
        <function-ref name="toggle" scoped="" ref="0x405bf5e8"/>
        <function-ref name="isOutput" scoped="" ref="0x405bf6c8"/>
        <function-ref name="get" scoped="" ref="0x405bf7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405bf888"/>
        <function-ref name="set" scoped="" ref="0x405bf968"/>
        <function-ref name="clr" scoped="" ref="0x405bfa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x405c2250" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x405c2250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c2428"/>
        <function-ref name="isInput" scoped="" ref="0x405c2508"/>
        <function-ref name="toggle" scoped="" ref="0x405c25e8"/>
        <function-ref name="isOutput" scoped="" ref="0x405c26c8"/>
        <function-ref name="get" scoped="" ref="0x405c27a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c2888"/>
        <function-ref name="set" scoped="" ref="0x405c2968"/>
        <function-ref name="clr" scoped="" ref="0x405c2a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x405c1f28" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x405c1f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c0110"/>
        <function-ref name="isInput" scoped="" ref="0x405c01f0"/>
        <function-ref name="toggle" scoped="" ref="0x405c02d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405c03b0"/>
        <function-ref name="get" scoped="" ref="0x405c0490"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c0570"/>
        <function-ref name="set" scoped="" ref="0x405c0650"/>
        <function-ref name="clr" scoped="" ref="0x405c0730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405bfba8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405bfba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405bfd80"/>
        <function-ref name="isInput" scoped="" ref="0x405bfe60"/>
        <function-ref name="toggle" scoped="" ref="0x405be010"/>
        <function-ref name="isOutput" scoped="" ref="0x405be0f0"/>
        <function-ref name="get" scoped="" ref="0x405be1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405be2b0"/>
        <function-ref name="set" scoped="" ref="0x405be390"/>
        <function-ref name="clr" scoped="" ref="0x405be470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411216c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411216c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41121898"/>
        <function-ref name="isInput" scoped="" ref="0x41121978"/>
        <function-ref name="toggle" scoped="" ref="0x41121a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41121b38"/>
        <function-ref name="get" scoped="" ref="0x41121c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41121cf8"/>
        <function-ref name="set" scoped="" ref="0x41121dd8"/>
        <function-ref name="clr" scoped="" ref="0x41121eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4111f0b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4111f0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4111f288"/>
        <function-ref name="isInput" scoped="" ref="0x4111f368"/>
        <function-ref name="toggle" scoped="" ref="0x4111f448"/>
        <function-ref name="isOutput" scoped="" ref="0x4111f528"/>
        <function-ref name="get" scoped="" ref="0x4111f608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4111f6e8"/>
        <function-ref name="set" scoped="" ref="0x4111f7c8"/>
        <function-ref name="clr" scoped="" ref="0x4111f8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4111da88" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4111da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4111dc60"/>
        <function-ref name="isInput" scoped="" ref="0x4111dd40"/>
        <function-ref name="toggle" scoped="" ref="0x4111de20"/>
        <function-ref name="isOutput" scoped="" ref="0x4111df00"/>
        <function-ref name="get" scoped="" ref="0x4111c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4111c0f0"/>
        <function-ref name="set" scoped="" ref="0x4111c1d0"/>
        <function-ref name="clr" scoped="" ref="0x4111c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4115a538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4115a538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4115a710"/>
        <function-ref name="isInput" scoped="" ref="0x4115a7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4115a8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4115a9b0"/>
        <function-ref name="get" scoped="" ref="0x4115aa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4115ab70"/>
        <function-ref name="set" scoped="" ref="0x4115ac50"/>
        <function-ref name="clr" scoped="" ref="0x4115ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41158010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41158010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411581e8"/>
        <function-ref name="isInput" scoped="" ref="0x411582c8"/>
        <function-ref name="toggle" scoped="" ref="0x411583a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41158488"/>
        <function-ref name="get" scoped="" ref="0x41158568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41158648"/>
        <function-ref name="set" scoped="" ref="0x41158728"/>
        <function-ref name="clr" scoped="" ref="0x41158808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411579e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411579e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41157bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41157ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41157d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41157e60"/>
        <function-ref name="get" scoped="" ref="0x41156010"/>
        <function-ref name="makeOutput" scoped="" ref="0x411560f0"/>
        <function-ref name="set" scoped="" ref="0x411561d0"/>
        <function-ref name="clr" scoped="" ref="0x411562b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41155538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41155538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41155710"/>
        <function-ref name="isInput" scoped="" ref="0x411557f0"/>
        <function-ref name="toggle" scoped="" ref="0x411558d0"/>
        <function-ref name="isOutput" scoped="" ref="0x411559b0"/>
        <function-ref name="get" scoped="" ref="0x41155a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41155b70"/>
        <function-ref name="set" scoped="" ref="0x41155c50"/>
        <function-ref name="clr" scoped="" ref="0x41155d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41153010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41153010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411531e8"/>
        <function-ref name="isInput" scoped="" ref="0x411532c8"/>
        <function-ref name="toggle" scoped="" ref="0x411533a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41153488"/>
        <function-ref name="get" scoped="" ref="0x41153568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41153648"/>
        <function-ref name="set" scoped="" ref="0x41153728"/>
        <function-ref name="clr" scoped="" ref="0x41153808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405cc4f0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405cc4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405cc6c8"/>
        <function-ref name="isInput" scoped="" ref="0x405cc7a8"/>
        <function-ref name="toggle" scoped="" ref="0x405cc888"/>
        <function-ref name="isOutput" scoped="" ref="0x405cc968"/>
        <function-ref name="get" scoped="" ref="0x405cca48"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ccb28"/>
        <function-ref name="set" scoped="" ref="0x405ccc08"/>
        <function-ref name="clr" scoped="" ref="0x405ccce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x405c9170" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x405c9170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c9348"/>
        <function-ref name="isInput" scoped="" ref="0x405c9428"/>
        <function-ref name="toggle" scoped="" ref="0x405c9508"/>
        <function-ref name="isOutput" scoped="" ref="0x405c95e8"/>
        <function-ref name="get" scoped="" ref="0x405c96c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c97a8"/>
        <function-ref name="set" scoped="" ref="0x405c9888"/>
        <function-ref name="clr" scoped="" ref="0x405c9968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405bb228" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405bb228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405bb400"/>
        <function-ref name="isInput" scoped="" ref="0x405bb4e0"/>
        <function-ref name="toggle" scoped="" ref="0x405bb5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x405bb6a0"/>
        <function-ref name="get" scoped="" ref="0x405bb780"/>
        <function-ref name="makeOutput" scoped="" ref="0x405bb860"/>
        <function-ref name="set" scoped="" ref="0x405bb940"/>
        <function-ref name="clr" scoped="" ref="0x405bba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405cce48" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405cce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ca050"/>
        <function-ref name="isInput" scoped="" ref="0x405ca130"/>
        <function-ref name="toggle" scoped="" ref="0x405ca210"/>
        <function-ref name="isOutput" scoped="" ref="0x405ca2f0"/>
        <function-ref name="get" scoped="" ref="0x405ca3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ca4b0"/>
        <function-ref name="set" scoped="" ref="0x405ca590"/>
        <function-ref name="clr" scoped="" ref="0x405ca670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405c9ac8" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405c9ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c9ca0"/>
        <function-ref name="isInput" scoped="" ref="0x405c9d80"/>
        <function-ref name="toggle" scoped="" ref="0x405c9e60"/>
        <function-ref name="isOutput" scoped="" ref="0x405c8010"/>
        <function-ref name="get" scoped="" ref="0x405c80f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c81d0"/>
        <function-ref name="set" scoped="" ref="0x405c82b0"/>
        <function-ref name="clr" scoped="" ref="0x405c8390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x405bbb80" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x405bbb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405bbd58"/>
        <function-ref name="isInput" scoped="" ref="0x405bbe38"/>
        <function-ref name="toggle" scoped="" ref="0x405bbf18"/>
        <function-ref name="isOutput" scoped="" ref="0x405cc010"/>
        <function-ref name="get" scoped="" ref="0x405cc0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405cc1d0"/>
        <function-ref name="set" scoped="" ref="0x405cc2b0"/>
        <function-ref name="clr" scoped="" ref="0x405cc390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x405ca7d0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x405ca7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ca9a8"/>
        <function-ref name="isInput" scoped="" ref="0x405caa88"/>
        <function-ref name="toggle" scoped="" ref="0x405cab68"/>
        <function-ref name="isOutput" scoped="" ref="0x405cac48"/>
        <function-ref name="get" scoped="" ref="0x405cad28"/>
        <function-ref name="makeOutput" scoped="" ref="0x405cae08"/>
        <function-ref name="set" scoped="" ref="0x405caee8"/>
        <function-ref name="clr" scoped="" ref="0x405c9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405c84f0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405c84f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c86c8"/>
        <function-ref name="isInput" scoped="" ref="0x405c87a8"/>
        <function-ref name="toggle" scoped="" ref="0x405c8888"/>
        <function-ref name="isOutput" scoped="" ref="0x405c8968"/>
        <function-ref name="get" scoped="" ref="0x405c8a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c8b28"/>
        <function-ref name="set" scoped="" ref="0x405c8c08"/>
        <function-ref name="clr" scoped="" ref="0x405c8ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41167418" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41167418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411675f0"/>
        <function-ref name="isInput" scoped="" ref="0x411676d0"/>
        <function-ref name="toggle" scoped="" ref="0x411677b0"/>
        <function-ref name="isOutput" scoped="" ref="0x41167890"/>
        <function-ref name="get" scoped="" ref="0x41167970"/>
        <function-ref name="makeOutput" scoped="" ref="0x41167a50"/>
        <function-ref name="set" scoped="" ref="0x41167b30"/>
        <function-ref name="clr" scoped="" ref="0x41167c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41166de0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41166de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41165010"/>
        <function-ref name="isInput" scoped="" ref="0x411650f0"/>
        <function-ref name="toggle" scoped="" ref="0x411651d0"/>
        <function-ref name="isOutput" scoped="" ref="0x411652b0"/>
        <function-ref name="get" scoped="" ref="0x41165390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41165470"/>
        <function-ref name="set" scoped="" ref="0x41165550"/>
        <function-ref name="clr" scoped="" ref="0x41165630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411647f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411647f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411649d0"/>
        <function-ref name="isInput" scoped="" ref="0x41164ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41164b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41164c70"/>
        <function-ref name="get" scoped="" ref="0x41164d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41164e30"/>
        <function-ref name="set" scoped="" ref="0x41164f10"/>
        <function-ref name="clr" scoped="" ref="0x41163010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41162228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41162228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41162400"/>
        <function-ref name="isInput" scoped="" ref="0x411624e0"/>
        <function-ref name="toggle" scoped="" ref="0x411625c0"/>
        <function-ref name="isOutput" scoped="" ref="0x411626a0"/>
        <function-ref name="get" scoped="" ref="0x41162780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41162860"/>
        <function-ref name="set" scoped="" ref="0x41162940"/>
        <function-ref name="clr" scoped="" ref="0x41162a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41161c08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41161c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41161de0"/>
        <function-ref name="isInput" scoped="" ref="0x41161ec0"/>
        <function-ref name="toggle" scoped="" ref="0x41160010"/>
        <function-ref name="isOutput" scoped="" ref="0x411600f0"/>
        <function-ref name="get" scoped="" ref="0x411601d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x411602b0"/>
        <function-ref name="set" scoped="" ref="0x41160390"/>
        <function-ref name="clr" scoped="" ref="0x41160470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4115f6c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4115f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4115f898"/>
        <function-ref name="isInput" scoped="" ref="0x4115f978"/>
        <function-ref name="toggle" scoped="" ref="0x4115fa58"/>
        <function-ref name="isOutput" scoped="" ref="0x4115fb38"/>
        <function-ref name="get" scoped="" ref="0x4115fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4115fcf8"/>
        <function-ref name="set" scoped="" ref="0x4115fdd8"/>
        <function-ref name="clr" scoped="" ref="0x4115feb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4115d0b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4115d0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4115d288"/>
        <function-ref name="isInput" scoped="" ref="0x4115d368"/>
        <function-ref name="toggle" scoped="" ref="0x4115d448"/>
        <function-ref name="isOutput" scoped="" ref="0x4115d528"/>
        <function-ref name="get" scoped="" ref="0x4115d608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4115d6e8"/>
        <function-ref name="set" scoped="" ref="0x4115d7c8"/>
        <function-ref name="clr" scoped="" ref="0x4115d8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4115ca88" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4115ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4115cc60"/>
        <function-ref name="isInput" scoped="" ref="0x4115cd40"/>
        <function-ref name="toggle" scoped="" ref="0x4115ce20"/>
        <function-ref name="isOutput" scoped="" ref="0x4115cf00"/>
        <function-ref name="get" scoped="" ref="0x4115b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4115b0f0"/>
        <function-ref name="set" scoped="" ref="0x4115b1d0"/>
        <function-ref name="clr" scoped="" ref="0x4115b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405c4e48" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405c4e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d5050"/>
        <function-ref name="isInput" scoped="" ref="0x405d5130"/>
        <function-ref name="toggle" scoped="" ref="0x405d5210"/>
        <function-ref name="isOutput" scoped="" ref="0x405d52f0"/>
        <function-ref name="get" scoped="" ref="0x405d53d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d54b0"/>
        <function-ref name="set" scoped="" ref="0x405d5590"/>
        <function-ref name="clr" scoped="" ref="0x405d5670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x405d4ac8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x405d4ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d4ca0"/>
        <function-ref name="isInput" scoped="" ref="0x405d4d80"/>
        <function-ref name="toggle" scoped="" ref="0x405d4e60"/>
        <function-ref name="isOutput" scoped="" ref="0x405d3010"/>
        <function-ref name="get" scoped="" ref="0x405d30f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d31d0"/>
        <function-ref name="set" scoped="" ref="0x405d32b0"/>
        <function-ref name="clr" scoped="" ref="0x405d3390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405c5b00" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405c5b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c5cd8"/>
        <function-ref name="isInput" scoped="" ref="0x405c5db8"/>
        <function-ref name="toggle" scoped="" ref="0x405c5e98"/>
        <function-ref name="isOutput" scoped="" ref="0x405c4010"/>
        <function-ref name="get" scoped="" ref="0x405c40f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c41d0"/>
        <function-ref name="set" scoped="" ref="0x405c42b0"/>
        <function-ref name="clr" scoped="" ref="0x405c4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405d57d0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405d57d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d59a8"/>
        <function-ref name="isInput" scoped="" ref="0x405d5a88"/>
        <function-ref name="toggle" scoped="" ref="0x405d5b68"/>
        <function-ref name="isOutput" scoped="" ref="0x405d5c48"/>
        <function-ref name="get" scoped="" ref="0x405d5d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d5e08"/>
        <function-ref name="set" scoped="" ref="0x405d5ee8"/>
        <function-ref name="clr" scoped="" ref="0x405d4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405d34f0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405d34f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d36c8"/>
        <function-ref name="isInput" scoped="" ref="0x405d37a8"/>
        <function-ref name="toggle" scoped="" ref="0x405d3888"/>
        <function-ref name="isOutput" scoped="" ref="0x405d3968"/>
        <function-ref name="get" scoped="" ref="0x405d3a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d3b28"/>
        <function-ref name="set" scoped="" ref="0x405d3c08"/>
        <function-ref name="clr" scoped="" ref="0x405d3ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x405c44f0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x405c44f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c46c8"/>
        <function-ref name="isInput" scoped="" ref="0x405c47a8"/>
        <function-ref name="toggle" scoped="" ref="0x405c4888"/>
        <function-ref name="isOutput" scoped="" ref="0x405c4968"/>
        <function-ref name="get" scoped="" ref="0x405c4a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c4b28"/>
        <function-ref name="set" scoped="" ref="0x405c4c08"/>
        <function-ref name="clr" scoped="" ref="0x405c4ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x405d4170" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x405d4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d4348"/>
        <function-ref name="isInput" scoped="" ref="0x405d4428"/>
        <function-ref name="toggle" scoped="" ref="0x405d4508"/>
        <function-ref name="isOutput" scoped="" ref="0x405d45e8"/>
        <function-ref name="get" scoped="" ref="0x405d46c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d47a8"/>
        <function-ref name="set" scoped="" ref="0x405d4888"/>
        <function-ref name="clr" scoped="" ref="0x405d4968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405d3e48" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405d3e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d1050"/>
        <function-ref name="isInput" scoped="" ref="0x405d1130"/>
        <function-ref name="toggle" scoped="" ref="0x405d1210"/>
        <function-ref name="isOutput" scoped="" ref="0x405d12f0"/>
        <function-ref name="get" scoped="" ref="0x405d13d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d14b0"/>
        <function-ref name="set" scoped="" ref="0x405d1590"/>
        <function-ref name="clr" scoped="" ref="0x405d1670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411b3de8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411b3de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411ae010"/>
        <function-ref name="isInput" scoped="" ref="0x411ae0f0"/>
        <function-ref name="toggle" scoped="" ref="0x411ae1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x411ae2b0"/>
        <function-ref name="get" scoped="" ref="0x411ae390"/>
        <function-ref name="makeOutput" scoped="" ref="0x411ae470"/>
        <function-ref name="set" scoped="" ref="0x411ae550"/>
        <function-ref name="clr" scoped="" ref="0x411ae630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411ad7f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411ad7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411ad9d0"/>
        <function-ref name="isInput" scoped="" ref="0x411adab0"/>
        <function-ref name="toggle" scoped="" ref="0x411adb90"/>
        <function-ref name="isOutput" scoped="" ref="0x411adc70"/>
        <function-ref name="get" scoped="" ref="0x411add50"/>
        <function-ref name="makeOutput" scoped="" ref="0x411ade30"/>
        <function-ref name="set" scoped="" ref="0x411adf10"/>
        <function-ref name="clr" scoped="" ref="0x411ac010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411ab228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411ab228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411ab400"/>
        <function-ref name="isInput" scoped="" ref="0x411ab4e0"/>
        <function-ref name="toggle" scoped="" ref="0x411ab5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x411ab6a0"/>
        <function-ref name="get" scoped="" ref="0x411ab780"/>
        <function-ref name="makeOutput" scoped="" ref="0x411ab860"/>
        <function-ref name="set" scoped="" ref="0x411ab940"/>
        <function-ref name="clr" scoped="" ref="0x411aba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411aac08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411aac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411aade0"/>
        <function-ref name="isInput" scoped="" ref="0x411aaec0"/>
        <function-ref name="toggle" scoped="" ref="0x411a9010"/>
        <function-ref name="isOutput" scoped="" ref="0x411a90f0"/>
        <function-ref name="get" scoped="" ref="0x411a91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x411a92b0"/>
        <function-ref name="set" scoped="" ref="0x411a9390"/>
        <function-ref name="clr" scoped="" ref="0x411a9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411a86c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411a86c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411a8898"/>
        <function-ref name="isInput" scoped="" ref="0x411a8978"/>
        <function-ref name="toggle" scoped="" ref="0x411a8a58"/>
        <function-ref name="isOutput" scoped="" ref="0x411a8b38"/>
        <function-ref name="get" scoped="" ref="0x411a8c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x411a8cf8"/>
        <function-ref name="set" scoped="" ref="0x411a8dd8"/>
        <function-ref name="clr" scoped="" ref="0x411a8eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411a60b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411a60b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411a6288"/>
        <function-ref name="isInput" scoped="" ref="0x411a6368"/>
        <function-ref name="toggle" scoped="" ref="0x411a6448"/>
        <function-ref name="isOutput" scoped="" ref="0x411a6528"/>
        <function-ref name="get" scoped="" ref="0x411a6608"/>
        <function-ref name="makeOutput" scoped="" ref="0x411a66e8"/>
        <function-ref name="set" scoped="" ref="0x411a67c8"/>
        <function-ref name="clr" scoped="" ref="0x411a68a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411a5a88" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411a5a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411a5c60"/>
        <function-ref name="isInput" scoped="" ref="0x411a5d40"/>
        <function-ref name="toggle" scoped="" ref="0x411a5e20"/>
        <function-ref name="isOutput" scoped="" ref="0x411a5f00"/>
        <function-ref name="get" scoped="" ref="0x411a4010"/>
        <function-ref name="makeOutput" scoped="" ref="0x411a40f0"/>
        <function-ref name="set" scoped="" ref="0x411a41d0"/>
        <function-ref name="clr" scoped="" ref="0x411a42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411a3538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411a3538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411a3710"/>
        <function-ref name="isInput" scoped="" ref="0x411a37f0"/>
        <function-ref name="toggle" scoped="" ref="0x411a38d0"/>
        <function-ref name="isOutput" scoped="" ref="0x411a39b0"/>
        <function-ref name="get" scoped="" ref="0x411a3a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x411a3b70"/>
        <function-ref name="set" scoped="" ref="0x411a3c50"/>
        <function-ref name="clr" scoped="" ref="0x411a3d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405cd6b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405cd6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405cd888"/>
        <function-ref name="isInput" scoped="" ref="0x405cd968"/>
        <function-ref name="toggle" scoped="" ref="0x405cda48"/>
        <function-ref name="isOutput" scoped="" ref="0x405cdb28"/>
        <function-ref name="get" scoped="" ref="0x405cdc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x405cdce8"/>
        <function-ref name="set" scoped="" ref="0x405cddc8"/>
        <function-ref name="clr" scoped="" ref="0x405cdea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x405dd330" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x405dd330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405dd508"/>
        <function-ref name="isInput" scoped="" ref="0x405dd5e8"/>
        <function-ref name="toggle" scoped="" ref="0x405dd6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405dd7a8"/>
        <function-ref name="get" scoped="" ref="0x405dd888"/>
        <function-ref name="makeOutput" scoped="" ref="0x405dd968"/>
        <function-ref name="set" scoped="" ref="0x405dda48"/>
        <function-ref name="clr" scoped="" ref="0x405ddb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405ce3d8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405ce3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ce5b0"/>
        <function-ref name="isInput" scoped="" ref="0x405ce690"/>
        <function-ref name="toggle" scoped="" ref="0x405ce770"/>
        <function-ref name="isOutput" scoped="" ref="0x405ce850"/>
        <function-ref name="get" scoped="" ref="0x405ce930"/>
        <function-ref name="makeOutput" scoped="" ref="0x405cea10"/>
        <function-ref name="set" scoped="" ref="0x405ceaf0"/>
        <function-ref name="clr" scoped="" ref="0x405cebd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405de030" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405de030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405de208"/>
        <function-ref name="isInput" scoped="" ref="0x405de2e8"/>
        <function-ref name="toggle" scoped="" ref="0x405de3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405de4a8"/>
        <function-ref name="get" scoped="" ref="0x405de588"/>
        <function-ref name="makeOutput" scoped="" ref="0x405de668"/>
        <function-ref name="set" scoped="" ref="0x405de748"/>
        <function-ref name="clr" scoped="" ref="0x405de828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405ddc88" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405ddc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405dde60"/>
        <function-ref name="isInput" scoped="" ref="0x405dc010"/>
        <function-ref name="toggle" scoped="" ref="0x405dc0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405dc1d0"/>
        <function-ref name="get" scoped="" ref="0x405dc2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405dc390"/>
        <function-ref name="set" scoped="" ref="0x405dc470"/>
        <function-ref name="clr" scoped="" ref="0x405dc550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x405ced30" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x405ced30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405cef08"/>
        <function-ref name="isInput" scoped="" ref="0x405cd010"/>
        <function-ref name="toggle" scoped="" ref="0x405cd0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405cd1d0"/>
        <function-ref name="get" scoped="" ref="0x405cd2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405cd390"/>
        <function-ref name="set" scoped="" ref="0x405cd470"/>
        <function-ref name="clr" scoped="" ref="0x405cd550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x405de988" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x405de988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405deb60"/>
        <function-ref name="isInput" scoped="" ref="0x405dec40"/>
        <function-ref name="toggle" scoped="" ref="0x405ded20"/>
        <function-ref name="isOutput" scoped="" ref="0x405dee00"/>
        <function-ref name="get" scoped="" ref="0x405deee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405dd010"/>
        <function-ref name="set" scoped="" ref="0x405dd0f0"/>
        <function-ref name="clr" scoped="" ref="0x405dd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405dc6b0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405dc6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405dc888"/>
        <function-ref name="isInput" scoped="" ref="0x405dc968"/>
        <function-ref name="toggle" scoped="" ref="0x405dca48"/>
        <function-ref name="isOutput" scoped="" ref="0x405dcb28"/>
        <function-ref name="get" scoped="" ref="0x405dcc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x405dcce8"/>
        <function-ref name="set" scoped="" ref="0x405dcdc8"/>
        <function-ref name="clr" scoped="" ref="0x405dcea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411fa938" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411fa938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411fab10"/>
        <function-ref name="isInput" scoped="" ref="0x411fabf0"/>
        <function-ref name="toggle" scoped="" ref="0x411facd0"/>
        <function-ref name="isOutput" scoped="" ref="0x411fadb0"/>
        <function-ref name="get" scoped="" ref="0x411fae90"/>
        <function-ref name="makeOutput" scoped="" ref="0x411f9010"/>
        <function-ref name="set" scoped="" ref="0x411f90f0"/>
        <function-ref name="clr" scoped="" ref="0x411f91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411f83b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411f83b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411f8588"/>
        <function-ref name="isInput" scoped="" ref="0x411f8668"/>
        <function-ref name="toggle" scoped="" ref="0x411f8748"/>
        <function-ref name="isOutput" scoped="" ref="0x411f8828"/>
        <function-ref name="get" scoped="" ref="0x411f8908"/>
        <function-ref name="makeOutput" scoped="" ref="0x411f89e8"/>
        <function-ref name="set" scoped="" ref="0x411f8ac8"/>
        <function-ref name="clr" scoped="" ref="0x411f8ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411f7d70" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411f7d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411f6010"/>
        <function-ref name="isInput" scoped="" ref="0x411f60f0"/>
        <function-ref name="toggle" scoped="" ref="0x411f61d0"/>
        <function-ref name="isOutput" scoped="" ref="0x411f62b0"/>
        <function-ref name="get" scoped="" ref="0x411f6390"/>
        <function-ref name="makeOutput" scoped="" ref="0x411f6470"/>
        <function-ref name="set" scoped="" ref="0x411f6550"/>
        <function-ref name="clr" scoped="" ref="0x411f6630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411f57f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411f57f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411f59d0"/>
        <function-ref name="isInput" scoped="" ref="0x411f5ab0"/>
        <function-ref name="toggle" scoped="" ref="0x411f5b90"/>
        <function-ref name="isOutput" scoped="" ref="0x411f5c70"/>
        <function-ref name="get" scoped="" ref="0x411f5d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x411f5e30"/>
        <function-ref name="set" scoped="" ref="0x411f5f10"/>
        <function-ref name="clr" scoped="" ref="0x411f4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411f3228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411f3228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411f3400"/>
        <function-ref name="isInput" scoped="" ref="0x411f34e0"/>
        <function-ref name="toggle" scoped="" ref="0x411f35c0"/>
        <function-ref name="isOutput" scoped="" ref="0x411f36a0"/>
        <function-ref name="get" scoped="" ref="0x411f3780"/>
        <function-ref name="makeOutput" scoped="" ref="0x411f3860"/>
        <function-ref name="set" scoped="" ref="0x411f3940"/>
        <function-ref name="clr" scoped="" ref="0x411f3a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411f2c08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411f2c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411f2de0"/>
        <function-ref name="isInput" scoped="" ref="0x411f2ec0"/>
        <function-ref name="toggle" scoped="" ref="0x411f1010"/>
        <function-ref name="isOutput" scoped="" ref="0x411f10f0"/>
        <function-ref name="get" scoped="" ref="0x411f11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x411f12b0"/>
        <function-ref name="set" scoped="" ref="0x411f1390"/>
        <function-ref name="clr" scoped="" ref="0x411f1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411f06c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411f06c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411f0898"/>
        <function-ref name="isInput" scoped="" ref="0x411f0978"/>
        <function-ref name="toggle" scoped="" ref="0x411f0a58"/>
        <function-ref name="isOutput" scoped="" ref="0x411f0b38"/>
        <function-ref name="get" scoped="" ref="0x411f0c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x411f0cf8"/>
        <function-ref name="set" scoped="" ref="0x411f0dd8"/>
        <function-ref name="clr" scoped="" ref="0x411f0eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x411ee0b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x411ee0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x411ee288"/>
        <function-ref name="isInput" scoped="" ref="0x411ee368"/>
        <function-ref name="toggle" scoped="" ref="0x411ee448"/>
        <function-ref name="isOutput" scoped="" ref="0x411ee528"/>
        <function-ref name="get" scoped="" ref="0x411ee608"/>
        <function-ref name="makeOutput" scoped="" ref="0x411ee6e8"/>
        <function-ref name="set" scoped="" ref="0x411ee7c8"/>
        <function-ref name="clr" scoped="" ref="0x411ee8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403e5218" loc="88:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403e5218"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403e53f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x403e9560" loc="89:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x403e9560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x403e9738"/>
        <function-ref name="led0Toggle" scoped="" ref="0x403e9818"/>
        <function-ref name="led1On" scoped="" ref="0x403e98f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x403e99d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x403e9ab8"/>
        <function-ref name="get" scoped="" ref="0x403e9b98"/>
        <function-ref name="led1Off" scoped="" ref="0x403e9c78"/>
        <function-ref name="led2Off" scoped="" ref="0x403de010"/>
        <function-ref name="set" scoped="" ref="0x403e9d58"/>
        <function-ref name="led0On" scoped="" ref="0x403e9e38"/>
        <function-ref name="led2On" scoped="" ref="0x403e9f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x403df470" loc="84:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403df470"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403df648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403dc148" loc="85:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403dc148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403dc320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40554470" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40554470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40554bc0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405ec0d8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40554e38"/>
        <function-ref name="overflow" scoped="" ref="0x405ec350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x405fd0e0" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x405fd0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="T62khz" ref="0x40419eb8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405fd830"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405fdd20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405fdaa8"/>
        <function-ref name="overflow" scoped="" ref="0x4060d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x405ebe60" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x405ebe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405fb5e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x405fbad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405fb858"/>
        <function-ref name="overflow" scoped="" ref="0x405fbd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4060de60" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4060de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="T62khz" ref="0x40419eb8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4060a5e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4060aad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4060a858"/>
        <function-ref name="overflow" scoped="" ref="0x4060ad48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4061c010" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4061c010"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4061c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4061c448" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4061c448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="T62khz" ref="0x40419eb8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4061cb98"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4061b0a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4061ce10"/>
        <function-ref name="overflow" scoped="" ref="0x4061b320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x4061b5f0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x4061b5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40618068"/>
        <function-ref name="test" scoped="" ref="0x4061a3e8"/>
        <function-ref name="get" scoped="" ref="0x4061bc38"/>
        <function-ref name="reset" scoped="" ref="0x4061a660"/>
        <function-ref name="getMode" scoped="" ref="0x40618308"/>
        <function-ref name="overflow" scoped="" ref="0x4061a170"/>
        <function-ref name="isOn" scoped="" ref="0x4061adc8"/>
        <function-ref name="set" scoped="" ref="0x4061beb0"/>
        <function-ref name="start" scoped="" ref="0x4061a8d8"/>
        <function-ref name="stop" scoped="" ref="0x4061ab50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconCapture" ref="0x40629350" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconCapture" scoped="" ref="0x40629350"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4063cda8"/>
        <function-ref name="test" scoped="" ref="0x4063c150"/>
        <function-ref name="fired" scoped="" ref="0x40629eb0"/>
        <function-ref name="get" scoped="" ref="0x40629998"/>
        <function-ref name="reset" scoped="" ref="0x4063c3c8"/>
        <function-ref name="getMode" scoped="" ref="0x4063b068"/>
        <function-ref name="isOn" scoped="" ref="0x4063cb30"/>
        <function-ref name="set" scoped="" ref="0x40629c10"/>
        <function-ref name="start" scoped="" ref="0x4063c640"/>
        <function-ref name="stop" scoped="" ref="0x4063c8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406177f8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406177f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40625288"/>
        <function-ref name="test" scoped="" ref="0x406265f0"/>
        <function-ref name="get" scoped="" ref="0x40617e40"/>
        <function-ref name="reset" scoped="" ref="0x40626868"/>
        <function-ref name="getMode" scoped="" ref="0x40625528"/>
        <function-ref name="overflow" scoped="" ref="0x40626378"/>
        <function-ref name="isOn" scoped="" ref="0x40625010"/>
        <function-ref name="set" scoped="" ref="0x406260d8"/>
        <function-ref name="start" scoped="" ref="0x40626ae0"/>
        <function-ref name="stop" scoped="" ref="0x40626d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x4062a218" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x4062a218"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4062fc68"/>
        <function-ref name="test" scoped="" ref="0x4062f010"/>
        <function-ref name="fired" scoped="" ref="0x4062ad78"/>
        <function-ref name="get" scoped="" ref="0x4062a860"/>
        <function-ref name="reset" scoped="" ref="0x4062f288"/>
        <function-ref name="getMode" scoped="" ref="0x4062ff08"/>
        <function-ref name="isOn" scoped="" ref="0x4062f9f0"/>
        <function-ref name="set" scoped="" ref="0x4062aad8"/>
        <function-ref name="start" scoped="" ref="0x4062f500"/>
        <function-ref name="stop" scoped="" ref="0x4062f778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40632f08" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40632f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x406319f0"/>
        <function-ref name="test" scoped="" ref="0x40624d08"/>
        <function-ref name="fired" scoped="" ref="0x40624a90"/>
        <function-ref name="force" scoped="" ref="0x40631f08"/>
        <function-ref name="get" scoped="" ref="0x40624578"/>
        <function-ref name="reset" scoped="" ref="0x40631010"/>
        <function-ref name="getMode" scoped="" ref="0x40631c90"/>
        <function-ref name="isOn" scoped="" ref="0x40631778"/>
        <function-ref name="set" scoped="" ref="0x406247f0"/>
        <function-ref name="start" scoped="" ref="0x40631288"/>
        <function-ref name="stop" scoped="" ref="0x40631500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40636d28" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40636d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x406347b0"/>
        <function-ref name="test" scoped="" ref="0x40635b20"/>
        <function-ref name="fired" scoped="" ref="0x406358a8"/>
        <function-ref name="force" scoped="" ref="0x40634cc8"/>
        <function-ref name="get" scoped="" ref="0x40635390"/>
        <function-ref name="reset" scoped="" ref="0x40635d98"/>
        <function-ref name="getMode" scoped="" ref="0x40634a50"/>
        <function-ref name="isOn" scoped="" ref="0x40634538"/>
        <function-ref name="set" scoped="" ref="0x40635608"/>
        <function-ref name="start" scoped="" ref="0x40634048"/>
        <function-ref name="stop" scoped="" ref="0x406342c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconCapture" ref="0x4063e988" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconCapture" scoped="" ref="0x4063e988"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40650418"/>
        <function-ref name="test" scoped="" ref="0x4063d7a0"/>
        <function-ref name="fired" scoped="" ref="0x4063d528"/>
        <function-ref name="get" scoped="" ref="0x4063d010"/>
        <function-ref name="reset" scoped="" ref="0x4063da18"/>
        <function-ref name="getMode" scoped="" ref="0x406506b8"/>
        <function-ref name="isOn" scoped="" ref="0x406501a0"/>
        <function-ref name="set" scoped="" ref="0x4063d288"/>
        <function-ref name="start" scoped="" ref="0x4063dc90"/>
        <function-ref name="stop" scoped="" ref="0x4063df08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40650970" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40650970"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40650b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40646100" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40646100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40645b50"/>
        <function-ref name="test" scoped="" ref="0x40646ed8"/>
        <function-ref name="fired" scoped="" ref="0x40646c60"/>
        <function-ref name="force" scoped="" ref="0x40644088"/>
        <function-ref name="get" scoped="" ref="0x40646748"/>
        <function-ref name="reset" scoped="" ref="0x40645170"/>
        <function-ref name="getMode" scoped="" ref="0x40645df0"/>
        <function-ref name="isOn" scoped="" ref="0x406458d8"/>
        <function-ref name="set" scoped="" ref="0x406469c0"/>
        <function-ref name="start" scoped="" ref="0x406453e8"/>
        <function-ref name="stop" scoped="" ref="0x40645660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4063bc08" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4063bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40636690"/>
        <function-ref name="test" scoped="" ref="0x40637a08"/>
        <function-ref name="get" scoped="" ref="0x40637278"/>
        <function-ref name="reset" scoped="" ref="0x40637c80"/>
        <function-ref name="getMode" scoped="" ref="0x40636930"/>
        <function-ref name="overflow" scoped="" ref="0x40637790"/>
        <function-ref name="isOn" scoped="" ref="0x40636418"/>
        <function-ref name="set" scoped="" ref="0x406374f0"/>
        <function-ref name="start" scoped="" ref="0x40637ef8"/>
        <function-ref name="stop" scoped="" ref="0x406361a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40650d60" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40650d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4064e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x40641840" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40641840"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4063e2c0"/>
        <function-ref name="test" scoped="" ref="0x40640628"/>
        <function-ref name="fired" scoped="" ref="0x406403b0"/>
        <function-ref name="get" scoped="" ref="0x40641e88"/>
        <function-ref name="reset" scoped="" ref="0x406408a0"/>
        <function-ref name="getMode" scoped="" ref="0x4063e560"/>
        <function-ref name="isOn" scoped="" ref="0x4063e048"/>
        <function-ref name="set" scoped="" ref="0x40640110"/>
        <function-ref name="start" scoped="" ref="0x40640b18"/>
        <function-ref name="stop" scoped="" ref="0x40640d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40644480" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40644480"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40642ee0"/>
        <function-ref name="test" scoped="" ref="0x40642288"/>
        <function-ref name="fired" scoped="" ref="0x40642010"/>
        <function-ref name="force" scoped="" ref="0x40641438"/>
        <function-ref name="get" scoped="" ref="0x40644ac8"/>
        <function-ref name="reset" scoped="" ref="0x40642500"/>
        <function-ref name="getMode" scoped="" ref="0x406411c0"/>
        <function-ref name="isOn" scoped="" ref="0x40642c68"/>
        <function-ref name="set" scoped="" ref="0x40644d40"/>
        <function-ref name="start" scoped="" ref="0x40642778"/>
        <function-ref name="stop" scoped="" ref="0x406429f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x404ba6d8" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x404ba6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ba8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x406a5808" loc="60:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x406a5808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406a59e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x404bfa38" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404bfa38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404bfc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x406a5400" loc="59:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x406a5400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406a55d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x404bfdd0" loc="58:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x404bfdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406a5010"/>
        <function-ref name="taskLoop" scoped="" ref="0x406a50f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x406a51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40304a98" loc="48:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40304c70"/>
        <function-ref name="runTask" scoped="" ref="0x40304d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x402ff378" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x402ff378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x402ff550"/>
        <function-ref name="taskLoop" scoped="" ref="0x402ff630"/>
        <function-ref name="runNextTask" scoped="" ref="0x402ff710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403c8c18" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403c8c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403c8df0"/>
        <function-ref name="runTask" scoped="" ref="0x403c8ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403d18b8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403d18b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403d1a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403c83e0" loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403c83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403c85b8"/>
        <function-ref name="taskLoop" scoped="" ref="0x403c8698"/>
        <function-ref name="runNextTask" scoped="" ref="0x403c8778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x406a80e0" loc="41:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x406a80e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x406a82b8"/>
        <function-ref name="stopDone" scoped="" ref="0x406a8398"/>
        <function-ref name="start" scoped="" ref="0x406a8478"/>
        <function-ref name="stop" scoped="" ref="0x406a8558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x406b0178" loc="46:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x406b0178"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406b0350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x406a89b8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x406a89b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406a8b90"/>
        <function-ref name="getPayload" scoped="" ref="0x406a8c70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406a8d50"/>
        <function-ref name="cancel" scoped="" ref="0x406a8e30"/>
        <function-ref name="sendDone" scoped="" ref="0x406a8f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x406b2a30" loc="45:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x406b2a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406b2c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x406b04d0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x406b04d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406b06a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x406b0788"/>
        <function-ref name="getPayload" scoped="" ref="0x406b0868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406b0948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406b0a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x406bbb30" loc="52:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x406bbb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x406bbd08"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x406bbde8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x406bbec8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x406ac010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x406b2398" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x406b2398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406b2570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x406b6da0" loc="58:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406b6da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="TRadio" ref="0x40433748"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406be8b8"/>
        <function-ref name="clear" scoped="" ref="0x406bec68"/>
        <function-ref name="isValid" scoped="" ref="0x406be508"/>
        <function-ref name="set" scoped="" ref="0x406bc048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x406bfe00" loc="51:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406bfe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x406ad010"/>
        <function-ref name="noAck" scoped="" ref="0x406ad0f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x406ad1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x406b94a8" loc="56:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x406b94a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x406b9680"/>
        <function-ref name="setChannel" scoped="" ref="0x406b9760"/>
        <function-ref name="getChannel" scoped="" ref="0x406b9840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x406b0bc0" loc="49:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x406b0bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406b0d98"/>
        <function-ref name="source" scoped="" ref="0x406b0e78"/>
        <function-ref name="address" scoped="" ref="0x406af010"/>
        <function-ref name="destination" scoped="" ref="0x406af0f0"/>
        <function-ref name="setSource" scoped="" ref="0x406af1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x406af2b0"/>
        <function-ref name="type" scoped="" ref="0x406af390"/>
        <function-ref name="setType" scoped="" ref="0x406af470"/>
        <function-ref name="isForMe" scoped="" ref="0x406af550"/>
        <function-ref name="setGroup" scoped="" ref="0x406af630"/>
        <function-ref name="localGroup" scoped="" ref="0x406af710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x406bc780" loc="59:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406bc780"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406c92a0"/>
        <function-ref name="clear" scoped="" ref="0x406c9650"/>
        <function-ref name="isValid" scoped="" ref="0x406bced0"/>
        <function-ref name="set" scoped="" ref="0x406c9a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x406c84a0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x406c84a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x406c8678"/>
        <function-ref name="stopDone" scoped="" ref="0x406c8758"/>
        <function-ref name="start" scoped="" ref="0x406c8838"/>
        <function-ref name="stop" scoped="" ref="0x406c8918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x406cf658" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x406cf658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406ce2d0"/>
        <function-ref name="get" scoped="" ref="0x406ce010"/>
        <function-ref name="isSet" scoped="" ref="0x406cfca0"/>
        <function-ref name="set" scoped="" ref="0x406ce590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x406c3520" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x406c3520"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406c36f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x406c2668" loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x406c2668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406c2840"/>
        <function-ref name="payloadLength" scoped="" ref="0x406c2920"/>
        <function-ref name="getPayload" scoped="" ref="0x406c2a00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406c2ae0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406c2bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x406c8d78" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x406c8d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406c4010"/>
        <function-ref name="getPayload" scoped="" ref="0x406c40f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406c41d0"/>
        <function-ref name="cancel" scoped="" ref="0x406c42b0"/>
        <function-ref name="sendDone" scoped="" ref="0x406c4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x406c4e90" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x406c4e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406c3080"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x406d02f0" loc="69:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x406d02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406d0eb8"/>
        <function-ref name="get" scoped="" ref="0x406d0bf8"/>
        <function-ref name="isSet" scoped="" ref="0x406d0938"/>
        <function-ref name="set" scoped="" ref="0x406cf190"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x406d5110" loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x406d5110"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x406d52e8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x406d53c8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x406d54a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x406d5588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x406c47f8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x406c47f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406c49d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x406cc2e8" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406cc2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="TRadio" ref="0x40433748"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406ccde8"/>
        <function-ref name="clear" scoped="" ref="0x406e11b8"/>
        <function-ref name="isValid" scoped="" ref="0x406cca38"/>
        <function-ref name="set" scoped="" ref="0x406e1568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x406e0728" loc="72:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x406e0728"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="TRadio" ref="0x40433748"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406e0d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x406d1e58" loc="68:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x406d1e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406d4af8"/>
        <function-ref name="get" scoped="" ref="0x406d4838"/>
        <function-ref name="isSet" scoped="" ref="0x406d4578"/>
        <function-ref name="set" scoped="" ref="0x406d4db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x406d6af0" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406d6af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x406d6cc8"/>
        <function-ref name="noAck" scoped="" ref="0x406d6da8"/>
        <function-ref name="wasAcked" scoped="" ref="0x406d6e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x406c3c20" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x406c3c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406c3df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x406d5748" loc="66:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x406d5748"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x406d5920"/>
        <function-ref name="setChannel" scoped="" ref="0x406d5a00"/>
        <function-ref name="getChannel" scoped="" ref="0x406d5ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x406c2d58" loc="58:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x406c2d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406d6010"/>
        <function-ref name="source" scoped="" ref="0x406d60f0"/>
        <function-ref name="address" scoped="" ref="0x406d61d0"/>
        <function-ref name="destination" scoped="" ref="0x406d62b0"/>
        <function-ref name="setSource" scoped="" ref="0x406d6390"/>
        <function-ref name="setDestination" scoped="" ref="0x406d6470"/>
        <function-ref name="type" scoped="" ref="0x406d6550"/>
        <function-ref name="setType" scoped="" ref="0x406d6630"/>
        <function-ref name="isForMe" scoped="" ref="0x406d6710"/>
        <function-ref name="setGroup" scoped="" ref="0x406d67f0"/>
        <function-ref name="localGroup" scoped="" ref="0x406d68d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x406e1ca0" loc="74:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406e1ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406de7c0"/>
        <function-ref name="clear" scoped="" ref="0x406deb70"/>
        <function-ref name="isValid" scoped="" ref="0x406de410"/>
        <function-ref name="set" scoped="" ref="0x406def20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x406c2310" loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1ActiveMessageC.nc">
      <component-ref qname="RFA1ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x406c2310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406c24e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x406dd8f8" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x406dd8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x406ddad0"/>
        <function-ref name="stopDone" scoped="" ref="0x406ddbb0"/>
        <function-ref name="start" scoped="" ref="0x406ddc90"/>
        <function-ref name="stop" scoped="" ref="0x406ddd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x406fff08" loc="83:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x406fff08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406feaf8"/>
        <function-ref name="get" scoped="" ref="0x406fe838"/>
        <function-ref name="isSet" scoped="" ref="0x406fe578"/>
        <function-ref name="set" scoped="" ref="0x406fedb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x406ea778" loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x406ea778"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406ea950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x406f3f18" loc="63:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x406f3f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406e9188"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406e9268"/>
        <function-ref name="request" scoped="" ref="0x406e9348"/>
        <function-ref name="granted" scoped="" ref="0x406e9428"/>
        <function-ref name="isOwner" scoped="" ref="0x406e9508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x406d98e0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x406d98e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x406d9ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x406da1f8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x406da1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406da3d0"/>
        <function-ref name="getPayload" scoped="" ref="0x406da4b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406da590"/>
        <function-ref name="cancel" scoped="" ref="0x406da670"/>
        <function-ref name="sendDone" scoped="" ref="0x406da750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x406d9268" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x406d9268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406d9440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40702098" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40702098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40702270"/>
        <function-ref name="address" scoped="" ref="0x40702350"/>
        <function-ref name="destination" scoped="" ref="0x40702430"/>
        <function-ref name="setSource" scoped="" ref="0x40702510"/>
        <function-ref name="setDestination" scoped="" ref="0x407025f0"/>
        <function-ref name="pan" scoped="" ref="0x407026d0"/>
        <function-ref name="setPan" scoped="" ref="0x407027b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40702890"/>
        <function-ref name="localPan" scoped="" ref="0x40702970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x40702bf8" loc="66:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40702bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40702dd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40702eb0"/>
        <function-ref name="getPayload" scoped="" ref="0x406f5010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406f50f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406f51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x406f5978" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x406f5978"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x406f5b50"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x406f5c30"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x406f5d10"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x406f5df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40701ae8" loc="82:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40701ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406ff780"/>
        <function-ref name="get" scoped="" ref="0x406ff4c0"/>
        <function-ref name="isSet" scoped="" ref="0x406ff200"/>
        <function-ref name="set" scoped="" ref="0x406ffa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x406dabb8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x406dabb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406dad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x406ec7d0" loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x406ec7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x406ec9a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x406eca88"/>
        <function-ref name="getPayload" scoped="" ref="0x406ecb68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406ecc48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x406ecd28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x406fce40" loc="86:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x406fce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="TRadio" ref="0x40433748"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406fb990"/>
        <function-ref name="clear" scoped="" ref="0x406fbd40"/>
        <function-ref name="isValid" scoped="" ref="0x406fb5e0"/>
        <function-ref name="set" scoped="" ref="0x406fa108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x406fc2a8" loc="85:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x406fc2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="TRadio" ref="0x40433748"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406fc8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x406f1700" loc="81:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x406f1700"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40701308"/>
        <function-ref name="get" scoped="" ref="0x40701048"/>
        <function-ref name="isSet" scoped="" ref="0x406f1d48"/>
        <function-ref name="set" scoped="" ref="0x407015c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x406f53f0" loc="69:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x406f53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x406f55c8"/>
        <function-ref name="noAck" scoped="" ref="0x406f56a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x406f5788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x406f6ab8" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x406f6ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406f6c90"/>
        <function-ref name="getPayload" scoped="" ref="0x406f6d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x406f6e50"/>
        <function-ref name="cancel" scoped="" ref="0x406ea010"/>
        <function-ref name="sendDone" scoped="" ref="0x406ea0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x406d7010" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x406d7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406d71e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x406f1010" loc="79:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x406f1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x406f11e8"/>
        <function-ref name="setChannel" scoped="" ref="0x406f12c8"/>
        <function-ref name="getChannel" scoped="" ref="0x406f13a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x406d7a60" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x406d7a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x406d7c38"/>
        <function-ref name="source" scoped="" ref="0x406d7d18"/>
        <function-ref name="address" scoped="" ref="0x406d7df8"/>
        <function-ref name="destination" scoped="" ref="0x406d7ed8"/>
        <function-ref name="setSource" scoped="" ref="0x406ec010"/>
        <function-ref name="setDestination" scoped="" ref="0x406ec0f0"/>
        <function-ref name="type" scoped="" ref="0x406ec1d0"/>
        <function-ref name="setType" scoped="" ref="0x406ec2b0"/>
        <function-ref name="isForMe" scoped="" ref="0x406ec390"/>
        <function-ref name="setGroup" scoped="" ref="0x406ec470"/>
        <function-ref name="localGroup" scoped="" ref="0x406ec550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x406ea328" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x406ea328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406ea500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x406fa840" loc="87:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x406fa840"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x406f93c0"/>
        <function-ref name="clear" scoped="" ref="0x406f9770"/>
        <function-ref name="isValid" scoped="" ref="0x406f9010"/>
        <function-ref name="set" scoped="" ref="0x406f9b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x406d76f0" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x406d76f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x406d78c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x40712868" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x40712868"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40712a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x407110f8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x407110f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x407112d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x4071d8a8" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x4071d8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4071da80"/>
        <function-ref name="checkFrame" scoped="" ref="0x4071db60"/>
        <function-ref name="source" scoped="" ref="0x4071dc40"/>
        <function-ref name="destination" scoped="" ref="0x4071dd20"/>
        <function-ref name="setSource" scoped="" ref="0x4071de00"/>
        <function-ref name="setDestination" scoped="" ref="0x4071dee0"/>
        <function-ref name="setGroup" scoped="" ref="0x40712010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x40722e40" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x40722e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x40705050"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x40705130"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x40705210"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x407052f0"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x407053d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40721da0" loc="63:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40721da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="TRadio" ref="0x40433748"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4071c400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40733af8" loc="66:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40733af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="TRadio" ref="0x40433748"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x407386b8"/>
        <function-ref name="clear" scoped="" ref="0x40738a68"/>
        <function-ref name="isValid" scoped="" ref="0x40738308"/>
        <function-ref name="set" scoped="" ref="0x40738e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x407133c0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x407133c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x40713598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x40718be0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40718be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40718db8"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40718e98"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40706010"/>
        <function-ref name="isAckPacket" scoped="" ref="0x407060f0"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x407061d0"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x407062b0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40706390"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40706470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x40739278" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40739278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40739450"/>
        <function-ref name="getDSN" scoped="" ref="0x40739530"/>
        <function-ref name="setFCF" scoped="" ref="0x40739610"/>
        <function-ref name="isAckFrame" scoped="" ref="0x407396f0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x407397d0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x407398b0"/>
        <function-ref name="setDSN" scoped="" ref="0x40739990"/>
        <function-ref name="createAckReply" scoped="" ref="0x40739a70"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40739b50"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40739c30"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40739d10"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40739df0"/>
        <function-ref name="localAddr" scoped="" ref="0x40739ed0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40721090"/>
        <function-ref name="localPan" scoped="" ref="0x40721170"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40721250"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40721330"/>
        <function-ref name="setFramePending" scoped="" ref="0x40721410"/>
        <function-ref name="setDestPan" scoped="" ref="0x407214f0"/>
        <function-ref name="isForMe" scoped="" ref="0x407215d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x407216b0"/>
        <function-ref name="getFCF" scoped="" ref="0x40721790"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40721870"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40721950"/>
        <function-ref name="getFramePending" scoped="" ref="0x40721a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x40714360" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x40714360"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40714538"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40714618"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x407146f8"/>
        <function-ref name="getSender" scoped="" ref="0x407147d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x4070e278" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x4070e278"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x4070e450"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x4070e530"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x4070e610"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x4070e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RFA1Packet" ref="0x40733130" loc="64:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1Packet" scoped="" ref="0x40733130"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40733308"/>
        <function-ref name="payloadLength" scoped="" ref="0x407333e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x407334c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x407335a8"/>
        <function-ref name="headerLength" scoped="" ref="0x40733688"/>
        <function-ref name="metadataLength" scoped="" ref="0x40733768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1DriverConfig" ref="0x40707878" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1DriverConfig" scoped="" ref="0x40707878"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40707a50"/>
        <function-ref name="headerLength" scoped="" ref="0x40707b30"/>
        <function-ref name="metadataLength" scoped="" ref="0x40707c10"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40707cf0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40707dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x40764348" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40764348"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40764530"/>
        <function-ref name="wait" scoped="" ref="0x40764610"/>
        <function-ref name="cancel" scoped="" ref="0x407646f0"/>
        <function-ref name="isFree" scoped="" ref="0x407647d0"/>
        <function-ref name="getNow" scoped="" ref="0x407648b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40764c00" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40764c00"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="TRadio" ref="0x40433748"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x40433a00"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407840f8"/>
        <function-ref name="fired" scoped="" ref="0x4078c898"/>
        <function-ref name="startAt" scoped="" ref="0x4078cd88"/>
        <function-ref name="isRunning" scoped="" ref="0x4078cb10"/>
        <function-ref name="getAlarm" scoped="" ref="0x40784370"/>
        <function-ref name="start" scoped="" ref="0x4078c380"/>
        <function-ref name="stop" scoped="" ref="0x4078c620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x4122ca08" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4122ca08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4122cbf0"/>
        <function-ref name="wait" scoped="" ref="0x4122ccd0"/>
        <function-ref name="cancel" scoped="" ref="0x4122cdb0"/>
        <function-ref name="isFree" scoped="" ref="0x4122ce90"/>
        <function-ref name="getNow" scoped="" ref="0x4122a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x4122a2a0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4122a2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="TRadio" ref="0x40433748"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x40433a00"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41229758"/>
        <function-ref name="fired" scoped="" ref="0x4122af08"/>
        <function-ref name="startAt" scoped="" ref="0x41229418"/>
        <function-ref name="isRunning" scoped="" ref="0x412291a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x412299d0"/>
        <function-ref name="start" scoped="" ref="0x4122a9f0"/>
        <function-ref name="stop" scoped="" ref="0x4122ac90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x41229be0" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x41229be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x41229db8"/>
        <function-ref name="suspend" scoped="" ref="0x41229e98"/>
        <function-ref name="resume" scoped="" ref="0x41227010"/>
        <function-ref name="run" scoped="" ref="0x412270f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x4078ed48" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x4078ed48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x4078ef20"/>
        <function-ref name="suspend" scoped="" ref="0x4078a018"/>
        <function-ref name="resume" scoped="" ref="0x4078a0f8"/>
        <function-ref name="run" scoped="" ref="0x4078a1d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4079aab0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="RFA1RadioC.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4079aab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="T62khz" ref="0x40419eb8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407bf010"/>
        <function-ref name="fired" scoped="" ref="0x407c0740"/>
        <function-ref name="startAt" scoped="" ref="0x407c0c30"/>
        <function-ref name="isRunning" scoped="" ref="0x407c09b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x407bf288"/>
        <function-ref name="start" scoped="" ref="0x407c0228"/>
        <function-ref name="stop" scoped="" ref="0x407c04c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x412656e0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1RadioC.AlarmC.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x412656e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x412631a0"/>
        <function-ref name="test" scoped="" ref="0x41264528"/>
        <function-ref name="fired" scoped="" ref="0x412642b0"/>
        <function-ref name="force" scoped="" ref="0x412636b8"/>
        <function-ref name="get" scoped="" ref="0x41265d28"/>
        <function-ref name="reset" scoped="" ref="0x412647a0"/>
        <function-ref name="getMode" scoped="" ref="0x41263440"/>
        <function-ref name="isOn" scoped="" ref="0x41264f08"/>
        <function-ref name="set" scoped="" ref="0x41264010"/>
        <function-ref name="start" scoped="" ref="0x41264a18"/>
        <function-ref name="stop" scoped="" ref="0x41264c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41220cb0" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1RadioC.AlarmC.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41220cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="T62khz" ref="0x40419eb8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4121e170"/>
        <function-ref name="fired" scoped="" ref="0x4121f928"/>
        <function-ref name="startAt" scoped="" ref="0x4121fe18"/>
        <function-ref name="isRunning" scoped="" ref="0x4121fba0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4121e3e8"/>
        <function-ref name="start" scoped="" ref="0x4121f410"/>
        <function-ref name="stop" scoped="" ref="0x4121f6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41220878" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1RadioC.AlarmC.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41220878"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41220a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x4121e6b8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1RadioC.AlarmC.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x4121e6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x412651a0"/>
        <function-ref name="test" scoped="" ref="0x41267528"/>
        <function-ref name="get" scoped="" ref="0x4121ed00"/>
        <function-ref name="reset" scoped="" ref="0x412677a0"/>
        <function-ref name="getMode" scoped="" ref="0x41265440"/>
        <function-ref name="overflow" scoped="" ref="0x412672b0"/>
        <function-ref name="isOn" scoped="" ref="0x41267f08"/>
        <function-ref name="set" scoped="" ref="0x41267010"/>
        <function-ref name="start" scoped="" ref="0x41267a18"/>
        <function-ref name="stop" scoped="" ref="0x41267c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4080f410" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4080f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4080f5e8"/>
        <function-ref name="cancel" scoped="" ref="0x4080f6c8"/>
        <function-ref name="sendDone" scoped="" ref="0x4080f7a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4080f908" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4080f908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4080fae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40810108" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40810108"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x408102f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40813a80" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40813a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40813c58"/>
        <function-ref name="payloadLength" scoped="" ref="0x40813d38"/>
        <function-ref name="getPayload" scoped="" ref="0x40813e18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40813ef8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40812010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x408121e8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x408121e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408123d0"/>
        <function-ref name="getPayload" scoped="" ref="0x408124b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40812590"/>
        <function-ref name="cancel" scoped="" ref="0x40812670"/>
        <function-ref name="sendDone" scoped="" ref="0x40812750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40812d08" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40812d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40812ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40810c40" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40810c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40810e18"/>
        <function-ref name="payloadLength" scoped="" ref="0x40810ef8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4080f010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4080f0f0"/>
        <function-ref name="headerLength" scoped="" ref="0x4080f1d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x4080f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4080fc40" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4080fc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4080fe18"/>
        <function-ref name="checkFrame" scoped="" ref="0x4080fef8"/>
        <function-ref name="source" scoped="" ref="0x40828010"/>
        <function-ref name="destination" scoped="" ref="0x408280f0"/>
        <function-ref name="setSource" scoped="" ref="0x408281d0"/>
        <function-ref name="setDestination" scoped="" ref="0x408282b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40828390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40812928" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40812928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40812b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x408104e8" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x408104e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408106d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40814e90" loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40814e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40813080"/>
        <function-ref name="source" scoped="" ref="0x40813160"/>
        <function-ref name="address" scoped="" ref="0x40813240"/>
        <function-ref name="destination" scoped="" ref="0x40813320"/>
        <function-ref name="setSource" scoped="" ref="0x40813400"/>
        <function-ref name="setDestination" scoped="" ref="0x408134e0"/>
        <function-ref name="type" scoped="" ref="0x408135c0"/>
        <function-ref name="setType" scoped="" ref="0x408136a0"/>
        <function-ref name="isForMe" scoped="" ref="0x40813780"/>
        <function-ref name="setGroup" scoped="" ref="0x40813860"/>
        <function-ref name="localGroup" scoped="" ref="0x40813940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x408108c8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x408108c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40810ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4124d748" loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4124d748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4124d920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4124d250" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4124d250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4124d428"/>
        <function-ref name="cancel" scoped="" ref="0x4124d508"/>
        <function-ref name="sendDone" scoped="" ref="0x4124d5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x4124fef0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x4124fef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4124e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41250850" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41250850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41250a28"/>
        <function-ref name="payloadLength" scoped="" ref="0x41250b08"/>
        <function-ref name="getPayload" scoped="" ref="0x41250be8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41250cc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41250da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4124f010" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4124f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4124f1f8"/>
        <function-ref name="getPayload" scoped="" ref="0x4124f2d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4124f3b8"/>
        <function-ref name="cancel" scoped="" ref="0x4124f498"/>
        <function-ref name="sendDone" scoped="" ref="0x4124f578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x4124fb30" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x4124fb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4124fd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x41251450" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x41251450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41251628"/>
        <function-ref name="payloadLength" scoped="" ref="0x41251708"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412517e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x412518c8"/>
        <function-ref name="headerLength" scoped="" ref="0x412519a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x41251a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4124da80" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4124da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4124dcd8"/>
        <function-ref name="checkFrame" scoped="" ref="0x4124ddb8"/>
        <function-ref name="source" scoped="" ref="0x4124de98"/>
        <function-ref name="destination" scoped="" ref="0x4124c010"/>
        <function-ref name="setSource" scoped="" ref="0x4124c0f0"/>
        <function-ref name="setDestination" scoped="" ref="0x4124c1d0"/>
        <function-ref name="setGroup" scoped="" ref="0x4124c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x4124c3f0" loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4124c3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x4124c5c8"/>
        <function-ref name="changed" scoped="" ref="0x4124c6a8"/>
        <function-ref name="amGroup" scoped="" ref="0x4124c788"/>
        <function-ref name="setAddress" scoped="" ref="0x4124c868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4124ea40" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4124ea40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4124ec18"/>
        <function-ref name="payloadLength" scoped="" ref="0x4124ecf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4124edd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4124eeb8"/>
        <function-ref name="headerLength" scoped="" ref="0x4124d010"/>
        <function-ref name="metadataLength" scoped="" ref="0x4124d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4124f750" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4124f750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4124f938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x4124e2e8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x4124e2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4124e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41251bc8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41251bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41251da0"/>
        <function-ref name="source" scoped="" ref="0x41251e80"/>
        <function-ref name="address" scoped="" ref="0x41250010"/>
        <function-ref name="destination" scoped="" ref="0x412500f0"/>
        <function-ref name="setSource" scoped="" ref="0x412501d0"/>
        <function-ref name="setDestination" scoped="" ref="0x412502b0"/>
        <function-ref name="type" scoped="" ref="0x41250390"/>
        <function-ref name="setType" scoped="" ref="0x41250470"/>
        <function-ref name="isForMe" scoped="" ref="0x41250550"/>
        <function-ref name="setGroup" scoped="" ref="0x41250630"/>
        <function-ref name="localGroup" scoped="" ref="0x41250710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x4124e6c8" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x4124e6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4124e8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x40804428" loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40804428"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40804600"/>
        <function-ref name="changed" scoped="" ref="0x408046e0"/>
        <function-ref name="amGroup" scoped="" ref="0x408047c0"/>
        <function-ref name="setAddress" scoped="" ref="0x408048a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40824e70" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40824e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40823070"/>
        <function-ref name="cancel" scoped="" ref="0x40823150"/>
        <function-ref name="sendDone" scoped="" ref="0x40823230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40823370" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40823370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40823548"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40823628"/>
        <function-ref name="request" scoped="" ref="0x40823708"/>
        <function-ref name="granted" scoped="" ref="0x408237e8"/>
        <function-ref name="isOwner" scoped="" ref="0x408238c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40824948" loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40824948"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40824b20"/>
        <function-ref name="cancel" scoped="" ref="0x40824c00"/>
        <function-ref name="sendDone" scoped="" ref="0x40824ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40832030" loc="86:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40832030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40832218"/>
        <function-ref name="immediateRequested" scoped="" ref="0x408322f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x408328e8" loc="89:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x408328e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40832ad0"/>
        <function-ref name="configure" scoped="" ref="0x40832bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408338c0" loc="85:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408338c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40833aa8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40833b88"/>
        <function-ref name="request" scoped="" ref="0x40833c68"/>
        <function-ref name="granted" scoped="" ref="0x40833d48"/>
        <function-ref name="isOwner" scoped="" ref="0x40833e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40832438" loc="87:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40832438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40832610"/>
        <function-ref name="userId" scoped="" ref="0x408326f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x412a74b8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x412a74b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x412a7690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x412a77f0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x412a77f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x412a79c8"/>
        <function-ref name="isEmpty" scoped="" ref="0x412a7aa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x412a7b88"/>
        <function-ref name="dequeue" scoped="" ref="0x412a7c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x412a4010" loc="52:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x412a4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x412a41f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x412a42d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x412a48d8" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x412a48d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x412a4ac0"/>
        <function-ref name="configure" scoped="" ref="0x412a4ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x412a4d00" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x412a4d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x412a4ed8"/>
        <function-ref name="isEmpty" scoped="" ref="0x412a3010"/>
        <function-ref name="isEnqueued" scoped="" ref="0x412a30f0"/>
        <function-ref name="dequeue" scoped="" ref="0x412a31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x412a67f0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x412a67f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412a69d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412a6ab8"/>
        <function-ref name="request" scoped="" ref="0x412a6b98"/>
        <function-ref name="granted" scoped="" ref="0x412a6c78"/>
        <function-ref name="isOwner" scoped="" ref="0x412a6d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x412a4418" loc="53:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x412a4418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x412a45f0"/>
        <function-ref name="userId" scoped="" ref="0x412a46d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x412a3350" loc="69:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x412a3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x412a3528"/>
        <function-ref name="runTask" scoped="" ref="0x412a3608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40885d68" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40885d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40884010"/>
        <function-ref name="cancel" scoped="" ref="0x408840f0"/>
        <function-ref name="sendDone" scoped="" ref="0x408841d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40884330" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40884330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40884508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40869808" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40869808"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x408699e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4086a6d8" loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4086a6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4086a8b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4086a990"/>
        <function-ref name="getPayload" scoped="" ref="0x4086aa70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4086ab50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4086ac30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x408855d0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x408855d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408857a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40885888"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40885968"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40885a48"/>
        <function-ref name="headerLength" scoped="" ref="0x40885b28"/>
        <function-ref name="metadataLength" scoped="" ref="0x40885c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x40869b50" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40869b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40869d28"/>
        <function-ref name="getDSN" scoped="" ref="0x40869e08"/>
        <function-ref name="setFCF" scoped="" ref="0x40869ee8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40886010"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x408860f0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x408861d0"/>
        <function-ref name="setDSN" scoped="" ref="0x408862b0"/>
        <function-ref name="createAckReply" scoped="" ref="0x40886390"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40886470"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40886550"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40886630"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40886710"/>
        <function-ref name="localAddr" scoped="" ref="0x408867f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40886950"/>
        <function-ref name="localPan" scoped="" ref="0x40886a30"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40886b10"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40886bf0"/>
        <function-ref name="setFramePending" scoped="" ref="0x40886cd0"/>
        <function-ref name="setDestPan" scoped="" ref="0x40886db0"/>
        <function-ref name="isForMe" scoped="" ref="0x40886e90"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40885010"/>
        <function-ref name="getFCF" scoped="" ref="0x408850f0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x408851d0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x408852b0"/>
        <function-ref name="getFramePending" scoped="" ref="0x40885390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x4086ad70" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x4086ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40869010"/>
        <function-ref name="getPayload" scoped="" ref="0x408690f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408691d0"/>
        <function-ref name="cancel" scoped="" ref="0x408692b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40869390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x408694f0" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x408694f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408696c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4089a6b0" loc="69:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4089a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4089a888"/>
        <function-ref name="cancel" scoped="" ref="0x4089a968"/>
        <function-ref name="sendDone" scoped="" ref="0x4089aa48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4089aba8" loc="70:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4089aba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4089ad80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40880e98" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40880e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4087f0c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4087f1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4087f280"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4087f360"/>
        <function-ref name="headerLength" scoped="" ref="0x4087f440"/>
        <function-ref name="metadataLength" scoped="" ref="0x4087f520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x4087fb78" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x4087fb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4087fd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4089aee0" loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4089aee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408990e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x408991c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408992a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40899380"/>
        <function-ref name="headerLength" scoped="" ref="0x40899460"/>
        <function-ref name="metadataLength" scoped="" ref="0x40899540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x4087f680" loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x4087f680"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4087f858"/>
        <function-ref name="cancel" scoped="" ref="0x4087f938"/>
        <function-ref name="sendDone" scoped="" ref="0x4087fa18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40880668" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40880668"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40880840"/>
        <function-ref name="cancel" scoped="" ref="0x40880920"/>
        <function-ref name="sendDone" scoped="" ref="0x40880a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40880b60" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40880b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40880d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x4087feb0" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x4087feb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4089a0c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x4089a1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4089a280"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4089a360"/>
        <function-ref name="headerLength" scoped="" ref="0x4089a440"/>
        <function-ref name="metadataLength" scoped="" ref="0x4089a520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x408f5b10" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x408f5b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x408f5ce8"/>
        <function-ref name="address" scoped="" ref="0x408f5dc8"/>
        <function-ref name="destination" scoped="" ref="0x408f5ea8"/>
        <function-ref name="setSource" scoped="" ref="0x408f4010"/>
        <function-ref name="setDestination" scoped="" ref="0x408f40f0"/>
        <function-ref name="pan" scoped="" ref="0x408f41d0"/>
        <function-ref name="setPan" scoped="" ref="0x408f42b0"/>
        <function-ref name="isForMe" scoped="" ref="0x408f4390"/>
        <function-ref name="localPan" scoped="" ref="0x408f4470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x408f45b0" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x408f45b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408f4788"/>
        <function-ref name="payloadLength" scoped="" ref="0x408f4868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408f4948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408f4a28"/>
        <function-ref name="headerLength" scoped="" ref="0x408f4b08"/>
        <function-ref name="metadataLength" scoped="" ref="0x408f4be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x408f6110" loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x408f6110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x408f62e8"/>
        <function-ref name="getDSN" scoped="" ref="0x408f63c8"/>
        <function-ref name="setFCF" scoped="" ref="0x408f64a8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x408f6588"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x408f6668"/>
        <function-ref name="createDataFrame" scoped="" ref="0x408f6748"/>
        <function-ref name="setDSN" scoped="" ref="0x408f6828"/>
        <function-ref name="createAckReply" scoped="" ref="0x408f6908"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x408f69e8"/>
        <function-ref name="isDataFrame" scoped="" ref="0x408f6ac8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x408f6ba8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x408f6c88"/>
        <function-ref name="localAddr" scoped="" ref="0x408f6d68"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x408f6ec8"/>
        <function-ref name="localPan" scoped="" ref="0x408f5010"/>
        <function-ref name="setDestAddr" scoped="" ref="0x408f50f0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x408f51d0"/>
        <function-ref name="setFramePending" scoped="" ref="0x408f52b0"/>
        <function-ref name="setDestPan" scoped="" ref="0x408f5390"/>
        <function-ref name="isForMe" scoped="" ref="0x408f5470"/>
        <function-ref name="setAckRequired" scoped="" ref="0x408f5550"/>
        <function-ref name="getFCF" scoped="" ref="0x408f5630"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x408f5710"/>
        <function-ref name="getDestAddr" scoped="" ref="0x408f57f0"/>
        <function-ref name="getFramePending" scoped="" ref="0x408f58d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x408f4d78" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x408f4d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408f3010"/>
        <function-ref name="payloadLength" scoped="" ref="0x408f30f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408f31d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408f32b0"/>
        <function-ref name="headerLength" scoped="" ref="0x408f3390"/>
        <function-ref name="metadataLength" scoped="" ref="0x408f3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x412b0e38" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x412b0e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x412af050"/>
        <function-ref name="address" scoped="" ref="0x412af130"/>
        <function-ref name="destination" scoped="" ref="0x412af210"/>
        <function-ref name="setSource" scoped="" ref="0x412af2f0"/>
        <function-ref name="setDestination" scoped="" ref="0x412af3d0"/>
        <function-ref name="pan" scoped="" ref="0x412af4b0"/>
        <function-ref name="setPan" scoped="" ref="0x412af590"/>
        <function-ref name="isForMe" scoped="" ref="0x412af670"/>
        <function-ref name="localPan" scoped="" ref="0x412af750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x412af890" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x412af890"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x412afa68"/>
        <function-ref name="payloadLength" scoped="" ref="0x412afb48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412afc28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x412afd08"/>
        <function-ref name="headerLength" scoped="" ref="0x412afde8"/>
        <function-ref name="metadataLength" scoped="" ref="0x412afec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x412b1490" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x412b1490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x412b1668"/>
        <function-ref name="getDSN" scoped="" ref="0x412b1748"/>
        <function-ref name="setFCF" scoped="" ref="0x412b1828"/>
        <function-ref name="isAckFrame" scoped="" ref="0x412b1908"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x412b19e8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x412b1ac8"/>
        <function-ref name="setDSN" scoped="" ref="0x412b1ba8"/>
        <function-ref name="createAckReply" scoped="" ref="0x412b1c88"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x412b1d68"/>
        <function-ref name="isDataFrame" scoped="" ref="0x412b1e48"/>
        <function-ref name="getAckRequired" scoped="" ref="0x412b1f28"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x412b0018"/>
        <function-ref name="localAddr" scoped="" ref="0x412b00f8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x412b0258"/>
        <function-ref name="localPan" scoped="" ref="0x412b0338"/>
        <function-ref name="setDestAddr" scoped="" ref="0x412b0418"/>
        <function-ref name="createAckFrame" scoped="" ref="0x412b04f8"/>
        <function-ref name="setFramePending" scoped="" ref="0x412b05d8"/>
        <function-ref name="setDestPan" scoped="" ref="0x412b06b8"/>
        <function-ref name="isForMe" scoped="" ref="0x412b0798"/>
        <function-ref name="setAckRequired" scoped="" ref="0x412b0878"/>
        <function-ref name="getFCF" scoped="" ref="0x412b0958"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x412b0a38"/>
        <function-ref name="getDestAddr" scoped="" ref="0x412b0b18"/>
        <function-ref name="getFramePending" scoped="" ref="0x412b0bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x412ae070" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x412ae070"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x412ae248"/>
        <function-ref name="changed" scoped="" ref="0x412ae328"/>
        <function-ref name="amGroup" scoped="" ref="0x412ae408"/>
        <function-ref name="setAddress" scoped="" ref="0x412ae4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x412ae648" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x412ae648"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x412ae820"/>
        <function-ref name="payloadLength" scoped="" ref="0x412ae900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412ae9e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x412aeac0"/>
        <function-ref name="headerLength" scoped="" ref="0x412aeba0"/>
        <function-ref name="metadataLength" scoped="" ref="0x412aec80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4090e808" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4090e808"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4090e9e0"/>
        <function-ref name="cancel" scoped="" ref="0x4090eac0"/>
        <function-ref name="sendDone" scoped="" ref="0x4090eba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4090ed00" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4090ed00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4090eed8"/>
        <function-ref name="header" scoped="" ref="0x40930010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4090fed8" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4090fed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4090e0c0"/>
        <function-ref name="cancel" scoped="" ref="0x4090e1a0"/>
        <function-ref name="sendDone" scoped="" ref="0x4090e280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40930170" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40930170"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40930348"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40930428"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40930508"/>
        <function-ref name="getSender" scoped="" ref="0x409305e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4090e3c0" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4090e3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4090e598"/>
        <function-ref name="header" scoped="" ref="0x4090e678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4130f1e0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4130f1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4130f3b8"/>
        <function-ref name="cancel" scoped="" ref="0x4130f498"/>
        <function-ref name="sendDone" scoped="" ref="0x4130f578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4130f6d8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4130f6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4130f8b0"/>
        <function-ref name="header" scoped="" ref="0x4130f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x4130d7e8" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4130d7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4130d9c0"/>
        <function-ref name="clearAll" scoped="" ref="0x4130daa0"/>
        <function-ref name="get" scoped="" ref="0x4130db80"/>
        <function-ref name="set" scoped="" ref="0x4130dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41310590" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41310590"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41310768"/>
        <function-ref name="cancel" scoped="" ref="0x41310848"/>
        <function-ref name="sendDone" scoped="" ref="0x41310928"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x4130d150" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x4130d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x4130d328"/>
        <function-ref name="insertNode" scoped="" ref="0x4130d408"/>
        <function-ref name="getNode" scoped="" ref="0x4130d4e8"/>
        <function-ref name="evicted" scoped="" ref="0x4130d5c8"/>
        <function-ref name="getIndex" scoped="" ref="0x4130d6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x41310a68" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x41310a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41310c40"/>
        <function-ref name="header" scoped="" ref="0x41310d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41310e60" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41310e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4130f050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x4130fad0" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x4130fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x4130fca8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x4130fd88"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x4130fe68"/>
        <function-ref name="getSender" scoped="" ref="0x4130d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x4092c1a8" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x4092c1a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x4092c380"/>
        <function-ref name="insertNode" scoped="" ref="0x4092c460"/>
        <function-ref name="getNode" scoped="" ref="0x4092c540"/>
        <function-ref name="evicted" scoped="" ref="0x4092c620"/>
        <function-ref name="getIndex" scoped="" ref="0x4092c700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40929bf8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40929bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40929dd0"/>
        <function-ref name="clearAll" scoped="" ref="0x40929eb0"/>
        <function-ref name="get" scoped="" ref="0x40928010"/>
        <function-ref name="set" scoped="" ref="0x409280f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x409291d0" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x409291d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x409293a8"/>
        <function-ref name="insertNode" scoped="" ref="0x40929488"/>
        <function-ref name="getNode" scoped="" ref="0x40929568"/>
        <function-ref name="evicted" scoped="" ref="0x40929648"/>
        <function-ref name="getIndex" scoped="" ref="0x40929728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4092cd80" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4092cd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40929010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x4130cc28" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4130cc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4130ce00"/>
        <function-ref name="clearAll" scoped="" ref="0x4130cee0"/>
        <function-ref name="get" scoped="" ref="0x4130b010"/>
        <function-ref name="set" scoped="" ref="0x4130b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4094d680" loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4094d680"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4094d858"/>
        <function-ref name="stopDone" scoped="" ref="0x4094d938"/>
        <function-ref name="start" scoped="" ref="0x4094da18"/>
        <function-ref name="stop" scoped="" ref="0x4094daf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x4095d548" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x4095d548"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x4095d720"/>
        <function-ref name="request" scoped="" ref="0x4095d800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4095bb60" loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4095bb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4095bd38"/>
        <function-ref name="ready" scoped="" ref="0x4095be18"/>
        <function-ref name="sendDone" scoped="" ref="0x4095bef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40959090" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40959090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40959268"/>
        <function-ref name="header" scoped="" ref="0x40959348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x4093e468" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x4093e468"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4093e640"/>
        <function-ref name="turnOn" scoped="" ref="0x4093e720"/>
        <function-ref name="setChannel" scoped="" ref="0x4093e800"/>
        <function-ref name="done" scoped="" ref="0x4093e8e0"/>
        <function-ref name="standby" scoped="" ref="0x4093e9c0"/>
        <function-ref name="getChannel" scoped="" ref="0x4093eaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4095d940" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4095d940"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4095db18"/>
        <function-ref name="payloadLength" scoped="" ref="0x4095dbf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4095dcd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4095ddb8"/>
        <function-ref name="headerLength" scoped="" ref="0x4095de98"/>
        <function-ref name="metadataLength" scoped="" ref="0x4095c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x4095b348" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x4095b348"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4095b5a0"/>
        <function-ref name="turnOn" scoped="" ref="0x4095b680"/>
        <function-ref name="setChannel" scoped="" ref="0x4095b760"/>
        <function-ref name="done" scoped="" ref="0x4095b840"/>
        <function-ref name="standby" scoped="" ref="0x4095b920"/>
        <function-ref name="getChannel" scoped="" ref="0x4095ba00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x4095c170" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x4095c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x4095c348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4095d150" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4095d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4095d328"/>
        <function-ref name="header" scoped="" ref="0x4095d408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x4095b010" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x4095b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4095b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x4095c4d8" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x4095c4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4095c6b0"/>
        <function-ref name="stopDone" scoped="" ref="0x4095c790"/>
        <function-ref name="start" scoped="" ref="0x4095c870"/>
        <function-ref name="stop" scoped="" ref="0x4095c950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409598c0" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409598c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40959a98"/>
        <function-ref name="payloadLength" scoped="" ref="0x40959b78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40959c58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40959d38"/>
        <function-ref name="headerLength" scoped="" ref="0x40959e18"/>
        <function-ref name="metadataLength" scoped="" ref="0x40959ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x4093e150" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x4093e150"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4093e328"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40958090" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40958090"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40958268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x4095cab0" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x4095cab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4095cc88"/>
        <function-ref name="cancel" scoped="" ref="0x4095cd68"/>
        <function-ref name="sendDone" scoped="" ref="0x4095ce48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4093ebe0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4093ebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4093edb8"/>
        <function-ref name="ready" scoped="" ref="0x4093ee98"/>
        <function-ref name="sendDone" scoped="" ref="0x4095d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x409594a8" loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x409594a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40959680"/>
        <function-ref name="request" scoped="" ref="0x40959760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x4094dc38" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x4094dc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4094de10"/>
        <function-ref name="cancel" scoped="" ref="0x4094def0"/>
        <function-ref name="sendDone" scoped="" ref="0x4093e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40955e28" loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40955e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40954050"/>
        <function-ref name="stopDone" scoped="" ref="0x40954130"/>
        <function-ref name="start" scoped="" ref="0x40954210"/>
        <function-ref name="stop" scoped="" ref="0x409542f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40966010" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40966010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409661e8"/>
        <function-ref name="cancel" scoped="" ref="0x409662c8"/>
        <function-ref name="sendDone" scoped="" ref="0x409663a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40966508" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40966508"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409666e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40954450" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40954450"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40954628"/>
        <function-ref name="cancel" scoped="" ref="0x40954708"/>
        <function-ref name="sendDone" scoped="" ref="0x409547e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40954c60" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40954c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40954e38"/>
        <function-ref name="payloadLength" scoped="" ref="0x40954f18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40967010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409670f0"/>
        <function-ref name="headerLength" scoped="" ref="0x409671d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x409672b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x409673f0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x409673f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x409675c8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x409676a8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40967788"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40967868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x409679f8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x409679f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40967bd0"/>
        <function-ref name="stopDone" scoped="" ref="0x40967cb0"/>
        <function-ref name="start" scoped="" ref="0x40967d90"/>
        <function-ref name="stop" scoped="" ref="0x40967e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40954948" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40954948"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40954b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40966840" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40966840"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40966a18"/>
        <function-ref name="payloadLength" scoped="" ref="0x40966af8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40966bd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40966cb8"/>
        <function-ref name="headerLength" scoped="" ref="0x40966d98"/>
        <function-ref name="metadataLength" scoped="" ref="0x40966e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x412f65b8" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x412f65b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x412f6790"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x412f6870"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x412f6950"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x412f6a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40961a58" loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40961a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40961c30"/>
        <function-ref name="stopDone" scoped="" ref="0x40961d10"/>
        <function-ref name="start" scoped="" ref="0x40961df0"/>
        <function-ref name="stop" scoped="" ref="0x40961ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x409aad68" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409aad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409a9010"/>
        <function-ref name="turnOn" scoped="" ref="0x409a90f0"/>
        <function-ref name="setChannel" scoped="" ref="0x409a91d0"/>
        <function-ref name="done" scoped="" ref="0x409a92b0"/>
        <function-ref name="standby" scoped="" ref="0x409a9390"/>
        <function-ref name="getChannel" scoped="" ref="0x409a9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x409aa050" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x409aa050"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409aa228"/>
        <function-ref name="cancel" scoped="" ref="0x409aa308"/>
        <function-ref name="sendDone" scoped="" ref="0x409aa3e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x409a9a88" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409a9a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409a9c60"/>
        <function-ref name="header" scoped="" ref="0x409a9d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x409aa548" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x409aa548"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409aa720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x409a95b0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409a95b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409a9788"/>
        <function-ref name="ready" scoped="" ref="0x409a9868"/>
        <function-ref name="sendDone" scoped="" ref="0x409a9948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x409aa860" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x409aa860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x409aaa38"/>
        <function-ref name="setChannel" scoped="" ref="0x409aab18"/>
        <function-ref name="getChannel" scoped="" ref="0x409aabf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x412f4900" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x412f4900"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x412f4ad8"/>
        <function-ref name="stopDone" scoped="" ref="0x412f4bb8"/>
        <function-ref name="start" scoped="" ref="0x412f4c98"/>
        <function-ref name="stop" scoped="" ref="0x412f4d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x412f4ed8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x412f4ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413370c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x41336010" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x41336010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x413361e8"/>
        <function-ref name="turnOn" scoped="" ref="0x413362c8"/>
        <function-ref name="setChannel" scoped="" ref="0x413363a8"/>
        <function-ref name="done" scoped="" ref="0x41336488"/>
        <function-ref name="standby" scoped="" ref="0x41336568"/>
        <function-ref name="getChannel" scoped="" ref="0x41336648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41337220" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41337220"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413373f8"/>
        <function-ref name="cancel" scoped="" ref="0x413374d8"/>
        <function-ref name="sendDone" scoped="" ref="0x413375b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x41335aa0" loc="189:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x41335aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41335c78"/>
        <function-ref name="runTask" scoped="" ref="0x41335d58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x41335230" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x41335230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41335408"/>
        <function-ref name="header" scoped="" ref="0x413354e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x41335ed8" loc="144:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x41335ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x413340c0"/>
        <function-ref name="runTask" scoped="" ref="0x413341a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41337718" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41337718"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413378f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x41335668" loc="322:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x41335668"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41335840"/>
        <function-ref name="runTask" scoped="" ref="0x41335920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x41336d40" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x41336d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41336f18"/>
        <function-ref name="ready" scoped="" ref="0x41335010"/>
        <function-ref name="sendDone" scoped="" ref="0x413350f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x41337a30" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x41337a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x41337c08"/>
        <function-ref name="setChannel" scoped="" ref="0x41337ce8"/>
        <function-ref name="getChannel" scoped="" ref="0x41337dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x41336788" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x41336788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x41336960"/>
        <function-ref name="suspend" scoped="" ref="0x41336a40"/>
        <function-ref name="resume" scoped="" ref="0x41336b20"/>
        <function-ref name="run" scoped="" ref="0x41336c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409a5280" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409a5280"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409a5458"/>
        <function-ref name="ready" scoped="" ref="0x409a5538"/>
        <function-ref name="sendDone" scoped="" ref="0x409a5618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409a5778" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409a5778"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409a5950"/>
        <function-ref name="header" scoped="" ref="0x409a5a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x409a5b70" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x409a5b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409a5d48"/>
        <function-ref name="wait" scoped="" ref="0x409a5e28"/>
        <function-ref name="cancel" scoped="" ref="0x409a5f08"/>
        <function-ref name="isFree" scoped="" ref="0x409c3010"/>
        <function-ref name="getNow" scoped="" ref="0x409c30f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409c3250" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409c3250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x409c3428"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x409c3508"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x409c35e8"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x409c36c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409a6d70" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409a6d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409a5010"/>
        <function-ref name="header" scoped="" ref="0x409a50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409a6898" loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409a6898"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409a6a70"/>
        <function-ref name="ready" scoped="" ref="0x409a6b50"/>
        <function-ref name="sendDone" scoped="" ref="0x409a6c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x413160a0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x413160a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41316278"/>
        <function-ref name="ready" scoped="" ref="0x41316358"/>
        <function-ref name="sendDone" scoped="" ref="0x41316438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x41316598" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x41316598"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41316770"/>
        <function-ref name="header" scoped="" ref="0x41316850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x41316990" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x41316990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41316b68"/>
        <function-ref name="wait" scoped="" ref="0x41316c48"/>
        <function-ref name="cancel" scoped="" ref="0x41316d28"/>
        <function-ref name="isFree" scoped="" ref="0x41316e08"/>
        <function-ref name="getNow" scoped="" ref="0x41316ee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x4135b040" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4135b040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4135b218"/>
        <function-ref name="rand32" scoped="" ref="0x4135b2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4135b458" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4135b458"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x4135b630"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x4135b710"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x4135b7f0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x4135b8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x41318c40" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x41318c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41318e18"/>
        <function-ref name="header" scoped="" ref="0x41318ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x41318768" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x41318768"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41318940"/>
        <function-ref name="ready" scoped="" ref="0x41318a20"/>
        <function-ref name="sendDone" scoped="" ref="0x41318b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x4135ba50" loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x4135ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4135bc28"/>
        <function-ref name="runTask" scoped="" ref="0x4135bd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x409c4d40" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x409c4d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x409c4f18"/>
        <function-ref name="rand32" scoped="" ref="0x409c6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x409c4480" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x409c4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409c4aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409c7188" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409c7188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409c7360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x409c27f0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x409c27f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x409c29c8"/>
        <function-ref name="rand32" scoped="" ref="0x409c2aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x409c6ee0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x409c6ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409c2558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409c69c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409c69c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409c6b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409d9440" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409d9440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409d9618"/>
        <function-ref name="ready" scoped="" ref="0x409d96f8"/>
        <function-ref name="sendDone" scoped="" ref="0x409d97d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409d9938" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409d9938"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409d9b10"/>
        <function-ref name="header" scoped="" ref="0x409d9bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x409d9d30" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x409d9d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x409d9f08"/>
        <function-ref name="wait" scoped="" ref="0x409e2010"/>
        <function-ref name="cancel" scoped="" ref="0x409e20f0"/>
        <function-ref name="isFree" scoped="" ref="0x409e21d0"/>
        <function-ref name="getNow" scoped="" ref="0x409e22b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x409e2d68" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x409e2d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409e1010"/>
        <function-ref name="get" scoped="" ref="0x409e10f0"/>
        <function-ref name="setValue" scoped="" ref="0x409e11d0"/>
        <function-ref name="set" scoped="" ref="0x409e12b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409e2410" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409e2410"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x409e25e8"/>
        <function-ref name="createAckPacket" scoped="" ref="0x409e26c8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x409e27a8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x409e2888"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x409e2968"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x409e2a48"/>
        <function-ref name="setAckRequired" scoped="" ref="0x409e2b28"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x409e2c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409dab08" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409dab08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409dace0"/>
        <function-ref name="header" scoped="" ref="0x409dadc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409da630" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409da630"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409da808"/>
        <function-ref name="ready" scoped="" ref="0x409da8e8"/>
        <function-ref name="sendDone" scoped="" ref="0x409da9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x409daf00" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409daf00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x409d90f0"/>
        <function-ref name="noAck" scoped="" ref="0x409d91d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x409d92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40a01d70" loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40a01d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409ff010"/>
        <function-ref name="stopDone" scoped="" ref="0x409ff0f0"/>
        <function-ref name="start" scoped="" ref="0x409ff1d0"/>
        <function-ref name="stop" scoped="" ref="0x409ff2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x409fecc0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x409fecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409fee98"/>
        <function-ref name="request" scoped="" ref="0x409fd010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409fb330" loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409fb330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409fb508"/>
        <function-ref name="ready" scoped="" ref="0x409fb5e8"/>
        <function-ref name="sendDone" scoped="" ref="0x409fb6c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409fb828" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409fb828"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409fba00"/>
        <function-ref name="header" scoped="" ref="0x409fbae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x409ffbe0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x409ffbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409ffdb8"/>
        <function-ref name="turnOn" scoped="" ref="0x409ffe98"/>
        <function-ref name="setChannel" scoped="" ref="0x409fe010"/>
        <function-ref name="done" scoped="" ref="0x409fe0f0"/>
        <function-ref name="standby" scoped="" ref="0x409fe1d0"/>
        <function-ref name="getChannel" scoped="" ref="0x409fe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409fd150" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409fd150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409fd328"/>
        <function-ref name="payloadLength" scoped="" ref="0x409fd408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409fd4e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409fd5c8"/>
        <function-ref name="headerLength" scoped="" ref="0x409fd6a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x409fd788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x409fca80" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x409fca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x409fccd8"/>
        <function-ref name="turnOn" scoped="" ref="0x409fcdb8"/>
        <function-ref name="setChannel" scoped="" ref="0x409fce98"/>
        <function-ref name="done" scoped="" ref="0x409fb010"/>
        <function-ref name="standby" scoped="" ref="0x409fb0f0"/>
        <function-ref name="getChannel" scoped="" ref="0x409fb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x409fd8e8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x409fd8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409fdac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409fe8c8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409fe8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409feaa0"/>
        <function-ref name="header" scoped="" ref="0x409feb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x409fc748" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x409fc748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409fc920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x409fdc50" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x409fdc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409fde28"/>
        <function-ref name="stopDone" scoped="" ref="0x409fdf08"/>
        <function-ref name="start" scoped="" ref="0x409fc010"/>
        <function-ref name="stop" scoped="" ref="0x409fc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409fa090" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409fa090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409fa268"/>
        <function-ref name="payloadLength" scoped="" ref="0x409fa348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409fa428"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409fa508"/>
        <function-ref name="headerLength" scoped="" ref="0x409fa5e8"/>
        <function-ref name="metadataLength" scoped="" ref="0x409fa6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x409ff8c8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x409ff8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409ffaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x409fa828" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x409fa828"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x409faa00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x409fc250" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x409fc250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409fc428"/>
        <function-ref name="cancel" scoped="" ref="0x409fc508"/>
        <function-ref name="sendDone" scoped="" ref="0x409fc5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x409fe3f0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x409fe3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409fe5c8"/>
        <function-ref name="ready" scoped="" ref="0x409fe6a8"/>
        <function-ref name="sendDone" scoped="" ref="0x409fe788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x409fbc40" loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x409fbc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x409fbe18"/>
        <function-ref name="request" scoped="" ref="0x409fbef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x409ff3f0" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x409ff3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409ff5c8"/>
        <function-ref name="cancel" scoped="" ref="0x409ff6a8"/>
        <function-ref name="sendDone" scoped="" ref="0x409ff788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x40a43e30" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x40a43e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a42050"/>
        <function-ref name="get" scoped="" ref="0x40a42130"/>
        <function-ref name="setValue" scoped="" ref="0x40a42210"/>
        <function-ref name="set" scoped="" ref="0x40a422f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a445b0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a445b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a44788"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a44868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a44948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a44a28"/>
        <function-ref name="headerLength" scoped="" ref="0x40a44b08"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a44be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40a43698" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40a43698"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a43870"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a43950"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a43a30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a43b10"/>
        <function-ref name="headerLength" scoped="" ref="0x40a43bf0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a43cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40a47ec8" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40a47ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="TRadio" ref="0x40433748"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a46a30"/>
        <function-ref name="clear" scoped="" ref="0x40a46de0"/>
        <function-ref name="isValid" scoped="" ref="0x40a46680"/>
        <function-ref name="set" scoped="" ref="0x40a441b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x40a44e08" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a44e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="TRadio" ref="0x40433748"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a43468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x409f66f8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x409f66f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a47230"/>
        <function-ref name="clear" scoped="" ref="0x40a475e0"/>
        <function-ref name="isValid" scoped="" ref="0x409f6e48"/>
        <function-ref name="set" scoped="" ref="0x40a47990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x41377280" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x41377280"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41377458"/>
        <function-ref name="get" scoped="" ref="0x41377538"/>
        <function-ref name="setValue" scoped="" ref="0x41377618"/>
        <function-ref name="set" scoped="" ref="0x413776f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x413789f8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x413789f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41378bd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x41378cb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41378d90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41378e70"/>
        <function-ref name="headerLength" scoped="" ref="0x41377010"/>
        <function-ref name="metadataLength" scoped="" ref="0x413770f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x41376b48" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x41376b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41376d20"/>
        <function-ref name="payloadLength" scoped="" ref="0x41376e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41376ee0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41375010"/>
        <function-ref name="headerLength" scoped="" ref="0x413750f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x413751d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x41379378" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x41379378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="TRadio" ref="0x40433748"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x41379e78"/>
        <function-ref name="clear" scoped="" ref="0x41378250"/>
        <function-ref name="isValid" scoped="" ref="0x41379ac8"/>
        <function-ref name="set" scoped="" ref="0x41378600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x413778e8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x413778e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="TRadio" ref="0x40433748"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41376010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x413762d0" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x413762d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41376918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4137eb78" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4137eb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4137b6b8"/>
        <function-ref name="clear" scoped="" ref="0x4137ba68"/>
        <function-ref name="isValid" scoped="" ref="0x4137b308"/>
        <function-ref name="set" scoped="" ref="0x4137be18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40a308c0" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40a308c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a30f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40a26bf8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40a26bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a2c278"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40a2c5c8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a2c5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a2cd18"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a25288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a25010"/>
        <function-ref name="overflow" scoped="" ref="0x40a25500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a3d150" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a3d150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a3d328"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a3d408"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a3d4e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a3d5c8"/>
        <function-ref name="headerLength" scoped="" ref="0x40a3d6a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a3d788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40a3d918" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40a3d918"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a3daf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a3dbd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a3dcb0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a3dd90"/>
        <function-ref name="headerLength" scoped="" ref="0x40a3de70"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a4f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40a3faf0" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40a3faf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a3fcd8"/>
        <function-ref name="get" scoped="" ref="0x40a3fdb8"/>
        <function-ref name="setValue" scoped="" ref="0x40a3fe98"/>
        <function-ref name="set" scoped="" ref="0x40a3d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40a4e2b0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40a4e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a4e488"/>
        <function-ref name="stopDone" scoped="" ref="0x40a4e568"/>
        <function-ref name="start" scoped="" ref="0x40a4e648"/>
        <function-ref name="stop" scoped="" ref="0x40a4e728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40a4c150" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40a4c150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40a4c328"/>
        <function-ref name="request" scoped="" ref="0x40a4c408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40a496a0" loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40a496a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a49878"/>
        <function-ref name="ready" scoped="" ref="0x40a49958"/>
        <function-ref name="sendDone" scoped="" ref="0x40a49a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40a49b98" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40a49b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a49d70"/>
        <function-ref name="header" scoped="" ref="0x40a49e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40a4d070" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40a4d070"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40a4d248"/>
        <function-ref name="turnOn" scoped="" ref="0x40a4d328"/>
        <function-ref name="setChannel" scoped="" ref="0x40a4d408"/>
        <function-ref name="done" scoped="" ref="0x40a4d4e8"/>
        <function-ref name="standby" scoped="" ref="0x40a4d5c8"/>
        <function-ref name="getChannel" scoped="" ref="0x40a4d6a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a4c548" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a4c548"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a4c720"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a4c800"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a4c8e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a4c9c0"/>
        <function-ref name="headerLength" scoped="" ref="0x40a4caa0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a4cb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40a4be68" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40a4be68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40a490e0"/>
        <function-ref name="turnOn" scoped="" ref="0x40a491c0"/>
        <function-ref name="setChannel" scoped="" ref="0x40a492a0"/>
        <function-ref name="done" scoped="" ref="0x40a49380"/>
        <function-ref name="standby" scoped="" ref="0x40a49460"/>
        <function-ref name="getChannel" scoped="" ref="0x40a49540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40a4cce0" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40a4cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40a4ceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40a4dcc0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40a4dcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a4de98"/>
        <function-ref name="header" scoped="" ref="0x40a4c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40a4bb30" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40a4bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a4bd08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40a4b060" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40a4b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a4b238"/>
        <function-ref name="stopDone" scoped="" ref="0x40a4b318"/>
        <function-ref name="start" scoped="" ref="0x40a4b3f8"/>
        <function-ref name="stop" scoped="" ref="0x40a4b4d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40a48428" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40a48428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a48600"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a486e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a487c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a488a0"/>
        <function-ref name="headerLength" scoped="" ref="0x40a48980"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a48a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40a4ed40" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40a4ed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a4ef18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a48bc0" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a48bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40a48d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40a4b638" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40a4b638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a4b810"/>
        <function-ref name="cancel" scoped="" ref="0x40a4b8f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a4b9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40a4d7e8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40a4d7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a4d9c0"/>
        <function-ref name="ready" scoped="" ref="0x40a4daa0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a4db80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40a48010" loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40a48010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40a481e8"/>
        <function-ref name="request" scoped="" ref="0x40a482c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40a4e868" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40a4e868"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a4ea40"/>
        <function-ref name="cancel" scoped="" ref="0x40a4eb20"/>
        <function-ref name="sendDone" scoped="" ref="0x40a4ec00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40a667e0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40a667e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40a669b8"/>
        <function-ref name="request" scoped="" ref="0x40a66a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40a64980" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40a64980"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a62590"/>
        <function-ref name="get" scoped="" ref="0x40a622d0"/>
        <function-ref name="isSet" scoped="" ref="0x40a62010"/>
        <function-ref name="set" scoped="" ref="0x40a62850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40a5a728" loc="64:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40a5a728"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a5a900"/>
        <function-ref name="get" scoped="" ref="0x40a5a9e0"/>
        <function-ref name="setValue" scoped="" ref="0x40a5aac0"/>
        <function-ref name="set" scoped="" ref="0x40a5aba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a5d7d0" loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a5d7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="TRadio" ref="0x40433748"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a5b2e8"/>
        <function-ref name="clear" scoped="" ref="0x40a5b698"/>
        <function-ref name="isValid" scoped="" ref="0x40a5df20"/>
        <function-ref name="set" scoped="" ref="0x40a5ba48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40a695c0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40a695c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40a69798"/>
        <function-ref name="turnOn" scoped="" ref="0x40a69878"/>
        <function-ref name="setChannel" scoped="" ref="0x40a69958"/>
        <function-ref name="done" scoped="" ref="0x40a69a38"/>
        <function-ref name="standby" scoped="" ref="0x40a69b18"/>
        <function-ref name="getChannel" scoped="" ref="0x40a69bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40a65618" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a65618"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a641f8"/>
        <function-ref name="get" scoped="" ref="0x40a65f20"/>
        <function-ref name="isSet" scoped="" ref="0x40a65c60"/>
        <function-ref name="set" scoped="" ref="0x40a644b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a66c48" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a66c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a66e20"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a66f00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a65010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a650f0"/>
        <function-ref name="headerLength" scoped="" ref="0x40a651d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a652b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a5ee98" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a5ee98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a5d0c0"/>
        <function-ref name="headerLength" scoped="" ref="0x40a5d1a0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a5d280"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40a5d360"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40a5d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40a66390" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40a66390"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a66568"/>
        <function-ref name="header" scoped="" ref="0x40a66648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40a62d80" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a62d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a61960"/>
        <function-ref name="get" scoped="" ref="0x40a616a0"/>
        <function-ref name="isSet" scoped="" ref="0x40a613e0"/>
        <function-ref name="set" scoped="" ref="0x40a61c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40a5e4e8" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40a5e4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="TRadio" ref="0x40433748"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a5eb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40a69d98" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40a69d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a66010"/>
        <function-ref name="ready" scoped="" ref="0x40a660f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a661d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40a5f158" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a5f158"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a5fd20"/>
        <function-ref name="get" scoped="" ref="0x40a5fa60"/>
        <function-ref name="isSet" scoped="" ref="0x40a5f7a0"/>
        <function-ref name="set" scoped="" ref="0x40a5e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40a5ade8" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a5ade8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a7d010"/>
        <function-ref name="get" scoped="" ref="0x40a7d0f0"/>
        <function-ref name="setValue" scoped="" ref="0x40a7d1d0"/>
        <function-ref name="set" scoped="" ref="0x40a7d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40a5a010" loc="63:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a5a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a5a268"/>
        <function-ref name="get" scoped="" ref="0x40a5a348"/>
        <function-ref name="setValue" scoped="" ref="0x40a5a428"/>
        <function-ref name="set" scoped="" ref="0x40a5a508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40a78c38" loc="58:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40a78c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40a78e10"/>
        <function-ref name="request" scoped="" ref="0x40a78ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40a75de0" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40a75de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a749e8"/>
        <function-ref name="get" scoped="" ref="0x40a74728"/>
        <function-ref name="isSet" scoped="" ref="0x40a74468"/>
        <function-ref name="set" scoped="" ref="0x40a74ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40a6e7f8" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40a6e7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a6e9d0"/>
        <function-ref name="get" scoped="" ref="0x40a6eab0"/>
        <function-ref name="setValue" scoped="" ref="0x40a6eb90"/>
        <function-ref name="set" scoped="" ref="0x40a6ec70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40a796d8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40a796d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a798b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a8f8a0" loc="77:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a8f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="TRadio" ref="0x40433748"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a8d3c0"/>
        <function-ref name="clear" scoped="" ref="0x40a8d770"/>
        <function-ref name="isValid" scoped="" ref="0x40a8d010"/>
        <function-ref name="set" scoped="" ref="0x40a8db20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40a79a58" loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40a79a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40a79c30"/>
        <function-ref name="turnOn" scoped="" ref="0x40a79d10"/>
        <function-ref name="setChannel" scoped="" ref="0x40a79df0"/>
        <function-ref name="done" scoped="" ref="0x40a79ed0"/>
        <function-ref name="standby" scoped="" ref="0x40a78010"/>
        <function-ref name="getChannel" scoped="" ref="0x40a780f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40a8c088" loc="78:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40a8c088"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="TRadio" ref="0x40433748"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a8c6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40a76a70" loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40a76a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a75658"/>
        <function-ref name="get" scoped="" ref="0x40a75398"/>
        <function-ref name="isSet" scoped="" ref="0x40a750d8"/>
        <function-ref name="set" scoped="" ref="0x40a75918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a760d0" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a760d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a762a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a76388"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a76468"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a76548"/>
        <function-ref name="headerLength" scoped="" ref="0x40a76628"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a76708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a6f8c0" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a6f8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a6fa98"/>
        <function-ref name="headerLength" scoped="" ref="0x40a6fb78"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a6fc58"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40a6fd38"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40a6fe18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40a787e8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40a787e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a789c0"/>
        <function-ref name="header" scoped="" ref="0x40a78aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40a72208" loc="63:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a72208"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a72dd0"/>
        <function-ref name="get" scoped="" ref="0x40a72b10"/>
        <function-ref name="isSet" scoped="" ref="0x40a72850"/>
        <function-ref name="set" scoped="" ref="0x40a710a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40a79078" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40a79078"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a79250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40a78290" loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40a78290"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a78468"/>
        <function-ref name="ready" scoped="" ref="0x40a78548"/>
        <function-ref name="sendDone" scoped="" ref="0x40a78628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40a715b8" loc="64:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40a715b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a6f1b0"/>
        <function-ref name="get" scoped="" ref="0x40a71ec0"/>
        <function-ref name="isSet" scoped="" ref="0x40a71c00"/>
        <function-ref name="set" scoped="" ref="0x40a6f470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40a6eeb8" loc="74:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40a6eeb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a6d0c0"/>
        <function-ref name="get" scoped="" ref="0x40a6d1a0"/>
        <function-ref name="setValue" scoped="" ref="0x40a6d280"/>
        <function-ref name="set" scoped="" ref="0x40a6d360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SfdCapture" ref="0x40a6d698" loc="76:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40a6d698"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40a8f1a0"/>
        <function-ref name="test" scoped="" ref="0x40a6c528"/>
        <function-ref name="fired" scoped="" ref="0x40a6c2b0"/>
        <function-ref name="get" scoped="" ref="0x40a6dce0"/>
        <function-ref name="reset" scoped="" ref="0x40a6c7a0"/>
        <function-ref name="getMode" scoped="" ref="0x40a8f440"/>
        <function-ref name="isOn" scoped="" ref="0x40a6cf08"/>
        <function-ref name="set" scoped="" ref="0x40a6c010"/>
        <function-ref name="start" scoped="" ref="0x40a6ca18"/>
        <function-ref name="stop" scoped="" ref="0x40a6cc90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40a6e0e0" loc="72:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40a6e0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a6e338"/>
        <function-ref name="get" scoped="" ref="0x40a6e418"/>
        <function-ref name="setValue" scoped="" ref="0x40a6e4f8"/>
        <function-ref name="set" scoped="" ref="0x40a6e5d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40a8c928" loc="80:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40a8c928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40a8cb00"/>
        <function-ref name="suspend" scoped="" ref="0x40a8cbe0"/>
        <function-ref name="resume" scoped="" ref="0x40a8ccc0"/>
        <function-ref name="run" scoped="" ref="0x40a8cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40af8cf8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LocalTime62khzC.nc">
      <component-ref qname="LocalTime62khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40af8cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="T62khz" ref="0x40419eb8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40af5370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40af3260" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.LocalTime62khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40af3260"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="T62khz" ref="0x40419eb8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40af38a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40af3bf8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.LocalTime62khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40af3bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="T62khz" ref="0x40419eb8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40af2380"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40af2870"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40af25f8"/>
        <function-ref name="overflow" scoped="" ref="0x40af2ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40b1c468" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationC.nc">
      <component-ref qname="DisseminationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40b1c468"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b1c640"/>
        <function-ref name="stop" scoped="" ref="0x40b1c720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x40b17210" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x40b17210"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40b173e8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x40b174c8"/>
        <function-ref name="reset" scoped="" ref="0x40b175a8"/>
        <function-ref name="start" scoped="" ref="0x40b17688"/>
        <function-ref name="stop" scoped="" ref="0x40b17768"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x40b3bda8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x40b3bda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x40b180f0"/>
        <function-ref name="stop" scoped="" ref="0x40b18470"/>
        <function-ref name="newData" scoped="" ref="0x40b181d0"/>
        <function-ref name="start" scoped="" ref="0x40b182b0"/>
        <function-ref name="requestSeqno" scoped="" ref="0x40b18390"/>
        <function-ref name="requestData" scoped="" ref="0x40b18010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40b19040" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40b19040"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b19218"/>
        <function-ref name="stop" scoped="" ref="0x40b192f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x40b17ce0" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineP.nc">
      <component-ref qname="DisseminationEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x40b17ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b17eb8"/>
        <function-ref name="stop" scoped="" ref="0x40b38010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeReceive" ref="0x40b33de0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeReceive" scoped="" ref="0x40b33de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b32010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProbeAMSend" ref="0x40b33660" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProbeAMSend" scoped="" ref="0x40b33660"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b33838"/>
        <function-ref name="getPayload" scoped="" ref="0x40b33918"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b339f8"/>
        <function-ref name="cancel" scoped="" ref="0x40b33ad8"/>
        <function-ref name="sendDone" scoped="" ref="0x40b33bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40b34b80" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40b34b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b34d58"/>
        <function-ref name="getPayload" scoped="" ref="0x40b34e38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b34f18"/>
        <function-ref name="cancel" scoped="" ref="0x40b33010"/>
        <function-ref name="sendDone" scoped="" ref="0x40b330f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x40b35bf0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x40b35bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40b35dc8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x40b35ea8"/>
        <function-ref name="reset" scoped="" ref="0x40b34010"/>
        <function-ref name="start" scoped="" ref="0x40b340f0"/>
        <function-ref name="stop" scoped="" ref="0x40b341d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminationCache" ref="0x40b35100" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x40b35100"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="storeData" scoped="" ref="0x40b353b8"/>
        <function-ref name="stop" scoped="" ref="0x40b35738"/>
        <function-ref name="newData" scoped="" ref="0x40b35498"/>
        <function-ref name="start" scoped="" ref="0x40b35578"/>
        <function-ref name="requestSeqno" scoped="" ref="0x40b35658"/>
        <function-ref name="requestData" scoped="" ref="0x40b352d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x40b33278" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40b33278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b33450"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40b32180" loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40b32180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40b32358"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40b32438"/>
        <function-ref name="led1On" scoped="" ref="0x40b32518"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40b325f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40b326d8"/>
        <function-ref name="get" scoped="" ref="0x40b327b8"/>
        <function-ref name="led1Off" scoped="" ref="0x40b32898"/>
        <function-ref name="led2Off" scoped="" ref="0x40b32c18"/>
        <function-ref name="set" scoped="" ref="0x40b32978"/>
        <function-ref name="led0On" scoped="" ref="0x40b32a58"/>
        <function-ref name="led2On" scoped="" ref="0x40b32b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40b388b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40b388b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b38a88"/>
        <function-ref name="stop" scoped="" ref="0x40b38b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DisseminatorControl" ref="0x40b34748" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationEngineImplP.nc">
      <component-ref qname="DisseminationEngineImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminatorControl" scoped="" ref="0x40b34748"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b34920"/>
        <function-ref name="stop" scoped="" ref="0x40b34a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40b56e08" loc="49:/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40b56e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b54010"/>
        <function-ref name="getPayload" scoped="" ref="0x40b540f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b541d0"/>
        <function-ref name="cancel" scoped="" ref="0x40b542b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b54390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40b544d0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40b544d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b546a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b54788"/>
        <function-ref name="getPayload" scoped="" ref="0x40b54868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b54948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b54a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40b54b68" loc="51:/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40b54b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40b54d40"/>
        <function-ref name="source" scoped="" ref="0x40b54e20"/>
        <function-ref name="address" scoped="" ref="0x40b54f00"/>
        <function-ref name="destination" scoped="" ref="0x40baa010"/>
        <function-ref name="setSource" scoped="" ref="0x40baa0f0"/>
        <function-ref name="setDestination" scoped="" ref="0x40baa1d0"/>
        <function-ref name="type" scoped="" ref="0x40baa2b0"/>
        <function-ref name="setType" scoped="" ref="0x40baa390"/>
        <function-ref name="isForMe" scoped="" ref="0x40baa470"/>
        <function-ref name="setGroup" scoped="" ref="0x40baa550"/>
        <function-ref name="localGroup" scoped="" ref="0x40baa630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40baa790" loc="52:/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40baa790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40baa968"/>
        <function-ref name="noAck" scoped="" ref="0x40baaa48"/>
        <function-ref name="wasAcked" scoped="" ref="0x40baab28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41396200" loc="49:/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41396200"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413963d8"/>
        <function-ref name="getPayload" scoped="" ref="0x413964b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41396598"/>
        <function-ref name="cancel" scoped="" ref="0x41396678"/>
        <function-ref name="sendDone" scoped="" ref="0x41396758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41396898" loc="50:/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41396898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41396a70"/>
        <function-ref name="payloadLength" scoped="" ref="0x41396b50"/>
        <function-ref name="getPayload" scoped="" ref="0x41396c30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41396d10"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41396df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41395010" loc="51:/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41395010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x413951e8"/>
        <function-ref name="source" scoped="" ref="0x413952c8"/>
        <function-ref name="address" scoped="" ref="0x413953a8"/>
        <function-ref name="destination" scoped="" ref="0x41395488"/>
        <function-ref name="setSource" scoped="" ref="0x41395568"/>
        <function-ref name="setDestination" scoped="" ref="0x41395648"/>
        <function-ref name="type" scoped="" ref="0x41395728"/>
        <function-ref name="setType" scoped="" ref="0x41395808"/>
        <function-ref name="isForMe" scoped="" ref="0x413958e8"/>
        <function-ref name="setGroup" scoped="" ref="0x413959c8"/>
        <function-ref name="localGroup" scoped="" ref="0x41395aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41395c08" loc="52:/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41395c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41395de0"/>
        <function-ref name="noAck" scoped="" ref="0x41395ec0"/>
        <function-ref name="wasAcked" scoped="" ref="0x41394010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41392d98" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41392d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4138e010"/>
        <function-ref name="getPayload" scoped="" ref="0x4138e0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4138e1d0"/>
        <function-ref name="cancel" scoped="" ref="0x4138e2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x4138e390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4138e500" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4138e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4138e6d8"/>
        <function-ref name="getPayload" scoped="" ref="0x4138e7b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4138e898"/>
        <function-ref name="cancel" scoped="" ref="0x4138e978"/>
        <function-ref name="sendDone" scoped="" ref="0x4138ea58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4138eb98" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4138eb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4138ed70"/>
        <function-ref name="source" scoped="" ref="0x4138ee50"/>
        <function-ref name="address" scoped="" ref="0x4138d010"/>
        <function-ref name="destination" scoped="" ref="0x4138d0f0"/>
        <function-ref name="setSource" scoped="" ref="0x4138d1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x4138d2b0"/>
        <function-ref name="type" scoped="" ref="0x4138d390"/>
        <function-ref name="setType" scoped="" ref="0x4138d470"/>
        <function-ref name="isForMe" scoped="" ref="0x4138d550"/>
        <function-ref name="setGroup" scoped="" ref="0x4138d630"/>
        <function-ref name="localGroup" scoped="" ref="0x4138d710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40b68db8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40b68db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b65010"/>
        <function-ref name="getPayload" scoped="" ref="0x40b650f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b651d0"/>
        <function-ref name="cancel" scoped="" ref="0x40b652b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b65390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40bb3598" loc="48:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40bb3598"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bb3780"/>
        <function-ref name="getPayload" scoped="" ref="0x40bb3860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bb3940"/>
        <function-ref name="cancel" scoped="" ref="0x40bb3a20"/>
        <function-ref name="sendDone" scoped="" ref="0x40bb3b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40b8bda0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40b8bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bb3010"/>
        <function-ref name="getPayload" scoped="" ref="0x40bb30f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bb31d0"/>
        <function-ref name="cancel" scoped="" ref="0x40bb32b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40bb3390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40bb2850" loc="50:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40bb2850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bb2a28"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bb2b08"/>
        <function-ref name="getPayload" scoped="" ref="0x40bb2be8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bb2cc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bb2da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40bb2f28" loc="169:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40bb2f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40bb1110"/>
        <function-ref name="runTask" scoped="" ref="0x40bb11f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40bb1370" loc="126:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40bb1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40bb1548"/>
        <function-ref name="runTask" scoped="" ref="0x40bb1628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40bb3c40" loc="49:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40bb3c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40bb3e18"/>
        <function-ref name="source" scoped="" ref="0x40bb3ef8"/>
        <function-ref name="address" scoped="" ref="0x40bb2010"/>
        <function-ref name="destination" scoped="" ref="0x40bb20f0"/>
        <function-ref name="setSource" scoped="" ref="0x40bb21d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40bb22b0"/>
        <function-ref name="type" scoped="" ref="0x40bb2390"/>
        <function-ref name="setType" scoped="" ref="0x40bb2470"/>
        <function-ref name="isForMe" scoped="" ref="0x40bb2550"/>
        <function-ref name="setGroup" scoped="" ref="0x40bb2630"/>
        <function-ref name="localGroup" scoped="" ref="0x40bb2710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ba7a70" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ba7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ba7c48"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ba7d28"/>
        <function-ref name="getPayload" scoped="" ref="0x40ba7e08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ba7ee8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ba6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40ba7758" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40ba7758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ba7930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40ba6150" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40ba6150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40ba6328"/>
        <function-ref name="source" scoped="" ref="0x40ba6408"/>
        <function-ref name="address" scoped="" ref="0x40ba64e8"/>
        <function-ref name="destination" scoped="" ref="0x40ba65c8"/>
        <function-ref name="setSource" scoped="" ref="0x40ba66a8"/>
        <function-ref name="setDestination" scoped="" ref="0x40ba6788"/>
        <function-ref name="type" scoped="" ref="0x40ba6868"/>
        <function-ref name="setType" scoped="" ref="0x40ba6948"/>
        <function-ref name="isForMe" scoped="" ref="0x40ba6a28"/>
        <function-ref name="setGroup" scoped="" ref="0x40ba6b08"/>
        <function-ref name="localGroup" scoped="" ref="0x40ba6be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40ba11f8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40ba11f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ba13d0"/>
        <function-ref name="getPayload" scoped="" ref="0x40ba14b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ba1590"/>
        <function-ref name="cancel" scoped="" ref="0x40ba1670"/>
        <function-ref name="sendDone" scoped="" ref="0x40ba1750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ba1890" loc="50:/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ba1890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ba1a68"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ba1b48"/>
        <function-ref name="getPayload" scoped="" ref="0x40ba1c28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ba1d08"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ba1de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40ba1f28" loc="51:/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40ba1f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40ba0110"/>
        <function-ref name="source" scoped="" ref="0x40ba01f0"/>
        <function-ref name="address" scoped="" ref="0x40ba02d0"/>
        <function-ref name="destination" scoped="" ref="0x40ba03b0"/>
        <function-ref name="setSource" scoped="" ref="0x40ba0490"/>
        <function-ref name="setDestination" scoped="" ref="0x40ba0570"/>
        <function-ref name="type" scoped="" ref="0x40ba0650"/>
        <function-ref name="setType" scoped="" ref="0x40ba0730"/>
        <function-ref name="isForMe" scoped="" ref="0x40ba0810"/>
        <function-ref name="setGroup" scoped="" ref="0x40ba08f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40ba09d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40ba0b30" loc="52:/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40ba0b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ba0d08"/>
        <function-ref name="noAck" scoped="" ref="0x40ba0de8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ba0ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x413aec00" loc="49:/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x413aec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413aedd8"/>
        <function-ref name="getPayload" scoped="" ref="0x413aeeb8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413aa010"/>
        <function-ref name="cancel" scoped="" ref="0x413aa0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x413aa1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x413aa310" loc="50:/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x413aa310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413aa4e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x413aa5c8"/>
        <function-ref name="getPayload" scoped="" ref="0x413aa6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413aa788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413aa868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x413aa9a8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x413aa9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x413aab80"/>
        <function-ref name="source" scoped="" ref="0x413aac60"/>
        <function-ref name="address" scoped="" ref="0x413aad40"/>
        <function-ref name="destination" scoped="" ref="0x413aae20"/>
        <function-ref name="setSource" scoped="" ref="0x413aaf00"/>
        <function-ref name="setDestination" scoped="" ref="0x413a9010"/>
        <function-ref name="type" scoped="" ref="0x413a90f0"/>
        <function-ref name="setType" scoped="" ref="0x413a91d0"/>
        <function-ref name="isForMe" scoped="" ref="0x413a92b0"/>
        <function-ref name="setGroup" scoped="" ref="0x413a9390"/>
        <function-ref name="localGroup" scoped="" ref="0x413a9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x413a95d0" loc="52:/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x413a95d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x413a97a8"/>
        <function-ref name="noAck" scoped="" ref="0x413a9888"/>
        <function-ref name="wasAcked" scoped="" ref="0x413a9968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x413a4700" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x413a4700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413a48d8"/>
        <function-ref name="getPayload" scoped="" ref="0x413a49b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413a4a98"/>
        <function-ref name="cancel" scoped="" ref="0x413a4b78"/>
        <function-ref name="sendDone" scoped="" ref="0x413a4c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x413a4dc8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x413a4dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413f5010"/>
        <function-ref name="getPayload" scoped="" ref="0x413f50f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413f51d0"/>
        <function-ref name="cancel" scoped="" ref="0x413f52b0"/>
        <function-ref name="sendDone" scoped="" ref="0x413f5390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x413f54d0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeSendC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x413f54d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x413f56a8"/>
        <function-ref name="source" scoped="" ref="0x413f5788"/>
        <function-ref name="address" scoped="" ref="0x413f5868"/>
        <function-ref name="destination" scoped="" ref="0x413f5948"/>
        <function-ref name="setSource" scoped="" ref="0x413f5a28"/>
        <function-ref name="setDestination" scoped="" ref="0x413f5b08"/>
        <function-ref name="type" scoped="" ref="0x413f5be8"/>
        <function-ref name="setType" scoped="" ref="0x413f5cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x413f5da8"/>
        <function-ref name="setGroup" scoped="" ref="0x413f5e88"/>
        <function-ref name="localGroup" scoped="" ref="0x413f4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40bc79d8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40bc79d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bc7bb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bc7c90"/>
        <function-ref name="getPayload" scoped="" ref="0x40bc7d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bc7e50"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bc6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bc76c0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bc76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bc7898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40bc6150" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="DisseminationEngineP.DisseminationProbeReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40bc6150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40bc6328"/>
        <function-ref name="source" scoped="" ref="0x40bc6408"/>
        <function-ref name="address" scoped="" ref="0x40bc64e8"/>
        <function-ref name="destination" scoped="" ref="0x40bc65c8"/>
        <function-ref name="setSource" scoped="" ref="0x40bc66a8"/>
        <function-ref name="setDestination" scoped="" ref="0x40bc6788"/>
        <function-ref name="type" scoped="" ref="0x40bc6868"/>
        <function-ref name="setType" scoped="" ref="0x40bc6948"/>
        <function-ref name="isForMe" scoped="" ref="0x40bc6a28"/>
        <function-ref name="setGroup" scoped="" ref="0x40bc6b08"/>
        <function-ref name="localGroup" scoped="" ref="0x40bc6be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bc5cd0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bc5cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bc5ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40bc1060" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40bc1060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40bc1238"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40bc1318"/>
        <function-ref name="led1On" scoped="" ref="0x40bc13f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40bc14d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40bc15b8"/>
        <function-ref name="get" scoped="" ref="0x40bc1698"/>
        <function-ref name="led1Off" scoped="" ref="0x40bc1778"/>
        <function-ref name="led2Off" scoped="" ref="0x40bc1af8"/>
        <function-ref name="set" scoped="" ref="0x40bc1858"/>
        <function-ref name="led0On" scoped="" ref="0x40bc1938"/>
        <function-ref name="led2On" scoped="" ref="0x40bc1a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x40bea570" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="TestNetworkAppC.Object32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x40bea570"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x40beab98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x40bb86e0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminatorC.nc">
      <component-ref qname="TestNetworkAppC.Object32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x40bb86e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x40bea2b0"/>
        <function-ref name="get" scoped="" ref="0x40bb8d28"/>
        <function-ref name="set" scoped="" ref="0x40bea010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="changedTask" ref="0x413e4d88" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestNetworkAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="changedTask" scoped="" ref="0x413e4d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x413e3010"/>
        <function-ref name="runTask" scoped="" ref="0x413e30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationCache" ref="0x413e59b0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestNetworkAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationCache" scoped="" ref="0x413e59b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationCache"/>
      </instance>
      <interface-functions>
        <function-ref name="requestData" scoped="" ref="0x413e5c68"/>
        <function-ref name="storeData" scoped="" ref="0x413e4010"/>
        <function-ref name="newData" scoped="" ref="0x413e5d48"/>
        <function-ref name="start" scoped="" ref="0x413e5e28"/>
        <function-ref name="requestSeqno" scoped="" ref="0x413e5f08"/>
        <function-ref name="stop" scoped="" ref="0x413e5b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationUpdate" ref="0x413e5030" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestNetworkAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationUpdate" scoped="" ref="0x413e5030"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="change" scoped="" ref="0x413e5658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x413e4170" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestNetworkAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x413e4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x413e4348"/>
        <function-ref name="led0Toggle" scoped="" ref="0x413e4428"/>
        <function-ref name="led1On" scoped="" ref="0x413e4508"/>
        <function-ref name="led1Toggle" scoped="" ref="0x413e45e8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x413e46c8"/>
        <function-ref name="get" scoped="" ref="0x413e47a8"/>
        <function-ref name="led1Off" scoped="" ref="0x413e4888"/>
        <function-ref name="led0On" scoped="" ref="0x413e4c08"/>
        <function-ref name="set" scoped="" ref="0x413e4a48"/>
        <function-ref name="led2On" scoped="" ref="0x413e4968"/>
        <function-ref name="led2Off" scoped="" ref="0x413e4b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DisseminationValue" ref="0x413e6200" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestNetworkAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DisseminationValue" scoped="" ref="0x413e6200"/></type-interface>
      <instance>
        <interfacedef-ref qname="DisseminationValue"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="changed" scoped="" ref="0x413e6d60"/>
        <function-ref name="get" scoped="" ref="0x413e6848"/>
        <function-ref name="set" scoped="" ref="0x413e6ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x413e8cb8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminatorP.nc">
      <component-ref qname="TestNetworkAppC.Object32C.DisseminatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x413e8cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x413e8e90"/>
        <function-ref name="stop" scoped="" ref="0x413e6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x40bec688" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationTimerP.nc">
      <component-ref qname="DisseminationTimerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x40bec688"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40bec860"/>
        <function-ref name="incrementCounter" scoped="" ref="0x40bec940"/>
        <function-ref name="reset" scoped="" ref="0x40beca20"/>
        <function-ref name="start" scoped="" ref="0x40becb00"/>
        <function-ref name="stop" scoped="" ref="0x40becbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x40cc9588" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x40cc9588"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40cc9770"/>
        <function-ref name="incrementCounter" scoped="" ref="0x40cc9850"/>
        <function-ref name="reset" scoped="" ref="0x40cc9930"/>
        <function-ref name="start" scoped="" ref="0x40cc9a10"/>
        <function-ref name="stop" scoped="" ref="0x40cc9af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pending" ref="0x413d2a68" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pending" scoped="" ref="0x413d2a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x413d2c40"/>
        <function-ref name="clear" scoped="" ref="0x413d2d20"/>
        <function-ref name="toggle" scoped="" ref="0x413d2e00"/>
        <function-ref name="get" scoped="" ref="0x413d2ee0"/>
        <function-ref name="assign" scoped="" ref="0x4141a010"/>
        <function-ref name="setAll" scoped="" ref="0x4141a0f0"/>
        <function-ref name="set" scoped="" ref="0x4141a1d0"/>
        <function-ref name="size" scoped="" ref="0x4141a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Changed" ref="0x4141a410" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Changed" scoped="" ref="0x4141a410"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x4141a5e8"/>
        <function-ref name="clear" scoped="" ref="0x4141a6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4141a7a8"/>
        <function-ref name="get" scoped="" ref="0x4141a888"/>
        <function-ref name="assign" scoped="" ref="0x4141a968"/>
        <function-ref name="setAll" scoped="" ref="0x4141aa48"/>
        <function-ref name="set" scoped="" ref="0x4141ab28"/>
        <function-ref name="size" scoped="" ref="0x4141ac08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x4141ad48" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4141ad48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4141af20"/>
        <function-ref name="rand32" scoped="" ref="0x41419018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrickleTimer" ref="0x413d4110" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x413d4110"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrickleTimer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x413d42f8"/>
        <function-ref name="incrementCounter" scoped="" ref="0x413d43d8"/>
        <function-ref name="reset" scoped="" ref="0x413d44b8"/>
        <function-ref name="start" scoped="" ref="0x413d4598"/>
        <function-ref name="stop" scoped="" ref="0x413d4678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x413d5d50" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x413d5d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413d5f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="timerTask" ref="0x41419d70" loc="154:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="timerTask" scoped="" ref="0x41419d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41418010"/>
        <function-ref name="runTask" scoped="" ref="0x414180f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41419158" loc="65:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41419158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41419330"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41419410"/>
        <function-ref name="led1On" scoped="" ref="0x414194f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x414195d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x414196b0"/>
        <function-ref name="get" scoped="" ref="0x41419790"/>
        <function-ref name="led1Off" scoped="" ref="0x41419870"/>
        <function-ref name="led0On" scoped="" ref="0x41419bf0"/>
        <function-ref name="set" scoped="" ref="0x41419a30"/>
        <function-ref name="led2On" scoped="" ref="0x41419950"/>
        <function-ref name="led2Off" scoped="" ref="0x41419b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x413d4878" loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimerImplP.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TrickleTimerImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x413d4878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x413d2388"/>
        <function-ref name="fired" scoped="" ref="0x413d3628"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x413d3d30"/>
        <function-ref name="isOneShot" scoped="" ref="0x413d3ad8"/>
        <function-ref name="getdt" scoped="" ref="0x413d2838"/>
        <function-ref name="gett0" scoped="" ref="0x413d25e0"/>
        <function-ref name="isRunning" scoped="" ref="0x413d3880"/>
        <function-ref name="startPeriodic" scoped="" ref="0x413d4ea0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x413d2068"/>
        <function-ref name="startOneShot" scoped="" ref="0x413d3150"/>
        <function-ref name="stop" scoped="" ref="0x413d33d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41417810" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41417810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41415330"/>
        <function-ref name="fired" scoped="" ref="0x414165b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41416cb8"/>
        <function-ref name="isOneShot" scoped="" ref="0x41416a60"/>
        <function-ref name="getdt" scoped="" ref="0x414157e0"/>
        <function-ref name="gett0" scoped="" ref="0x41415588"/>
        <function-ref name="isRunning" scoped="" ref="0x41416808"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41417e38"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41415010"/>
        <function-ref name="startOneShot" scoped="" ref="0x414160d8"/>
        <function-ref name="stop" scoped="" ref="0x41416358"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40c24028" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40c24028"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c23b00"/>
        <function-ref name="fired" scoped="" ref="0x40c24da8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c234c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c23268"/>
        <function-ref name="getdt" scoped="" ref="0x40c22010"/>
        <function-ref name="gett0" scoped="" ref="0x40c23d58"/>
        <function-ref name="isRunning" scoped="" ref="0x40c23010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c24650"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c237e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c248d0"/>
        <function-ref name="stop" scoped="" ref="0x40c24b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40c1f010" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40c1f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c504e0"/>
        <function-ref name="fired" scoped="" ref="0x40c1fc78"/>
        <function-ref name="startAt" scoped="" ref="0x40c501a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40c1fef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40c50758"/>
        <function-ref name="start" scoped="" ref="0x40c1f760"/>
        <function-ref name="stop" scoped="" ref="0x40c1fa00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41439618" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41439618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="T62khz" ref="0x40419eb8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41438af0"/>
        <function-ref name="fired" scoped="" ref="0x414382c0"/>
        <function-ref name="startAt" scoped="" ref="0x414387b0"/>
        <function-ref name="isRunning" scoped="" ref="0x41438538"/>
        <function-ref name="getAlarm" scoped="" ref="0x41438d68"/>
        <function-ref name="start" scoped="" ref="0x41439d68"/>
        <function-ref name="stop" scoped="" ref="0x41438048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x41428010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x41428010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x41427a68"/>
        <function-ref name="test" scoped="" ref="0x41428de8"/>
        <function-ref name="fired" scoped="" ref="0x41428b70"/>
        <function-ref name="force" scoped="" ref="0x41426010"/>
        <function-ref name="get" scoped="" ref="0x41428658"/>
        <function-ref name="reset" scoped="" ref="0x41427088"/>
        <function-ref name="getMode" scoped="" ref="0x41427d08"/>
        <function-ref name="isOn" scoped="" ref="0x414277f0"/>
        <function-ref name="set" scoped="" ref="0x414288d0"/>
        <function-ref name="start" scoped="" ref="0x41427300"/>
        <function-ref name="stop" scoped="" ref="0x41427578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4142d578" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4142d578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="T62khz" ref="0x40419eb8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4142cab8"/>
        <function-ref name="fired" scoped="" ref="0x4142c288"/>
        <function-ref name="startAt" scoped="" ref="0x4142c778"/>
        <function-ref name="isRunning" scoped="" ref="0x4142c500"/>
        <function-ref name="getAlarm" scoped="" ref="0x4142cd30"/>
        <function-ref name="start" scoped="" ref="0x4142dcc8"/>
        <function-ref name="stop" scoped="" ref="0x4142c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4142d140" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4142d140"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4142d318"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x4142b010" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x4142b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4142aa68"/>
        <function-ref name="test" scoped="" ref="0x4142bde8"/>
        <function-ref name="get" scoped="" ref="0x4142b658"/>
        <function-ref name="reset" scoped="" ref="0x4142a088"/>
        <function-ref name="getMode" scoped="" ref="0x4142ad08"/>
        <function-ref name="overflow" scoped="" ref="0x4142bb70"/>
        <function-ref name="isOn" scoped="" ref="0x4142a7f0"/>
        <function-ref name="set" scoped="" ref="0x4142b8d0"/>
        <function-ref name="start" scoped="" ref="0x4142a300"/>
        <function-ref name="stop" scoped="" ref="0x4142a578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41436030" loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41436030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x414354e0"/>
        <function-ref name="fired" scoped="" ref="0x41436c98"/>
        <function-ref name="startAt" scoped="" ref="0x414351a0"/>
        <function-ref name="isRunning" scoped="" ref="0x41436f10"/>
        <function-ref name="getAlarm" scoped="" ref="0x41435758"/>
        <function-ref name="start" scoped="" ref="0x41436780"/>
        <function-ref name="stop" scoped="" ref="0x41436a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x41433d00" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x41433d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40419d10"/>
            <typename><typedef-ref name="T62khz" ref="0x40419eb8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x414311e8"/>
        <function-ref name="fired" scoped="" ref="0x41432990"/>
        <function-ref name="startAt" scoped="" ref="0x41432e80"/>
        <function-ref name="isRunning" scoped="" ref="0x41432c08"/>
        <function-ref name="getAlarm" scoped="" ref="0x41431460"/>
        <function-ref name="start" scoped="" ref="0x41432478"/>
        <function-ref name="stop" scoped="" ref="0x41432718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x41435aa8" loc="68:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41435aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41433228"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41433718"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x414334a0"/>
        <function-ref name="overflow" scoped="" ref="0x41433990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40c5f658" loc="74:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40c5f658"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c5f830"/>
        <function-ref name="runTask" scoped="" ref="0x40c5f910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40c62cc8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40c62cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c5f190"/>
        <function-ref name="fired" scoped="" ref="0x40c61950"/>
        <function-ref name="startAt" scoped="" ref="0x40c61e40"/>
        <function-ref name="isRunning" scoped="" ref="0x40c61bc8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40c5f408"/>
        <function-ref name="start" scoped="" ref="0x40c61438"/>
        <function-ref name="stop" scoped="" ref="0x40c616d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40c4b968" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c4b968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c624c8"/>
        <function-ref name="fired" scoped="" ref="0x40c63768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c63e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c63c18"/>
        <function-ref name="getdt" scoped="" ref="0x40c62978"/>
        <function-ref name="gett0" scoped="" ref="0x40c62720"/>
        <function-ref name="isRunning" scoped="" ref="0x40c639c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c63010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c621a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c63290"/>
        <function-ref name="stop" scoped="" ref="0x40c63510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40c8a2b8" loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40c8a2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c8a490"/>
        <function-ref name="runTask" scoped="" ref="0x40c8a570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40c8d0c0" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40c8d0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c8bba8"/>
        <function-ref name="fired" scoped="" ref="0x40c8de40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c8b568"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c8b310"/>
        <function-ref name="getdt" scoped="" ref="0x40c8a068"/>
        <function-ref name="gett0" scoped="" ref="0x40c8be00"/>
        <function-ref name="isRunning" scoped="" ref="0x40c8b0b8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c8d6e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c8b888"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c8d968"/>
        <function-ref name="stop" scoped="" ref="0x40c8dbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40c89cc8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c89cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c8e8d8"/>
        <function-ref name="fired" scoped="" ref="0x40c88ad8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c8e278"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c8e010"/>
        <function-ref name="getdt" scoped="" ref="0x40c8eda8"/>
        <function-ref name="gett0" scoped="" ref="0x40c8eb40"/>
        <function-ref name="isRunning" scoped="" ref="0x40c88d40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c88350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c8e5a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c885e0"/>
        <function-ref name="stop" scoped="" ref="0x40c88870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41413510" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41413510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x414136e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x41413848" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.PendingVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x41413848"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41413a20"/>
        <function-ref name="clear" scoped="" ref="0x41413b00"/>
        <function-ref name="toggle" scoped="" ref="0x41413be0"/>
        <function-ref name="get" scoped="" ref="0x41413cc0"/>
        <function-ref name="assign" scoped="" ref="0x41413da0"/>
        <function-ref name="setAll" scoped="" ref="0x41413e80"/>
        <function-ref name="set" scoped="" ref="0x41412010"/>
        <function-ref name="size" scoped="" ref="0x414120f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41412d48" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41412d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41412f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BitVector" ref="0x41411098" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/BitVectorC.nc">
      <component-ref qname="DisseminationTimerP.TrickleTimerMilliC.ChangeVector"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BitVector" scoped="" ref="0x41411098"/></type-interface>
      <instance>
        <interfacedef-ref qname="BitVector"/>
      </instance>
      <interface-functions>
        <function-ref name="clearAll" scoped="" ref="0x41411270"/>
        <function-ref name="clear" scoped="" ref="0x41411350"/>
        <function-ref name="toggle" scoped="" ref="0x41411430"/>
        <function-ref name="get" scoped="" ref="0x41411510"/>
        <function-ref name="assign" scoped="" ref="0x414115f0"/>
        <function-ref name="setAll" scoped="" ref="0x414116d0"/>
        <function-ref name="set" scoped="" ref="0x414117b0"/>
        <function-ref name="size" scoped="" ref="0x41411890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x40cbcf00" loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40cbcf00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40ce10f0"/>
        <function-ref name="setRoot" scoped="" ref="0x40ce11d0"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40ce12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x40cc18d0" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x40cc18d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40cc1aa8"/>
        <function-ref name="setOrigin" scoped="" ref="0x40cc1b88"/>
        <function-ref name="setType" scoped="" ref="0x40cc1c68"/>
        <function-ref name="getOrigin" scoped="" ref="0x40cc1d48"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40cc1e28"/>
        <function-ref name="getType" scoped="" ref="0x40cc1f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x40ce03c0" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x40ce03c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x40ce0618"/>
        <function-ref name="logEventMsg" scoped="" ref="0x40ce06f8"/>
        <function-ref name="logEventSimple" scoped="" ref="0x40ce07d8"/>
        <function-ref name="logEventRoute" scoped="" ref="0x40ce08b8"/>
        <function-ref name="logEventDbg" scoped="" ref="0x40ce0998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x40cbfd58" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x40cbfd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x403f07f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40cc1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40cc1190" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40cc1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cc1368"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cc1448"/>
        <function-ref name="getPayload" scoped="" ref="0x40cc1528"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cc1608"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cc16e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40cc2100" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40cc2100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x403f07f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cc22d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40cc3010" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40cc3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cc31e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40cc32c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cc33a8"/>
        <function-ref name="cancel" scoped="" ref="0x40cc3488"/>
        <function-ref name="sendDone" scoped="" ref="0x40cc3568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x40cbdd78" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x40cbdd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x40cbc010"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x40cbc0f0"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40cbc1d0"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40cbc2b0"/>
        <function-ref name="getEtx" scoped="" ref="0x40cbc390"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40cbc470"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40cbc550"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40cbc630"/>
        <function-ref name="getParent" scoped="" ref="0x40cbc710"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40cbc7f0"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x40cbc8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40cc3a20" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40cc3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x403f07f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cc3bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x40cbca98" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40cbca98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x40cbcc70"/>
        <function-ref name="setClientCongested" scoped="" ref="0x40cbcd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x40ce3d40" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x40ce3d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40ce3f18"/>
        <function-ref name="option" scoped="" ref="0x40cbd010"/>
        <function-ref name="setEtx" scoped="" ref="0x40cbd0f0"/>
        <function-ref name="setOrigin" scoped="" ref="0x40cbd1d0"/>
        <function-ref name="clearOption" scoped="" ref="0x40cbd2b0"/>
        <function-ref name="getEtx" scoped="" ref="0x40cbd390"/>
        <function-ref name="getOrigin" scoped="" ref="0x40cbd470"/>
        <function-ref name="setType" scoped="" ref="0x40cbd550"/>
        <function-ref name="setOption" scoped="" ref="0x40cbd630"/>
        <function-ref name="matchPacket" scoped="" ref="0x40cbd710"/>
        <function-ref name="getThl" scoped="" ref="0x40cbd7f0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40cbd8d0"/>
        <function-ref name="matchInstance" scoped="" ref="0x40cbd9b0"/>
        <function-ref name="getType" scoped="" ref="0x40cbdb10"/>
        <function-ref name="setThl" scoped="" ref="0x40cbdbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40cc6878" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40cc6878"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40cc6a50"/>
        <function-ref name="stop" scoped="" ref="0x40cc6b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x40ce0010" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionC.nc">
      <component-ref qname="CollectionC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x40ce0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x40ce01e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x40cd61c0" loc="92:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40cd61c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40cd6398"/>
        <function-ref name="setRoot" scoped="" ref="0x40cd6478"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40cd6558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x40cdbb98" loc="86:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x40cdbb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40cdbd70"/>
        <function-ref name="setOrigin" scoped="" ref="0x40cdbe50"/>
        <function-ref name="setType" scoped="" ref="0x40cd9010"/>
        <function-ref name="getOrigin" scoped="" ref="0x40cd90f0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40cd91d0"/>
        <function-ref name="getType" scoped="" ref="0x40cd92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x40cd0178" loc="90:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x40cd0178"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="getLinkQuality" scoped="" ref="0x40cd0b30"/>
        <function-ref name="txAck" scoped="" ref="0x40cd0430"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x40cd0510"/>
        <function-ref name="txNoAck" scoped="" ref="0x40cd05f0"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x40cd06d0"/>
        <function-ref name="evicted" scoped="" ref="0x40cd07b0"/>
        <function-ref name="clearDLQ" scoped="" ref="0x40cd0890"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x40cd0970"/>
        <function-ref name="getForwardQuality" scoped="" ref="0x40cd0a50"/>
        <function-ref name="getReverseQuality" scoped="" ref="0x40cd0350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x40cd6e90" loc="97:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x40cd6e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x40cd5080"/>
        <function-ref name="logEventMsg" scoped="" ref="0x40cd5160"/>
        <function-ref name="logEventSimple" scoped="" ref="0x40cd5240"/>
        <function-ref name="logEventRoute" scoped="" ref="0x40cd5320"/>
        <function-ref name="logEventDbg" scoped="" ref="0x40cd5400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x40cdb100" loc="83:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x40cdb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x403f07f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40cdb2d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40cdb458" loc="85:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40cdb458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40cdb630"/>
        <function-ref name="payloadLength" scoped="" ref="0x40cdb710"/>
        <function-ref name="getPayload" scoped="" ref="0x40cdb7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cdb8d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40cdb9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40cdc9c8" loc="82:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40cdc9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x403f07f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cdcba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40cdd8f8" loc="80:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40cdd8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40cddad0"/>
        <function-ref name="getPayload" scoped="" ref="0x40cddbb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40cddc90"/>
        <function-ref name="cancel" scoped="" ref="0x40cddd70"/>
        <function-ref name="sendDone" scoped="" ref="0x40cdde50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x40cd84b8" loc="89:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x40cd84b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x40cd8690"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x40cd8770"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40cd8850"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40cd8930"/>
        <function-ref name="getEtx" scoped="" ref="0x40cd8a10"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40cd8af0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40cd8bd0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40cd8cb0"/>
        <function-ref name="getParent" scoped="" ref="0x40cd8d90"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40cd8e70"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x40cd7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40cdc318" loc="81:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40cdc318"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x403f07f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40cdc4f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x40cd0cf8" loc="91:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40cd0cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x40cd0ed0"/>
        <function-ref name="setClientCongested" scoped="" ref="0x40cd6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x40cd9450" loc="87:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x40cd9450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40cd9628"/>
        <function-ref name="option" scoped="" ref="0x40cd9708"/>
        <function-ref name="setEtx" scoped="" ref="0x40cd97e8"/>
        <function-ref name="setOrigin" scoped="" ref="0x40cd98c8"/>
        <function-ref name="clearOption" scoped="" ref="0x40cd99a8"/>
        <function-ref name="getEtx" scoped="" ref="0x40cd9a88"/>
        <function-ref name="getOrigin" scoped="" ref="0x40cd9b68"/>
        <function-ref name="setType" scoped="" ref="0x40cd9c48"/>
        <function-ref name="setOption" scoped="" ref="0x40cd9d28"/>
        <function-ref name="matchPacket" scoped="" ref="0x40cd9e08"/>
        <function-ref name="getThl" scoped="" ref="0x40cd9ee8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40cd8010"/>
        <function-ref name="matchInstance" scoped="" ref="0x40cd80f0"/>
        <function-ref name="getType" scoped="" ref="0x40cd8250"/>
        <function-ref name="setThl" scoped="" ref="0x40cd8330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40cdd1c8" loc="79:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40cdd1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40cdd3a0"/>
        <function-ref name="stop" scoped="" ref="0x40cdd480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x40cd6a60" loc="96:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpP.nc">
      <component-ref qname="CtpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x40cd6a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x40cd6cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40d8fd68" loc="142:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40d8fd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d8d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x40d8c078" loc="145:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40d8c078"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40d8c250"/>
        <function-ref name="setRoot" scoped="" ref="0x40d8c330"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40d8c410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40d9b1a0" loc="126:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40d9b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d9b378"/>
        <function-ref name="getPayload" scoped="" ref="0x40d9b458"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d9b538"/>
        <function-ref name="cancel" scoped="" ref="0x40d9b618"/>
        <function-ref name="sendDone" scoped="" ref="0x40d9b6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x40d8a708" loc="156:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x40d8a708"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x40d8a8e0"/>
        <function-ref name="logEventMsg" scoped="" ref="0x40d8a9c0"/>
        <function-ref name="logEventSimple" scoped="" ref="0x40d8aaa0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x40d8ab80"/>
        <function-ref name="logEventDbg" scoped="" ref="0x40d8ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionPacket" ref="0x40d9d530" loc="116:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionPacket" scoped="" ref="0x40d9d530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40d9d708"/>
        <function-ref name="setOrigin" scoped="" ref="0x40d9d7e8"/>
        <function-ref name="setType" scoped="" ref="0x40d9d8c8"/>
        <function-ref name="getOrigin" scoped="" ref="0x40d9d9a8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40d9da88"/>
        <function-ref name="getType" scoped="" ref="0x40d9db68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x40d97070" loc="129:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x40d97070"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="getReverseQuality" scoped="" ref="0x40d97a28"/>
        <function-ref name="txAck" scoped="" ref="0x40d97328"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x40d97408"/>
        <function-ref name="txNoAck" scoped="" ref="0x40d974e8"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x40d975c8"/>
        <function-ref name="evicted" scoped="" ref="0x40d976a8"/>
        <function-ref name="clearDLQ" scoped="" ref="0x40d97788"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x40d97868"/>
        <function-ref name="getForwardQuality" scoped="" ref="0x40d97948"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x40d97248"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SentCache" ref="0x40d8f010" loc="140:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SentCache" scoped="" ref="0x40d8f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
              <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x40d8f638"/>
        <function-ref name="flush" scoped="" ref="0x40d8fb38"/>
        <function-ref name="lookup" scoped="" ref="0x40d8f8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Intercept" ref="0x40d9eb48" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Intercept" scoped="" ref="0x40d9eb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Intercept"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x403f07f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="forward" scoped="" ref="0x40d9ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d9ee70" loc="115:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d9ee70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d9d070"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d9d150"/>
        <function-ref name="getPayload" scoped="" ref="0x40d9d230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d9d310"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d9d3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40d9e788" loc="113:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40d9e788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x403f07f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d9e970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40d8a310" loc="149:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40d8a310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40d8a4e8"/>
        <function-ref name="rand32" scoped="" ref="0x40d8a5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40d9fba0" loc="111:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40d9fba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d9fd88"/>
        <function-ref name="getPayload" scoped="" ref="0x40d9fe68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d9e010"/>
        <function-ref name="cancel" scoped="" ref="0x40d9e0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d9e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RetxmitTimer" ref="0x40d9bdc0" loc="128:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RetxmitTimer" scoped="" ref="0x40d9bdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d98988"/>
        <function-ref name="fired" scoped="" ref="0x40d99c10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d98348"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d980f0"/>
        <function-ref name="getdt" scoped="" ref="0x40d98e38"/>
        <function-ref name="gett0" scoped="" ref="0x40d98be0"/>
        <function-ref name="isRunning" scoped="" ref="0x40d99e68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d994b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d98668"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d99738"/>
        <function-ref name="stop" scoped="" ref="0x40d999b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x40d8adc0" loc="162:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x40d8adc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d89010"/>
        <function-ref name="stopDone" scoped="" ref="0x40d890f0"/>
        <function-ref name="start" scoped="" ref="0x40d891d0"/>
        <function-ref name="stop" scoped="" ref="0x40d892b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x40d89430" loc="234:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x40d89430"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d89608"/>
        <function-ref name="runTask" scoped="" ref="0x40d896e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x40d968d8" loc="137:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x40d968d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40cf8ec0"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40cf7188"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40d94630"/>
        <function-ref name="enqueue" scoped="" ref="0x40d94d10"/>
        <function-ref name="element" scoped="" ref="0x40d93088"/>
        <function-ref name="maxSize" scoped="" ref="0x40d943d8"/>
        <function-ref name="dequeue" scoped="" ref="0x40d949a0"/>
        <function-ref name="empty" scoped="" ref="0x40d96f00"/>
        <function-ref name="size" scoped="" ref="0x40d94180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpInfo" ref="0x40d8d488" loc="144:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x40d8d488"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x40d8d660"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x40d8d740"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40d8d820"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40d8d900"/>
        <function-ref name="getEtx" scoped="" ref="0x40d8d9e0"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40d8dac0"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40d8dba0"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40d8dc80"/>
        <function-ref name="getParent" scoped="" ref="0x40d8dd60"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40d8de40"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x40d8df20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40d96170" loc="131:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40d96170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d96348"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d96428"/>
        <function-ref name="getPayload" scoped="" ref="0x40d96508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d965e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d966c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d9f3f8" loc="109:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d9f3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d9f5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d9e3a8" loc="112:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d9e3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="collection_id_t" ref="0x403f07f8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d9e590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpCongestion" ref="0x40d9cd30" loc="118:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40d9cd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x40d9cf08"/>
        <function-ref name="setClientCongested" scoped="" ref="0x40d9b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UnicastNameFreeRouting" ref="0x40d97b68" loc="130:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnicastNameFreeRouting" scoped="" ref="0x40d97b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x40d97d40"/>
        <function-ref name="routeFound" scoped="" ref="0x40d97e20"/>
        <function-ref name="nextHop" scoped="" ref="0x40d97f00"/>
        <function-ref name="noRoute" scoped="" ref="0x40d96010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40d8b690" loc="148:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d8b690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d8b868"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d8b948"/>
        <function-ref name="led1On" scoped="" ref="0x40d8ba28"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d8bb08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d8bbe8"/>
        <function-ref name="get" scoped="" ref="0x40d8bcc8"/>
        <function-ref name="led1Off" scoped="" ref="0x40d8bda8"/>
        <function-ref name="led2On" scoped="" ref="0x40d8a1d0"/>
        <function-ref name="set" scoped="" ref="0x40d8a010"/>
        <function-ref name="led2Off" scoped="" ref="0x40d8be88"/>
        <function-ref name="led0On" scoped="" ref="0x40d8a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40d9b838" loc="127:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40d9b838"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40d9ba10"/>
        <function-ref name="noAck" scoped="" ref="0x40d9baf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40d9bbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpPacket" ref="0x40d9dca8" loc="117:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x40d9dca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40d9de80"/>
        <function-ref name="option" scoped="" ref="0x40d9c010"/>
        <function-ref name="setEtx" scoped="" ref="0x40d9c0f0"/>
        <function-ref name="setOrigin" scoped="" ref="0x40d9c1d0"/>
        <function-ref name="clearOption" scoped="" ref="0x40d9c2b0"/>
        <function-ref name="getEtx" scoped="" ref="0x40d9c390"/>
        <function-ref name="getOrigin" scoped="" ref="0x40d9c470"/>
        <function-ref name="setType" scoped="" ref="0x40d9c550"/>
        <function-ref name="setOption" scoped="" ref="0x40d9c630"/>
        <function-ref name="matchPacket" scoped="" ref="0x40d9c710"/>
        <function-ref name="getThl" scoped="" ref="0x40d9c7f0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40d9c8d0"/>
        <function-ref name="matchInstance" scoped="" ref="0x40d9c9b0"/>
        <function-ref name="getType" scoped="" ref="0x40d9cb10"/>
        <function-ref name="setThl" scoped="" ref="0x40d9cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="QEntryPool" ref="0x40d93488" loc="138:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="QEntryPool" scoped="" ref="0x40d93488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40cf8ec0"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40cf7188"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d925f8"/>
        <function-ref name="maxSize" scoped="" ref="0x40d92010"/>
        <function-ref name="empty" scoped="" ref="0x40d93ab0"/>
        <function-ref name="put" scoped="" ref="0x40d92268"/>
        <function-ref name="size" scoped="" ref="0x40d93d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40d8ca10" loc="147:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d8ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d8cbe8"/>
        <function-ref name="source" scoped="" ref="0x40d8ccc8"/>
        <function-ref name="address" scoped="" ref="0x40d8cda8"/>
        <function-ref name="destination" scoped="" ref="0x40d8ce88"/>
        <function-ref name="setSource" scoped="" ref="0x40d8b010"/>
        <function-ref name="setDestination" scoped="" ref="0x40d8b0f0"/>
        <function-ref name="type" scoped="" ref="0x40d8b1d0"/>
        <function-ref name="setType" scoped="" ref="0x40d8b2b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40d8b390"/>
        <function-ref name="setGroup" scoped="" ref="0x40d8b470"/>
        <function-ref name="localGroup" scoped="" ref="0x40d8b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40d9f710" loc="110:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40d9f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40d9f8e8"/>
        <function-ref name="stop" scoped="" ref="0x40d9f9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSnoop" ref="0x40d8d170" loc="143:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSnoop" scoped="" ref="0x40d8d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d8d348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x40d92a30" loc="139:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x40d92a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
            <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d90b00"/>
        <function-ref name="maxSize" scoped="" ref="0x40d90518"/>
        <function-ref name="empty" scoped="" ref="0x40d90068"/>
        <function-ref name="put" scoped="" ref="0x40d90770"/>
        <function-ref name="size" scoped="" ref="0x40d902c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionId" ref="0x40d8c5e8" loc="146:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpForwardingEngineP.nc">
      <component-ref qname="CtpP.Forwarder"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x40d8c5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x40d8c8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x40db3b18" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/PoolC.nc">
      <component-ref qname="CtpP.MessagePoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40db3b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
            <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40db2c78"/>
        <function-ref name="maxSize" scoped="" ref="0x40db2690"/>
        <function-ref name="empty" scoped="" ref="0x40db21e0"/>
        <function-ref name="put" scoped="" ref="0x40db28e8"/>
        <function-ref name="size" scoped="" ref="0x40db2438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x414f9f18" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x414f9f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
            <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414f6010"/>
        <function-ref name="maxSize" scoped="" ref="0x414f7a08"/>
        <function-ref name="empty" scoped="" ref="0x414f7558"/>
        <function-ref name="put" scoped="" ref="0x414f7c60"/>
        <function-ref name="size" scoped="" ref="0x414f77b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x414f9b70" loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="CtpP.MessagePoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x414f9b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x414f9d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x40dcd010" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/PoolC.nc">
      <component-ref qname="CtpP.QEntryPoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40dcd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40cf8ec0"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40cf7188"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40dcc0e8"/>
        <function-ref name="maxSize" scoped="" ref="0x40dcdae8"/>
        <function-ref name="empty" scoped="" ref="0x40dcd638"/>
        <function-ref name="put" scoped="" ref="0x40dcdd40"/>
        <function-ref name="size" scoped="" ref="0x40dcd890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x414ee6f8" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x414ee6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40cf8ec0"/>
            <typename><typedef-ref name="fe_queue_entry_t" ref="0x40cf7188"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414ec850"/>
        <function-ref name="maxSize" scoped="" ref="0x414ec268"/>
        <function-ref name="empty" scoped="" ref="0x414eed20"/>
        <function-ref name="put" scoped="" ref="0x414ec4c0"/>
        <function-ref name="size" scoped="" ref="0x414ec010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x414ee350" loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="CtpP.QEntryPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x414ee350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x414ee528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x40dc9408" loc="43:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="CtpP.SendQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40dc9408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref ref="0x40cf8ec0"/>
              <typename><typedef-ref name="fe_queue_entry_t" ref="0x40cf7188"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40dc8150"/>
        <function-ref name="enqueue" scoped="" ref="0x40dc8830"/>
        <function-ref name="element" scoped="" ref="0x40dc8b80"/>
        <function-ref name="maxSize" scoped="" ref="0x40dc9ee0"/>
        <function-ref name="dequeue" scoped="" ref="0x40dc84c0"/>
        <function-ref name="empty" scoped="" ref="0x40dc9a30"/>
        <function-ref name="size" scoped="" ref="0x40dc9c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x40deadc0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheC.nc">
      <component-ref qname="CtpP.SentCacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x40deadc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
              <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x40de9408"/>
        <function-ref name="flush" scoped="" ref="0x40de9908"/>
        <function-ref name="lookup" scoped="" ref="0x40de9688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Cache" ref="0x414de6b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Cache" scoped="" ref="0x414de6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Cache"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
              <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="insert" scoped="" ref="0x414decd8"/>
        <function-ref name="flush" scoped="" ref="0x414dd290"/>
        <function-ref name="lookup" scoped="" ref="0x414dd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x414de2e8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x414de2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x414de4c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpPacket" ref="0x414dd4d0" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/LruCtpMsgCacheP.nc">
      <component-ref qname="CtpP.SentCacheP.CacheP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpPacket" scoped="" ref="0x414dd4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x414dd6a8"/>
        <function-ref name="option" scoped="" ref="0x414dd788"/>
        <function-ref name="setEtx" scoped="" ref="0x414dd868"/>
        <function-ref name="setOrigin" scoped="" ref="0x414dd948"/>
        <function-ref name="clearOption" scoped="" ref="0x414dda28"/>
        <function-ref name="getEtx" scoped="" ref="0x414ddb08"/>
        <function-ref name="getOrigin" scoped="" ref="0x414ddbe8"/>
        <function-ref name="setType" scoped="" ref="0x414ddcc8"/>
        <function-ref name="setOption" scoped="" ref="0x414ddda8"/>
        <function-ref name="matchPacket" scoped="" ref="0x414dde88"/>
        <function-ref name="getThl" scoped="" ref="0x414dc010"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x414dc0f0"/>
        <function-ref name="matchInstance" scoped="" ref="0x414dc1d0"/>
        <function-ref name="getType" scoped="" ref="0x414dc330"/>
        <function-ref name="setThl" scoped="" ref="0x414dc410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40dff838" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RoutingBeaconTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40dff838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40dfd368"/>
        <function-ref name="fired" scoped="" ref="0x40dfe5e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40dfecf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40dfea98"/>
        <function-ref name="getdt" scoped="" ref="0x40dfd818"/>
        <function-ref name="gett0" scoped="" ref="0x40dfd5c0"/>
        <function-ref name="isRunning" scoped="" ref="0x40dfe840"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40dffe60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40dfd048"/>
        <function-ref name="startOneShot" scoped="" ref="0x40dfe110"/>
        <function-ref name="stop" scoped="" ref="0x40dfe390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40dfc670" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RouteUpdateTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40dfc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40df9170"/>
        <function-ref name="fired" scoped="" ref="0x40dfa408"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40dfab10"/>
        <function-ref name="isOneShot" scoped="" ref="0x40dfa8b8"/>
        <function-ref name="getdt" scoped="" ref="0x40df9620"/>
        <function-ref name="gett0" scoped="" ref="0x40df93c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40dfa660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40dfcc98"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40dfae30"/>
        <function-ref name="startOneShot" scoped="" ref="0x40dfcf18"/>
        <function-ref name="stop" scoped="" ref="0x40dfa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40ded978" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40ded978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40dedb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkEstimator" ref="0x40df0010" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x40df0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="getLinkQuality" scoped="" ref="0x40df09c8"/>
        <function-ref name="txAck" scoped="" ref="0x40df02c8"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x40df03a8"/>
        <function-ref name="txNoAck" scoped="" ref="0x40df0488"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x40df0568"/>
        <function-ref name="evicted" scoped="" ref="0x40df0648"/>
        <function-ref name="clearDLQ" scoped="" ref="0x40df0728"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x40df0808"/>
        <function-ref name="getForwardQuality" scoped="" ref="0x40df08e8"/>
        <function-ref name="getReverseQuality" scoped="" ref="0x40df01e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40df0e90" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40df0e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40def080"/>
        <function-ref name="payloadLength" scoped="" ref="0x40def160"/>
        <function-ref name="getPayload" scoped="" ref="0x40def240"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40def320"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40def400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40decce0" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40decce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40deceb8"/>
        <function-ref name="getPayload" scoped="" ref="0x40dee010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dee0f0"/>
        <function-ref name="cancel" scoped="" ref="0x40dee1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40dee2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40df1560" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40df1560"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40df1738"/>
        <function-ref name="getPayload" scoped="" ref="0x40df1818"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40df18f8"/>
        <function-ref name="cancel" scoped="" ref="0x40df19d8"/>
        <function-ref name="sendDone" scoped="" ref="0x40df1ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40deb010" loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40deb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40deb268"/>
        <function-ref name="rand32" scoped="" ref="0x40deb348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40ded210" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40ded210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ded3e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ded4c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40ded5a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ded688"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ded768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40df0b38" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40df0b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40df0d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubAMPacket" ref="0x40dee4d8" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubAMPacket" scoped="" ref="0x40dee4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40dee6b0"/>
        <function-ref name="source" scoped="" ref="0x40dee790"/>
        <function-ref name="address" scoped="" ref="0x40dee870"/>
        <function-ref name="destination" scoped="" ref="0x40dee950"/>
        <function-ref name="setSource" scoped="" ref="0x40deea30"/>
        <function-ref name="setDestination" scoped="" ref="0x40deeb10"/>
        <function-ref name="type" scoped="" ref="0x40deebf0"/>
        <function-ref name="setType" scoped="" ref="0x40deecd0"/>
        <function-ref name="isForMe" scoped="" ref="0x40deedb0"/>
        <function-ref name="setGroup" scoped="" ref="0x40deee90"/>
        <function-ref name="localGroup" scoped="" ref="0x40ded010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40df1c40" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40df1c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40df1e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareBit" ref="0x40dec948" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x40dec948"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x40decb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40df10d8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40df10d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40df12b0"/>
        <function-ref name="stop" scoped="" ref="0x40df1390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkPacketMetadata" ref="0x40e1bbf0" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimatorP.nc">
      <component-ref qname="LinkEstimatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40e1bbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40e1bdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40df6e18" loc="49:/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40df6e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e73010"/>
        <function-ref name="getPayload" scoped="" ref="0x40e730f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e731d0"/>
        <function-ref name="cancel" scoped="" ref="0x40e732b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e73390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40e734d0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e734d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e736a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e73788"/>
        <function-ref name="getPayload" scoped="" ref="0x40e73868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e73948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e73a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40e73b68" loc="51:/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e73b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e73d40"/>
        <function-ref name="source" scoped="" ref="0x40e73e20"/>
        <function-ref name="address" scoped="" ref="0x40e73f00"/>
        <function-ref name="destination" scoped="" ref="0x40e72010"/>
        <function-ref name="setSource" scoped="" ref="0x40e720f0"/>
        <function-ref name="setDestination" scoped="" ref="0x40e721d0"/>
        <function-ref name="type" scoped="" ref="0x40e722b0"/>
        <function-ref name="setType" scoped="" ref="0x40e72390"/>
        <function-ref name="isForMe" scoped="" ref="0x40e72470"/>
        <function-ref name="setGroup" scoped="" ref="0x40e72550"/>
        <function-ref name="localGroup" scoped="" ref="0x40e72630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40e72790" loc="52:/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40e72790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40e72968"/>
        <function-ref name="noAck" scoped="" ref="0x40e72a48"/>
        <function-ref name="wasAcked" scoped="" ref="0x40e72b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x415146f0" loc="49:/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x415146f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415148c8"/>
        <function-ref name="getPayload" scoped="" ref="0x415149a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41514a88"/>
        <function-ref name="cancel" scoped="" ref="0x41514b68"/>
        <function-ref name="sendDone" scoped="" ref="0x41514c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41514d88" loc="50:/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41514d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41513010"/>
        <function-ref name="payloadLength" scoped="" ref="0x415130f0"/>
        <function-ref name="getPayload" scoped="" ref="0x415131d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415132b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41513390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x415134d0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x415134d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x415136a8"/>
        <function-ref name="source" scoped="" ref="0x41513788"/>
        <function-ref name="address" scoped="" ref="0x41513868"/>
        <function-ref name="destination" scoped="" ref="0x41513948"/>
        <function-ref name="setSource" scoped="" ref="0x41513a28"/>
        <function-ref name="setDestination" scoped="" ref="0x41513b08"/>
        <function-ref name="type" scoped="" ref="0x41513be8"/>
        <function-ref name="setType" scoped="" ref="0x41513cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x41513da8"/>
        <function-ref name="setGroup" scoped="" ref="0x41513e88"/>
        <function-ref name="localGroup" scoped="" ref="0x41512010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41512170" loc="52:/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41512170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41512348"/>
        <function-ref name="noAck" scoped="" ref="0x41512428"/>
        <function-ref name="wasAcked" scoped="" ref="0x41512508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41510db8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41510db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4150c010"/>
        <function-ref name="getPayload" scoped="" ref="0x4150c0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4150c1d0"/>
        <function-ref name="cancel" scoped="" ref="0x4150c2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x4150c390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x4150c500" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4150c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4150c6d8"/>
        <function-ref name="getPayload" scoped="" ref="0x4150c7b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4150c898"/>
        <function-ref name="cancel" scoped="" ref="0x4150c978"/>
        <function-ref name="sendDone" scoped="" ref="0x4150ca58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x4150cb98" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4150cb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4150cd70"/>
        <function-ref name="source" scoped="" ref="0x4150ce50"/>
        <function-ref name="address" scoped="" ref="0x4150b010"/>
        <function-ref name="destination" scoped="" ref="0x4150b0f0"/>
        <function-ref name="setSource" scoped="" ref="0x4150b1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x4150b2b0"/>
        <function-ref name="type" scoped="" ref="0x4150b390"/>
        <function-ref name="setType" scoped="" ref="0x4150b470"/>
        <function-ref name="isForMe" scoped="" ref="0x4150b550"/>
        <function-ref name="setGroup" scoped="" ref="0x4150b630"/>
        <function-ref name="localGroup" scoped="" ref="0x4150b710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40e70030" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e70030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e70208"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e702e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40e703c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e704a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e70588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40e71ce8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40e71ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e71ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40e706c8" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e706c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e708a0"/>
        <function-ref name="source" scoped="" ref="0x40e70980"/>
        <function-ref name="address" scoped="" ref="0x40e70a60"/>
        <function-ref name="destination" scoped="" ref="0x40e70b40"/>
        <function-ref name="setSource" scoped="" ref="0x40e70c20"/>
        <function-ref name="setDestination" scoped="" ref="0x40e70d00"/>
        <function-ref name="type" scoped="" ref="0x40e70de0"/>
        <function-ref name="setType" scoped="" ref="0x40e70ec0"/>
        <function-ref name="isForMe" scoped="" ref="0x40e6e010"/>
        <function-ref name="setGroup" scoped="" ref="0x40e6e0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40e6e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40e6da70" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e6da70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e6dc48"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e6dd28"/>
        <function-ref name="getPayload" scoped="" ref="0x40e6de08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e6dee8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e6c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40e6d758" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40e6d758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e6d930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40e6c150" loc="48:/opt/tinyos-main/src/tinyos-main/tos/system/AMSnooperC.nc">
      <component-ref qname="CtpP.AMSnooperC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e6c150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e6c328"/>
        <function-ref name="source" scoped="" ref="0x40e6c408"/>
        <function-ref name="address" scoped="" ref="0x40e6c4e8"/>
        <function-ref name="destination" scoped="" ref="0x40e6c5c8"/>
        <function-ref name="setSource" scoped="" ref="0x40e6c6a8"/>
        <function-ref name="setDestination" scoped="" ref="0x40e6c788"/>
        <function-ref name="type" scoped="" ref="0x40e6c868"/>
        <function-ref name="setType" scoped="" ref="0x40e6c948"/>
        <function-ref name="isForMe" scoped="" ref="0x40e6ca28"/>
        <function-ref name="setGroup" scoped="" ref="0x40e6cb08"/>
        <function-ref name="localGroup" scoped="" ref="0x40e6cbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x40f17d80" loc="110:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x40f17d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x40f16010"/>
        <function-ref name="setRoot" scoped="" ref="0x40f160f0"/>
        <function-ref name="unsetRoot" scoped="" ref="0x40f161d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateRouteTask" ref="0x40f0a468" loc="271:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateRouteTask" scoped="" ref="0x40f0a468"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f0a640"/>
        <function-ref name="runTask" scoped="" ref="0x40f0a720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CollectionDebug" ref="0x40f0b230" loc="125:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x40f0b230"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x40f0b408"/>
        <function-ref name="logEventMsg" scoped="" ref="0x40f0b4e8"/>
        <function-ref name="logEventSimple" scoped="" ref="0x40f0b5c8"/>
        <function-ref name="logEventRoute" scoped="" ref="0x40f0b6a8"/>
        <function-ref name="logEventDbg" scoped="" ref="0x40f0b788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkEstimator" ref="0x40f139e0" loc="119:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkEstimator" scoped="" ref="0x40f139e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkEstimator"/>
      </instance>
      <interface-functions>
        <function-ref name="getReverseQuality" scoped="" ref="0x40f12470"/>
        <function-ref name="txAck" scoped="" ref="0x40f13c98"/>
        <function-ref name="pinNeighbor" scoped="" ref="0x40f13d78"/>
        <function-ref name="txNoAck" scoped="" ref="0x40f13e58"/>
        <function-ref name="insertNeighbor" scoped="" ref="0x40f12010"/>
        <function-ref name="evicted" scoped="" ref="0x40f120f0"/>
        <function-ref name="clearDLQ" scoped="" ref="0x40f121d0"/>
        <function-ref name="unpinNeighbor" scoped="" ref="0x40f122b0"/>
        <function-ref name="getForwardQuality" scoped="" ref="0x40f12390"/>
        <function-ref name="getLinkQuality" scoped="" ref="0x40f13bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpRoutingPacket" ref="0x40f14300" loc="113:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpRoutingPacket" scoped="" ref="0x40f14300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpRoutingPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clearOptions" scoped="" ref="0x40f144d8"/>
        <function-ref name="setEtx" scoped="" ref="0x40f145b8"/>
        <function-ref name="clearOption" scoped="" ref="0x40f14698"/>
        <function-ref name="getEtx" scoped="" ref="0x40f14778"/>
        <function-ref name="setOption" scoped="" ref="0x40f14858"/>
        <function-ref name="setParent" scoped="" ref="0x40f14938"/>
        <function-ref name="getParent" scoped="" ref="0x40f14a18"/>
        <function-ref name="getOption" scoped="" ref="0x40f14af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x40f11250" loc="121:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x40f11250"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f11428"/>
        <function-ref name="stopDone" scoped="" ref="0x40f11508"/>
        <function-ref name="start" scoped="" ref="0x40f115e8"/>
        <function-ref name="stop" scoped="" ref="0x40f116c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40f0cd98" loc="124:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40f0cd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40f0b010"/>
        <function-ref name="rand32" scoped="" ref="0x40f0b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CtpInfo" ref="0x40f16310" loc="111:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpInfo" scoped="" ref="0x40f16310"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="getNeighborLinkQuality" scoped="" ref="0x40f164e8"/>
        <function-ref name="recomputeRoutes" scoped="" ref="0x40f165c8"/>
        <function-ref name="numNeighbors" scoped="" ref="0x40f166a8"/>
        <function-ref name="triggerRouteUpdate" scoped="" ref="0x40f16788"/>
        <function-ref name="getEtx" scoped="" ref="0x40f16868"/>
        <function-ref name="triggerImmediateRouteUpdate" scoped="" ref="0x40f16948"/>
        <function-ref name="setNeighborCongested" scoped="" ref="0x40f16a28"/>
        <function-ref name="getNeighborAddr" scoped="" ref="0x40f16b08"/>
        <function-ref name="getParent" scoped="" ref="0x40f16be8"/>
        <function-ref name="getNeighborRouteQuality" scoped="" ref="0x40f16cc8"/>
        <function-ref name="isNeighborCongested" scoped="" ref="0x40f16da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBeaconTask" ref="0x40f0a030" loc="390:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBeaconTask" scoped="" ref="0x40f0a030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f0a208"/>
        <function-ref name="runTask" scoped="" ref="0x40f0a2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f14c38" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f14c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f14e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconSend" ref="0x40f13010" loc="117:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconSend" scoped="" ref="0x40f13010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f131e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40f132c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f133a8"/>
        <function-ref name="cancel" scoped="" ref="0x40f13488"/>
        <function-ref name="sendDone" scoped="" ref="0x40f13568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconTimer" ref="0x40f118b8" loc="122:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconTimer" scoped="" ref="0x40f118b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f0f3d8"/>
        <function-ref name="fired" scoped="" ref="0x40f10678"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f10d80"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f10b28"/>
        <function-ref name="getdt" scoped="" ref="0x40f0f888"/>
        <function-ref name="gett0" scoped="" ref="0x40f0f630"/>
        <function-ref name="isRunning" scoped="" ref="0x40f108d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f11ee0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f0f0b8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f101a0"/>
        <function-ref name="stop" scoped="" ref="0x40f10420"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteTimer" ref="0x40f0fb48" loc="123:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteTimer" scoped="" ref="0x40f0fb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f0c6d8"/>
        <function-ref name="fired" scoped="" ref="0x40f0d970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f0c098"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f0de20"/>
        <function-ref name="getdt" scoped="" ref="0x40f0cb88"/>
        <function-ref name="gett0" scoped="" ref="0x40f0c930"/>
        <function-ref name="isRunning" scoped="" ref="0x40f0dbc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f0d218"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f0c3b8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f0d498"/>
        <function-ref name="stop" scoped="" ref="0x40f0d718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CtpCongestion" ref="0x40f0b8c8" loc="126:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CtpCongestion" scoped="" ref="0x40f0b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CtpCongestion"/>
      </instance>
      <interface-functions>
        <function-ref name="isCongested" scoped="" ref="0x40f0baa0"/>
        <function-ref name="setClientCongested" scoped="" ref="0x40f0bb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareBit" ref="0x40f0bcc0" loc="128:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareBit" scoped="" ref="0x40f0bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CompareBit"/>
      </instance>
      <interface-functions>
        <function-ref name="shouldInsert" scoped="" ref="0x40f0be98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BeaconReceive" ref="0x40f136c8" loc="118:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconReceive" scoped="" ref="0x40f136c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f138a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40f125b0" loc="120:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f125b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f12788"/>
        <function-ref name="source" scoped="" ref="0x40f12868"/>
        <function-ref name="address" scoped="" ref="0x40f12948"/>
        <function-ref name="destination" scoped="" ref="0x40f12a28"/>
        <function-ref name="setSource" scoped="" ref="0x40f12b08"/>
        <function-ref name="setDestination" scoped="" ref="0x40f12be8"/>
        <function-ref name="type" scoped="" ref="0x40f12cc8"/>
        <function-ref name="setType" scoped="" ref="0x40f12da8"/>
        <function-ref name="isForMe" scoped="" ref="0x40f12e88"/>
        <function-ref name="setGroup" scoped="" ref="0x40f11010"/>
        <function-ref name="localGroup" scoped="" ref="0x40f110f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40f16ee8" loc="112:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40f16ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f140e0"/>
        <function-ref name="stop" scoped="" ref="0x40f141c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Routing" ref="0x40f177c8" loc="109:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingEngineP.nc">
      <component-ref qname="CtpP.Router"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Routing" scoped="" ref="0x40f177c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
      </instance>
      <interface-functions>
        <function-ref name="hasRoute" scoped="" ref="0x40f179a0"/>
        <function-ref name="routeFound" scoped="" ref="0x40f17a80"/>
        <function-ref name="nextHop" scoped="" ref="0x40f17b60"/>
        <function-ref name="noRoute" scoped="" ref="0x40f17c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40f3a6a8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="CtpP.RetxmitTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f3a6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f38248"/>
        <function-ref name="fired" scoped="" ref="0x40f394e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f39bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f39998"/>
        <function-ref name="getdt" scoped="" ref="0x40f386f8"/>
        <function-ref name="gett0" scoped="" ref="0x40f384a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40f39740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f3acd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f39f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f39010"/>
        <function-ref name="stop" scoped="" ref="0x40f39290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40f35a58" loc="49:/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f35a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f35c30"/>
        <function-ref name="getPayload" scoped="" ref="0x40f35d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f35df0"/>
        <function-ref name="cancel" scoped="" ref="0x40f35ed0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f34010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f34150" loc="50:/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f34150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f34328"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f34408"/>
        <function-ref name="getPayload" scoped="" ref="0x40f344e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f345c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f346a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f347e8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f347e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f349c0"/>
        <function-ref name="source" scoped="" ref="0x40f34aa0"/>
        <function-ref name="address" scoped="" ref="0x40f34b80"/>
        <function-ref name="destination" scoped="" ref="0x40f34c60"/>
        <function-ref name="setSource" scoped="" ref="0x40f34d40"/>
        <function-ref name="setDestination" scoped="" ref="0x40f34e20"/>
        <function-ref name="type" scoped="" ref="0x40f34f00"/>
        <function-ref name="setType" scoped="" ref="0x40f33010"/>
        <function-ref name="isForMe" scoped="" ref="0x40f330f0"/>
        <function-ref name="setGroup" scoped="" ref="0x40f331d0"/>
        <function-ref name="localGroup" scoped="" ref="0x40f332b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40f33410" loc="52:/opt/tinyos-main/src/tinyos-main/tos/system/AMSenderC.nc">
      <component-ref qname="CtpP.SendControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40f33410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f335e8"/>
        <function-ref name="noAck" scoped="" ref="0x40f336c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f337a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41558680" loc="49:/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41558680"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41558858"/>
        <function-ref name="getPayload" scoped="" ref="0x41558938"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41558a18"/>
        <function-ref name="cancel" scoped="" ref="0x41558af8"/>
        <function-ref name="sendDone" scoped="" ref="0x41558bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41558d18" loc="50:/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41558d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41558ef0"/>
        <function-ref name="payloadLength" scoped="" ref="0x41557010"/>
        <function-ref name="getPayload" scoped="" ref="0x415570f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415571d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x415572b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x415573f0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x415573f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x415575c8"/>
        <function-ref name="source" scoped="" ref="0x415576a8"/>
        <function-ref name="address" scoped="" ref="0x41557788"/>
        <function-ref name="destination" scoped="" ref="0x41557868"/>
        <function-ref name="setSource" scoped="" ref="0x41557948"/>
        <function-ref name="setDestination" scoped="" ref="0x41557a28"/>
        <function-ref name="type" scoped="" ref="0x41557b08"/>
        <function-ref name="setType" scoped="" ref="0x41557be8"/>
        <function-ref name="isForMe" scoped="" ref="0x41557cc8"/>
        <function-ref name="setGroup" scoped="" ref="0x41557da8"/>
        <function-ref name="localGroup" scoped="" ref="0x41557e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41556010" loc="52:/opt/tinyos-main/src/tinyos-main/tos/system/DirectAMSenderC.nc">
      <component-ref qname="CtpP.SendControl.SenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41556010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x415561e8"/>
        <function-ref name="noAck" scoped="" ref="0x415562c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x415563a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41554d30" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41554d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41554f08"/>
        <function-ref name="getPayload" scoped="" ref="0x415a1010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415a10f0"/>
        <function-ref name="cancel" scoped="" ref="0x415a11d0"/>
        <function-ref name="sendDone" scoped="" ref="0x415a12b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x415a1420" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x415a1420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415a15f8"/>
        <function-ref name="getPayload" scoped="" ref="0x415a16d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415a17b8"/>
        <function-ref name="cancel" scoped="" ref="0x415a1898"/>
        <function-ref name="sendDone" scoped="" ref="0x415a1978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x415a1ab8" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="CtpP.SendControl.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x415a1ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x415a1c90"/>
        <function-ref name="source" scoped="" ref="0x415a1d70"/>
        <function-ref name="address" scoped="" ref="0x415a1e50"/>
        <function-ref name="destination" scoped="" ref="0x415a0010"/>
        <function-ref name="setSource" scoped="" ref="0x415a00f0"/>
        <function-ref name="setDestination" scoped="" ref="0x415a01d0"/>
        <function-ref name="type" scoped="" ref="0x415a02b0"/>
        <function-ref name="setType" scoped="" ref="0x415a0390"/>
        <function-ref name="isForMe" scoped="" ref="0x415a0470"/>
        <function-ref name="setGroup" scoped="" ref="0x415a0550"/>
        <function-ref name="localGroup" scoped="" ref="0x415a0630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f32d60" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f32d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f30010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f300f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f301d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f302b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f30390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f32a48" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f32a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f32c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f304d0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/AMReceiverC.nc">
      <component-ref qname="CtpP.ReceiveControl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f304d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f306a8"/>
        <function-ref name="source" scoped="" ref="0x40f30788"/>
        <function-ref name="address" scoped="" ref="0x40f30868"/>
        <function-ref name="destination" scoped="" ref="0x40f30948"/>
        <function-ref name="setSource" scoped="" ref="0x40f30a28"/>
        <function-ref name="setDestination" scoped="" ref="0x40f30b08"/>
        <function-ref name="type" scoped="" ref="0x40f30be8"/>
        <function-ref name="setType" scoped="" ref="0x40f30cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x40f30da8"/>
        <function-ref name="setGroup" scoped="" ref="0x40f30e88"/>
        <function-ref name="localGroup" scoped="" ref="0x40f2f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40f2ebb8" loc="2:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/DummyActiveMessageP.nc">
      <component-ref qname="DummyActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40f2ebb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40f2ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f52d40" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="TestNetworkAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f52d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f52f18"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f51010"/>
        <function-ref name="getPayload" scoped="" ref="0x40f510f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f511d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f512b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40f526a8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionSenderC.nc">
      <component-ref qname="TestNetworkAppC.CollectionSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40f526a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f52880"/>
        <function-ref name="getPayload" scoped="" ref="0x40f52960"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f52a40"/>
        <function-ref name="cancel" scoped="" ref="0x40f52b20"/>
        <function-ref name="sendDone" scoped="" ref="0x40f52c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x415928a8" loc="38:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="TestNetworkAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x415928a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41592a80"/>
        <function-ref name="payloadLength" scoped="" ref="0x41592b60"/>
        <function-ref name="getPayload" scoped="" ref="0x41592c40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41592d20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41592e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41592210" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CollectionSenderP.nc">
      <component-ref qname="TestNetworkAppC.CollectionSenderC.CollectionSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41592210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415923e8"/>
        <function-ref name="getPayload" scoped="" ref="0x415924c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415925a8"/>
        <function-ref name="cancel" scoped="" ref="0x41592688"/>
        <function-ref name="sendDone" scoped="" ref="0x41592768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionId" ref="0x41590a28" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionIdP.nc">
      <component-ref qname="TestNetworkAppC.CollectionSenderC.CollectionSenderP.CollectionIdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionId" scoped="" ref="0x41590a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionId"/>
      </instance>
      <interface-functions>
        <function-ref name="fetch" scoped="" ref="0x41590c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40f51f28" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="TestNetworkAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40f51f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403f6e08"/>
            <typename><typedef-ref name="TMilli" ref="0x403fc010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f45a18"/>
        <function-ref name="fired" scoped="" ref="0x40f46cb8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40f453d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40f45180"/>
        <function-ref name="getdt" scoped="" ref="0x40f45ec8"/>
        <function-ref name="gett0" scoped="" ref="0x40f45c70"/>
        <function-ref name="isRunning" scoped="" ref="0x40f46f10"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40f46560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40f456f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40f467e0"/>
        <function-ref name="stop" scoped="" ref="0x40f46a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40f42680" loc="40:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/DemoSensorC.nc">
      <component-ref qname="TestNetworkAppC.DemoSensorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40f42680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f42ca8"/>
        <function-ref name="readDone" scoped="" ref="0x40f42f00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x40f77230" loc="45:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/DemoSensorC.nc">
      <component-ref qname="TestNetworkAppC.DemoSensorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="readDone" scoped="" ref="0x40f77230"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f77408"/>
        <function-ref name="runTask" scoped="" ref="0x40f774e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40f75dd0" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f75dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41084010"/>
        <function-ref name="getPayload" scoped="" ref="0x410840f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410841d0"/>
        <function-ref name="cancel" scoped="" ref="0x410842b0"/>
        <function-ref name="sendDone" scoped="" ref="0x41084390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x410844d0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x410844d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410846a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x41084788"/>
        <function-ref name="getPayload" scoped="" ref="0x41084868"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41084948"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41084a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41084b68" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41084b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41084d40"/>
        <function-ref name="source" scoped="" ref="0x41084e20"/>
        <function-ref name="address" scoped="" ref="0x41084f00"/>
        <function-ref name="destination" scoped="" ref="0x41083010"/>
        <function-ref name="setSource" scoped="" ref="0x410830f0"/>
        <function-ref name="setDestination" scoped="" ref="0x410831d0"/>
        <function-ref name="type" scoped="" ref="0x410832b0"/>
        <function-ref name="setType" scoped="" ref="0x41083390"/>
        <function-ref name="isForMe" scoped="" ref="0x41083470"/>
        <function-ref name="setGroup" scoped="" ref="0x41083550"/>
        <function-ref name="localGroup" scoped="" ref="0x41083630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41083790" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkAppC.SerialAMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41083790"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41083968"/>
        <function-ref name="noAck" scoped="" ref="0x41083a48"/>
        <function-ref name="wasAcked" scoped="" ref="0x41083b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41586030" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestNetworkAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41586030"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41586208"/>
        <function-ref name="getPayload" scoped="" ref="0x415862e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x415863c8"/>
        <function-ref name="cancel" scoped="" ref="0x415864a8"/>
        <function-ref name="sendDone" scoped="" ref="0x41586588"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x415866f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestNetworkAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x415866f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x415868d0"/>
        <function-ref name="getPayload" scoped="" ref="0x415869b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41586a90"/>
        <function-ref name="cancel" scoped="" ref="0x41586b70"/>
        <function-ref name="sendDone" scoped="" ref="0x41586c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41586d90" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestNetworkAppC.SerialAMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41586d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41585010"/>
        <function-ref name="source" scoped="" ref="0x415850f0"/>
        <function-ref name="address" scoped="" ref="0x415851d0"/>
        <function-ref name="destination" scoped="" ref="0x415852b0"/>
        <function-ref name="setSource" scoped="" ref="0x41585390"/>
        <function-ref name="setDestination" scoped="" ref="0x41585470"/>
        <function-ref name="type" scoped="" ref="0x41585550"/>
        <function-ref name="setType" scoped="" ref="0x41585630"/>
        <function-ref name="isForMe" scoped="" ref="0x41585710"/>
        <function-ref name="setGroup" scoped="" ref="0x415857f0"/>
        <function-ref name="localGroup" scoped="" ref="0x415858d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40f6f6f8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40f6f6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f6f8d0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f6f9b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f6fa90"/>
        <function-ref name="cancel" scoped="" ref="0x40f6fb70"/>
        <function-ref name="sendDone" scoped="" ref="0x40f6fc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40f6b5d8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f6b5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f6b7c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f6b8a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f6b980"/>
        <function-ref name="cancel" scoped="" ref="0x40f6ba60"/>
        <function-ref name="sendDone" scoped="" ref="0x40f6bb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40f6ce28" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40f6ce28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f6b050"/>
        <function-ref name="getPayload" scoped="" ref="0x40f6b130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f6b210"/>
        <function-ref name="cancel" scoped="" ref="0x40f6b2f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f6b3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40f6a930" loc="50:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f6a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f6ab08"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f6abe8"/>
        <function-ref name="getPayload" scoped="" ref="0x40f6acc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f6ada8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f6ae88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40f69030" loc="169:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40f69030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f69208"/>
        <function-ref name="runTask" scoped="" ref="0x40f692e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40f69468" loc="126:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40f69468"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f69640"/>
        <function-ref name="runTask" scoped="" ref="0x40f69720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40f6bc80" loc="49:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f6bc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f6be58"/>
        <function-ref name="source" scoped="" ref="0x40f6a010"/>
        <function-ref name="address" scoped="" ref="0x40f6a0f0"/>
        <function-ref name="destination" scoped="" ref="0x40f6a1d0"/>
        <function-ref name="setSource" scoped="" ref="0x40f6a2b0"/>
        <function-ref name="setDestination" scoped="" ref="0x40f6a390"/>
        <function-ref name="type" scoped="" ref="0x40f6a470"/>
        <function-ref name="setType" scoped="" ref="0x40f6a550"/>
        <function-ref name="isForMe" scoped="" ref="0x40f6a630"/>
        <function-ref name="setGroup" scoped="" ref="0x40f6a710"/>
        <function-ref name="localGroup" scoped="" ref="0x40f6a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40f67848" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40f67848"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f67a20"/>
        <function-ref name="stopDone" scoped="" ref="0x40f67b00"/>
        <function-ref name="start" scoped="" ref="0x40f67be0"/>
        <function-ref name="stop" scoped="" ref="0x40f67cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40f63158" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f63158"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f63330"/>
        <function-ref name="getPayload" scoped="" ref="0x40f63410"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f634f0"/>
        <function-ref name="cancel" scoped="" ref="0x40f635d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f636b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f63e70" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f63e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f62070"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f62150"/>
        <function-ref name="getPayload" scoped="" ref="0x40f62230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f62310"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f623f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f63b18" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f63b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f63cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f61848" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f61848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f61a20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f61b00"/>
        <function-ref name="led1On" scoped="" ref="0x40f61be0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f61cc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f61da0"/>
        <function-ref name="get" scoped="" ref="0x40f61e80"/>
        <function-ref name="led1Off" scoped="" ref="0x40f60010"/>
        <function-ref name="led2Off" scoped="" ref="0x40f60390"/>
        <function-ref name="set" scoped="" ref="0x40f600f0"/>
        <function-ref name="led0On" scoped="" ref="0x40f601d0"/>
        <function-ref name="led2On" scoped="" ref="0x40f602b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40f61310" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40f61310"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f614e8"/>
        <function-ref name="noAck" scoped="" ref="0x40f615c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f616a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f62588" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f62588"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f62760"/>
        <function-ref name="source" scoped="" ref="0x40f62840"/>
        <function-ref name="address" scoped="" ref="0x40f62920"/>
        <function-ref name="destination" scoped="" ref="0x40f62a00"/>
        <function-ref name="setSource" scoped="" ref="0x40f62ae0"/>
        <function-ref name="setDestination" scoped="" ref="0x40f62bc0"/>
        <function-ref name="type" scoped="" ref="0x40f62ca0"/>
        <function-ref name="setType" scoped="" ref="0x40f62d80"/>
        <function-ref name="isForMe" scoped="" ref="0x40f62e60"/>
        <function-ref name="setGroup" scoped="" ref="0x40f61010"/>
        <function-ref name="localGroup" scoped="" ref="0x40f610f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40f9eed0" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40f9eed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f9d0c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40f9d1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f9d280"/>
        <function-ref name="cancel" scoped="" ref="0x40f9d360"/>
        <function-ref name="sendDone" scoped="" ref="0x40f9d440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40f9d5a0" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40f9d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f9d778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40f5fc58" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40f5fc58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f5fe40"/>
        <function-ref name="getPayload" scoped="" ref="0x40f5ff20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f5e018"/>
        <function-ref name="cancel" scoped="" ref="0x40f5e0f8"/>
        <function-ref name="sendDone" scoped="" ref="0x40f5e1d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40f9e310" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40f9e310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f9e4e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f9e5c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40f9e6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f9e788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f9e868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f5e3b0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f5e3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f5e598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40f9e9a8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40f9e9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40f9eb80"/>
        <function-ref name="noAck" scoped="" ref="0x40f9ec60"/>
        <function-ref name="wasAcked" scoped="" ref="0x40f9ed40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40f5e6d8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40f5e6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40f5e8b0"/>
        <function-ref name="source" scoped="" ref="0x40f5e990"/>
        <function-ref name="address" scoped="" ref="0x40f5ea70"/>
        <function-ref name="destination" scoped="" ref="0x40f5eb50"/>
        <function-ref name="setSource" scoped="" ref="0x40f5ec30"/>
        <function-ref name="setDestination" scoped="" ref="0x40f5ed10"/>
        <function-ref name="type" scoped="" ref="0x40f5edf0"/>
        <function-ref name="setType" scoped="" ref="0x40f5eed0"/>
        <function-ref name="isForMe" scoped="" ref="0x40f9e010"/>
        <function-ref name="setGroup" scoped="" ref="0x40f9e0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40f9e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40f9cd20" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40f9cd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f9cef8"/>
        <function-ref name="stopDone" scoped="" ref="0x40f99010"/>
        <function-ref name="start" scoped="" ref="0x40f990f0"/>
        <function-ref name="stop" scoped="" ref="0x40f991d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40f99c20" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40f99c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40443560"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f99df8"/>
        <function-ref name="getPayload" scoped="" ref="0x40f99ed8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f97010"/>
        <function-ref name="cancel" scoped="" ref="0x40f970f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f971d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f9c988" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f9c988"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f9cb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40f99618" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40f99618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40443560"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f997f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40fcc840" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40fcc840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40fcca18"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40fccaf8"/>
        <function-ref name="led1On" scoped="" ref="0x40fccbd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40fcccb8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40fccd98"/>
        <function-ref name="get" scoped="" ref="0x40fcce78"/>
        <function-ref name="led1Off" scoped="" ref="0x40f96010"/>
        <function-ref name="led2Off" scoped="" ref="0x40f96390"/>
        <function-ref name="set" scoped="" ref="0x40f960f0"/>
        <function-ref name="led0On" scoped="" ref="0x40f961d0"/>
        <function-ref name="led2On" scoped="" ref="0x40f962b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x40fcc338" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40fcc338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40443560"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40fcc510"/>
        <function-ref name="offset" scoped="" ref="0x40fcc5f0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40fcc6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40fbbde8" loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40fbbde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40fba010"/>
        <function-ref name="stopDone" scoped="" ref="0x40fba0f0"/>
        <function-ref name="start" scoped="" ref="0x40fba1d0"/>
        <function-ref name="stop" scoped="" ref="0x40fba2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x40ff5b90" loc="328:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x40ff5b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ff5d68"/>
        <function-ref name="runTask" scoped="" ref="0x40ff5e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x40fb80b8" loc="74:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x40fb80b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40fb8290"/>
        <function-ref name="stop" scoped="" ref="0x40fb8370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x40fd9518" loc="191:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x40fd9518"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40fd96f0"/>
        <function-ref name="runTask" scoped="" ref="0x40fd97d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40fbba50" loc="65:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40fbba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40fbbc28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x40fe70e0" loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x40fe70e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x40fe72b8"/>
        <function-ref name="flush" scoped="" ref="0x40fe7398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x40ff6970" loc="322:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x40ff6970"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ff6b48"/>
        <function-ref name="runTask" scoped="" ref="0x40ff6c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x40fea9f8" loc="72:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40fea9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40feabd0"/>
        <function-ref name="resetSend" scoped="" ref="0x40feacb0"/>
        <function-ref name="dataReceived" scoped="" ref="0x40fead90"/>
        <function-ref name="resetReceive" scoped="" ref="0x40feae70"/>
        <function-ref name="putData" scoped="" ref="0x40fb9010"/>
        <function-ref name="putDone" scoped="" ref="0x40fb90f0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40fb91d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40fb9340" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40fb9340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40fb9518"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40fb95f8"/>
        <function-ref name="led1On" scoped="" ref="0x40fb96d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40fb97b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40fb9898"/>
        <function-ref name="get" scoped="" ref="0x40fb9978"/>
        <function-ref name="led1Off" scoped="" ref="0x40fb9a58"/>
        <function-ref name="led2Off" scoped="" ref="0x40fb9dd8"/>
        <function-ref name="set" scoped="" ref="0x40fb9b38"/>
        <function-ref name="led0On" scoped="" ref="0x40fb9c18"/>
        <function-ref name="led2On" scoped="" ref="0x40fb9cf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x40ff2880" loc="337:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40ff2880"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ff2a58"/>
        <function-ref name="runTask" scoped="" ref="0x40ff2b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x40fb65b8" loc="67:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40fb65b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40fb6790"/>
        <function-ref name="nextByte" scoped="" ref="0x40fb6870"/>
        <function-ref name="startSend" scoped="" ref="0x40fb6950"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40fb6a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x40fb4778" loc="68:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40fb4778"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40fb4950"/>
        <function-ref name="byteReceived" scoped="" ref="0x40fb4a30"/>
        <function-ref name="endPacket" scoped="" ref="0x40fb4b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x4106ce48" loc="275:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x4106ce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4106b050"/>
        <function-ref name="runTask" scoped="" ref="0x4106b130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4106ea90" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4106ea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40443560"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4106ec78"/>
        <function-ref name="getPayload" scoped="" ref="0x4106ed58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4106ee38"/>
        <function-ref name="cancel" scoped="" ref="0x4106ef18"/>
        <function-ref name="sendDone" scoped="" ref="0x4106d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x4106b2b0" loc="158:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x4106b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4106b488"/>
        <function-ref name="runTask" scoped="" ref="0x4106b568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4106e6d0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4106e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40443560"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4106e8b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x4106d238" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x4106d238"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40443560"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x4106d420"/>
        <function-ref name="offset" scoped="" ref="0x4106d500"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x4106d5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4106c230" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4106c230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4106c408"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4106c4e8"/>
        <function-ref name="led1On" scoped="" ref="0x4106c5c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4106c6a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4106c788"/>
        <function-ref name="get" scoped="" ref="0x4106c868"/>
        <function-ref name="led1Off" scoped="" ref="0x4106c948"/>
        <function-ref name="led2On" scoped="" ref="0x4106ccc8"/>
        <function-ref name="set" scoped="" ref="0x4106cb08"/>
        <function-ref name="led2Off" scoped="" ref="0x4106ca28"/>
        <function-ref name="led0On" scoped="" ref="0x4106cbe8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x4106dbf8" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x4106dbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x4106ddd0"/>
        <function-ref name="nextByte" scoped="" ref="0x4106deb0"/>
        <function-ref name="startSend" scoped="" ref="0x4106c010"/>
        <function-ref name="sendCompleted" scoped="" ref="0x4106c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x4106d720" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4106d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x4106d8f8"/>
        <function-ref name="byteReceived" scoped="" ref="0x4106d9d8"/>
        <function-ref name="endPacket" scoped="" ref="0x4106dab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x41067010" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x41067010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410671e8"/>
        <function-ref name="receivedByte" scoped="" ref="0x410672c8"/>
        <function-ref name="receive" scoped="" ref="0x410673a8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x41067488"/>
        <function-ref name="receiveDone" scoped="" ref="0x41067568"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x41067648"/>
        <function-ref name="sendDone" scoped="" ref="0x41067728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x4106a6b8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x4106a6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x4106a890"/>
        <function-ref name="resetSend" scoped="" ref="0x4106a970"/>
        <function-ref name="dataReceived" scoped="" ref="0x4106aa50"/>
        <function-ref name="resetReceive" scoped="" ref="0x4106ab30"/>
        <function-ref name="putData" scoped="" ref="0x4106ac10"/>
        <function-ref name="putDone" scoped="" ref="0x4106acf0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x4106add0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41067898" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41067898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41067a70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41067b50"/>
        <function-ref name="led1On" scoped="" ref="0x41067c30"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41067d10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41067df0"/>
        <function-ref name="get" scoped="" ref="0x41067ed0"/>
        <function-ref name="led1Off" scoped="" ref="0x41066010"/>
        <function-ref name="led2Off" scoped="" ref="0x41066390"/>
        <function-ref name="set" scoped="" ref="0x410660f0"/>
        <function-ref name="led0On" scoped="" ref="0x410661d0"/>
        <function-ref name="led2On" scoped="" ref="0x410662b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStreamBlocking" ref="0x41069c98" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStreamBlocking" scoped="" ref="0x41069c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41069e70"/>
        <function-ref name="receivedByte" scoped="" ref="0x41092010"/>
        <function-ref name="receive" scoped="" ref="0x410920f0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x410921d0"/>
        <function-ref name="receiveDone" scoped="" ref="0x410922b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x41092390"/>
        <function-ref name="sendDone" scoped="" ref="0x41092470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x41092628" loc="46:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x41092628"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41092800"/>
        <function-ref name="receive" scoped="" ref="0x410928e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartControl" ref="0x41069740" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartControl" scoped="" ref="0x41069740"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41069918"/>
        <function-ref name="stop" scoped="" ref="0x410699f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x4108f738" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x4108f738"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x4108f910"/>
        <function-ref name="offset" scoped="" ref="0x4108f9f0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x4108fad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41081030" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkAppC.UARTSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41081030"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41081208"/>
        <function-ref name="getPayload" scoped="" ref="0x410812e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410813c8"/>
        <function-ref name="cancel" scoped="" ref="0x410814a8"/>
        <function-ref name="sendDone" scoped="" ref="0x41081588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x410816c8" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkAppC.UARTSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x410816c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410818a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x41081980"/>
        <function-ref name="getPayload" scoped="" ref="0x41081a60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41081b40"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41081c20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41081d60" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkAppC.UARTSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41081d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41080010"/>
        <function-ref name="source" scoped="" ref="0x410800f0"/>
        <function-ref name="address" scoped="" ref="0x410801d0"/>
        <function-ref name="destination" scoped="" ref="0x410802b0"/>
        <function-ref name="setSource" scoped="" ref="0x41080390"/>
        <function-ref name="setDestination" scoped="" ref="0x41080470"/>
        <function-ref name="type" scoped="" ref="0x41080550"/>
        <function-ref name="setType" scoped="" ref="0x41080630"/>
        <function-ref name="isForMe" scoped="" ref="0x41080710"/>
        <function-ref name="setGroup" scoped="" ref="0x410807f0"/>
        <function-ref name="localGroup" scoped="" ref="0x410808d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x41080a30" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="TestNetworkAppC.UARTSender"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x41080a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41080c08"/>
        <function-ref name="noAck" scoped="" ref="0x41080ce8"/>
        <function-ref name="wasAcked" scoped="" ref="0x41080dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41617af8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestNetworkAppC.UARTSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41617af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41617cd0"/>
        <function-ref name="getPayload" scoped="" ref="0x41617db0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41617e90"/>
        <function-ref name="cancel" scoped="" ref="0x41614010"/>
        <function-ref name="sendDone" scoped="" ref="0x416140f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41614260" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestNetworkAppC.UARTSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41614260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41614438"/>
        <function-ref name="getPayload" scoped="" ref="0x41614518"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416145f8"/>
        <function-ref name="cancel" scoped="" ref="0x416146d8"/>
        <function-ref name="sendDone" scoped="" ref="0x416147b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x416148f8" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/AMQueueEntryP.nc">
      <component-ref qname="TestNetworkAppC.UARTSender.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x416148f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41614ad0"/>
        <function-ref name="source" scoped="" ref="0x41614bb0"/>
        <function-ref name="address" scoped="" ref="0x41614c90"/>
        <function-ref name="destination" scoped="" ref="0x41614d70"/>
        <function-ref name="setSource" scoped="" ref="0x41614e50"/>
        <function-ref name="setDestination" scoped="" ref="0x41613010"/>
        <function-ref name="type" scoped="" ref="0x416130f0"/>
        <function-ref name="setType" scoped="" ref="0x416131d0"/>
        <function-ref name="isForMe" scoped="" ref="0x416132b0"/>
        <function-ref name="setGroup" scoped="" ref="0x41613390"/>
        <function-ref name="localGroup" scoped="" ref="0x41613470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CollectionDebug" ref="0x4107fc98" loc="4:/opt/tinyos-main/src/tinyos-main/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CollectionDebug" scoped="" ref="0x4107fc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CollectionDebug"/>
      </instance>
      <interface-functions>
        <function-ref name="logEvent" scoped="" ref="0x4107fe70"/>
        <function-ref name="logEventMsg" scoped="" ref="0x410b8010"/>
        <function-ref name="logEventSimple" scoped="" ref="0x410b80f0"/>
        <function-ref name="logEventRoute" scoped="" ref="0x410b81d0"/>
        <function-ref name="logEventDbg" scoped="" ref="0x410b82b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x410b8460" loc="7:/opt/tinyos-main/src/tinyos-main/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x410b8460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x410b8638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UARTSend" ref="0x410b4bb0" loc="10:/opt/tinyos-main/src/tinyos-main/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UARTSend" scoped="" ref="0x410b4bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410b4d88"/>
        <function-ref name="getPayload" scoped="" ref="0x410b4e68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410b3010"/>
        <function-ref name="cancel" scoped="" ref="0x410b30f0"/>
        <function-ref name="sendDone" scoped="" ref="0x410b31d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x410b5010" loc="9:/opt/tinyos-main/src/tinyos-main/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x410b5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
              <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x410b5d40"/>
        <function-ref name="enqueue" scoped="" ref="0x410b4458"/>
        <function-ref name="element" scoped="" ref="0x410b47a8"/>
        <function-ref name="maxSize" scoped="" ref="0x410b5ae8"/>
        <function-ref name="dequeue" scoped="" ref="0x410b40e8"/>
        <function-ref name="empty" scoped="" ref="0x410b5638"/>
        <function-ref name="size" scoped="" ref="0x410b5890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x410afad8" loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x410afad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410afcb0"/>
        <function-ref name="runTask" scoped="" ref="0x410afd90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MessagePool" ref="0x410b8928" loc="8:/opt/tinyos-main/src/tinyos-main/tos/lib/net/UARTDebugSenderP.nc">
      <component-ref qname="UARTDebugSenderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MessagePool" scoped="" ref="0x410b8928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
            <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x410b7aa8"/>
        <function-ref name="maxSize" scoped="" ref="0x410b74c0"/>
        <function-ref name="empty" scoped="" ref="0x410b7010"/>
        <function-ref name="put" scoped="" ref="0x410b7718"/>
        <function-ref name="size" scoped="" ref="0x410b7268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x410b95b0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="TestNetworkAppC.QueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x410b95b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
              <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x410ca310"/>
        <function-ref name="enqueue" scoped="" ref="0x410ca9f0"/>
        <function-ref name="element" scoped="" ref="0x410cad40"/>
        <function-ref name="maxSize" scoped="" ref="0x410ca0b8"/>
        <function-ref name="dequeue" scoped="" ref="0x410ca680"/>
        <function-ref name="empty" scoped="" ref="0x410b9bd8"/>
        <function-ref name="size" scoped="" ref="0x410b9e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x410c8ef0" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/PoolC.nc">
      <component-ref qname="TestNetworkAppC.PoolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x410c8ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
            <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x410c6010"/>
        <function-ref name="maxSize" scoped="" ref="0x410c7a08"/>
        <function-ref name="empty" scoped="" ref="0x410c7558"/>
        <function-ref name="put" scoped="" ref="0x410c7c60"/>
        <function-ref name="size" scoped="" ref="0x410c77b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41603030" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="TestNetworkAppC.PoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41603030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
            <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41602130"/>
        <function-ref name="maxSize" scoped="" ref="0x41603b08"/>
        <function-ref name="empty" scoped="" ref="0x41603658"/>
        <function-ref name="put" scoped="" ref="0x41603d60"/>
        <function-ref name="size" scoped="" ref="0x416038b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41605c68" loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="TestNetworkAppC.PoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41605c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41605e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x410c26c8" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/PoolC.nc">
      <component-ref qname="TestNetworkAppC.DebugMessagePool"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x410c26c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
            <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x410c1850"/>
        <function-ref name="maxSize" scoped="" ref="0x410c1268"/>
        <function-ref name="empty" scoped="" ref="0x410c2cf0"/>
        <function-ref name="put" scoped="" ref="0x410c14c0"/>
        <function-ref name="size" scoped="" ref="0x410c1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x415f9790" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="TestNetworkAppC.DebugMessagePool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x415f9790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
            <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x415f8888"/>
        <function-ref name="maxSize" scoped="" ref="0x415f82a0"/>
        <function-ref name="empty" scoped="" ref="0x415f9db8"/>
        <function-ref name="put" scoped="" ref="0x415f84f8"/>
        <function-ref name="size" scoped="" ref="0x415f8048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x415f93e8" loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="TestNetworkAppC.DebugMessagePool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x415f93e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x415f95c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x410bfa90" loc="43:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="TestNetworkAppC.DebugSendQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x410bfa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
              <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x410be7e0"/>
        <function-ref name="enqueue" scoped="" ref="0x410beec0"/>
        <function-ref name="element" scoped="" ref="0x410bc240"/>
        <function-ref name="maxSize" scoped="" ref="0x410be588"/>
        <function-ref name="dequeue" scoped="" ref="0x410beb50"/>
        <function-ref name="empty" scoped="" ref="0x410be0d8"/>
        <function-ref name="size" scoped="" ref="0x410be330"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="RootControl" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/net/RootControl.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x404588f0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x40458138" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x40458530" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionPacket" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionPacket.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x4046e688" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4046e330" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x4046e528" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x40466ad8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40466770" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40466978" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x404638d8" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x403f07f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40463550" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x40463778" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="collection_id_t" ref="0x403f07f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x40466370" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40466218" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40463ec8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40463d70" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x40463168" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionPacket.nc">
        <interfacedef-ref qname="CollectionPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x403f07f8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40463010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionDebug" loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionDebug.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <short> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure.</short>
        <long> &#10;  The CollectionDebug is an interface for sending debugging events to&#10;  a logging infrastructure. An implementer can choose to send the event&#10;  information to different destinations. Primary examples can include:&#10;  &#60;ul>&#10;    &#60;li> logging to the UART, in case of a testbed of network-connected&#10;         nodes;&#10;    &#60;li> logging to flash, if the logs are to be retrieved later&#10;    &#60;li> logging to the standard output, in the case of TOSSIM.&#10;  &#60;/ul>&#10;  &#10;  The interface does not specify in what format the log is to be produced,&#10;  or if other information, like timestamps, should be added, and this is&#10;  up to the implementer.&#10; &#10;  Some commands are generic, like Event, EventSimple, and EventDbg, while others&#10;  are for more specific events related to collection, like EventRoute and EventMsg.&#10;&#10; @author Rodrigo Fonseca&#10; @author Kyle Jamieson&#10; @date   $Date: 2010-06-29 22:07:47 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="logEvent" ref="0x4047fa58" loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x4047f900" loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventMsg" ref="0x404869b8" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40486238" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40486428" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="origin" ref="0x40486640" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </variable>
          <variable name="node" ref="0x40486848" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventSimple" ref="0x4047b228" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x4047feb8" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="arg" ref="0x4047b0c8" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventRoute" ref="0x40485600" loc="79:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x40486e10" loc="79:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="parent" ref="0x40485068" loc="79:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </variable>
          <variable name="hopcount" ref="0x40485280" loc="79:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="metric" ref="0x40485490" loc="79:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="logEventDbg" ref="0x4047bdd8" loc="67:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionDebug.nc">
        <interfacedef-ref qname="CollectionDebug"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x4047b668" loc="67:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="arg1" ref="0x4047b868" loc="67:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="arg2" ref="0x4047ba68" loc="67:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="arg3" ref="0x4047bc68" loc="67:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionDebug.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x40407bf8" loc="60:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x4040c330" loc="113:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4040c1d8" loc="113:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x4040b090" loc="138:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4040cf20" loc="138:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40405ad8" loc="104:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4040c840" loc="130:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40459c10" loc="80:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x404596b0" loc="80:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x404598c8" loc="80:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40459aa8" loc="80:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40468a88" loc="135:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40468728" loc="135:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40468908" loc="135:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x404681c8" loc="123:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4045fb80" loc="96:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4045fa28" loc="96:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40467898" loc="110:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40467540" loc="110:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40467738" loc="110:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x404736d8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404736d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x4046f8f8" loc="73:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404736d8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x4047a820" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404736d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x4047a6c8" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404736d8"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x401b8840"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x401b8840"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x40479168" loc="101:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404736d8"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40479010" loc="101:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x4046f4c8" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x4047a010" loc="81:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x404736d8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x40473b78" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x4046f010" loc="58:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40470850" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40470850"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4047e4c0" loc="97:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40470850"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40475748" loc="80:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x40470cf0" loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x40475d50" loc="89:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40470850"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40475bf8" loc="89:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40470850"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40475210" loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x404048c8" loc="95:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40404d90" loc="105:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Send.nc">
      <function command="" provided="0" name="send" ref="0x40445228" loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40446ec8" loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404450c8" loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4044ddd0" loc="125:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4044da70" loc="125:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4044dc50" loc="125:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4044d510" loc="112:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40445e68" loc="89:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40445d10" loc="89:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40450ba0" loc="100:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40450848" loc="100:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40450a40" loc="100:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpInfo" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
      <function command="" provided="0" name="getNeighborLinkQuality" ref="0x404696e0" loc="96:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40469588" loc="96:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="recomputeRoutes" ref="0x4046bd90" loc="83:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="80:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short> &#10; Tell the routing engine it might want to recompute its routes.</short>
          <long> &#10; Tell the routing engine it might want to recompute its routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="numNeighbors" ref="0x404690f8" loc="95:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerRouteUpdate" ref="0x4046b328" loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.</short>
          <long>&#10; This informs the routing engine that sending a beacon soon is&#10; advisable, e.g., in response to a pull bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x40462d50" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the ETX for the current path to the root through the current&#10; parent.</short>
          <long>&#10; Get the ETX for the current path to the root through the current&#10; parent. Sets etx argument to ETX*10.  The pointer is allocated by&#10; the caller.  If the parent is invalid, return FAIL (no info).&#10; The caller MUST NOT use the value in parent if the return is not&#10; SUCCESS. Calling getEtx at the root will set the etx argument to&#10; 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="etx" ref="0x40462bf8" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="triggerImmediateRouteUpdate" ref="0x4046b878" loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.</short>
          <long>&#10; This informs the routing engine that sending a beacon as soon&#10; as possible is advisable, e.g., due to queue overflow or&#10; a detected loop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setNeighborCongested" ref="0x4046a668" loc="88:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="85:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Informs the routing engine that a neighbor is congested&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4046a300" loc="88:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </variable>
          <variable name="congested" ref="0x4046a508" loc="88:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborAddr" ref="0x40474298" loc="98:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40474140" loc="98:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x404626c8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10; Get the parent of the node in the tree.</short>
          <long>&#10; Get the parent of the node in the tree.  The pointer is allocated&#10; by the caller.  If the parent is invalid, return FAIL.  The&#10; caller MUST NOT use the value in parent if the return is not&#10; SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent" ref="0x40462570" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNeighborRouteQuality" ref="0x40469cd0" loc="97:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40469b78" loc="97:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isNeighborCongested" ref="0x4046ac70" loc="93:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
        <documentation loc="90:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
          <short>&#10;  Returns the currently known state about a neighbor's congestion state&#10;</short>
        </documentation>
        <interfacedef-ref qname="CtpInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4046ab18" loc="93:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpInfo.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationValue" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/net/DisseminationValue.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/lib/net/DisseminationValue.nc">
        <short>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.</short>
        <long>&#10; Read a network shared (disseminated) variable and be notified&#10; of updates.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10;&#10; @date   Jan 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40412010" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/net/DisseminationValue.nc">
          <interfacedef-ref qname="DisseminationValue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40412010"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="changed" ref="0x40410010" loc="69:/opt/tinyos-main/src/tinyos-main/tos/lib/net/DisseminationValue.nc">
        <documentation loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Signalled whenever variable may have changed.</short>
          <long>&#10; Signalled whenever variable may have changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x404124b8" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/net/DisseminationValue.nc">
        <documentation loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Obtain a pointer to the variable.</short>
          <long>&#10; Obtain a pointer to the variable. The provider of this&#10; interface only will change the memory the pointer references&#10; in tasks. Therefore the memory region does not change during&#10; the execution of any other task. A user of this interface&#10; must not in any circumstance write to this memory location.&#10;&#10; @return A const pointer to the variable.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40412010"/></type-var>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40412af8" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/net/DisseminationValue.nc">
        <documentation loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/net/DisseminationValue.nc">
          <short>&#10; Set the variable to a new value.</short>
          <long>&#10; Set the variable to a new value. The provider of this interface&#10; will copy the value from the pointer. NOTE: This command does&#10; not cause the new value to begin disseminating. It is intended to&#10; be used for setting default values.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationValue"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40412010"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x404129a0" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/net/DisseminationValue.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40412010"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x4044b270" loc="49:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4044b270"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x4044b720" loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x4044bed0" loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4044b270"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x4044bba0" loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x4044bd70" loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4044b270"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x4046dd28" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x4046d880" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x4045ab28" loc="78:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
              <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4045a5e0" loc="78:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x4045a7c0" loc="78:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4045a9a0" loc="78:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpCongestion" loc="1:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
      <function command="" provided="0" name="isCongested" ref="0x40460610" loc="7:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClientCongested" ref="0x40460bc0" loc="14:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
        <interfacedef-ref qname="CtpCongestion"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="congested" ref="0x40460a68" loc="14:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpCongestion.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4047d9e8" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4047d890" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x40490440" loc="78:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404902e8" loc="78:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4048d4a8" loc="126:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4048d148" loc="126:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4048d328" loc="126:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4048fb08" loc="106:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4048f170" loc="94:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40490d60" loc="94:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4048f010" loc="94:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x403e3750" loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x403e3b98" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x403e1038" loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x403e18a8" loc="83:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x403ea5b0" loc="100:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403eaa58" loc="117:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x403e1460" loc="77:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403e91c0" loc="134:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x403e9068" loc="134:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x403e3328" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x403e1d28" loc="89:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x403ea168" loc="94:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x4048ae20" loc="177:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4030b4f8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4048acc8" loc="177:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40481700" loc="88:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x404815a8" loc="88:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40484630" loc="68:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40484cc8" loc="78:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40484b70" loc="78:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x4048c090" loc="121:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40482cf8" loc="121:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40482f00" loc="121:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40482378" loc="103:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40482010" loc="103:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40482218" loc="103:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x404897c0" loc="147:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40489668" loc="147:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x4048a340" loc="162:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4048a010" loc="162:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x4048a1e0" loc="162:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4030b2a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x4048cc30" loc="136:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4048cad8" loc="136:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x40488b88" loc="187:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4030b4f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40488828" loc="187:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40488a28" loc="187:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4030b4f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x40491418" loc="195:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4030b4f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x404543d8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x404543d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40451c28" loc="136:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40453a00" loc="83:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40452bc0" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40452878" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40452a60" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x404523d0" loc="98:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x4045b5c0" loc="151:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x4045b090" loc="144:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40453e90" loc="92:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40454a30" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404548d8" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40451608" loc="129:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404512c0" loc="129:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404514a8" loc="129:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40453168" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40453010" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40453638" loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x40304010" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40304528" loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x404bd368" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x404d94e8" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x404d9390" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x404d1b28" loc="31:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x404da188" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404da030" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x404da850" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404da6f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x404dada8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x404eb478" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x404eb320" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x404ebd10" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x404eb9a8" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x404ebbb0" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x404e4360" loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x404e4010" loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404e4200" loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x404ef708" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x404ef5b0" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x404eff10" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x404efbc0" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404efdb0" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x404e3b40" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x404eeda8" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x404ee858" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404eea48" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x404eec40" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x404ef0f8" loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x404e31f0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x404e4c70" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404e4e60" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x404e3088" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialInterrupts" loc="3:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
      <function command="" provided="0" name="setSendData" ref="0x404fd5a8" loc="17:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="txInterruptHandler" ref="0x404fc010" loc="20:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxInterruptHandler" ref="0x404fdb50" loc="19:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x404fd9f8" loc="19:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxInterrupt" ref="0x404f2828" loc="6:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxInterrupt" ref="0x404f2408" loc="5:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxInterrupt" ref="0x404f1090" loc="9:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearTxInterrupt" ref="0x404f14a8" loc="11:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxInterruptPending" ref="0x404f1d30" loc="14:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxInterrupt" ref="0x404f2c50" loc="8:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearRxInterrupt" ref="0x404f18c0" loc="12:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxInterruptPending" ref="0x404fd1c8" loc="15:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x404fb4f0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x404fb4f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x404fb658" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404fb658"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x404fbb40" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404fb658"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x404fa590" loc="76:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x404fa090" loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x404fa9b8" loc="82:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403dcd68" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x403b7bc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x4055cb50" loc="44:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x4055b010" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4055c3c0" loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x4055b7e0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4055c780" loc="43:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x4055b3e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40560c18" loc="40:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x4055c010" loc="41:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403d16e0" loc="76:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403dfeb8" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCounter" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x40605d28" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
          <interfacedef-ref qname="AtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40605d28"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x40611490" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40611338" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40612010" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40613230" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40605d28"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406123c8" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x406118a0" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40613b58" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40612f20" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40613770" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40605d28"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40613618" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40605d28"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40612790" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40612b40" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCapture" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x40630488" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
          <interfacedef-ref qname="AtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40630488"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x4062bb00" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x4062b9a8" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4062c688" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4062c2a8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40630980" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40630488"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4062ca40" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x4062bf10" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4062b5a8" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40630ec0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40630488"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40630d68" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40630488"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4062ce08" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4062b1c8" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCompare" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x40625a88" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
          <interfacedef-ref qname="AtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40625a88"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x40632188" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40632030" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40621cf8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40621918" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x40632960" loc="78:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40621010" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40625a88"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406200c8" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x40632598" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40620c20" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40621550" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40625a88"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x406213f8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40625a88"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40620490" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40620840" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403327e0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402ff138" loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40332c20" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x406ae8f8" loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x406ae580" loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x406ae798" loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x406bdb60" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406bd7c8" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x406bda00" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x406bb650" loc="71:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406bb4f8" loc="71:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x406bd2f0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x406adbb0" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x406ada58" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x406b9d10" loc="35:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406b9d10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x406b9e78" loc="35:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406b9e78"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x406b7088" loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406b9e78"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406b8f18" loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x406b7b20" loc="70:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406b79c8" loc="70:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x406b8520" loc="49:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406b83c8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406b65f0" loc="78:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406b9e78"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406b6280" loc="78:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x406b6490" loc="78:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406b9e78"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x406ab200" loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406ab0a8" loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x406abcf8" loc="71:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406abba0" loc="71:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x406bf7d0" loc="85:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406bf678" loc="85:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x406acd98" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x406ac8b8" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x406ac760" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x406b92e0" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x406d2010" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x406d2010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x406d12e0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406d1188" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406d2ca8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x406d2010"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406d2b50" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x406d2688" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406d2530" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406d1a88" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x406d2010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406d1710" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x406d1928" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x406d2010"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406cee88" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406cee88"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x406e0378" loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x406f3210" loc="120:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x406f48c0" loc="97:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x406f42c0" loc="88:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x406f4d70" loc="102:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x406f3908" loc="128:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x406f0870" loc="41:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x406e8010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f0718" loc="41:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x406e9c58" loc="37:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x406e8010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x406f02a0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x406e8010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f0148" loc="39:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x406ef800" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x406e8010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406ef460" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406ef6a0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x406e8010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x406ef060" loc="43:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x406e8010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f0ca0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x406f0ee0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x406e8010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x406ed350" loc="49:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x406ebca0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406ed1f8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x406edac0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x406ebca0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406ed730" loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x406ed960" loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x406ebca0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x406efd70" loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406efc18" loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x406edf00" loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x406ebca0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
      <function command="" provided="0" name="send" ref="0x406e33b0" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x406e8010"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x406e4e18" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x406e8010"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x406e3068" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406e3248" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x406f67f0" loc="122:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f6490" loc="122:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406f6670" loc="122:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x406f7ee0" loc="110:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x406e3d40" loc="83:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406e3be8" loc="83:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x406f78e8" loc="97:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x406f7590" loc="97:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x406f7788" loc="97:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x407126b8" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x40713f18" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
          <long>&#10; Returns the number of bytes in this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40713dc0" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x4071e868" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4030b4f8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071e710" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x4071d5e8" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071d490" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x4071faf0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071f998" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40705d40" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40705be8" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x4071e2a0" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071ff20" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4071e140" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x4071f520" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071f1b8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4071f3c0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4071d010" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4030b4f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071ec90" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x4071ee90" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4030b4f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x40723010" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x40723618" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
          <long>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x40722c48" loc="65:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40722af0" loc="65:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x40723d60" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40723c08" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x407224a0" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40722348" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x40713168" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40713010" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x407189c8" loc="86:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x40718510" loc="80:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40718198" loc="80:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x407183b0" loc="80:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x40704500" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407043a8" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x40704bc8" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40704a70" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x40703510" loc="69:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40703198" loc="69:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x407033b0" loc="69:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x407095b8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x40709e28" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
          <long>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40709b00" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40709cc8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x40703c28" loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
          <long>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40703ad0" loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x40729d38" loc="131:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40729be0" loc="131:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x4072aed8" loc="120:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072ad80" loc="120:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x4071ae38" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071aae8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x4071acd8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x4072e220" loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072e0c8" loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x40725190" loc="156:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40726e10" loc="156:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40725030" loc="156:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x40719b58" loc="69:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40719a00" loc="69:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x40729728" loc="125:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407293e8" loc="125:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x407295c8" loc="125:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x4072d1c8" loc="88:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4072ee10" loc="88:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4072d068" loc="88:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x40726998" loc="151:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40726840" loc="151:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x407194b8" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40719360" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x4072b1c0" loc="99:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072b068" loc="99:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x4072dad0" loc="94:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4072d758" loc="94:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4072d970" loc="94:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x4073a930" loc="178:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x406e8010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x407257b8" loc="162:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40725660" loc="162:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x4073a490" loc="173:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x406ebca0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x40726370" loc="146:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40726010" loc="146:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40726210" loc="146:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x4072e8d0" loc="81:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072e778" loc="81:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x4072a8c8" loc="115:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072a578" loc="115:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x4072a768" loc="115:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x40727548" loc="136:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407271f8" loc="136:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x407273e8" loc="136:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x4073af08" loc="184:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4073adb0" loc="184:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x4072b9c8" loc="105:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072b6a0" loc="105:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4072b868" loc="105:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x4071a630" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071a4d8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x40725ec8" loc="168:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40725d70" loc="168:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x40727b78" loc="141:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40727a20" loc="141:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x4072a090" loc="110:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072bf20" loc="110:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x40715c48" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407158e8" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x40715ae8" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x407140f8" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40706da0" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40706c48" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x40715418" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407152c0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x4070f3b8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4070f260" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x40711cc0" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40711b68" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x4070f8b0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x4070e010" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4070fe10" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x40734e70" loc="70:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40734d18" loc="70:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x407364a8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40736350" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x407341d8" loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40736d00" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407369a0" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40736ba0" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x4071cda0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071cc48" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x40734858" loc="65:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40734700" loc="65:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RFA1DriverConfig" loc="36:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x407081c8" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x4070dcb0" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4070db58" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x407088a8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40708750" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x40708df0" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x40707600" loc="66:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
          <long>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407074a8" loc="66:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x40760de0" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x40760580" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x40433a00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x40760428" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x40433a00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x407609c8" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x40765e38" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x4075f2e0" loc="65:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x40433a00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40761518" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40761518"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40761680" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40761680"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x407739a8" loc="109:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40761680"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40774608" loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40773360" loc="103:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40761680"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40761680"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40773010" loc="103:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40761680"/></type-var>
          </variable>
          <variable name="dt" ref="0x40773200" loc="103:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40761680"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40774a78" loc="88:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40773e38" loc="116:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40761680"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40761cb0" loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40761680"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40761b58" loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40761680"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407741a8" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x407815d0" loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x40781ba0" loc="72:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x40780210" loc="79:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x407811a8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
          <long>&#10; This method is executed atomically. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x407b65e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407b6490" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x407cd700" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407cd5a8" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x407cd010" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407b6c00" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x407b6df8" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x407b56c0" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
              <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407b5548" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x407da1a8" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x407daa18" loc="60:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x407da618" loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4030b4f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x407c3c68" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4030b4f8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x407c3900" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4030b4f8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x407c3b08" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40831c58" loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x4082e2c8" loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x4082a010" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40830a70" loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x4082d5a8" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x4082daa8" loc="98:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40841940" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4082f300"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x408417e8" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4082f300"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x408445d8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40844c98" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4082f300"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40844b40" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4082f300"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40841258" loc="70:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x4082f300"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x4090a010" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
              <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4090de40" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x4090d7c8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4090d670" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4091ee38" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x4091ece0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x4091d2d8" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4091e3a0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x4091e248" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4091e8e8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x4091e790" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x40906d68" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40906c10" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x40902a60" loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40902908" loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x40902448" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x409022f0" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x40901168" loc="80:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40901010" loc="80:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x409066e8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40906590" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x40949d18" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40949bc0" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x409496e0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x4094a880" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4094a728" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x40945528" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40945010" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4094aea0" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x4094ccf8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x40948750" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40948d98" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40948c40" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x40947240" loc="69:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each successfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each successfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x40948258" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40947780" loc="74:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x409c78e0" loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x409c78e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x409c4010" loc="64:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x409c78e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x409c7dd8" loc="64:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x409c78e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x409d2cc0" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409d2b68" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x409d5938" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409d57e0" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x409d2170" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409d5dc8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x409d2010" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x409d2730" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409d25d8" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrickleTimer" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimer.nc">
      <function event="" provided="0" name="fired" ref="0x40b39d20" loc="90:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="87:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; The trickle timer has fired.</short>
          <long>&#10; The trickle timer has fired. Signaled if C &#38;gt; K.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="incrementCounter" ref="0x40b39920" loc="85:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="82:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Increment the counter C.</short>
          <long>&#10; Increment the counter C. When an interval ends, C is set to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40b39478" loc="80:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="76:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Reset the timer period to L.</short>
          <long>&#10; Reset the timer period to L. If called while the timer is running,&#10; then a new interval (of length L) begins immediately.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40b18b58" loc="68:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Start the trickle timer.</short>
          <long>&#10; Start the trickle timer. At boot, the timer period is its maximum&#10; value (H). If a protocol requires starting at the minimum value&#10; (e.g., fast start), then it should call &#60;tt>reset&#60;/tt> before&#10; &#60;tt>start&#60;/tt>.&#10;&#10; @return error_t SUCCESS if the timer was started, EBUSY if it is already&#10; running, and FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40b39070" loc="74:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimer.nc">
        <documentation loc="70:/opt/tinyos-main/src/tinyos-main/tos/lib/net/TrickleTimer.nc">
          <short>&#10; Stop the trickle timer.</short>
          <long>&#10; Stop the trickle timer. This call sets the timer period to H and&#10; C to 0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrickleTimer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationCache" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <short>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.</short>
        <long>&#10; The DisseminationCache interface connects each DisseminatorC&#10; component to the DisseminationEngineC component.&#10;&#10; See TEP118 - Dissemination for details.&#10; &#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-04 04:31:08 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestData" ref="0x40b16590" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x40b16418" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="storeData" ref="0x40b3b178" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b16bd0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="size" ref="0x40b16dc0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
          <variable name="seqno" ref="0x40b3b010" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="newData" ref="0x40b3b938" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="start" ref="0x40b19be8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestSeqno" ref="0x40b3b5a0" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="stop" ref="0x40b16010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/net/drip/DisseminationCache.nc">
        <interfacedef-ref qname="DisseminationCache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DisseminationUpdate" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
        <short>&#10; Update a network shared (disseminated) value.</short>
        <long>&#10; Update a network shared (disseminated) value. Updates are assured&#10; to be eventually consistent across a connected network. If multiple&#10; nodes update a value simultaneously, then nodes within the network&#10; will see a series of one or more updates, the last update will&#10; be the same for all nodes. Components that need to use the&#10; variable should use the DisseminationValue interface.&#10;&#10; @author Philip Levis&#10; @author Gilman Tolle&#10; @date   January 7 2006&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40bb4210" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
          <interfacedef-ref qname="DisseminationUpdate"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40bb4210"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="change" ref="0x40bb49b8" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
        <documentation loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
          <short>&#10; Update the variable to a new value.</short>
          <long>&#10; Update the variable to a new value. This changes the local copy&#10; and begins to disseminate the new value throughout the network.&#10; As other nodes may have also changed the variable, it is possible&#10; that an update may not 'stick,' but will instead be overwritten by&#10; a separate update.&#10;&#10; @param newVal A pointer to the new value. The memory pointed to&#10; by newVal is copied out, so newVal can be reclaimed when&#10; &#60;tt>change&#60;/tt> returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DisseminationUpdate"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40bb4210"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40bb4860" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/net/DisseminationUpdate.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40bb4210"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BitVector" loc="40:/opt/tinyos-main/src/tinyos-main/tos/interfaces/BitVector.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/interfaces/BitVector.nc">
        <short>&#10; Interface to a bit vector.</short>
        <long>&#10; Interface to a bit vector.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearAll" ref="0x40bde468" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Clear all bits in the vector.</short>
          <long>&#10; Clear all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40c049a0" loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to clear.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40c04848" loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x40c03010" loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="71:/opt/tinyos-main/src/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Toggle a bit in the vector.</short>
          <long>&#10; Toggle a bit in the vector.&#10; @param bitnum Bit to toggle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40c04e08" loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40bdee20" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Read a bit from the vector.</short>
          <long>&#10; Read a bit from the vector.&#10; @param bitnum Bit to read.&#10; @return Bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40bdecc8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="assign" ref="0x40c037b8" loc="82:/opt/tinyos-main/src/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="77:/opt/tinyos-main/src/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Write a bit in the vector.</short>
          <long>&#10; Write a bit in the vector.&#10; @param bitnum Bit to clear.&#10; @param value New bit value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40c03478" loc="82:/opt/tinyos-main/src/tinyos-main/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="value" ref="0x40c03658" loc="82:/opt/tinyos-main/src/tinyos-main/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAll" ref="0x40bde870" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Set all bits in the vector.</short>
          <long>&#10; Set all bits in the vector.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40c043f0" loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Set a bit in the vector.</short>
          <long>&#10; Set a bit in the vector.&#10; @param bitnum Bit to set.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="bitnum" ref="0x40c04298" loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/BitVector.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40c03c38" loc="88:/opt/tinyos-main/src/tinyos-main/tos/interfaces/BitVector.nc">
        <documentation loc="84:/opt/tinyos-main/src/tinyos-main/tos/interfaces/BitVector.nc">
          <short>&#10; Return bit vector length.</short>
          <long>&#10; Return bit vector length.&#10; @return Bit vector length.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BitVector"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Intercept" loc="15:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Intercept.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="forward" ref="0x40cbf010" loc="31:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Intercept.nc">
        <documentation loc="16:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Intercept.nc">
          <short>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination.</short>
          <long>&#10; Signals that a message has been received, which is supposed to be&#10; forwarded to another destination. &#10;&#10; @param 'message_t* ONE msg' The complete message received.&#10;&#10; @param 'void* COUNT(len) payload' The payload portion of the packet for this&#10; protocol layer.&#10;&#10; @param len The length of the payload buffer.&#10;&#10; @return TRUE indicates the packet should be forwarded, FALSE&#10; indicates that it should not be forwarded.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Intercept"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cc2a60" loc="31:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40cc2c40" loc="31:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Intercept.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40cc2e20" loc="31:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Intercept.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpPacket" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <short>&#10;  ADT for CTP data frames.</short>
        <long>&#10;  ADT for CTP data frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2007-11-28 04:42:52 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSequenceNumber" ref="0x40cb7f08" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cb7bb0" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="seqno" ref="0x40cb7da8" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="option" ref="0x40cbb9e8" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x403f9e40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cbb668" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40cbb888" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x403f9e40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x40cb9418" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cb90c8" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x40cb92b8" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOrigin" ref="0x40cb7170" loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cb9dd0" loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40cb7010" loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x40cbb248" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x403f9e40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cbee80" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x40cbb0e8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x403f9e40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x40cbacc0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cbab68" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOrigin" ref="0x40cb99d0" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cb9878" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40cb6bd8" loc="67:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cb68a0" loc="67:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="id" ref="0x40cb6a78" loc="67:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x40cbea60" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x403f9e40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cbe6c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="option" ref="0x40cbe900" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x403f9e40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchPacket" ref="0x40ce3bd8" loc="70:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x40ce3868" loc="70:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x40ce3a78" loc="70:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getThl" ref="0x40cba010" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cbbe10" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40cb7760" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cb7608" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchInstance" ref="0x40ce3430" loc="69:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="m1" ref="0x40ce30c0" loc="69:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="m2" ref="0x40ce32d0" loc="69:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x40cb64b8" loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cb6360" loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setThl" ref="0x40cba730" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
        <interfacedef-ref qname="CtpPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40cba3f0" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="thl" ref="0x40cba5d0" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CollectionId" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionId.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionId.nc">
        <short>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.</short>
        <long>&#10;  Interface for fetching the collection ID associated with a&#10;  collection sender instance.&#10;&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2006-12-12 18:23:28 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="fetch" ref="0x40ce1b48" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/net/CollectionId.nc">
        <interfacedef-ref qname="CollectionId"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="collection_id_t" ref="0x403f07f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkEstimator" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <short> Provides an additive quality measure for a neighbor.</short>
        <long> Provides an additive quality measure for a neighbor. The&#10; provided quality increases when the true link quality increases.&#10;  @author Rodrigo Fonseca&#10;  @author Omprakash Gnawali&#10;  @date   $Date: 2010-06-29 22:07:49 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getReverseQuality" ref="0x40cd4090" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40cd7f20" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txAck" ref="0x40cd3e48" loc="68:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40cd3cf0" loc="68:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pinNeighbor" ref="0x40cd32b8" loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40cd3160" loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="txNoAck" ref="0x40cd2418" loc="72:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40cd22c0" loc="72:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNeighbor" ref="0x40cd4ca8" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40cd4b50" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x40cd0010" loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40cd2de8" loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearDLQ" ref="0x40cd29d8" loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40cd2880" loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="unpinNeighbor" ref="0x40cd38a8" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40cd3750" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getForwardQuality" ref="0x40cd46b0" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40cd4558" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLinkQuality" ref="0x40cd7a58" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
        <interfacedef-ref qname="LinkEstimator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="neighbor" ref="0x40cd7900" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/net/le/LinkEstimator.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Cache" loc="44:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Cache.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Cache.nc">
        <short>&#10; A data item cache.</short>
        <long>&#10; A data item cache. The cache does not own the items it caches:&#10; there is no allocation/deallocation policy, or notification of&#10; eviction. Correspondingly, using references (pointers) as data&#10; items can be difficult.&#10; &#10; @author Rodrigo Fonseca&#10; @author Philip Levis &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40ce5e08" loc="44:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Cache.nc">
          <interfacedef-ref qname="Cache"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40ce5e08"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="insert" ref="0x40d0f3e8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Cache.nc">
        <documentation loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Cache.nc">
          <short>&#10; Inserts an item in the cache, evicting if necessary.</short>
          <long>&#10; Inserts an item in the cache, evicting if necessary.&#10; An atomic lookup after insert should return true.&#10;&#10; @param item - the data item to insert.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40ce5e08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x40d0f290" loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40ce5e08"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40d0fe20" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Cache.nc">
        <documentation loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Cache.nc">
          <short>&#10; Flush the cache of all entries.</short>
          <long>&#10; Flush the cache of all entries.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="lookup" ref="0x40d0f9d0" loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Cache.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Cache.nc">
          <short>&#10; Return whether the data item is in the cache.</short>
          <long>&#10; Return whether the data item is in the cache.&#10;&#10; @param item - the data item to query&#10; @return Whether the item is in the cache.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Cache"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40ce5e08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="item" ref="0x40d0f878" loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Cache.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40ce5e08"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UnicastNameFreeRouting" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <short>&#10;  Provides a single next hop on a name-free protocol.</short>
        <long>&#10;  Provides a single next hop on a name-free protocol.&#10;&#10;  @author Philip Levis&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="hasRoute" ref="0x40ceda38" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="routeFound" ref="0x40ceddf0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="nextHop" ref="0x40ced550" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <documentation loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
          <short>&#10; Get the address of the best next hop set to the destination.</short>
          <long>&#10; Get the address of the best next hop set to the destination.&#10; If there is not best next hop, the address is the local address.&#10; @return : The next best hop, or the local address if there is no route.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="noRoute" ref="0x40ce91a8" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/net/UnicastNameFreeRouting.nc">
        <interfacedef-ref qname="UnicastNameFreeRouting"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CompareBit" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
        <short> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table.</short>
        <long> Link estimator asks the routing engine if this entry&#10; should be inserted into the neighbor table if the&#10; white bit on a link is set but there is no room for the link&#10; on the link table. The return value is the &#34;pin bit&#34; - if true&#10; insert into the neighbor table. In the reference implementation&#10; the router will return true if the path through the source&#10; will be better than a path through at least one current neighbor.&#10;@ author Omprakash Gnawali&#10;@ Created: September 16, 2006&#10;@date   $Date: 2010-06-29 22:07:49 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="shouldInsert" ref="0x40dec7e0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
        <interfacedef-ref qname="CompareBit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40dec010" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40dec498" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40dec678" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CompareBit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x40e1b5c8" loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e1b470" loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CtpRoutingPacket" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <short>&#10;  ADT for CTP routing frames.</short>
        <long>&#10;  ADT for CTP routing frames.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2009-09-21 02:19:42 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="clearOptions" ref="0x40e8ead0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e8e978" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEtx" ref="0x40e8cc00" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e8c8b0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="etx" ref="0x40e8caa0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOption" ref="0x40e8e390" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x403f9e40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e8e010" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40e8e230" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x403f9e40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x40e8c318" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e8c1c0" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setOption" ref="0x40e90998" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x403f9e40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e90618" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40e90838" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x403f9e40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setParent" ref="0x40e8dba8" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e8d840" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40e8da48" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x40e8d288" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4030b758"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e8d130" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOption" ref="0x40e90060" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
        <interfacedef-ref qname="CtpRoutingPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x403f9e40"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e93cb8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="opt" ref="0x40e93ed8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/net/ctp/CtpRoutingPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="ctp_options_t" ref="0x403f9e40"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x40fcdd28" loc="31:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40fcd998" loc="31:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x40fcdbc8" loc="31:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x40f97a90" loc="15:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x40fcd388" loc="23:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40fcd010" loc="23:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40448c60"/>
                <typename><typedef-ref name="message_t" ref="0x40446a30"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x40fcd228" loc="23:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x40fb8ed0" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
          <long> &#10; Split phase event to indicate that the serial hardware is now idle.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40fb8a98" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x40fb24d8" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x40fb1158" loc="72:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x40fea278" loc="94:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40fea120" loc="94:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x40fb1680" loc="79:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x40fb2c08" loc="65:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40fb2ab0" loc="65:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x40fea780" loc="100:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
          <long>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x40fb1be0" loc="85:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x40fb7540" loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x40fb7b08" loc="81:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x40fbaeb8" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x40fbad60" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x40fb6280" loc="91:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40fb6128" loc="91:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x40fb5500" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x40fb5ce8" loc="69:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40fb5b90" loc="69:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x40fb43a0" loc="80:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40fb4248" loc="80:/opt/tinyos-main/src/tinyos-main/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
