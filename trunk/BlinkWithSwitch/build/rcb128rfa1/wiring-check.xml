<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="63:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x4049e010"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403f2068"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403f2068"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404211e8"/></to>
    </wire>
    <wire loc="64:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x4049a940"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4054d330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4054d330"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40552ca8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x40499d10"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406a50f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x406a50f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40552ca8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x40495110"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406b8e70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x406b8e70"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40552ca8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4049f350"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x403fa4e8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x403fa4e8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x404b49a8"/></to>
    </wire>
    <wire loc="68:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkAppC.nc">
      <from><interface-ref name="PushButton0" scoped="" ref="0x4049eea8"/></from>
      <to><interface-ref name="PushButton0" scoped="" ref="0x4054c010"/></to>
    </wire>
    <wire loc="15:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButtonC.nc">
      <from><interface-ref name="PushButton0" scoped="" ref="0x4054c010"/></from>
      <to><interface-ref name="PushButton0" scoped="" ref="0x40549158"/></to>
    </wire>
    <wire loc="69:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkAppC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x404a5988"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x406bfcc0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x406bfcc0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40815170"/></to>
    </wire>
    <wire loc="70:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkAppC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x404a4e78"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x406b11d8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x406b11d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40814770"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403f2d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409ffc00"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40421580"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x402ff378"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x402ff378"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403c9118"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40421b48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403f4520"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403f4520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403f7348"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40420010"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x403f2d18"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x403f7af8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404c6280"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x403f7af8"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x403f4930"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x403f7738"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403f9aa0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403f9aa0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404038d8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x403f7ec0"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x40402ea0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x403f9ea8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4077e2c0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x403f9ea8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40615088"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerInit" scoped="" ref="0x403f9ea8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4095b900"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x404000e0"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x403f9ea8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x40403d00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40404df0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c9950"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403d05f0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x403d7ef0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403dfb68"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x407aa2c8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403dfb68"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x405b3d48"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404c6280"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404b4660"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x404bb7d0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x404b3478"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x404b3478"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x404d34b0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x404b0200"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x404b3e80"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x404b3e80"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x404d3ea8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x404b0be8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x404c78a0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x404c78a0"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x404d28e0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x404d34b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40517170"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x404d3ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40517ac8"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x404d28e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x405244f0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x404cb8e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40513d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40513d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408843b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40517ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408ba538"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x404db210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4052a410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4052a410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408f9228"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x404d84c0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40533128"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40533128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40924de8"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x404e3750"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4052f170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4052f170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x409360b0"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x404ddd08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4052b090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4052b090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408dfde0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x404c6d50"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4050ea28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4050ea28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40831f28"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x404d7750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40511988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40511988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4087f228"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x404cfc08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4050b790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4050b790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4084ac90"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x404d5670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4051c6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4051c6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4087a0b0"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x404d1ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405237d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405237d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408b4538"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x404d4a98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40518790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40518790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408bd010"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x404d90a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40528170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40528170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408f40b0"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x404e42f0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40531d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40531d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4091bc08"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x404cda98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405094f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405094f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40844ac8"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x404d8eb8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40533a80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40533a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4091f7f8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x404ca2f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405126b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x405126b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40883d70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x405244f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408b7010"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x404dbc08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4052ad68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4052ad68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408f8c08"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x404d0758"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4050d410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4050d410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4084d8f0"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x404d6210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40510330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40510330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4087ec08"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x404ce670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4050a170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4050a170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40848718"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x404de750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40522170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40522170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408b2010"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x404d9a98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40528ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40528ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408f3a88"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x404ccea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405133d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x405133d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4086a938"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40517170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408bc9e8"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x404dc750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4052b9e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4052b9e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408dd7f8"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x404e4ce8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40530790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40530790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x409196c0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x404cc4b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40509e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40509e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40842570"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x404cace8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40511030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40511030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408817f8"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x404d12f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40524e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40524e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408b69e8"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x404cf210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4050dd68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4050dd68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4084b2d0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x404d6c08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40510c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40510c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4087c6c0"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x404dd210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4051e6f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4051e6f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408e0418"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x404da670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40529790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40529790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408f66c0"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x404d40a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40519dc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40519dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408a2538"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x404e58e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40531410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40531410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4091d228"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x404cd0a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4050aac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4050aac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408460f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4052fac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40935a88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4052e4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40933538"/></to>
    </wire>
    <wire loc="13:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButtonC.nc">
      <from><interface-ref name="PushButton0Init" scoped="" ref="0x4054c510"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403f4520"/></to>
    </wire>
    <wire loc="16:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButtonC.nc">
      <from><interface-ref name="PushButton0Init" scoped="" ref="0x4054c510"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4054ccf8"/></to>
    </wire>
    <wire loc="14:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x405495d0"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x404d12f0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40552ca8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40684cc8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40675cc8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4055bf20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x4055bf20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x409646f0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x406ac0c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40665968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x409603b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40948d50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40948d50"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4095bd38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x40961180"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406277b0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406277b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406390c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x40959750"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40587e70"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40587e70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405a2010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x409777c8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40591258"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="BeaconCapture" scoped="" ref="0x4059c6d8"/></from>
      <to><interface-ref name="BeaconCapture" scoped="" ref="0x405b6d58"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x405985a8"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x405a7be0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40591258"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x4059f128"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40591258"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x405ad4b0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40591258"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x405aa840"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x405b2150"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403e0bc8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40617d18"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406154c0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x4061a658"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40587e70"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40638380"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40617d18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x40673658"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x406a92b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="UartByte" scoped="" ref="0x40815170"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x406dae08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x406bf3f0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40816828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UartStream" scoped="" ref="0x40816828"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x406da258"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4082b010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406c0d28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x406c0d28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406db120"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="Atm1281UartConfigure" scoped="" ref="0x40815588"/></from>
      <to><interface-ref name="Atm1281UartConfigure" scoped="" ref="0x40814c58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40816410"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x409b2330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x409b2330"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x407ddba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm1281UartConfigure" scoped="" ref="0x406ec8c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm1281UartConfigure" scoped="" ref="0x40815588"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x409af828"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x406eead0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="UsartResource" scoped="" ref="0x406ed630"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x409b3ba0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x409b3ba0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x407dd158"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x406ec100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplAtm1281UsartInterrupts" scoped="" ref="0x409af410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm1281UsartInterrupts" scoped="" ref="0x409af410"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x407c69e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x406eead0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x406e8770"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x406dae08"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x406e8c30"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x406da258"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x4072c108"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x406db120"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406e8010"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <from><interface-ref name="Atm1281UartConfigure" scoped="" ref="0x4072b208"/></from>
      <to><interface-ref name="Atm1281UartConfigure" scoped="" ref="0x406ec8c8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x4072ca48"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x406ed630"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x4072ae10"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x406ec100"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x4072b570"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x4073ddb8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1C.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x4073ddb8"/></from>
      <to><interface-ref name="HplUsart" scoped="" ref="0x407373d0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40729370"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4077a358"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4077a358"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40778908"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x40739848"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x40734e28"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1C.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x407491f8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403e0bc8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x40733330"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x404d6210"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1C.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40733d38"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x404cace8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1C.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x4074a760"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x404ca2f0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40777b40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407748a0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407748a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4076fdd8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40785078"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40780128"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40780128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4077e6f8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x4077d898"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40791b08"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40791b08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4079ed30"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x407883f8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40794238"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4078b010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40798e48"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x407aa6b8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403e0bc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x409b2748"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x407db040"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x407db040"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x407ea898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm1281Usart" scoped="" ref="0x409b2b60"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x4073ddb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x407db7e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x409af828"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x407ddba0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x407ea490"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x407ea490"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x409fc750"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x407c69e8"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x407d9a18"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x407dd158"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x407ebd40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x407ebd40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409fc010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x407ea898"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x409fcb58"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x407ead48"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x407db7e8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x407d8290"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x407ea898"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x407d9e60"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x40739848"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x409fb030"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x407ead48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x409fb458"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x409fd010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x409fba50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="McuInitC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.3 2010-08-10 01:28:33 mmaroti Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlinkC" loc="53:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkC.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="38:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
        <short>&#10; The implementation of the LED mote abstraction for the RCB128RFA1&#10; Platform.</short>
        <long>&#10; The implementation of the LED mote abstraction for the RCB128RFA1&#10; Platform.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="25:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the Atmega128RFA1's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the Atmega128RFA1's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega128RFA1 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG" loc="40(HplAtm128GeneralIOC.PortG):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit0" loc="41(HplAtm128GeneralIOC.PortG.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit1" loc="41(HplAtm128GeneralIOC.PortG.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit2" loc="41(HplAtm128GeneralIOC.PortG.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit3" loc="41(HplAtm128GeneralIOC.PortG.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit4" loc="41(HplAtm128GeneralIOC.PortG.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit5" loc="41(HplAtm128GeneralIOC.PortG.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit6" loc="41(HplAtm128GeneralIOC.PortG.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit7" loc="41(HplAtm128GeneralIOC.PortG.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PushButtonC" loc="4:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButtonC.nc">
      <configuration/>
    </component>
    <component qname="PushButtonP" loc="2:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButtonP.nc">
      <module/>
    </component>
    <component qname="BlinkAppC.Timer0" loc="44(BlinkAppC.Timer0):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C" loc="37(TimerMilliP.AlarmMilli32C.Alarm62khz32C):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP" loc="35(TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045bd20"/>
            <typename><typedef-ref name="T62khz" ref="0x4045bec8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="Counter62khz32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterP):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045bd20"/>
            <typename><typedef-ref name="T62khz" ref="0x4045bec8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb28"/>
            <typename><typedef-ref name="TMilli" ref="0x403eccf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045bd20"/>
            <typename><typedef-ref name="T62khz" ref="0x4045bec8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb28"/>
            <typename><typedef-ref name="TMilli" ref="0x403eccf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045bd20"/>
            <typename><typedef-ref name="T62khz" ref="0x4045bec8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb28"/>
            <typename><typedef-ref name="TMilli" ref="0x403eccf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb28"/>
            <typename><typedef-ref name="TMilli" ref="0x403eccf0"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer1" loc="44(BlinkAppC.Timer1):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer2" loc="44(BlinkAppC.Timer2):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PlatformSerialC" loc="36:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.Uart1" loc="42(PlatformSerialC.Uart1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1C.nc">
      <instance number="0">
        <component-ref qname="Atm1281Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1281Uart1P" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega1281 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1281Uart1P.UartP" loc="42(Atm1281Uart1P.UartP):/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega1281 port)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Usart1C" loc="36:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1C.nc">
      <documentation loc="29:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1C.nc">
        <short>&#10; HPL for the Atmega 1281 USART.</short>
        <long>&#10; HPL for the Atmega 1281 USART.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega1281 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Usart1P" loc="69:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1P.nc">
      <documentation loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1P.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMicro32C.TransformCounterC" loc="54(CounterMicro32C.TransformCounterC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40423450"/>
            <typename><typedef-ref name="TMicro" ref="0x40423618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40764878"/>
            <typename><typedef-ref name="TMcu" ref="0x40764c28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu32C.TransformCounterC" loc="54(CounterMcu32C.TransformCounterC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40764878"/>
            <typename><typedef-ref name="TMcu" ref="0x40764c28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40764878"/>
            <typename><typedef-ref name="TMcu" ref="0x40764c28"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu16C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu16C.AtmegaCounterP" loc="35(CounterMcu16C.AtmegaCounterP):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40764878"/>
            <typename><typedef-ref name="TMcu" ref="0x40764c28"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1Timer1C" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1Timer1P" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc" safe="">
      <module/>
    </component>
    <component qname="PlatformSerialC.Uart1.UsartC" loc="41(PlatformSerialC.Uart1.UsartC):/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Usart1C.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the Atmega1281.</short>
        <long>&#10; Provides an interface for USART1 on the Atmega1281.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega1281 port)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1281UsartShare1P" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega1281 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1281UsartShare1P.UsartShareP" loc="37(Atm1281UsartShare1P.UsartShareP):/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShareP.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega1281 port)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm1281UsartShare1P.ArbiterC" loc="83(Atm1281UsartShare1P.ArbiterC):/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm1281Usart1.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1281UsartShare1P.ArbiterC.Queue" loc="42(Atm1281UsartShare1P.ArbiterC.Queue):/opt/tinyos-main/src/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1281UsartShare1P.ArbiterC.Arbiter" loc="49(Atm1281UsartShare1P.ArbiterC.Arbiter):/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialP" loc="3:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialP.nc">
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404e05e8" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404e0800" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404e0a18" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404f39f0" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404f3c18" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404f3e40" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404f0068" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCompareP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x4055fd10" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4055fd10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4056c168" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4056c168"/></type-var>
        </typedef>
        <constant name="mode" ref="0x4056c358" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x4056c560" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x406168b8" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406168b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40616ce8" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40616ce8"/></type-var>
        </typedef>
        <constant name="mode" ref="0x40616ed8" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40635710" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40635710"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40635b70" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40635b70"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40635dd8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40635dd8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40632278" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40632278"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x406324e0" loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40632968" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40632968"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40648508" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40648508"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40648968" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40648968"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40648bd0" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40648bd0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40647058" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40647058"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x406472c0" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40663368" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40663368"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40672ef8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40672ef8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x406820f0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm1281Uart1C" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281UartP" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega1281 port)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm1281Usart1C" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Usart1C.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the Atmega1281.</short>
        <long>&#10; Provides an interface for USART1 on the Atmega1281.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega1281 port)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281UsartShareP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega1281 port)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x407d2920" loc="83:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x407e6730" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x403f2d18" loc="58:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x403f2d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f2ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403f2068" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403f2068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403f2240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403f4520" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403f4520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f46f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x403f4930" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x403f4930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f4b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x403f7ec0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x403f7ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f60c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403f7348" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403f7348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f7520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x403f7af8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x403f7af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f7cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x403f7738" loc="43:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x403f7738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f7910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403f9aa0" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403f9aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f9c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x403f9ea8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x403f9ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404030c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404038d8" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404038d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40403ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x40403d00" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x40403d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40403ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x404000e0" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x404000e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404002b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40404df0" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40404df0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4040d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40412740" loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40412740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40412918"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404129f8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40412ad8"/>
        <function-ref name="actualMicro" scoped="" ref="0x40412bb8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40412c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x40402ea0" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x40402ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404010c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x40420010" loc="60:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40420010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404201e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x404211e8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404211e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404213c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40421b48" loc="59:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40421b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40421d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x40421580" loc="58:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40421580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40421758"/>
        <function-ref name="taskLoop" scoped="" ref="0x40421838"/>
        <function-ref name="runNextTask" scoped="" ref="0x40421918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40304a98" loc="48:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40304c70"/>
        <function-ref name="runTask" scoped="" ref="0x40304d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x402ff378" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x402ff378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x402ff550"/>
        <function-ref name="taskLoop" scoped="" ref="0x402ff630"/>
        <function-ref name="runNextTask" scoped="" ref="0x402ff710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403c9950" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403c9950"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403c9b28"/>
        <function-ref name="runTask" scoped="" ref="0x403c9c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403d05f0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403d05f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403d07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403c9118" loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403c9118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403c92f0"/>
        <function-ref name="taskLoop" scoped="" ref="0x403c93d0"/>
        <function-ref name="runNextTask" scoped="" ref="0x403c94b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403dfb68" loc="88:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403dfb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403dfd40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x403e1e70" loc="89:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x403e1e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x403dd070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x403dd150"/>
        <function-ref name="led1On" scoped="" ref="0x403dd230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x403dd310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x403dd3f0"/>
        <function-ref name="get" scoped="" ref="0x403dd4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x403dd5b0"/>
        <function-ref name="led2Off" scoped="" ref="0x403dd930"/>
        <function-ref name="set" scoped="" ref="0x403dd690"/>
        <function-ref name="led0On" scoped="" ref="0x403dd770"/>
        <function-ref name="led2On" scoped="" ref="0x403dd850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x403d7ef0" loc="84:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403d7ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403e00e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403e0bc8" loc="85:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403e0bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403e0da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x4049a940" loc="55:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x4049a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb28"/>
            <typename><typedef-ref name="TMilli" ref="0x403eccf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404994c8"/>
        <function-ref name="fired" scoped="" ref="0x40489768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40489e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40489c18"/>
        <function-ref name="getdt" scoped="" ref="0x40499978"/>
        <function-ref name="gett0" scoped="" ref="0x40499720"/>
        <function-ref name="isRunning" scoped="" ref="0x404899c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40489010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404991a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40489290"/>
        <function-ref name="stop" scoped="" ref="0x40489510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x4049e010" loc="59:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4049e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4049e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x404a5988" loc="63:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x404a5988"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404a5b60"/>
        <function-ref name="receive" scoped="" ref="0x404a5c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x40499d10" loc="56:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x40499d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb28"/>
            <typename><typedef-ref name="TMilli" ref="0x403eccf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404978a8"/>
        <function-ref name="fired" scoped="" ref="0x40498aa8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40497268"/>
        <function-ref name="isOneShot" scoped="" ref="0x40497010"/>
        <function-ref name="getdt" scoped="" ref="0x40497d58"/>
        <function-ref name="gett0" scoped="" ref="0x40497b00"/>
        <function-ref name="isRunning" scoped="" ref="0x40498d00"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40498350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40497588"/>
        <function-ref name="startOneShot" scoped="" ref="0x404985d0"/>
        <function-ref name="stop" scoped="" ref="0x40498850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4049f350" loc="58:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4049f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4049f528"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4049f608"/>
        <function-ref name="led1On" scoped="" ref="0x4049f6e8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4049f7c8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4049f8a8"/>
        <function-ref name="get" scoped="" ref="0x4049f988"/>
        <function-ref name="led1Off" scoped="" ref="0x4049fa68"/>
        <function-ref name="led2Off" scoped="" ref="0x4049fde8"/>
        <function-ref name="set" scoped="" ref="0x4049fb48"/>
        <function-ref name="led0On" scoped="" ref="0x4049fc28"/>
        <function-ref name="led2On" scoped="" ref="0x4049fd08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x40495110" loc="57:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer2" scoped="" ref="0x40495110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb28"/>
            <typename><typedef-ref name="TMilli" ref="0x403eccf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404a0c00"/>
        <function-ref name="fired" scoped="" ref="0x40495e90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404a05c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x404a0368"/>
        <function-ref name="getdt" scoped="" ref="0x4049f0f0"/>
        <function-ref name="gett0" scoped="" ref="0x404a0e58"/>
        <function-ref name="isRunning" scoped="" ref="0x404a0110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40495738"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404a08e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x404959b8"/>
        <function-ref name="stop" scoped="" ref="0x40495c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PushButton0" ref="0x4049eea8" loc="60:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PushButton0" scoped="" ref="0x4049eea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PushButton"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4049d0c0"/>
        <function-ref name="waitUntilPressed" scoped="" ref="0x4049d1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x404a4e78" loc="65:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartControl" scoped="" ref="0x404a4e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4049c070"/>
        <function-ref name="stop" scoped="" ref="0x4049c150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x403fa4e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x403fa4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x403fa6c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x403fa7a0"/>
        <function-ref name="led1On" scoped="" ref="0x403fa880"/>
        <function-ref name="led1Toggle" scoped="" ref="0x403fa960"/>
        <function-ref name="led2Toggle" scoped="" ref="0x403faa40"/>
        <function-ref name="get" scoped="" ref="0x403fab20"/>
        <function-ref name="led1Off" scoped="" ref="0x403fac00"/>
        <function-ref name="led2Off" scoped="" ref="0x404b4010"/>
        <function-ref name="set" scoped="" ref="0x403face0"/>
        <function-ref name="led0On" scoped="" ref="0x403fadc0"/>
        <function-ref name="led2On" scoped="" ref="0x403faea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x404bb7d0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x404bb7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bb9a8"/>
        <function-ref name="isInput" scoped="" ref="0x404bba88"/>
        <function-ref name="toggle" scoped="" ref="0x404bbb68"/>
        <function-ref name="isOutput" scoped="" ref="0x404bbc48"/>
        <function-ref name="get" scoped="" ref="0x404bbd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bbe08"/>
        <function-ref name="set" scoped="" ref="0x404bbee8"/>
        <function-ref name="clr" scoped="" ref="0x404b0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404b4660" loc="40:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404b4660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b4838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x404b0200" loc="45:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x404b0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b03d8"/>
        <function-ref name="isInput" scoped="" ref="0x404b04b8"/>
        <function-ref name="toggle" scoped="" ref="0x404b0598"/>
        <function-ref name="isOutput" scoped="" ref="0x404b0678"/>
        <function-ref name="get" scoped="" ref="0x404b0758"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b0838"/>
        <function-ref name="set" scoped="" ref="0x404b0918"/>
        <function-ref name="clr" scoped="" ref="0x404b09f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x404b49a8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404b49a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404b4b80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404b4c60"/>
        <function-ref name="led1On" scoped="" ref="0x404b4d40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404b4e20"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404b4f00"/>
        <function-ref name="get" scoped="" ref="0x404b1010"/>
        <function-ref name="led1Off" scoped="" ref="0x404b10f0"/>
        <function-ref name="led2Off" scoped="" ref="0x404b1470"/>
        <function-ref name="set" scoped="" ref="0x404b11d0"/>
        <function-ref name="led0On" scoped="" ref="0x404b12b0"/>
        <function-ref name="led2On" scoped="" ref="0x404b1390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x404b0be8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x404b0be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b0dc0"/>
        <function-ref name="isInput" scoped="" ref="0x404b0ea0"/>
        <function-ref name="toggle" scoped="" ref="0x404af010"/>
        <function-ref name="isOutput" scoped="" ref="0x404af0f0"/>
        <function-ref name="get" scoped="" ref="0x404af1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404af2b0"/>
        <function-ref name="set" scoped="" ref="0x404af390"/>
        <function-ref name="clr" scoped="" ref="0x404af470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x404b3478" loc="37:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x404b3478"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b3650"/>
        <function-ref name="isInput" scoped="" ref="0x404b3730"/>
        <function-ref name="toggle" scoped="" ref="0x404b3810"/>
        <function-ref name="isOutput" scoped="" ref="0x404b38f0"/>
        <function-ref name="get" scoped="" ref="0x404b39d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b3ab0"/>
        <function-ref name="set" scoped="" ref="0x404b3b90"/>
        <function-ref name="clr" scoped="" ref="0x404b3c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x404b3e80" loc="38:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x404b3e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c7070"/>
        <function-ref name="isInput" scoped="" ref="0x404c7150"/>
        <function-ref name="toggle" scoped="" ref="0x404c7230"/>
        <function-ref name="isOutput" scoped="" ref="0x404c7310"/>
        <function-ref name="get" scoped="" ref="0x404c73f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c74d0"/>
        <function-ref name="set" scoped="" ref="0x404c75b0"/>
        <function-ref name="clr" scoped="" ref="0x404c7690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x404c6280" loc="40:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404c6280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404c6458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x404c78a0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x404c78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c7a78"/>
        <function-ref name="isInput" scoped="" ref="0x404c7b58"/>
        <function-ref name="toggle" scoped="" ref="0x404c7c38"/>
        <function-ref name="isOutput" scoped="" ref="0x404c7d18"/>
        <function-ref name="get" scoped="" ref="0x404c7df8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c7ed8"/>
        <function-ref name="set" scoped="" ref="0x404c6010"/>
        <function-ref name="clr" scoped="" ref="0x404c60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x404cb8e0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x404cb8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cbab8"/>
        <function-ref name="isInput" scoped="" ref="0x404cbb98"/>
        <function-ref name="toggle" scoped="" ref="0x404cbc78"/>
        <function-ref name="isOutput" scoped="" ref="0x404cbd58"/>
        <function-ref name="get" scoped="" ref="0x404cbe38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cbf18"/>
        <function-ref name="set" scoped="" ref="0x404ca010"/>
        <function-ref name="clr" scoped="" ref="0x404ca0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x404d3ea8" loc="58:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x404d3ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d20c0"/>
        <function-ref name="isInput" scoped="" ref="0x404d21a0"/>
        <function-ref name="toggle" scoped="" ref="0x404d2280"/>
        <function-ref name="isOutput" scoped="" ref="0x404d2360"/>
        <function-ref name="get" scoped="" ref="0x404d2440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d2520"/>
        <function-ref name="set" scoped="" ref="0x404d2600"/>
        <function-ref name="clr" scoped="" ref="0x404d26e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x404db210" loc="67:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x404db210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404db3e8"/>
        <function-ref name="isInput" scoped="" ref="0x404db4c8"/>
        <function-ref name="toggle" scoped="" ref="0x404db5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404db688"/>
        <function-ref name="get" scoped="" ref="0x404db768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404db848"/>
        <function-ref name="set" scoped="" ref="0x404db928"/>
        <function-ref name="clr" scoped="" ref="0x404dba08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x404d84c0" loc="74:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x404d84c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d8698"/>
        <function-ref name="isInput" scoped="" ref="0x404d8778"/>
        <function-ref name="toggle" scoped="" ref="0x404d8858"/>
        <function-ref name="isOutput" scoped="" ref="0x404d8938"/>
        <function-ref name="get" scoped="" ref="0x404d8a18"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d8af8"/>
        <function-ref name="set" scoped="" ref="0x404d8bd8"/>
        <function-ref name="clr" scoped="" ref="0x404d8cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x404e3750" loc="79:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x404e3750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e3928"/>
        <function-ref name="isInput" scoped="" ref="0x404e3a08"/>
        <function-ref name="toggle" scoped="" ref="0x404e3ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404e3bc8"/>
        <function-ref name="get" scoped="" ref="0x404e3ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e3d88"/>
        <function-ref name="set" scoped="" ref="0x404e3e68"/>
        <function-ref name="clr" scoped="" ref="0x404e2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x404ddd08" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x404ddd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ddee0"/>
        <function-ref name="isInput" scoped="" ref="0x404dc010"/>
        <function-ref name="toggle" scoped="" ref="0x404dc0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404dc1d0"/>
        <function-ref name="get" scoped="" ref="0x404dc2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dc390"/>
        <function-ref name="set" scoped="" ref="0x404dc470"/>
        <function-ref name="clr" scoped="" ref="0x404dc550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x404c6d50" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x404c6d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c6f28"/>
        <function-ref name="isInput" scoped="" ref="0x404d0018"/>
        <function-ref name="toggle" scoped="" ref="0x404d00f8"/>
        <function-ref name="isOutput" scoped="" ref="0x404d01d8"/>
        <function-ref name="get" scoped="" ref="0x404d02b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d0398"/>
        <function-ref name="set" scoped="" ref="0x404d0478"/>
        <function-ref name="clr" scoped="" ref="0x404d0558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x404d7750" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x404d7750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d79a8"/>
        <function-ref name="isInput" scoped="" ref="0x404d7a88"/>
        <function-ref name="toggle" scoped="" ref="0x404d7b68"/>
        <function-ref name="isOutput" scoped="" ref="0x404d7c48"/>
        <function-ref name="get" scoped="" ref="0x404d7d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d7e08"/>
        <function-ref name="set" scoped="" ref="0x404d7ee8"/>
        <function-ref name="clr" scoped="" ref="0x404d6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x404cfc08" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x404cfc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cfde0"/>
        <function-ref name="isInput" scoped="" ref="0x404cfec0"/>
        <function-ref name="toggle" scoped="" ref="0x404ce010"/>
        <function-ref name="isOutput" scoped="" ref="0x404ce0f0"/>
        <function-ref name="get" scoped="" ref="0x404ce1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ce2b0"/>
        <function-ref name="set" scoped="" ref="0x404ce390"/>
        <function-ref name="clr" scoped="" ref="0x404ce470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x404d5670" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x404d5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d5848"/>
        <function-ref name="isInput" scoped="" ref="0x404d5928"/>
        <function-ref name="toggle" scoped="" ref="0x404d5a08"/>
        <function-ref name="isOutput" scoped="" ref="0x404d5ae8"/>
        <function-ref name="get" scoped="" ref="0x404d5bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d5ca8"/>
        <function-ref name="set" scoped="" ref="0x404d5d88"/>
        <function-ref name="clr" scoped="" ref="0x404d5e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x404d1ce8" loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x404d1ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d1ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404de010"/>
        <function-ref name="toggle" scoped="" ref="0x404de0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404de1d0"/>
        <function-ref name="get" scoped="" ref="0x404de2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404de390"/>
        <function-ref name="set" scoped="" ref="0x404de470"/>
        <function-ref name="clr" scoped="" ref="0x404de550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x404d4a98" loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x404d4a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d4c70"/>
        <function-ref name="isInput" scoped="" ref="0x404d4d50"/>
        <function-ref name="toggle" scoped="" ref="0x404d4e30"/>
        <function-ref name="isOutput" scoped="" ref="0x404d4f10"/>
        <function-ref name="get" scoped="" ref="0x404d3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d30f0"/>
        <function-ref name="set" scoped="" ref="0x404d31d0"/>
        <function-ref name="clr" scoped="" ref="0x404d32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x404d90a0" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x404d90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d9278"/>
        <function-ref name="isInput" scoped="" ref="0x404d9358"/>
        <function-ref name="toggle" scoped="" ref="0x404d9438"/>
        <function-ref name="isOutput" scoped="" ref="0x404d9518"/>
        <function-ref name="get" scoped="" ref="0x404d95f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d96d8"/>
        <function-ref name="set" scoped="" ref="0x404d97b8"/>
        <function-ref name="clr" scoped="" ref="0x404d9898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x404e42f0" loc="77:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x404e42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e44c8"/>
        <function-ref name="isInput" scoped="" ref="0x404e45a8"/>
        <function-ref name="toggle" scoped="" ref="0x404e4688"/>
        <function-ref name="isOutput" scoped="" ref="0x404e4768"/>
        <function-ref name="get" scoped="" ref="0x404e4848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e4928"/>
        <function-ref name="set" scoped="" ref="0x404e4a08"/>
        <function-ref name="clr" scoped="" ref="0x404e4ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x404cda98" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x404cda98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cdc70"/>
        <function-ref name="isInput" scoped="" ref="0x404cdd50"/>
        <function-ref name="toggle" scoped="" ref="0x404cde30"/>
        <function-ref name="isOutput" scoped="" ref="0x404cdf10"/>
        <function-ref name="get" scoped="" ref="0x404cc010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cc0f0"/>
        <function-ref name="set" scoped="" ref="0x404cc1d0"/>
        <function-ref name="clr" scoped="" ref="0x404cc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x404d8eb8" loc="75:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x404d8eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e50c0"/>
        <function-ref name="isInput" scoped="" ref="0x404e51a0"/>
        <function-ref name="toggle" scoped="" ref="0x404e5280"/>
        <function-ref name="isOutput" scoped="" ref="0x404e5360"/>
        <function-ref name="get" scoped="" ref="0x404e5440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e5520"/>
        <function-ref name="set" scoped="" ref="0x404e5600"/>
        <function-ref name="clr" scoped="" ref="0x404e56e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x404ca2f0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x404ca2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ca4c8"/>
        <function-ref name="isInput" scoped="" ref="0x404ca5a8"/>
        <function-ref name="toggle" scoped="" ref="0x404ca688"/>
        <function-ref name="isOutput" scoped="" ref="0x404ca768"/>
        <function-ref name="get" scoped="" ref="0x404ca848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ca928"/>
        <function-ref name="set" scoped="" ref="0x404caa08"/>
        <function-ref name="clr" scoped="" ref="0x404caae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x404d28e0" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x404d28e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d2ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404d2b98"/>
        <function-ref name="toggle" scoped="" ref="0x404d2c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404d2d58"/>
        <function-ref name="get" scoped="" ref="0x404d2e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d2f18"/>
        <function-ref name="set" scoped="" ref="0x404d1010"/>
        <function-ref name="clr" scoped="" ref="0x404d10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x404dbc08" loc="68:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x404dbc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dbde0"/>
        <function-ref name="isInput" scoped="" ref="0x404dbec0"/>
        <function-ref name="toggle" scoped="" ref="0x404da010"/>
        <function-ref name="isOutput" scoped="" ref="0x404da0f0"/>
        <function-ref name="get" scoped="" ref="0x404da1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404da2b0"/>
        <function-ref name="set" scoped="" ref="0x404da390"/>
        <function-ref name="clr" scoped="" ref="0x404da470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x404d0758" loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x404d0758"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d0930"/>
        <function-ref name="isInput" scoped="" ref="0x404d0a10"/>
        <function-ref name="toggle" scoped="" ref="0x404d0af0"/>
        <function-ref name="isOutput" scoped="" ref="0x404d0bd0"/>
        <function-ref name="get" scoped="" ref="0x404d0cb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d0d90"/>
        <function-ref name="set" scoped="" ref="0x404d0e70"/>
        <function-ref name="clr" scoped="" ref="0x404cf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x404d6210" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x404d6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d63e8"/>
        <function-ref name="isInput" scoped="" ref="0x404d64c8"/>
        <function-ref name="toggle" scoped="" ref="0x404d65a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404d6688"/>
        <function-ref name="get" scoped="" ref="0x404d6768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d6848"/>
        <function-ref name="set" scoped="" ref="0x404d6928"/>
        <function-ref name="clr" scoped="" ref="0x404d6a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x404ce670" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x404ce670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ce848"/>
        <function-ref name="isInput" scoped="" ref="0x404ce928"/>
        <function-ref name="toggle" scoped="" ref="0x404cea08"/>
        <function-ref name="isOutput" scoped="" ref="0x404ceae8"/>
        <function-ref name="get" scoped="" ref="0x404cebc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ceca8"/>
        <function-ref name="set" scoped="" ref="0x404ced88"/>
        <function-ref name="clr" scoped="" ref="0x404cee68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x404de750" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x404de750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404de928"/>
        <function-ref name="isInput" scoped="" ref="0x404dea08"/>
        <function-ref name="toggle" scoped="" ref="0x404deae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404debc8"/>
        <function-ref name="get" scoped="" ref="0x404deca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ded88"/>
        <function-ref name="set" scoped="" ref="0x404dee68"/>
        <function-ref name="clr" scoped="" ref="0x404dd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x404d9a98" loc="71:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x404d9a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d9c70"/>
        <function-ref name="isInput" scoped="" ref="0x404d9d50"/>
        <function-ref name="toggle" scoped="" ref="0x404d9e30"/>
        <function-ref name="isOutput" scoped="" ref="0x404d9f10"/>
        <function-ref name="get" scoped="" ref="0x404d8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d80f0"/>
        <function-ref name="set" scoped="" ref="0x404d81d0"/>
        <function-ref name="clr" scoped="" ref="0x404d82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x404ccea8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x404ccea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cb0c0"/>
        <function-ref name="isInput" scoped="" ref="0x404cb1a0"/>
        <function-ref name="toggle" scoped="" ref="0x404cb280"/>
        <function-ref name="isOutput" scoped="" ref="0x404cb360"/>
        <function-ref name="get" scoped="" ref="0x404cb440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cb520"/>
        <function-ref name="set" scoped="" ref="0x404cb600"/>
        <function-ref name="clr" scoped="" ref="0x404cb6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x404d34b0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x404d34b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d3688"/>
        <function-ref name="isInput" scoped="" ref="0x404d3768"/>
        <function-ref name="toggle" scoped="" ref="0x404d3848"/>
        <function-ref name="isOutput" scoped="" ref="0x404d3928"/>
        <function-ref name="get" scoped="" ref="0x404d3a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d3ae8"/>
        <function-ref name="set" scoped="" ref="0x404d3bc8"/>
        <function-ref name="clr" scoped="" ref="0x404d3ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x404dc750" loc="66:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x404dc750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dc928"/>
        <function-ref name="isInput" scoped="" ref="0x404dca08"/>
        <function-ref name="toggle" scoped="" ref="0x404dcae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404dcbc8"/>
        <function-ref name="get" scoped="" ref="0x404dcca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dcd88"/>
        <function-ref name="set" scoped="" ref="0x404dce68"/>
        <function-ref name="clr" scoped="" ref="0x404db010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x404e4ce8" loc="78:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x404e4ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e4ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404e3010"/>
        <function-ref name="toggle" scoped="" ref="0x404e30f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404e31d0"/>
        <function-ref name="get" scoped="" ref="0x404e32b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e3390"/>
        <function-ref name="set" scoped="" ref="0x404e3470"/>
        <function-ref name="clr" scoped="" ref="0x404e3550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x404cc4b0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x404cc4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cc688"/>
        <function-ref name="isInput" scoped="" ref="0x404cc768"/>
        <function-ref name="toggle" scoped="" ref="0x404cc848"/>
        <function-ref name="isOutput" scoped="" ref="0x404cc928"/>
        <function-ref name="get" scoped="" ref="0x404cca08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ccae8"/>
        <function-ref name="set" scoped="" ref="0x404ccbc8"/>
        <function-ref name="clr" scoped="" ref="0x404ccca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x404cace8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x404cace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404caec0"/>
        <function-ref name="isInput" scoped="" ref="0x404d7010"/>
        <function-ref name="toggle" scoped="" ref="0x404d70f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404d71d0"/>
        <function-ref name="get" scoped="" ref="0x404d72b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d7390"/>
        <function-ref name="set" scoped="" ref="0x404d7470"/>
        <function-ref name="clr" scoped="" ref="0x404d7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x404d12f0" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x404d12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d14c8"/>
        <function-ref name="isInput" scoped="" ref="0x404d15a8"/>
        <function-ref name="toggle" scoped="" ref="0x404d1688"/>
        <function-ref name="isOutput" scoped="" ref="0x404d1768"/>
        <function-ref name="get" scoped="" ref="0x404d1848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d1928"/>
        <function-ref name="set" scoped="" ref="0x404d1a08"/>
        <function-ref name="clr" scoped="" ref="0x404d1ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x404cf210" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x404cf210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cf3e8"/>
        <function-ref name="isInput" scoped="" ref="0x404cf4c8"/>
        <function-ref name="toggle" scoped="" ref="0x404cf5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404cf688"/>
        <function-ref name="get" scoped="" ref="0x404cf768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cf848"/>
        <function-ref name="set" scoped="" ref="0x404cf928"/>
        <function-ref name="clr" scoped="" ref="0x404cfa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x404d6c08" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x404d6c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d6de0"/>
        <function-ref name="isInput" scoped="" ref="0x404d6ec0"/>
        <function-ref name="toggle" scoped="" ref="0x404d5010"/>
        <function-ref name="isOutput" scoped="" ref="0x404d50f0"/>
        <function-ref name="get" scoped="" ref="0x404d51d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d52b0"/>
        <function-ref name="set" scoped="" ref="0x404d5390"/>
        <function-ref name="clr" scoped="" ref="0x404d5470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x404dd210" loc="64:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x404dd210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dd4e8"/>
        <function-ref name="isInput" scoped="" ref="0x404dd5c8"/>
        <function-ref name="toggle" scoped="" ref="0x404dd6a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404dd788"/>
        <function-ref name="get" scoped="" ref="0x404dd868"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dd948"/>
        <function-ref name="set" scoped="" ref="0x404dda28"/>
        <function-ref name="clr" scoped="" ref="0x404ddb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x404da670" loc="69:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x404da670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404da848"/>
        <function-ref name="isInput" scoped="" ref="0x404da928"/>
        <function-ref name="toggle" scoped="" ref="0x404daa08"/>
        <function-ref name="isOutput" scoped="" ref="0x404daae8"/>
        <function-ref name="get" scoped="" ref="0x404dabc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404daca8"/>
        <function-ref name="set" scoped="" ref="0x404dad88"/>
        <function-ref name="clr" scoped="" ref="0x404dae68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x404d40a0" loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x404d40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d4278"/>
        <function-ref name="isInput" scoped="" ref="0x404d4358"/>
        <function-ref name="toggle" scoped="" ref="0x404d4438"/>
        <function-ref name="isOutput" scoped="" ref="0x404d4518"/>
        <function-ref name="get" scoped="" ref="0x404d45f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d46d8"/>
        <function-ref name="set" scoped="" ref="0x404d47b8"/>
        <function-ref name="clr" scoped="" ref="0x404d4898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x404e58e0" loc="76:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x404e58e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e5ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404e5b98"/>
        <function-ref name="toggle" scoped="" ref="0x404e5c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404e5d58"/>
        <function-ref name="get" scoped="" ref="0x404e5e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e5f18"/>
        <function-ref name="set" scoped="" ref="0x404e4010"/>
        <function-ref name="clr" scoped="" ref="0x404e40f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x404cd0a0" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x404cd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cd278"/>
        <function-ref name="isInput" scoped="" ref="0x404cd358"/>
        <function-ref name="toggle" scoped="" ref="0x404cd438"/>
        <function-ref name="isOutput" scoped="" ref="0x404cd518"/>
        <function-ref name="get" scoped="" ref="0x404cd5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cd6d8"/>
        <function-ref name="set" scoped="" ref="0x404cd7b8"/>
        <function-ref name="clr" scoped="" ref="0x404cd898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4050dd68" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4050dd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050b010"/>
        <function-ref name="isInput" scoped="" ref="0x4050b0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4050b1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4050b2b0"/>
        <function-ref name="get" scoped="" ref="0x4050b390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050b470"/>
        <function-ref name="set" scoped="" ref="0x4050b550"/>
        <function-ref name="clr" scoped="" ref="0x4050b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4050aac8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4050aac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050aca0"/>
        <function-ref name="isInput" scoped="" ref="0x4050ad80"/>
        <function-ref name="toggle" scoped="" ref="0x4050ae60"/>
        <function-ref name="isOutput" scoped="" ref="0x40509010"/>
        <function-ref name="get" scoped="" ref="0x405090f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405091d0"/>
        <function-ref name="set" scoped="" ref="0x405092b0"/>
        <function-ref name="clr" scoped="" ref="0x40509390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4050ea28" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4050ea28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050ec00"/>
        <function-ref name="isInput" scoped="" ref="0x4050ece0"/>
        <function-ref name="toggle" scoped="" ref="0x4050edc0"/>
        <function-ref name="isOutput" scoped="" ref="0x4050eea0"/>
        <function-ref name="get" scoped="" ref="0x4050d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050d0f0"/>
        <function-ref name="set" scoped="" ref="0x4050d1d0"/>
        <function-ref name="clr" scoped="" ref="0x4050d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4050b790" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4050b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050b968"/>
        <function-ref name="isInput" scoped="" ref="0x4050ba48"/>
        <function-ref name="toggle" scoped="" ref="0x4050bb28"/>
        <function-ref name="isOutput" scoped="" ref="0x4050bc08"/>
        <function-ref name="get" scoped="" ref="0x4050bce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050bdc8"/>
        <function-ref name="set" scoped="" ref="0x4050bea8"/>
        <function-ref name="clr" scoped="" ref="0x4050a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405094f0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405094f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405096c8"/>
        <function-ref name="isInput" scoped="" ref="0x405097a8"/>
        <function-ref name="toggle" scoped="" ref="0x40509888"/>
        <function-ref name="isOutput" scoped="" ref="0x40509968"/>
        <function-ref name="get" scoped="" ref="0x40509a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40509b28"/>
        <function-ref name="set" scoped="" ref="0x40509c08"/>
        <function-ref name="clr" scoped="" ref="0x40509ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4050d410" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4050d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050d5e8"/>
        <function-ref name="isInput" scoped="" ref="0x4050d6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4050d7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4050d888"/>
        <function-ref name="get" scoped="" ref="0x4050d968"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050da48"/>
        <function-ref name="set" scoped="" ref="0x4050db28"/>
        <function-ref name="clr" scoped="" ref="0x4050dc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4050a170" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4050a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050a348"/>
        <function-ref name="isInput" scoped="" ref="0x4050a428"/>
        <function-ref name="toggle" scoped="" ref="0x4050a508"/>
        <function-ref name="isOutput" scoped="" ref="0x4050a5e8"/>
        <function-ref name="get" scoped="" ref="0x4050a6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050a7a8"/>
        <function-ref name="set" scoped="" ref="0x4050a888"/>
        <function-ref name="clr" scoped="" ref="0x4050a968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40509e48" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40509e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40516050"/>
        <function-ref name="isInput" scoped="" ref="0x40516130"/>
        <function-ref name="toggle" scoped="" ref="0x40516210"/>
        <function-ref name="isOutput" scoped="" ref="0x405162f0"/>
        <function-ref name="get" scoped="" ref="0x405163d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405164b0"/>
        <function-ref name="set" scoped="" ref="0x40516590"/>
        <function-ref name="clr" scoped="" ref="0x40516670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40831f28" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40831f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4082d110"/>
        <function-ref name="isInput" scoped="" ref="0x4082d1f0"/>
        <function-ref name="toggle" scoped="" ref="0x4082d2d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4082d3b0"/>
        <function-ref name="get" scoped="" ref="0x4082d490"/>
        <function-ref name="makeOutput" scoped="" ref="0x4082d570"/>
        <function-ref name="set" scoped="" ref="0x4082d650"/>
        <function-ref name="clr" scoped="" ref="0x4082d730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4084d8f0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4084d8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4084dac8"/>
        <function-ref name="isInput" scoped="" ref="0x4084dba8"/>
        <function-ref name="toggle" scoped="" ref="0x4084dc88"/>
        <function-ref name="isOutput" scoped="" ref="0x4084dd68"/>
        <function-ref name="get" scoped="" ref="0x4084de48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4084df28"/>
        <function-ref name="set" scoped="" ref="0x4084c018"/>
        <function-ref name="clr" scoped="" ref="0x4084c0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4084b2d0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4084b2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4084b4a8"/>
        <function-ref name="isInput" scoped="" ref="0x4084b588"/>
        <function-ref name="toggle" scoped="" ref="0x4084b668"/>
        <function-ref name="isOutput" scoped="" ref="0x4084b748"/>
        <function-ref name="get" scoped="" ref="0x4084b828"/>
        <function-ref name="makeOutput" scoped="" ref="0x4084b908"/>
        <function-ref name="set" scoped="" ref="0x4084b9e8"/>
        <function-ref name="clr" scoped="" ref="0x4084bac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4084ac90" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4084ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4084ae68"/>
        <function-ref name="isInput" scoped="" ref="0x40849010"/>
        <function-ref name="toggle" scoped="" ref="0x408490f0"/>
        <function-ref name="isOutput" scoped="" ref="0x408491d0"/>
        <function-ref name="get" scoped="" ref="0x408492b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40849390"/>
        <function-ref name="set" scoped="" ref="0x40849470"/>
        <function-ref name="clr" scoped="" ref="0x40849550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40848718" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40848718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408488f0"/>
        <function-ref name="isInput" scoped="" ref="0x408489d0"/>
        <function-ref name="toggle" scoped="" ref="0x40848ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x40848b90"/>
        <function-ref name="get" scoped="" ref="0x40848c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40848d50"/>
        <function-ref name="set" scoped="" ref="0x40848e30"/>
        <function-ref name="clr" scoped="" ref="0x40848f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408460f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408460f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408462d0"/>
        <function-ref name="isInput" scoped="" ref="0x408463b0"/>
        <function-ref name="toggle" scoped="" ref="0x40846490"/>
        <function-ref name="isOutput" scoped="" ref="0x40846570"/>
        <function-ref name="get" scoped="" ref="0x40846650"/>
        <function-ref name="makeOutput" scoped="" ref="0x40846730"/>
        <function-ref name="set" scoped="" ref="0x40846810"/>
        <function-ref name="clr" scoped="" ref="0x408468f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40844ac8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40844ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40844ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40844d80"/>
        <function-ref name="toggle" scoped="" ref="0x40844e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40843010"/>
        <function-ref name="get" scoped="" ref="0x408430f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408431d0"/>
        <function-ref name="set" scoped="" ref="0x408432b0"/>
        <function-ref name="clr" scoped="" ref="0x40843390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40842570" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40842570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40842748"/>
        <function-ref name="isInput" scoped="" ref="0x40842828"/>
        <function-ref name="toggle" scoped="" ref="0x40842908"/>
        <function-ref name="isOutput" scoped="" ref="0x408429e8"/>
        <function-ref name="get" scoped="" ref="0x40842ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40842ba8"/>
        <function-ref name="set" scoped="" ref="0x40842c88"/>
        <function-ref name="clr" scoped="" ref="0x40842d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405126b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405126b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40512888"/>
        <function-ref name="isInput" scoped="" ref="0x40512968"/>
        <function-ref name="toggle" scoped="" ref="0x40512a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40512b28"/>
        <function-ref name="get" scoped="" ref="0x40512c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40512ce8"/>
        <function-ref name="set" scoped="" ref="0x40512dc8"/>
        <function-ref name="clr" scoped="" ref="0x40512ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40510330" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40510330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40510508"/>
        <function-ref name="isInput" scoped="" ref="0x405105e8"/>
        <function-ref name="toggle" scoped="" ref="0x405106c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405107a8"/>
        <function-ref name="get" scoped="" ref="0x40510888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40510968"/>
        <function-ref name="set" scoped="" ref="0x40510a48"/>
        <function-ref name="clr" scoped="" ref="0x40510b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405133d8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405133d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405135b0"/>
        <function-ref name="isInput" scoped="" ref="0x40513690"/>
        <function-ref name="toggle" scoped="" ref="0x40513770"/>
        <function-ref name="isOutput" scoped="" ref="0x40513850"/>
        <function-ref name="get" scoped="" ref="0x40513930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40513a10"/>
        <function-ref name="set" scoped="" ref="0x40513af0"/>
        <function-ref name="clr" scoped="" ref="0x40513bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40511030" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40511030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40511208"/>
        <function-ref name="isInput" scoped="" ref="0x405112e8"/>
        <function-ref name="toggle" scoped="" ref="0x405113c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405114a8"/>
        <function-ref name="get" scoped="" ref="0x40511588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40511668"/>
        <function-ref name="set" scoped="" ref="0x40511748"/>
        <function-ref name="clr" scoped="" ref="0x40511828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40510c88" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40510c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40510e60"/>
        <function-ref name="isInput" scoped="" ref="0x4051c010"/>
        <function-ref name="toggle" scoped="" ref="0x4051c0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4051c1d0"/>
        <function-ref name="get" scoped="" ref="0x4051c2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051c390"/>
        <function-ref name="set" scoped="" ref="0x4051c470"/>
        <function-ref name="clr" scoped="" ref="0x4051c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40513d30" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40513d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40513f08"/>
        <function-ref name="isInput" scoped="" ref="0x40512010"/>
        <function-ref name="toggle" scoped="" ref="0x405120f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405121d0"/>
        <function-ref name="get" scoped="" ref="0x405122b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40512390"/>
        <function-ref name="set" scoped="" ref="0x40512470"/>
        <function-ref name="clr" scoped="" ref="0x40512550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40511988" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40511988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40511b60"/>
        <function-ref name="isInput" scoped="" ref="0x40511c40"/>
        <function-ref name="toggle" scoped="" ref="0x40511d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40511e00"/>
        <function-ref name="get" scoped="" ref="0x40511ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40510010"/>
        <function-ref name="set" scoped="" ref="0x405100f0"/>
        <function-ref name="clr" scoped="" ref="0x405101d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4051c6b0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4051c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051c888"/>
        <function-ref name="isInput" scoped="" ref="0x4051c968"/>
        <function-ref name="toggle" scoped="" ref="0x4051ca48"/>
        <function-ref name="isOutput" scoped="" ref="0x4051cb28"/>
        <function-ref name="get" scoped="" ref="0x4051cc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051cce8"/>
        <function-ref name="set" scoped="" ref="0x4051cdc8"/>
        <function-ref name="clr" scoped="" ref="0x4051cea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4086a938" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4086a938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4086ab10"/>
        <function-ref name="isInput" scoped="" ref="0x4086abf0"/>
        <function-ref name="toggle" scoped="" ref="0x4086acd0"/>
        <function-ref name="isOutput" scoped="" ref="0x4086adb0"/>
        <function-ref name="get" scoped="" ref="0x4086ae90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40885010"/>
        <function-ref name="set" scoped="" ref="0x408850f0"/>
        <function-ref name="clr" scoped="" ref="0x408851d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408843b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408843b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40884588"/>
        <function-ref name="isInput" scoped="" ref="0x40884668"/>
        <function-ref name="toggle" scoped="" ref="0x40884748"/>
        <function-ref name="isOutput" scoped="" ref="0x40884828"/>
        <function-ref name="get" scoped="" ref="0x40884908"/>
        <function-ref name="makeOutput" scoped="" ref="0x408849e8"/>
        <function-ref name="set" scoped="" ref="0x40884ac8"/>
        <function-ref name="clr" scoped="" ref="0x40884ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40883d70" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40883d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40882010"/>
        <function-ref name="isInput" scoped="" ref="0x408820f0"/>
        <function-ref name="toggle" scoped="" ref="0x408821d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408822b0"/>
        <function-ref name="get" scoped="" ref="0x40882390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40882470"/>
        <function-ref name="set" scoped="" ref="0x40882550"/>
        <function-ref name="clr" scoped="" ref="0x40882630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408817f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408817f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408819d0"/>
        <function-ref name="isInput" scoped="" ref="0x40881ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40881b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40881c70"/>
        <function-ref name="get" scoped="" ref="0x40881d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40881e30"/>
        <function-ref name="set" scoped="" ref="0x40881f10"/>
        <function-ref name="clr" scoped="" ref="0x40880010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4087f228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4087f228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4087f400"/>
        <function-ref name="isInput" scoped="" ref="0x4087f4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4087f5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4087f6a0"/>
        <function-ref name="get" scoped="" ref="0x4087f780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4087f860"/>
        <function-ref name="set" scoped="" ref="0x4087f940"/>
        <function-ref name="clr" scoped="" ref="0x4087fa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4087ec08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4087ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4087ede0"/>
        <function-ref name="isInput" scoped="" ref="0x4087eec0"/>
        <function-ref name="toggle" scoped="" ref="0x4087d010"/>
        <function-ref name="isOutput" scoped="" ref="0x4087d0f0"/>
        <function-ref name="get" scoped="" ref="0x4087d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4087d2b0"/>
        <function-ref name="set" scoped="" ref="0x4087d390"/>
        <function-ref name="clr" scoped="" ref="0x4087d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4087c6c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4087c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4087c898"/>
        <function-ref name="isInput" scoped="" ref="0x4087c978"/>
        <function-ref name="toggle" scoped="" ref="0x4087ca58"/>
        <function-ref name="isOutput" scoped="" ref="0x4087cb38"/>
        <function-ref name="get" scoped="" ref="0x4087cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4087ccf8"/>
        <function-ref name="set" scoped="" ref="0x4087cdd8"/>
        <function-ref name="clr" scoped="" ref="0x4087ceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4087a0b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4087a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4087a288"/>
        <function-ref name="isInput" scoped="" ref="0x4087a368"/>
        <function-ref name="toggle" scoped="" ref="0x4087a448"/>
        <function-ref name="isOutput" scoped="" ref="0x4087a528"/>
        <function-ref name="get" scoped="" ref="0x4087a608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4087a6e8"/>
        <function-ref name="set" scoped="" ref="0x4087a7c8"/>
        <function-ref name="clr" scoped="" ref="0x4087a8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40517170" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40517170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40517348"/>
        <function-ref name="isInput" scoped="" ref="0x40517428"/>
        <function-ref name="toggle" scoped="" ref="0x40517508"/>
        <function-ref name="isOutput" scoped="" ref="0x405175e8"/>
        <function-ref name="get" scoped="" ref="0x405176c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405177a8"/>
        <function-ref name="set" scoped="" ref="0x40517888"/>
        <function-ref name="clr" scoped="" ref="0x40517968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40524e48" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40524e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40523050"/>
        <function-ref name="isInput" scoped="" ref="0x40523130"/>
        <function-ref name="toggle" scoped="" ref="0x40523210"/>
        <function-ref name="isOutput" scoped="" ref="0x405232f0"/>
        <function-ref name="get" scoped="" ref="0x405233d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405234b0"/>
        <function-ref name="set" scoped="" ref="0x40523590"/>
        <function-ref name="clr" scoped="" ref="0x40523670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40519dc8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40519dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40518010"/>
        <function-ref name="isInput" scoped="" ref="0x405180f0"/>
        <function-ref name="toggle" scoped="" ref="0x405181d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405182b0"/>
        <function-ref name="get" scoped="" ref="0x40518390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40518470"/>
        <function-ref name="set" scoped="" ref="0x40518550"/>
        <function-ref name="clr" scoped="" ref="0x40518630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40517ac8" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40517ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40517ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40517d80"/>
        <function-ref name="toggle" scoped="" ref="0x40517e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40524010"/>
        <function-ref name="get" scoped="" ref="0x405240f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405241d0"/>
        <function-ref name="set" scoped="" ref="0x405242b0"/>
        <function-ref name="clr" scoped="" ref="0x40524390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405237d0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405237d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405239a8"/>
        <function-ref name="isInput" scoped="" ref="0x40523a88"/>
        <function-ref name="toggle" scoped="" ref="0x40523b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40523c48"/>
        <function-ref name="get" scoped="" ref="0x40523d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40523e08"/>
        <function-ref name="set" scoped="" ref="0x40523ee8"/>
        <function-ref name="clr" scoped="" ref="0x40522010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40518790" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40518790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40518968"/>
        <function-ref name="isInput" scoped="" ref="0x40518a48"/>
        <function-ref name="toggle" scoped="" ref="0x40518b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40518c08"/>
        <function-ref name="get" scoped="" ref="0x40518ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40518dc8"/>
        <function-ref name="set" scoped="" ref="0x40518ea8"/>
        <function-ref name="clr" scoped="" ref="0x40517010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x405244f0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x405244f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405246c8"/>
        <function-ref name="isInput" scoped="" ref="0x405247a8"/>
        <function-ref name="toggle" scoped="" ref="0x40524888"/>
        <function-ref name="isOutput" scoped="" ref="0x40524968"/>
        <function-ref name="get" scoped="" ref="0x40524a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40524b28"/>
        <function-ref name="set" scoped="" ref="0x40524c08"/>
        <function-ref name="clr" scoped="" ref="0x40524ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40522170" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40522170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40522348"/>
        <function-ref name="isInput" scoped="" ref="0x40522428"/>
        <function-ref name="toggle" scoped="" ref="0x40522508"/>
        <function-ref name="isOutput" scoped="" ref="0x405225e8"/>
        <function-ref name="get" scoped="" ref="0x405226c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405227a8"/>
        <function-ref name="set" scoped="" ref="0x40522888"/>
        <function-ref name="clr" scoped="" ref="0x40522968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408a2538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408a2538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408a2710"/>
        <function-ref name="isInput" scoped="" ref="0x408a27f0"/>
        <function-ref name="toggle" scoped="" ref="0x408a28d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408a29b0"/>
        <function-ref name="get" scoped="" ref="0x408a2a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x408a2b70"/>
        <function-ref name="set" scoped="" ref="0x408a2c50"/>
        <function-ref name="clr" scoped="" ref="0x408a2d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408bd010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408bd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408bd1e8"/>
        <function-ref name="isInput" scoped="" ref="0x408bd2c8"/>
        <function-ref name="toggle" scoped="" ref="0x408bd3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x408bd488"/>
        <function-ref name="get" scoped="" ref="0x408bd568"/>
        <function-ref name="makeOutput" scoped="" ref="0x408bd648"/>
        <function-ref name="set" scoped="" ref="0x408bd728"/>
        <function-ref name="clr" scoped="" ref="0x408bd808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408bc9e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408bc9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408bcbc0"/>
        <function-ref name="isInput" scoped="" ref="0x408bcca0"/>
        <function-ref name="toggle" scoped="" ref="0x408bcd80"/>
        <function-ref name="isOutput" scoped="" ref="0x408bce60"/>
        <function-ref name="get" scoped="" ref="0x408bb010"/>
        <function-ref name="makeOutput" scoped="" ref="0x408bb0f0"/>
        <function-ref name="set" scoped="" ref="0x408bb1d0"/>
        <function-ref name="clr" scoped="" ref="0x408bb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408ba538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408ba538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408ba710"/>
        <function-ref name="isInput" scoped="" ref="0x408ba7f0"/>
        <function-ref name="toggle" scoped="" ref="0x408ba8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408ba9b0"/>
        <function-ref name="get" scoped="" ref="0x408baa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x408bab70"/>
        <function-ref name="set" scoped="" ref="0x408bac50"/>
        <function-ref name="clr" scoped="" ref="0x408bad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408b7010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408b7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408b71e8"/>
        <function-ref name="isInput" scoped="" ref="0x408b72c8"/>
        <function-ref name="toggle" scoped="" ref="0x408b73a8"/>
        <function-ref name="isOutput" scoped="" ref="0x408b7488"/>
        <function-ref name="get" scoped="" ref="0x408b7568"/>
        <function-ref name="makeOutput" scoped="" ref="0x408b7648"/>
        <function-ref name="set" scoped="" ref="0x408b7728"/>
        <function-ref name="clr" scoped="" ref="0x408b7808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408b69e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408b69e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408b6bc0"/>
        <function-ref name="isInput" scoped="" ref="0x408b6ca0"/>
        <function-ref name="toggle" scoped="" ref="0x408b6d80"/>
        <function-ref name="isOutput" scoped="" ref="0x408b6e60"/>
        <function-ref name="get" scoped="" ref="0x408b5010"/>
        <function-ref name="makeOutput" scoped="" ref="0x408b50f0"/>
        <function-ref name="set" scoped="" ref="0x408b51d0"/>
        <function-ref name="clr" scoped="" ref="0x408b52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408b4538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408b4538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408b4710"/>
        <function-ref name="isInput" scoped="" ref="0x408b47f0"/>
        <function-ref name="toggle" scoped="" ref="0x408b48d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408b49b0"/>
        <function-ref name="get" scoped="" ref="0x408b4a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x408b4b70"/>
        <function-ref name="set" scoped="" ref="0x408b4c50"/>
        <function-ref name="clr" scoped="" ref="0x408b4d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408b2010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408b2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408b21e8"/>
        <function-ref name="isInput" scoped="" ref="0x408b22c8"/>
        <function-ref name="toggle" scoped="" ref="0x408b23a8"/>
        <function-ref name="isOutput" scoped="" ref="0x408b2488"/>
        <function-ref name="get" scoped="" ref="0x408b2568"/>
        <function-ref name="makeOutput" scoped="" ref="0x408b2648"/>
        <function-ref name="set" scoped="" ref="0x408b2728"/>
        <function-ref name="clr" scoped="" ref="0x408b2808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4052b9e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4052b9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052bbc0"/>
        <function-ref name="isInput" scoped="" ref="0x4052bca0"/>
        <function-ref name="toggle" scoped="" ref="0x4052bd80"/>
        <function-ref name="isOutput" scoped="" ref="0x4052be60"/>
        <function-ref name="get" scoped="" ref="0x4052a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052a0f0"/>
        <function-ref name="set" scoped="" ref="0x4052a1d0"/>
        <function-ref name="clr" scoped="" ref="0x4052a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40529790" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40529790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40529968"/>
        <function-ref name="isInput" scoped="" ref="0x40529a48"/>
        <function-ref name="toggle" scoped="" ref="0x40529b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40529c08"/>
        <function-ref name="get" scoped="" ref="0x40529ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40529dc8"/>
        <function-ref name="set" scoped="" ref="0x40529ea8"/>
        <function-ref name="clr" scoped="" ref="0x40528010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4051e6f8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4051e6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051e8d0"/>
        <function-ref name="isInput" scoped="" ref="0x4051e9b0"/>
        <function-ref name="toggle" scoped="" ref="0x4051ea90"/>
        <function-ref name="isOutput" scoped="" ref="0x4051eb70"/>
        <function-ref name="get" scoped="" ref="0x4051ec50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051ed30"/>
        <function-ref name="set" scoped="" ref="0x4051ee10"/>
        <function-ref name="clr" scoped="" ref="0x4051eef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4052a410" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4052a410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052a5e8"/>
        <function-ref name="isInput" scoped="" ref="0x4052a6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4052a7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4052a888"/>
        <function-ref name="get" scoped="" ref="0x4052a968"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052aa48"/>
        <function-ref name="set" scoped="" ref="0x4052ab28"/>
        <function-ref name="clr" scoped="" ref="0x4052ac08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40528170" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40528170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40528348"/>
        <function-ref name="isInput" scoped="" ref="0x40528428"/>
        <function-ref name="toggle" scoped="" ref="0x40528508"/>
        <function-ref name="isOutput" scoped="" ref="0x405285e8"/>
        <function-ref name="get" scoped="" ref="0x405286c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405287a8"/>
        <function-ref name="set" scoped="" ref="0x40528888"/>
        <function-ref name="clr" scoped="" ref="0x40528968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4052b090" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4052b090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052b268"/>
        <function-ref name="isInput" scoped="" ref="0x4052b348"/>
        <function-ref name="toggle" scoped="" ref="0x4052b428"/>
        <function-ref name="isOutput" scoped="" ref="0x4052b508"/>
        <function-ref name="get" scoped="" ref="0x4052b5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052b6c8"/>
        <function-ref name="set" scoped="" ref="0x4052b7a8"/>
        <function-ref name="clr" scoped="" ref="0x4052b888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4052ad68" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4052ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40529010"/>
        <function-ref name="isInput" scoped="" ref="0x405290f0"/>
        <function-ref name="toggle" scoped="" ref="0x405291d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405292b0"/>
        <function-ref name="get" scoped="" ref="0x40529390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40529470"/>
        <function-ref name="set" scoped="" ref="0x40529550"/>
        <function-ref name="clr" scoped="" ref="0x40529630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40528ac8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40528ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40528ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40528d80"/>
        <function-ref name="toggle" scoped="" ref="0x40528e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40527010"/>
        <function-ref name="get" scoped="" ref="0x405270f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405271d0"/>
        <function-ref name="set" scoped="" ref="0x405272b0"/>
        <function-ref name="clr" scoped="" ref="0x40527390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408e0418" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408e0418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408e05f0"/>
        <function-ref name="isInput" scoped="" ref="0x408e06d0"/>
        <function-ref name="toggle" scoped="" ref="0x408e07b0"/>
        <function-ref name="isOutput" scoped="" ref="0x408e0890"/>
        <function-ref name="get" scoped="" ref="0x408e0970"/>
        <function-ref name="makeOutput" scoped="" ref="0x408e0a50"/>
        <function-ref name="set" scoped="" ref="0x408e0b30"/>
        <function-ref name="clr" scoped="" ref="0x408e0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408dfde0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408dfde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408de010"/>
        <function-ref name="isInput" scoped="" ref="0x408de0f0"/>
        <function-ref name="toggle" scoped="" ref="0x408de1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408de2b0"/>
        <function-ref name="get" scoped="" ref="0x408de390"/>
        <function-ref name="makeOutput" scoped="" ref="0x408de470"/>
        <function-ref name="set" scoped="" ref="0x408de550"/>
        <function-ref name="clr" scoped="" ref="0x408de630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408dd7f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408dd7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408dd9d0"/>
        <function-ref name="isInput" scoped="" ref="0x408ddab0"/>
        <function-ref name="toggle" scoped="" ref="0x408ddb90"/>
        <function-ref name="isOutput" scoped="" ref="0x408ddc70"/>
        <function-ref name="get" scoped="" ref="0x408ddd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x408dde30"/>
        <function-ref name="set" scoped="" ref="0x408ddf10"/>
        <function-ref name="clr" scoped="" ref="0x408fa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408f9228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408f9228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408f9400"/>
        <function-ref name="isInput" scoped="" ref="0x408f94e0"/>
        <function-ref name="toggle" scoped="" ref="0x408f95c0"/>
        <function-ref name="isOutput" scoped="" ref="0x408f96a0"/>
        <function-ref name="get" scoped="" ref="0x408f9780"/>
        <function-ref name="makeOutput" scoped="" ref="0x408f9860"/>
        <function-ref name="set" scoped="" ref="0x408f9940"/>
        <function-ref name="clr" scoped="" ref="0x408f9a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408f8c08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408f8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408f8de0"/>
        <function-ref name="isInput" scoped="" ref="0x408f8ec0"/>
        <function-ref name="toggle" scoped="" ref="0x408f7010"/>
        <function-ref name="isOutput" scoped="" ref="0x408f70f0"/>
        <function-ref name="get" scoped="" ref="0x408f71d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408f72b0"/>
        <function-ref name="set" scoped="" ref="0x408f7390"/>
        <function-ref name="clr" scoped="" ref="0x408f7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408f66c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408f66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408f6898"/>
        <function-ref name="isInput" scoped="" ref="0x408f6978"/>
        <function-ref name="toggle" scoped="" ref="0x408f6a58"/>
        <function-ref name="isOutput" scoped="" ref="0x408f6b38"/>
        <function-ref name="get" scoped="" ref="0x408f6c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x408f6cf8"/>
        <function-ref name="set" scoped="" ref="0x408f6dd8"/>
        <function-ref name="clr" scoped="" ref="0x408f6eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408f40b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408f40b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408f4288"/>
        <function-ref name="isInput" scoped="" ref="0x408f4368"/>
        <function-ref name="toggle" scoped="" ref="0x408f4448"/>
        <function-ref name="isOutput" scoped="" ref="0x408f4528"/>
        <function-ref name="get" scoped="" ref="0x408f4608"/>
        <function-ref name="makeOutput" scoped="" ref="0x408f46e8"/>
        <function-ref name="set" scoped="" ref="0x408f47c8"/>
        <function-ref name="clr" scoped="" ref="0x408f48a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408f3a88" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408f3a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408f3c60"/>
        <function-ref name="isInput" scoped="" ref="0x408f3d40"/>
        <function-ref name="toggle" scoped="" ref="0x408f3e20"/>
        <function-ref name="isOutput" scoped="" ref="0x408f3f00"/>
        <function-ref name="get" scoped="" ref="0x408f2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x408f20f0"/>
        <function-ref name="set" scoped="" ref="0x408f21d0"/>
        <function-ref name="clr" scoped="" ref="0x408f22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40531410" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40531410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405315e8"/>
        <function-ref name="isInput" scoped="" ref="0x405316c8"/>
        <function-ref name="toggle" scoped="" ref="0x405317a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40531888"/>
        <function-ref name="get" scoped="" ref="0x40531968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40531a48"/>
        <function-ref name="set" scoped="" ref="0x40531b28"/>
        <function-ref name="clr" scoped="" ref="0x40531c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4052f170" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4052f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052f348"/>
        <function-ref name="isInput" scoped="" ref="0x4052f428"/>
        <function-ref name="toggle" scoped="" ref="0x4052f508"/>
        <function-ref name="isOutput" scoped="" ref="0x4052f5e8"/>
        <function-ref name="get" scoped="" ref="0x4052f6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052f7a8"/>
        <function-ref name="set" scoped="" ref="0x4052f888"/>
        <function-ref name="clr" scoped="" ref="0x4052f968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40533128" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40533128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40533300"/>
        <function-ref name="isInput" scoped="" ref="0x405333e0"/>
        <function-ref name="toggle" scoped="" ref="0x405334c0"/>
        <function-ref name="isOutput" scoped="" ref="0x405335a0"/>
        <function-ref name="get" scoped="" ref="0x40533680"/>
        <function-ref name="makeOutput" scoped="" ref="0x40533760"/>
        <function-ref name="set" scoped="" ref="0x40533840"/>
        <function-ref name="clr" scoped="" ref="0x40533920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40531d68" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40531d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40530010"/>
        <function-ref name="isInput" scoped="" ref="0x405300f0"/>
        <function-ref name="toggle" scoped="" ref="0x405301d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405302b0"/>
        <function-ref name="get" scoped="" ref="0x40530390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40530470"/>
        <function-ref name="set" scoped="" ref="0x40530550"/>
        <function-ref name="clr" scoped="" ref="0x40530630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4052fac8" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4052fac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052fca0"/>
        <function-ref name="isInput" scoped="" ref="0x4052fd80"/>
        <function-ref name="toggle" scoped="" ref="0x4052fe60"/>
        <function-ref name="isOutput" scoped="" ref="0x4052e010"/>
        <function-ref name="get" scoped="" ref="0x4052e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052e1d0"/>
        <function-ref name="set" scoped="" ref="0x4052e2b0"/>
        <function-ref name="clr" scoped="" ref="0x4052e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40533a80" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40533a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40533c58"/>
        <function-ref name="isInput" scoped="" ref="0x40533d38"/>
        <function-ref name="toggle" scoped="" ref="0x40533e18"/>
        <function-ref name="isOutput" scoped="" ref="0x40533ef8"/>
        <function-ref name="get" scoped="" ref="0x40531010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405310f0"/>
        <function-ref name="set" scoped="" ref="0x405311d0"/>
        <function-ref name="clr" scoped="" ref="0x405312b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40530790" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40530790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40530968"/>
        <function-ref name="isInput" scoped="" ref="0x40530a48"/>
        <function-ref name="toggle" scoped="" ref="0x40530b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40530c08"/>
        <function-ref name="get" scoped="" ref="0x40530ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40530dc8"/>
        <function-ref name="set" scoped="" ref="0x40530ea8"/>
        <function-ref name="clr" scoped="" ref="0x4052f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4052e4f0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4052e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052e6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4052e7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4052e888"/>
        <function-ref name="isOutput" scoped="" ref="0x4052e968"/>
        <function-ref name="get" scoped="" ref="0x4052ea48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052eb28"/>
        <function-ref name="set" scoped="" ref="0x4052ec08"/>
        <function-ref name="clr" scoped="" ref="0x4052ece8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40924de8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40924de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40920010"/>
        <function-ref name="isInput" scoped="" ref="0x409200f0"/>
        <function-ref name="toggle" scoped="" ref="0x409201d0"/>
        <function-ref name="isOutput" scoped="" ref="0x409202b0"/>
        <function-ref name="get" scoped="" ref="0x40920390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40920470"/>
        <function-ref name="set" scoped="" ref="0x40920550"/>
        <function-ref name="clr" scoped="" ref="0x40920630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4091f7f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4091f7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4091f9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4091fab0"/>
        <function-ref name="toggle" scoped="" ref="0x4091fb90"/>
        <function-ref name="isOutput" scoped="" ref="0x4091fc70"/>
        <function-ref name="get" scoped="" ref="0x4091fd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4091fe30"/>
        <function-ref name="set" scoped="" ref="0x4091ff10"/>
        <function-ref name="clr" scoped="" ref="0x4091e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4091d228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4091d228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4091d400"/>
        <function-ref name="isInput" scoped="" ref="0x4091d4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4091d5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4091d6a0"/>
        <function-ref name="get" scoped="" ref="0x4091d780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4091d860"/>
        <function-ref name="set" scoped="" ref="0x4091d940"/>
        <function-ref name="clr" scoped="" ref="0x4091da20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4091bc08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4091bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4091bde0"/>
        <function-ref name="isInput" scoped="" ref="0x4091bec0"/>
        <function-ref name="toggle" scoped="" ref="0x4091a010"/>
        <function-ref name="isOutput" scoped="" ref="0x4091a0f0"/>
        <function-ref name="get" scoped="" ref="0x4091a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4091a2b0"/>
        <function-ref name="set" scoped="" ref="0x4091a390"/>
        <function-ref name="clr" scoped="" ref="0x4091a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x409196c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x409196c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40919898"/>
        <function-ref name="isInput" scoped="" ref="0x40919978"/>
        <function-ref name="toggle" scoped="" ref="0x40919a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40919b38"/>
        <function-ref name="get" scoped="" ref="0x40919c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40919cf8"/>
        <function-ref name="set" scoped="" ref="0x40919dd8"/>
        <function-ref name="clr" scoped="" ref="0x40919eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x409360b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x409360b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40936288"/>
        <function-ref name="isInput" scoped="" ref="0x40936368"/>
        <function-ref name="toggle" scoped="" ref="0x40936448"/>
        <function-ref name="isOutput" scoped="" ref="0x40936528"/>
        <function-ref name="get" scoped="" ref="0x40936608"/>
        <function-ref name="makeOutput" scoped="" ref="0x409366e8"/>
        <function-ref name="set" scoped="" ref="0x409367c8"/>
        <function-ref name="clr" scoped="" ref="0x409368a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40935a88" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40935a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40935c60"/>
        <function-ref name="isInput" scoped="" ref="0x40935d40"/>
        <function-ref name="toggle" scoped="" ref="0x40935e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40935f00"/>
        <function-ref name="get" scoped="" ref="0x40934010"/>
        <function-ref name="makeOutput" scoped="" ref="0x409340f0"/>
        <function-ref name="set" scoped="" ref="0x409341d0"/>
        <function-ref name="clr" scoped="" ref="0x409342b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40933538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40933538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40933710"/>
        <function-ref name="isInput" scoped="" ref="0x409337f0"/>
        <function-ref name="toggle" scoped="" ref="0x409338d0"/>
        <function-ref name="isOutput" scoped="" ref="0x409339b0"/>
        <function-ref name="get" scoped="" ref="0x40933a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40933b70"/>
        <function-ref name="set" scoped="" ref="0x40933c50"/>
        <function-ref name="clr" scoped="" ref="0x40933d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PushButton0Init" ref="0x4054c510" loc="7:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButtonC.nc">
      <component-ref qname="PushButtonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PushButton0Init" scoped="" ref="0x4054c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4054c6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PushButton0" ref="0x4054c010" loc="6:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButtonC.nc">
      <component-ref qname="PushButtonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PushButton0" scoped="" ref="0x4054c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PushButton"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4054c1e8"/>
        <function-ref name="waitUntilPressed" scoped="" ref="0x4054c2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4054ccf8" loc="4:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButtonP.nc">
      <component-ref qname="PushButtonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4054ccf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4054ced0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x405495d0" loc="6:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButtonP.nc">
      <component-ref qname="PushButtonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x405495d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405497a8"/>
        <function-ref name="isInput" scoped="" ref="0x40549888"/>
        <function-ref name="toggle" scoped="" ref="0x40549968"/>
        <function-ref name="isOutput" scoped="" ref="0x40549a48"/>
        <function-ref name="get" scoped="" ref="0x40549b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40549c08"/>
        <function-ref name="set" scoped="" ref="0x40549ce8"/>
        <function-ref name="clr" scoped="" ref="0x40549dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PushButton0" ref="0x40549158" loc="5:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButtonP.nc">
      <component-ref qname="PushButtonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PushButton0" scoped="" ref="0x40549158"/></type-interface>
      <instance>
        <interfacedef-ref qname="PushButton"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40549330"/>
        <function-ref name="waitUntilPressed" scoped="" ref="0x40549410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4054d330" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4054d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb28"/>
            <typename><typedef-ref name="TMilli" ref="0x403eccf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4054ae38"/>
        <function-ref name="fired" scoped="" ref="0x4054a0f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4054a7f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x4054a5a0"/>
        <function-ref name="getdt" scoped="" ref="0x406a6310"/>
        <function-ref name="gett0" scoped="" ref="0x406a60b8"/>
        <function-ref name="isRunning" scoped="" ref="0x4054a348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4054d958"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4054ab18"/>
        <function-ref name="startOneShot" scoped="" ref="0x4054dbd8"/>
        <function-ref name="stop" scoped="" ref="0x4054de58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40552ca8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40552ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb28"/>
            <typename><typedef-ref name="TMilli" ref="0x403eccf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4055d7c0"/>
        <function-ref name="fired" scoped="" ref="0x4054ea40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4055d180"/>
        <function-ref name="isOneShot" scoped="" ref="0x4054eef0"/>
        <function-ref name="getdt" scoped="" ref="0x4055dc70"/>
        <function-ref name="gett0" scoped="" ref="0x4055da18"/>
        <function-ref name="isRunning" scoped="" ref="0x4054ec98"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4054e2e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4055d4a0"/>
        <function-ref name="startOneShot" scoped="" ref="0x4054e568"/>
        <function-ref name="stop" scoped="" ref="0x4054e7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4055bf20" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4055bf20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb28"/>
            <typename><typedef-ref name="TMilli" ref="0x403eccf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406663e8"/>
        <function-ref name="fired" scoped="" ref="0x4055aba0"/>
        <function-ref name="startAt" scoped="" ref="0x406660a8"/>
        <function-ref name="isRunning" scoped="" ref="0x4055ae18"/>
        <function-ref name="getAlarm" scoped="" ref="0x40666660"/>
        <function-ref name="start" scoped="" ref="0x4055a688"/>
        <function-ref name="stop" scoped="" ref="0x4055a928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40948d50" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40948d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045bd20"/>
            <typename><typedef-ref name="T62khz" ref="0x4045bec8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40965258"/>
        <function-ref name="fired" scoped="" ref="0x40966a00"/>
        <function-ref name="startAt" scoped="" ref="0x40966ef0"/>
        <function-ref name="isRunning" scoped="" ref="0x40966c78"/>
        <function-ref name="getAlarm" scoped="" ref="0x409654d0"/>
        <function-ref name="start" scoped="" ref="0x409664e8"/>
        <function-ref name="stop" scoped="" ref="0x40966788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x409777c8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x409777c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40974288"/>
        <function-ref name="test" scoped="" ref="0x409755c0"/>
        <function-ref name="fired" scoped="" ref="0x40975348"/>
        <function-ref name="force" scoped="" ref="0x409747a0"/>
        <function-ref name="get" scoped="" ref="0x40977e10"/>
        <function-ref name="reset" scoped="" ref="0x40975838"/>
        <function-ref name="getMode" scoped="" ref="0x40974528"/>
        <function-ref name="isOn" scoped="" ref="0x40974010"/>
        <function-ref name="set" scoped="" ref="0x409750a8"/>
        <function-ref name="start" scoped="" ref="0x40975ab0"/>
        <function-ref name="stop" scoped="" ref="0x40975d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4095bd38" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4095bd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045bd20"/>
            <typename><typedef-ref name="T62khz" ref="0x4045bec8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40959208"/>
        <function-ref name="fired" scoped="" ref="0x4095a9b0"/>
        <function-ref name="startAt" scoped="" ref="0x4095aea0"/>
        <function-ref name="isRunning" scoped="" ref="0x4095ac28"/>
        <function-ref name="getAlarm" scoped="" ref="0x40959480"/>
        <function-ref name="start" scoped="" ref="0x4095a498"/>
        <function-ref name="stop" scoped="" ref="0x4095a738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4095b900" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4095b900"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4095bad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x40959750" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x40959750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40977288"/>
        <function-ref name="test" scoped="" ref="0x40958560"/>
        <function-ref name="get" scoped="" ref="0x40959d98"/>
        <function-ref name="reset" scoped="" ref="0x409587d8"/>
        <function-ref name="getMode" scoped="" ref="0x40977528"/>
        <function-ref name="overflow" scoped="" ref="0x409582e8"/>
        <function-ref name="isOn" scoped="" ref="0x40977010"/>
        <function-ref name="set" scoped="" ref="0x40958048"/>
        <function-ref name="start" scoped="" ref="0x40958a50"/>
        <function-ref name="stop" scoped="" ref="0x40958cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconCapture" ref="0x4059c6d8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconCapture" scoped="" ref="0x4059c6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405a51a0"/>
        <function-ref name="test" scoped="" ref="0x40596528"/>
        <function-ref name="fired" scoped="" ref="0x405962b0"/>
        <function-ref name="get" scoped="" ref="0x4059cd20"/>
        <function-ref name="reset" scoped="" ref="0x405967a0"/>
        <function-ref name="getMode" scoped="" ref="0x405a5440"/>
        <function-ref name="isOn" scoped="" ref="0x40596f08"/>
        <function-ref name="set" scoped="" ref="0x40596010"/>
        <function-ref name="start" scoped="" ref="0x40596a18"/>
        <function-ref name="stop" scoped="" ref="0x40596c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40587e70" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40587e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405928d8"/>
        <function-ref name="test" scoped="" ref="0x40594c68"/>
        <function-ref name="get" scoped="" ref="0x405944d8"/>
        <function-ref name="reset" scoped="" ref="0x40594ee0"/>
        <function-ref name="getMode" scoped="" ref="0x40592b78"/>
        <function-ref name="overflow" scoped="" ref="0x405949f0"/>
        <function-ref name="isOn" scoped="" ref="0x40592660"/>
        <function-ref name="set" scoped="" ref="0x40594750"/>
        <function-ref name="start" scoped="" ref="0x40592170"/>
        <function-ref name="stop" scoped="" ref="0x405923e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x405985a8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x405985a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4059c010"/>
        <function-ref name="test" scoped="" ref="0x4059d3a8"/>
        <function-ref name="fired" scoped="" ref="0x4059d130"/>
        <function-ref name="get" scoped="" ref="0x40598bf0"/>
        <function-ref name="reset" scoped="" ref="0x4059d620"/>
        <function-ref name="getMode" scoped="" ref="0x4059c2b0"/>
        <function-ref name="isOn" scoped="" ref="0x4059dd88"/>
        <function-ref name="set" scoped="" ref="0x40598e68"/>
        <function-ref name="start" scoped="" ref="0x4059d898"/>
        <function-ref name="stop" scoped="" ref="0x4059db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40591258" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40591258"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40590ca0"/>
        <function-ref name="test" scoped="" ref="0x40590048"/>
        <function-ref name="fired" scoped="" ref="0x40591db8"/>
        <function-ref name="force" scoped="" ref="0x4058e288"/>
        <function-ref name="get" scoped="" ref="0x405918a0"/>
        <function-ref name="reset" scoped="" ref="0x405902c0"/>
        <function-ref name="getMode" scoped="" ref="0x4058e010"/>
        <function-ref name="isOn" scoped="" ref="0x40590a28"/>
        <function-ref name="set" scoped="" ref="0x40591b18"/>
        <function-ref name="start" scoped="" ref="0x40590538"/>
        <function-ref name="stop" scoped="" ref="0x405907b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x4059f128" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x4059f128"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4059eb80"/>
        <function-ref name="test" scoped="" ref="0x4059ff00"/>
        <function-ref name="fired" scoped="" ref="0x4059fc88"/>
        <function-ref name="force" scoped="" ref="0x405ad0b8"/>
        <function-ref name="get" scoped="" ref="0x4059f770"/>
        <function-ref name="reset" scoped="" ref="0x4059e1a0"/>
        <function-ref name="getMode" scoped="" ref="0x4059ee20"/>
        <function-ref name="isOn" scoped="" ref="0x4059e908"/>
        <function-ref name="set" scoped="" ref="0x4059f9e8"/>
        <function-ref name="start" scoped="" ref="0x4059e418"/>
        <function-ref name="stop" scoped="" ref="0x4059e690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconCapture" ref="0x405b6d58" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconCapture" scoped="" ref="0x405b6d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405b37f0"/>
        <function-ref name="test" scoped="" ref="0x405b4b70"/>
        <function-ref name="fired" scoped="" ref="0x405b48f8"/>
        <function-ref name="get" scoped="" ref="0x405b43e0"/>
        <function-ref name="reset" scoped="" ref="0x405b4de8"/>
        <function-ref name="getMode" scoped="" ref="0x405b3a90"/>
        <function-ref name="isOn" scoped="" ref="0x405b3578"/>
        <function-ref name="set" scoped="" ref="0x405b4658"/>
        <function-ref name="start" scoped="" ref="0x405b3088"/>
        <function-ref name="stop" scoped="" ref="0x405b3300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x405b3d48" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x405b3d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x405b3f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x405ad4b0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x405ad4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405abf18"/>
        <function-ref name="test" scoped="" ref="0x405ab2c0"/>
        <function-ref name="fired" scoped="" ref="0x405ab048"/>
        <function-ref name="force" scoped="" ref="0x405aa448"/>
        <function-ref name="get" scoped="" ref="0x405adaf8"/>
        <function-ref name="reset" scoped="" ref="0x405ab538"/>
        <function-ref name="getMode" scoped="" ref="0x405aa1d0"/>
        <function-ref name="isOn" scoped="" ref="0x405abca0"/>
        <function-ref name="set" scoped="" ref="0x405add70"/>
        <function-ref name="start" scoped="" ref="0x405ab7b0"/>
        <function-ref name="stop" scoped="" ref="0x405aba28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x405a2010" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x405a2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405a1a68"/>
        <function-ref name="test" scoped="" ref="0x405a2de8"/>
        <function-ref name="get" scoped="" ref="0x405a2658"/>
        <function-ref name="reset" scoped="" ref="0x405a1088"/>
        <function-ref name="getMode" scoped="" ref="0x405a1d08"/>
        <function-ref name="overflow" scoped="" ref="0x405a2b70"/>
        <function-ref name="isOn" scoped="" ref="0x405a17f0"/>
        <function-ref name="set" scoped="" ref="0x405a28d0"/>
        <function-ref name="start" scoped="" ref="0x405a1300"/>
        <function-ref name="stop" scoped="" ref="0x405a1578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x405b2150" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x405b2150"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x405b2328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x405a7be0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x405a7be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405b6690"/>
        <function-ref name="test" scoped="" ref="0x405a6a08"/>
        <function-ref name="fired" scoped="" ref="0x405a6790"/>
        <function-ref name="get" scoped="" ref="0x405a6278"/>
        <function-ref name="reset" scoped="" ref="0x405a6c80"/>
        <function-ref name="getMode" scoped="" ref="0x405b6930"/>
        <function-ref name="isOn" scoped="" ref="0x405b6418"/>
        <function-ref name="set" scoped="" ref="0x405a64f0"/>
        <function-ref name="start" scoped="" ref="0x405a6ef8"/>
        <function-ref name="stop" scoped="" ref="0x405b61a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x405aa840" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x405aa840"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405a72c0"/>
        <function-ref name="test" scoped="" ref="0x405a9628"/>
        <function-ref name="fired" scoped="" ref="0x405a93b0"/>
        <function-ref name="force" scoped="" ref="0x405a77d8"/>
        <function-ref name="get" scoped="" ref="0x405aae88"/>
        <function-ref name="reset" scoped="" ref="0x405a98a0"/>
        <function-ref name="getMode" scoped="" ref="0x405a7560"/>
        <function-ref name="isOn" scoped="" ref="0x405a7048"/>
        <function-ref name="set" scoped="" ref="0x405a9110"/>
        <function-ref name="start" scoped="" ref="0x405a9b18"/>
        <function-ref name="stop" scoped="" ref="0x405a9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40617d18" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40617d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045bd20"/>
            <typename><typedef-ref name="T62khz" ref="0x4045bec8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40609478"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40609968"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406096f0"/>
        <function-ref name="overflow" scoped="" ref="0x40609be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40615088" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40615088"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40615260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406154c0" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406154c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045bd20"/>
            <typename><typedef-ref name="T62khz" ref="0x4045bec8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40615c10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4061a110"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40615e88"/>
        <function-ref name="overflow" scoped="" ref="0x4061a388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x4061a658" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x4061a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4062a0b8"/>
        <function-ref name="test" scoped="" ref="0x4062b448"/>
        <function-ref name="get" scoped="" ref="0x4061aca0"/>
        <function-ref name="reset" scoped="" ref="0x4062b6c0"/>
        <function-ref name="getMode" scoped="" ref="0x4062a358"/>
        <function-ref name="overflow" scoped="" ref="0x4062b1d0"/>
        <function-ref name="isOn" scoped="" ref="0x4062be28"/>
        <function-ref name="set" scoped="" ref="0x4061af18"/>
        <function-ref name="start" scoped="" ref="0x4062b938"/>
        <function-ref name="stop" scoped="" ref="0x4062bbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406277b0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406277b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb28"/>
            <typename><typedef-ref name="TMilli" ref="0x403eccf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40627f00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40624418"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406241a0"/>
        <function-ref name="overflow" scoped="" ref="0x40624690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40638380" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40638380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045bd20"/>
            <typename><typedef-ref name="T62khz" ref="0x4045bec8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40638ad0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40637010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40638d48"/>
        <function-ref name="overflow" scoped="" ref="0x40637288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406390c0" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406390c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb28"/>
            <typename><typedef-ref name="TMilli" ref="0x403eccf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40639810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40639d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40639a88"/>
        <function-ref name="overflow" scoped="" ref="0x40638010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x409646f0" loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x409646f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb28"/>
            <typename><typedef-ref name="TMilli" ref="0x403eccf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40963ba0"/>
        <function-ref name="fired" scoped="" ref="0x40963370"/>
        <function-ref name="startAt" scoped="" ref="0x40963860"/>
        <function-ref name="isRunning" scoped="" ref="0x409635e8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40963e18"/>
        <function-ref name="start" scoped="" ref="0x40964e40"/>
        <function-ref name="stop" scoped="" ref="0x409630f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x409603b8" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x409603b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045bd20"/>
            <typename><typedef-ref name="T62khz" ref="0x4045bec8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4095f878"/>
        <function-ref name="fired" scoped="" ref="0x4095f048"/>
        <function-ref name="startAt" scoped="" ref="0x4095f538"/>
        <function-ref name="isRunning" scoped="" ref="0x4095f2c0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4095faf0"/>
        <function-ref name="start" scoped="" ref="0x40960b08"/>
        <function-ref name="stop" scoped="" ref="0x40960da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40961180" loc="68:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40961180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb28"/>
            <typename><typedef-ref name="TMilli" ref="0x403eccf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409618d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40961dc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40961b48"/>
        <function-ref name="overflow" scoped="" ref="0x40960048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40673658" loc="74:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40673658"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40673830"/>
        <function-ref name="runTask" scoped="" ref="0x40673910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40675cc8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40675cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb28"/>
            <typename><typedef-ref name="TMilli" ref="0x403eccf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40673190"/>
        <function-ref name="fired" scoped="" ref="0x40674950"/>
        <function-ref name="startAt" scoped="" ref="0x40674e40"/>
        <function-ref name="isRunning" scoped="" ref="0x40674bc8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40673408"/>
        <function-ref name="start" scoped="" ref="0x40674438"/>
        <function-ref name="stop" scoped="" ref="0x406746d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40665968" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40665968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb28"/>
            <typename><typedef-ref name="TMilli" ref="0x403eccf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406754c8"/>
        <function-ref name="fired" scoped="" ref="0x40664768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40664e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40664c18"/>
        <function-ref name="getdt" scoped="" ref="0x40675978"/>
        <function-ref name="gett0" scoped="" ref="0x40675720"/>
        <function-ref name="isRunning" scoped="" ref="0x406649c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40664010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406751a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40664290"/>
        <function-ref name="stop" scoped="" ref="0x40664510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x406a92b8" loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x406a92b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406a9490"/>
        <function-ref name="runTask" scoped="" ref="0x406a9570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x406ac0c0" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x406ac0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb28"/>
            <typename><typedef-ref name="TMilli" ref="0x403eccf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406abba8"/>
        <function-ref name="fired" scoped="" ref="0x406ace40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406ab568"/>
        <function-ref name="isOneShot" scoped="" ref="0x406ab310"/>
        <function-ref name="getdt" scoped="" ref="0x406a9068"/>
        <function-ref name="gett0" scoped="" ref="0x406abe00"/>
        <function-ref name="isRunning" scoped="" ref="0x406ab0b8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406ac6e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406ab888"/>
        <function-ref name="startOneShot" scoped="" ref="0x406ac968"/>
        <function-ref name="stop" scoped="" ref="0x406acbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40684cc8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40684cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb28"/>
            <typename><typedef-ref name="TMilli" ref="0x403eccf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406ad8d8"/>
        <function-ref name="fired" scoped="" ref="0x40683ad8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406ad278"/>
        <function-ref name="isOneShot" scoped="" ref="0x406ad010"/>
        <function-ref name="getdt" scoped="" ref="0x406adda8"/>
        <function-ref name="gett0" scoped="" ref="0x406adb40"/>
        <function-ref name="isRunning" scoped="" ref="0x40683d40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40683350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406ad5a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x406835e0"/>
        <function-ref name="stop" scoped="" ref="0x40683870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406a50f0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406a50f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb28"/>
            <typename><typedef-ref name="TMilli" ref="0x403eccf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406a4be0"/>
        <function-ref name="fired" scoped="" ref="0x406a5e70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406a45a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x406a4348"/>
        <function-ref name="getdt" scoped="" ref="0x406b80b8"/>
        <function-ref name="gett0" scoped="" ref="0x406a4e38"/>
        <function-ref name="isRunning" scoped="" ref="0x406a40f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406a5718"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406a48c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x406a5998"/>
        <function-ref name="stop" scoped="" ref="0x406a5c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406b8e70" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406b8e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb28"/>
            <typename><typedef-ref name="TMilli" ref="0x403eccf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406b5988"/>
        <function-ref name="fired" scoped="" ref="0x406b7c10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406b5348"/>
        <function-ref name="isOneShot" scoped="" ref="0x406b50f0"/>
        <function-ref name="getdt" scoped="" ref="0x406b5e38"/>
        <function-ref name="gett0" scoped="" ref="0x406b5be0"/>
        <function-ref name="isRunning" scoped="" ref="0x406b7e68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406b74b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406b5668"/>
        <function-ref name="startOneShot" scoped="" ref="0x406b7738"/>
        <function-ref name="stop" scoped="" ref="0x406b79b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x406bfcc0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x406bfcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406bfe98"/>
        <function-ref name="receive" scoped="" ref="0x406b1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x406bf3f0" loc="38:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x406bf3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406bf5c8"/>
        <function-ref name="receivedByte" scoped="" ref="0x406bf6a8"/>
        <function-ref name="receive" scoped="" ref="0x406bf788"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x406bf868"/>
        <function-ref name="receiveDone" scoped="" ref="0x406bf948"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x406bfa28"/>
        <function-ref name="sendDone" scoped="" ref="0x406bfb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x406b11d8" loc="40:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x406b11d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406b13b0"/>
        <function-ref name="stop" scoped="" ref="0x406b1490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40816410" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1C.nc">
      <component-ref qname="PlatformSerialC.Uart1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40816410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x408165e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x408166c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40815170" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1C.nc">
      <component-ref qname="PlatformSerialC.Uart1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40815170"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40815348"/>
        <function-ref name="receive" scoped="" ref="0x40815428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1281UartConfigure" ref="0x40815588" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1C.nc">
      <component-ref qname="PlatformSerialC.Uart1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1281UartConfigure" scoped="" ref="0x40815588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1281UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x40815760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40816828" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1C.nc">
      <component-ref qname="PlatformSerialC.Uart1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40816828"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40816a00"/>
        <function-ref name="receivedByte" scoped="" ref="0x40816ae0"/>
        <function-ref name="receive" scoped="" ref="0x40816bc0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40816ca0"/>
        <function-ref name="receiveDone" scoped="" ref="0x40816d80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40816e60"/>
        <function-ref name="sendDone" scoped="" ref="0x40815010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x406c0d28" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1C.nc">
      <component-ref qname="PlatformSerialC.Uart1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406c0d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406c0f00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40816010"/>
        <function-ref name="request" scoped="" ref="0x408160f0"/>
        <function-ref name="granted" scoped="" ref="0x408161d0"/>
        <function-ref name="isOwner" scoped="" ref="0x408162b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x406eead0" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <component-ref qname="Atm1281Uart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x406eead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x406eeca8"/>
        <function-ref name="configure" scoped="" ref="0x406eed88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x406dae08" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <component-ref qname="Atm1281Uart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x406dae08"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406ed010"/>
        <function-ref name="receive" scoped="" ref="0x406ed0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1281UartConfigure" ref="0x406ec8c8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <component-ref qname="Atm1281Uart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1281UartConfigure" scoped="" ref="0x406ec8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1281UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x406ecaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x406da258" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <component-ref qname="Atm1281Uart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x406da258"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406da430"/>
        <function-ref name="receivedByte" scoped="" ref="0x406da510"/>
        <function-ref name="receive" scoped="" ref="0x406da5f0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x406da6d0"/>
        <function-ref name="receiveDone" scoped="" ref="0x406da7b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x406da890"/>
        <function-ref name="sendDone" scoped="" ref="0x406da970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x406ed630" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <component-ref qname="Atm1281Uart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UsartResource" scoped="" ref="0x406ed630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406ed808"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406ed8e8"/>
        <function-ref name="request" scoped="" ref="0x406ed9c8"/>
        <function-ref name="granted" scoped="" ref="0x406edaa8"/>
        <function-ref name="isOwner" scoped="" ref="0x406edb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x406db120" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <component-ref qname="Atm1281Uart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406db120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406db2f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406db3d8"/>
        <function-ref name="request" scoped="" ref="0x406db4b8"/>
        <function-ref name="granted" scoped="" ref="0x406db598"/>
        <function-ref name="isOwner" scoped="" ref="0x406db678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x406ec100" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <component-ref qname="Atm1281Uart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UsartInterrupts" scoped="" ref="0x406ec100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1281UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x406ec2d8"/>
        <function-ref name="txDone" scoped="" ref="0x406ec3b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x406e8770" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
      <component-ref qname="Atm1281Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x406e8770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x406e8958"/>
        <function-ref name="configure" scoped="" ref="0x406e8a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x406e8c30" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
      <component-ref qname="Atm1281Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x406e8c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406e8e18"/>
        <function-ref name="receive" scoped="" ref="0x406e8ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1281UartConfigure" ref="0x4072b208" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
      <component-ref qname="Atm1281Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1281UartConfigure" scoped="" ref="0x4072b208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1281UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x4072b3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x4072b570" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
      <component-ref qname="Atm1281Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Usart" scoped="" ref="0x4072b570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1281Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x4072b748"/>
        <function-ref name="enableUart" scoped="" ref="0x4072b828"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x4072b908"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x4072b9e8"/>
        <function-ref name="resetUsart" scoped="" ref="0x4072bac8"/>
        <function-ref name="disableIntr" scoped="" ref="0x4072bba8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x4072bc88"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x4072bd68"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x4072be48"/>
        <function-ref name="isUart" scoped="" ref="0x4072bf28"/>
        <function-ref name="enableIntr" scoped="" ref="0x4072a018"/>
        <function-ref name="isSpi" scoped="" ref="0x4072a0f8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x4072a1d8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x4072a338"/>
        <function-ref name="tx" scoped="" ref="0x4072a418"/>
        <function-ref name="disableUart" scoped="" ref="0x4072a4f8"/>
        <function-ref name="enableSpi" scoped="" ref="0x4072a5d8"/>
        <function-ref name="setModeUart" scoped="" ref="0x4072a6b8"/>
        <function-ref name="clrIntr" scoped="" ref="0x4072a798"/>
        <function-ref name="setModeSpi" scoped="" ref="0x4072a878"/>
        <function-ref name="rx" scoped="" ref="0x4072a958"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x4072aa38"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x4072ab18"/>
        <function-ref name="disableSpi" scoped="" ref="0x4072abf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x4072c108" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
      <component-ref qname="Atm1281Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x4072c108"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4072c2f0"/>
        <function-ref name="receivedByte" scoped="" ref="0x4072c3d0"/>
        <function-ref name="receive" scoped="" ref="0x4072c4b0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x4072c590"/>
        <function-ref name="receiveDone" scoped="" ref="0x4072c670"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4072c750"/>
        <function-ref name="sendDone" scoped="" ref="0x4072c830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40729370" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
      <component-ref qname="Atm1281Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40729370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40423450"/>
            <typename><typedef-ref name="TMicro" ref="0x40423618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40729ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40728010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40729d38"/>
        <function-ref name="overflow" scoped="" ref="0x40728288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x4072ca48" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
      <component-ref qname="Atm1281Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UsartResource" scoped="" ref="0x4072ca48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4072cc30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4072cd10"/>
        <function-ref name="request" scoped="" ref="0x4072cdf0"/>
        <function-ref name="granted" scoped="" ref="0x4072ced0"/>
        <function-ref name="isOwner" scoped="" ref="0x4072b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x406e8010" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
      <component-ref qname="Atm1281Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406e8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406e81f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406e82d8"/>
        <function-ref name="request" scoped="" ref="0x406e83b8"/>
        <function-ref name="granted" scoped="" ref="0x406e8498"/>
        <function-ref name="isOwner" scoped="" ref="0x406e8578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x4072ae10" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
      <component-ref qname="Atm1281Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UsartInterrupts" scoped="" ref="0x4072ae10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1281UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x40729010"/>
        <function-ref name="txDone" scoped="" ref="0x407290f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x407284b8" loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
      <component-ref qname="Atm1281Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407284b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40728690"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40728770"/>
        <function-ref name="led1On" scoped="" ref="0x40728850"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40728930"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40728a10"/>
        <function-ref name="get" scoped="" ref="0x40728af0"/>
        <function-ref name="led1Off" scoped="" ref="0x40728bd0"/>
        <function-ref name="led2On" scoped="" ref="0x40727010"/>
        <function-ref name="set" scoped="" ref="0x40728d90"/>
        <function-ref name="led2Off" scoped="" ref="0x40728cb0"/>
        <function-ref name="led0On" scoped="" ref="0x40728e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x4073ddb8" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1C.nc">
      <component-ref qname="HplAtm1281Usart1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Usart" scoped="" ref="0x4073ddb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1281Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x4073a010"/>
        <function-ref name="enableUart" scoped="" ref="0x4073a0f0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x4073a1d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x4073a2b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x4073a390"/>
        <function-ref name="disableIntr" scoped="" ref="0x4073a470"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x4073a550"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x4073a630"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x4073a710"/>
        <function-ref name="isUart" scoped="" ref="0x4073a7f0"/>
        <function-ref name="enableIntr" scoped="" ref="0x4073a8d0"/>
        <function-ref name="isSpi" scoped="" ref="0x4073a9b0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x4073aa90"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x4073abf0"/>
        <function-ref name="tx" scoped="" ref="0x4073acd0"/>
        <function-ref name="disableUart" scoped="" ref="0x4073adb0"/>
        <function-ref name="enableSpi" scoped="" ref="0x4073ae90"/>
        <function-ref name="setModeUart" scoped="" ref="0x40739010"/>
        <function-ref name="clrIntr" scoped="" ref="0x407390f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x407391d0"/>
        <function-ref name="rx" scoped="" ref="0x407392b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x40739390"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x40739470"/>
        <function-ref name="disableSpi" scoped="" ref="0x40739550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UsartInterrupts" ref="0x40739848" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1C.nc">
      <component-ref qname="HplAtm1281Usart1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UsartInterrupts" scoped="" ref="0x40739848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1281UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x40739a20"/>
        <function-ref name="txDone" scoped="" ref="0x40739b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUsart" ref="0x407373d0" loc="71:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1P.nc">
      <component-ref qname="HplAtm1281Usart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUsart" scoped="" ref="0x407373d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1281Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x407375a8"/>
        <function-ref name="enableUart" scoped="" ref="0x40737688"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40737768"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x40737848"/>
        <function-ref name="resetUsart" scoped="" ref="0x40737928"/>
        <function-ref name="disableIntr" scoped="" ref="0x40737a08"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40737ae8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40737bc8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40737ca8"/>
        <function-ref name="isUart" scoped="" ref="0x40737d88"/>
        <function-ref name="enableIntr" scoped="" ref="0x40737e68"/>
        <function-ref name="isSpi" scoped="" ref="0x40734010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x407340f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x40734250"/>
        <function-ref name="tx" scoped="" ref="0x40734330"/>
        <function-ref name="disableUart" scoped="" ref="0x40734410"/>
        <function-ref name="enableSpi" scoped="" ref="0x407344f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x407345d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x407346b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x40734790"/>
        <function-ref name="rx" scoped="" ref="0x40734870"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x40734950"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x40734a30"/>
        <function-ref name="disableSpi" scoped="" ref="0x40734b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x4074a760" loc="76:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1P.nc">
      <component-ref qname="HplAtm1281Usart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x4074a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4074a938"/>
        <function-ref name="isInput" scoped="" ref="0x4074aa18"/>
        <function-ref name="toggle" scoped="" ref="0x4074aaf8"/>
        <function-ref name="isOutput" scoped="" ref="0x4074abd8"/>
        <function-ref name="get" scoped="" ref="0x4074acb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4074ad98"/>
        <function-ref name="set" scoped="" ref="0x4074ae78"/>
        <function-ref name="clr" scoped="" ref="0x40749010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x40733330" loc="74:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1P.nc">
      <component-ref qname="HplAtm1281Usart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x40733330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40733508"/>
        <function-ref name="isInput" scoped="" ref="0x407335e8"/>
        <function-ref name="toggle" scoped="" ref="0x407336c8"/>
        <function-ref name="isOutput" scoped="" ref="0x407337a8"/>
        <function-ref name="get" scoped="" ref="0x40733888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40733968"/>
        <function-ref name="set" scoped="" ref="0x40733a48"/>
        <function-ref name="clr" scoped="" ref="0x40733b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UsartInterrupts" ref="0x40734e28" loc="72:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1P.nc">
      <component-ref qname="HplAtm1281Usart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UsartInterrupts" scoped="" ref="0x40734e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1281UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x40733050"/>
        <function-ref name="txDone" scoped="" ref="0x40733130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x407491f8" loc="77:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1P.nc">
      <component-ref qname="HplAtm1281Usart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x407491f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x407493d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40733d38" loc="75:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1P.nc">
      <component-ref qname="HplAtm1281Usart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40733d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40733f10"/>
        <function-ref name="isInput" scoped="" ref="0x4074a010"/>
        <function-ref name="toggle" scoped="" ref="0x4074a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4074a1d0"/>
        <function-ref name="get" scoped="" ref="0x4074a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4074a390"/>
        <function-ref name="set" scoped="" ref="0x4074a470"/>
        <function-ref name="clr" scoped="" ref="0x4074a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4077a358" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4077a358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40423450"/>
            <typename><typedef-ref name="TMicro" ref="0x40423618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4077aaa8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40779010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4077ad20"/>
        <function-ref name="overflow" scoped="" ref="0x40779288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40777b40" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40777b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40764878"/>
            <typename><typedef-ref name="TMcu" ref="0x40764c28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40775308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407757f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40775580"/>
        <function-ref name="overflow" scoped="" ref="0x40775a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40778908" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40778908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40423450"/>
            <typename><typedef-ref name="TMicro" ref="0x40423618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40777068"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40777558"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407772e0"/>
        <function-ref name="overflow" scoped="" ref="0x407777d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407748a0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <component-ref qname="CounterMcu32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407748a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40764878"/>
            <typename><typedef-ref name="TMcu" ref="0x40764c28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40771010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40771500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40771288"/>
        <function-ref name="overflow" scoped="" ref="0x40771778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40785078" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40785078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40764878"/>
            <typename><typedef-ref name="TMcu" ref="0x40764c28"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407857c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40785cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40785a40"/>
        <function-ref name="overflow" scoped="" ref="0x40784010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4076fdd8" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4076fdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40764878"/>
            <typename><typedef-ref name="TMcu" ref="0x40764c28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40786570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40786a60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407867e8"/>
        <function-ref name="overflow" scoped="" ref="0x40786cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40780128" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <component-ref qname="CounterMcu16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40780128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40764878"/>
            <typename><typedef-ref name="TMcu" ref="0x40764c28"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40780878"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40780d68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40780af0"/>
        <function-ref name="overflow" scoped="" ref="0x4077f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4077e2c0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4077e2c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4077e498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4077e6f8" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4077e6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40764878"/>
            <typename><typedef-ref name="TMcu" ref="0x40764c28"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4077ee48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4077d350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4077d0d8"/>
        <function-ref name="overflow" scoped="" ref="0x4077d5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x4077d898" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x4077d898"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40792300"/>
        <function-ref name="test" scoped="" ref="0x4077b688"/>
        <function-ref name="get" scoped="" ref="0x4077dee0"/>
        <function-ref name="reset" scoped="" ref="0x4077b900"/>
        <function-ref name="getMode" scoped="" ref="0x407925a0"/>
        <function-ref name="overflow" scoped="" ref="0x4077b410"/>
        <function-ref name="isOn" scoped="" ref="0x40792088"/>
        <function-ref name="set" scoped="" ref="0x4077b170"/>
        <function-ref name="start" scoped="" ref="0x4077bb78"/>
        <function-ref name="stop" scoped="" ref="0x4077bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407883f8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x407883f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40787ee0"/>
        <function-ref name="test" scoped="" ref="0x40787288"/>
        <function-ref name="fired" scoped="" ref="0x40787010"/>
        <function-ref name="get" scoped="" ref="0x40788a40"/>
        <function-ref name="reset" scoped="" ref="0x40787500"/>
        <function-ref name="getMode" scoped="" ref="0x4079e1c0"/>
        <function-ref name="isOn" scoped="" ref="0x40787c68"/>
        <function-ref name="set" scoped="" ref="0x40788cb8"/>
        <function-ref name="start" scoped="" ref="0x40787778"/>
        <function-ref name="stop" scoped="" ref="0x407879f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40791b08" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40791b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4078c600"/>
        <function-ref name="test" scoped="" ref="0x4078e990"/>
        <function-ref name="get" scoped="" ref="0x4078e200"/>
        <function-ref name="reset" scoped="" ref="0x4078ec08"/>
        <function-ref name="getMode" scoped="" ref="0x4078c8a0"/>
        <function-ref name="overflow" scoped="" ref="0x4078e718"/>
        <function-ref name="isOn" scoped="" ref="0x4078c388"/>
        <function-ref name="set" scoped="" ref="0x4078e478"/>
        <function-ref name="start" scoped="" ref="0x4078ee80"/>
        <function-ref name="stop" scoped="" ref="0x4078c110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4078b010" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4078b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4078aa68"/>
        <function-ref name="test" scoped="" ref="0x4078bde8"/>
        <function-ref name="fired" scoped="" ref="0x4078bb70"/>
        <function-ref name="force" scoped="" ref="0x40788010"/>
        <function-ref name="get" scoped="" ref="0x4078b658"/>
        <function-ref name="reset" scoped="" ref="0x4078a088"/>
        <function-ref name="getMode" scoped="" ref="0x4078ad08"/>
        <function-ref name="isOn" scoped="" ref="0x4078a7f0"/>
        <function-ref name="set" scoped="" ref="0x4078b8d0"/>
        <function-ref name="start" scoped="" ref="0x4078a300"/>
        <function-ref name="stop" scoped="" ref="0x4078a578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40798e48" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40798e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407958d8"/>
        <function-ref name="test" scoped="" ref="0x40797c68"/>
        <function-ref name="fired" scoped="" ref="0x407979f0"/>
        <function-ref name="force" scoped="" ref="0x40795df0"/>
        <function-ref name="get" scoped="" ref="0x407974d8"/>
        <function-ref name="reset" scoped="" ref="0x40797ee0"/>
        <function-ref name="getMode" scoped="" ref="0x40795b78"/>
        <function-ref name="isOn" scoped="" ref="0x40795660"/>
        <function-ref name="set" scoped="" ref="0x40797750"/>
        <function-ref name="start" scoped="" ref="0x40795170"/>
        <function-ref name="stop" scoped="" ref="0x407953e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40794238" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40794238"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40793ca0"/>
        <function-ref name="test" scoped="" ref="0x40793048"/>
        <function-ref name="fired" scoped="" ref="0x40794d98"/>
        <function-ref name="get" scoped="" ref="0x40794880"/>
        <function-ref name="reset" scoped="" ref="0x407932c0"/>
        <function-ref name="getMode" scoped="" ref="0x407aa010"/>
        <function-ref name="isOn" scoped="" ref="0x40793a28"/>
        <function-ref name="set" scoped="" ref="0x40794af8"/>
        <function-ref name="start" scoped="" ref="0x40793538"/>
        <function-ref name="stop" scoped="" ref="0x407937b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x407aa2c8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x407aa2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x407aa4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x407aa6b8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x407aa6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x407aa890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4079ed30" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4079ed30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407987b0"/>
        <function-ref name="test" scoped="" ref="0x40799b20"/>
        <function-ref name="get" scoped="" ref="0x40799390"/>
        <function-ref name="reset" scoped="" ref="0x40799d98"/>
        <function-ref name="getMode" scoped="" ref="0x40798a50"/>
        <function-ref name="overflow" scoped="" ref="0x407998a8"/>
        <function-ref name="isOn" scoped="" ref="0x40798538"/>
        <function-ref name="set" scoped="" ref="0x40799608"/>
        <function-ref name="start" scoped="" ref="0x40798048"/>
        <function-ref name="stop" scoped="" ref="0x407982c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x409b2330" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Usart1C.nc">
      <component-ref qname="PlatformSerialC.Uart1.UsartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x409b2330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x409b2508"/>
        <function-ref name="immediateRequested" scoped="" ref="0x409b25e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x409af828" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Usart1C.nc">
      <component-ref qname="PlatformSerialC.Uart1.UsartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x409af828"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x409afa00"/>
        <function-ref name="configure" scoped="" ref="0x409afae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409b3ba0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Usart1C.nc">
      <component-ref qname="PlatformSerialC.Uart1.UsartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409b3ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409b3d78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409b3e58"/>
        <function-ref name="request" scoped="" ref="0x409b2010"/>
        <function-ref name="granted" scoped="" ref="0x409b20f0"/>
        <function-ref name="isOwner" scoped="" ref="0x409b21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm1281UsartInterrupts" ref="0x409af410" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Usart1C.nc">
      <component-ref qname="PlatformSerialC.Uart1.UsartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1281UsartInterrupts" scoped="" ref="0x409af410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1281UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x409af5e8"/>
        <function-ref name="txDone" scoped="" ref="0x409af6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x409b2748" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Usart1C.nc">
      <component-ref qname="PlatformSerialC.Uart1.UsartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x409b2748"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x409b2920"/>
        <function-ref name="userId" scoped="" ref="0x409b2a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm1281Usart" ref="0x409b2b60" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Usart1C.nc">
      <component-ref qname="PlatformSerialC.Uart1.UsartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1281Usart" scoped="" ref="0x409b2b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1281Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x409b2d38"/>
        <function-ref name="enableUart" scoped="" ref="0x409b2e18"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x409b2ef8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x409b0010"/>
        <function-ref name="resetUsart" scoped="" ref="0x409b00f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x409b01d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x409b02b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x409b0390"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x409b0470"/>
        <function-ref name="isUart" scoped="" ref="0x409b0550"/>
        <function-ref name="enableIntr" scoped="" ref="0x409b0630"/>
        <function-ref name="isSpi" scoped="" ref="0x409b0710"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x409b07f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x409b0950"/>
        <function-ref name="tx" scoped="" ref="0x409b0a30"/>
        <function-ref name="disableUart" scoped="" ref="0x409b0b10"/>
        <function-ref name="enableSpi" scoped="" ref="0x409b0bf0"/>
        <function-ref name="setModeUart" scoped="" ref="0x409b0cd0"/>
        <function-ref name="clrIntr" scoped="" ref="0x409b0db0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x409b0e90"/>
        <function-ref name="rx" scoped="" ref="0x409af010"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x409af0f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x409af1d0"/>
        <function-ref name="disableSpi" scoped="" ref="0x409af2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x407ddba0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <component-ref qname="Atm1281UsartShare1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x407ddba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x407ddd78"/>
        <function-ref name="immediateRequested" scoped="" ref="0x407dde58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x407db7e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <component-ref qname="Atm1281UsartShare1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x407db7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x407db9c0"/>
        <function-ref name="configure" scoped="" ref="0x407dbaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x407c69e8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <component-ref qname="Atm1281UsartShare1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupts" scoped="" ref="0x407c69e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1281UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x407c6bc0"/>
        <function-ref name="txDone" scoped="" ref="0x407c6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x407dd158" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <component-ref qname="Atm1281UsartShare1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x407dd158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407dd330"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407dd410"/>
        <function-ref name="request" scoped="" ref="0x407dd4f0"/>
        <function-ref name="granted" scoped="" ref="0x407dd5d0"/>
        <function-ref name="isOwner" scoped="" ref="0x407dd6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x407db040" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <component-ref qname="Atm1281UsartShare1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x407db040"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x407db218"/>
        <function-ref name="userId" scoped="" ref="0x407db2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x407d9a18" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShareP.nc">
      <component-ref qname="Atm1281UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupts" scoped="" ref="0x407d9a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1281UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x407d9c00"/>
        <function-ref name="txDone" scoped="" ref="0x407d9ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x407d8290" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShareP.nc">
      <component-ref qname="Atm1281UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x407d8290"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x407d8468"/>
        <function-ref name="userId" scoped="" ref="0x407d8548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x407d9e60" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShareP.nc">
      <component-ref qname="Atm1281UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RawInterrupts" scoped="" ref="0x407d9e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1281UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x407d8050"/>
        <function-ref name="txDone" scoped="" ref="0x407d8130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x407ea490" loc="86:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1281UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x407ea490"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x407ea678"/>
        <function-ref name="immediateRequested" scoped="" ref="0x407ea758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x407ead48" loc="89:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1281UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x407ead48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4081e010"/>
        <function-ref name="configure" scoped="" ref="0x4081e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x407ebd40" loc="85:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1281UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x407ebd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407ebf28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407ea018"/>
        <function-ref name="request" scoped="" ref="0x407ea0f8"/>
        <function-ref name="granted" scoped="" ref="0x407ea1d8"/>
        <function-ref name="isOwner" scoped="" ref="0x407ea2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x407ea898" loc="87:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1281UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x407ea898"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x407eaa70"/>
        <function-ref name="userId" scoped="" ref="0x407eab50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409ffc00" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm1281UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409ffc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409ffdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x409fd010" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm1281UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x409fd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x409fd1e8"/>
        <function-ref name="isEmpty" scoped="" ref="0x409fd2c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x409fd3a8"/>
        <function-ref name="dequeue" scoped="" ref="0x409fd488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x409fc750" loc="52:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1281UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x409fc750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x409fc938"/>
        <function-ref name="immediateRequested" scoped="" ref="0x409fca18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x409fb030" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1281UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x409fb030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x409fb218"/>
        <function-ref name="configure" scoped="" ref="0x409fb2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x409fb458" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1281UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x409fb458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x409fb630"/>
        <function-ref name="isEmpty" scoped="" ref="0x409fb710"/>
        <function-ref name="isEnqueued" scoped="" ref="0x409fb7f0"/>
        <function-ref name="dequeue" scoped="" ref="0x409fb8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409fc010" loc="51:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1281UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409fc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409fc1f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409fc2d8"/>
        <function-ref name="request" scoped="" ref="0x409fc3b8"/>
        <function-ref name="granted" scoped="" ref="0x409fc498"/>
        <function-ref name="isOwner" scoped="" ref="0x409fc578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x409fcb58" loc="53:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1281UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x409fcb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x409fcd30"/>
        <function-ref name="userId" scoped="" ref="0x409fce10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x409fba50" loc="69:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1281UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x409fba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409fbc28"/>
        <function-ref name="runTask" scoped="" ref="0x409fbd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1281UartConfigure" ref="0x40814c58" loc="6:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialP.nc">
      <component-ref qname="PlatformSerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1281UartConfigure" scoped="" ref="0x40814c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1281UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x40814e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x4082b010" loc="7:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialP.nc">
      <component-ref qname="PlatformSerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4082b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4082b1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4082b2c8"/>
        <function-ref name="request" scoped="" ref="0x4082b3a8"/>
        <function-ref name="granted" scoped="" ref="0x4082b488"/>
        <function-ref name="isOwner" scoped="" ref="0x4082b568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40814770" loc="5:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialP.nc">
      <component-ref qname="PlatformSerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40814770"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40814948"/>
        <function-ref name="stop" scoped="" ref="0x40814a28"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403f29d0" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x4002edb0" loc="60:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x404124e8" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x40412390" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x4040da78" loc="31:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x4040a168" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4040a010" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x4040a830" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4040a6d8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x4040ad88" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403327e0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402ff138" loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40332c20" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x40304010" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40304528" loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403d0418" loc="76:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403df808" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x403b7bc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x403e3090" loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x403e34d8" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x403e3958" loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x403e21d8" loc="83:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x403e2ec8" loc="100:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403e1390" loc="117:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x403e3d80" loc="77:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403e1ad0" loc="134:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x403e1978" loc="134:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x403e5c58" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x403e2658" loc="89:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x403e2a80" loc="94:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403e0950" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x404933e8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x404933e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4048fc28" loc="136:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40491a00" loc="83:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40490bc0" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40490878" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40490a60" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x404903d0" loc="98:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x4049a5c0" loc="151:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x4049a090" loc="144:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40491e90" loc="92:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40493a40" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404938e8" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x4048f608" loc="129:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4048f2c0" loc="129:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4048f4a8" loc="129:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40491168" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40491010" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40491638" loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4049db60" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x4049da08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x404a5410" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x404a50a8" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x404a52b0" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PushButton" loc="2:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButton.nc">
      <function command="" provided="0" name="get" ref="0x4049e888" loc="4:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButton.nc">
        <interfacedef-ref qname="PushButton"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="waitUntilPressed" ref="0x4049eca0" loc="5:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButton.nc">
        <interfacedef-ref qname="PushButton"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x404a4628" loc="95:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404a4af0" loc="105:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x404aea20" loc="44:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x404aee08" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x404ae290" loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x404bb608" loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x404ae650" loc="43:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x404bb210" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x404b1b38" loc="40:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x404b1ec8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4055cb30" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4055cb30"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4055cc98" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055cc98"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40564010" loc="109:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055cc98"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40556c18" loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40565920" loc="103:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055cc98"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055cc98"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x405655d0" loc="103:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055cc98"/></type-var>
          </variable>
          <variable name="dt" ref="0x405657c0" loc="103:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055cc98"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x405650c8" loc="88:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x405644a0" loc="116:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055cc98"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405562d8" loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055cc98"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40556180" loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055cc98"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405567b8" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCompare" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x40572e00" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
          <interfacedef-ref qname="AtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40572e00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x4057d490" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x4057d338" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4056e010" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4056fc18" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x4057dc68" loc="78:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4056f310" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40572e00"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4056e3c8" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x4057d8a0" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4056ef20" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4056f850" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40572e00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4056f6f8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40572e00"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4056e790" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4056eb40" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCounter" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x40569d08" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
          <interfacedef-ref qname="AtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40569d08"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x40573490" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40573338" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40574010" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40566230" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40569d08"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405743c8" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x405738a0" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40566b58" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40574f20" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40566770" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40569d08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40566618" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40569d08"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40574790" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40574b40" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCapture" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x4058e7e8" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
          <interfacedef-ref qname="AtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4058e7e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x4059ae90" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x4059ad38" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4059b9e0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4059b600" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4058ece0" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4058e7e8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4059bd98" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x405982c0" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4059a938" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4059b238" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4058e7e8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4059b0e0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4058e7e8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4059a1a8" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4059a558" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406183c8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406183c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40618530" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40618530"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40618a18" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40618530"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40617510" loc="76:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40617010" loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40617938" loc="82:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x406af360" loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x406af010" loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406af200" loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x406c3708" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x406c35b0" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x406c3f10" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x406c3bc0" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406c3db0" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x406aeb40" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x406c1da8" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x406c1858" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406c1a48" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x406c1c40" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x406c30f8" loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x406ae1f0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x406afc70" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406afe60" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x406ae088" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x406e48c8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x406e4ea0" loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1281UartConfigure" loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartConfigure.nc">
      <documentation loc="30:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartConfigure.nc">
        <short>&#10; Interface used by Atm1281Uart clients to reconfigure the UART before use&#10; </short>
        <long>&#10; Interface used by Atm1281Uart clients to reconfigure the UART before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega1281 port)&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x406e3cc8" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartConfigure.nc">
        <interfacedef-ref qname="Atm1281UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:5" alignment="I:1"><union-ref ref="0x406d63a0"/>
              <typename><typedef-ref name="Atm1281UartUnionConfig_t" ref="0x406d65c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x406e1010" loc="120:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x406e2638" loc="97:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x406e2038" loc="88:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x406e2ae8" loc="102:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x406e1708" loc="128:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x406ee5b8" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x406ee0f8" loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1281UsartInterrupts" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281UsartInterrupts.nc">
      <documentation loc="30:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281UsartInterrupts.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART. &#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information.&#10;&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega1281 port)&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x406e9b58" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281UsartInterrupts.nc">
        <documentation loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1281UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x406e9a00" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x406e9578" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281UsartInterrupts.nc">
        <documentation loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1281UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1281Usart" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega1281 port)&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x406f1488" loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x406f33e8" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x406f47a8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x40705de8" loc="68:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x406f6298" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x406f6ae0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x406f6f18" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x406f4370" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x406f4be8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x406f3010" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x406f66b8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x406f2a20" loc="58:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x406f1888" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x407055e0" loc="66:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x406f1d90" loc="63:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x406f1c38" loc="63:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x406f37c8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x406f21f0" loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x406f3e08" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:5" alignment="I:1"><union-ref ref="0x406d63a0"/>
                <typename><typedef-ref name="Atm1281UartUnionConfig_t" ref="0x406d65c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x406f3cb0" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:5" alignment="I:1"><union-ref ref="0x406d63a0"/>
                <typename><typedef-ref name="Atm1281UartUnionConfig_t" ref="0x406d65c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x40704580" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x406f1088" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:5" alignment="I:1"><union-ref ref="0x406d0010"/>
                <typename><typedef-ref name="Atm1281SpiUnionConfig_t" ref="0x406d0238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x406f2ef0" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:5" alignment="I:1"><union-ref ref="0x406d0010"/>
                <typename><typedef-ref name="Atm1281SpiUnionConfig_t" ref="0x406d0238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x407051a8" loc="64:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x40705a18" loc="67:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x407041c8" loc="69:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x406f25c8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x407ca9c0" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x407caec0" loc="98:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x407e0a30" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x407e63c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x407e08d8" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x407e63c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x407e3690" loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x407e3d50" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x407e63c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x407e3bf8" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x407e63c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x407e0348" loc="70:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x407e63c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
