<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="63:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x4049e520"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403f2068"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403f2068"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404211e8"/></to>
    </wire>
    <wire loc="64:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x4049aea0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4054c330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4054c330"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40551b68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x404981f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406a40f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x406a40f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40551b68"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x40495600"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406b7e70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x406b7e70"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40551b68"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4049f820"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x403eb9f8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x403eb9f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x404b4ee8"/></to>
    </wire>
    <wire loc="68:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkAppC.nc">
      <from><interface-ref name="PushButton0" scoped="" ref="0x4049b3d0"/></from>
      <to><interface-ref name="PushButton0" scoped="" ref="0x404a7e38"/></to>
    </wire>
    <wire loc="15:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButtonC.nc">
      <from><interface-ref name="PushButton0" scoped="" ref="0x404a7e38"/></from>
      <to><interface-ref name="PushButton0" scoped="" ref="0x40548010"/></to>
    </wire>
    <wire loc="69:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkAppC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x404a5e98"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x406becc0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x406becc0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40814170"/></to>
    </wire>
    <wire loc="70:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkAppC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x404a3398"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x406b01d8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x406b01d8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40813770"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403f2d18"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409fec00"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40421580"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x402ff378"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x402ff378"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403c9118"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40421b48"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403f4520"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403f4520"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403f7348"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40420010"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x403f2d18"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x403f7af8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404c6870"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x403f7af8"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x403f4930"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x403f7738"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403f9aa0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403f9aa0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404038d8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x403f7ec0"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x40402ea0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x403f9ea8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4077d2c0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x403f9ea8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40614088"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerInit" scoped="" ref="0x403f9ea8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4095a900"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x404000e0"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x403f9ea8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x40403d00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40404df0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c9950"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403d05f0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x403d7ef0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403dfb68"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x407a92c8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403dfb68"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x405b2d48"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404c6870"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404b4ba0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x404bbd90"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x404b3a70"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x404b3a70"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x404d3ce8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x404b0820"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x404c74c0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x404c74c0"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x404d2750"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x404af2e0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x404c7ec8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x404c7ec8"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x404d1210"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x404d3ce8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405176b0"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x404d2750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40524030"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x404d1210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40524988"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x404ca0a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x405124f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x405124f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408833b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40524030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408b9538"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x404dba98"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4052aac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4052aac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408f8228"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x404d8cf8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405336f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x405336f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40923de8"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x404e20a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4052f790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4052f790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x409350b0"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x404dc670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4052b790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4052b790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408dede0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x404d0360"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4050d228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4050d228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40830f28"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x404d7ea8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40510170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40510170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4087e228"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x404ce2f0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4050be48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4050be48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40849c90"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x404d5dc8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4051de48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4051de48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408790b0"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x404de670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40523c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40523c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408b3538"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x404d32f0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40518d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40518d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408bc010"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x404d98e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405287d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405287d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408f30b0"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x404e4c08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40530410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40530410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4091ac08"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x404cc210"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40509ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40509ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40843ac8"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x404e5750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40532090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40532090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4091e7f8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x404caa98"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40512e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40512e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40882d70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40524988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408b6010"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x404da4b0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x405294f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x405294f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408f7c08"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x404d0d58"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4050db80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4050db80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4084c8f0"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x404d69a8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40510ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40510ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4087dc08"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x404cece8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4050a7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4050a7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40847718"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x404dd0a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405226b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x405226b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408b1010"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x404d82f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40527170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40527170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408f2a88"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x404cb670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40513b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40513b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40885938"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x405176b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408bb9e8"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x404db0a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4052a170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4052a170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408fa7f8"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x404e3670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40530d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40530d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x409376c0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x404ccc08"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405164f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x405164f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40841570"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x404d74b0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405117d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x405117d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408807f8"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x404d1c08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40523330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40523330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408b59e8"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x404cf830"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4050b4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4050b4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4084a2d0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x404d53d0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4051d4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4051d4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4087b6c0"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x404dda98"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4051edc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4051edc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408df418"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x404daea8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40529e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40529e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408f56c0"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x404d4830"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405183d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x405183d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408be538"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x404e4210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x405329e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x405329e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4091c228"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x404cd750"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40509170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40509170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408450f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4052e170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40934a88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4052eac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40932538"/></to>
    </wire>
    <wire loc="13:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButtonC.nc">
      <from><interface-ref name="PushButton0Init" scoped="" ref="0x4054b378"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403f4520"/></to>
    </wire>
    <wire loc="16:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButtonC.nc">
      <from><interface-ref name="PushButton0Init" scoped="" ref="0x4054b378"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4054bb60"/></to>
    </wire>
    <wire loc="14:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x40548488"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x404d1c08"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40551b68"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40683cc8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40674cc8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4055af20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x4055af20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x409636f0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x406ab0c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40664968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x4095f3b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40967d50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40967d50"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4095ad38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x40960180"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406267b0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406267b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406380c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x40958750"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40586c10"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40586c10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405a4ea8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x409767c8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40590010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="BeaconCapture" scoped="" ref="0x4059b5e8"/></from>
      <to><interface-ref name="BeaconCapture" scoped="" ref="0x405b5d58"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x40597420"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x405a6be0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40590010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x4059e010"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40590010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x405ac408"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40590010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x405a9830"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x405b1150"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403e0bc8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40616d18"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406144c0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x4062b658"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40586c10"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40637380"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40616d18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x40672658"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x406a82b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="UartByte" scoped="" ref="0x40814170"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x406efe08"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x406be3f0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40815828"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UartStream" scoped="" ref="0x40815828"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x406ef258"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4082a010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406bfd28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x406bfd28"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406da120"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="Atm1281UartConfigure" scoped="" ref="0x40814588"/></from>
      <to><interface-ref name="Atm1281UartConfigure" scoped="" ref="0x40813c58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40815410"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x409b1330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x409b1330"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x407dcba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm1281UartConfigure" scoped="" ref="0x406eb8c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm1281UartConfigure" scoped="" ref="0x40814588"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x409ae828"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x406edad0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="UsartResource" scoped="" ref="0x406ec630"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x409b2ba0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x409b2ba0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x407dc158"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x406eb100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="HplAtm1281UsartInterrupts" scoped="" ref="0x409ae410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm1281UsartInterrupts" scoped="" ref="0x409ae410"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x407c59e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x406edad0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x406e7770"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x406efe08"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x406e7c30"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x406ef258"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x4072b108"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x406da120"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406e7010"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <from><interface-ref name="Atm1281UartConfigure" scoped="" ref="0x4072a208"/></from>
      <to><interface-ref name="Atm1281UartConfigure" scoped="" ref="0x406eb8c8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x4072ba48"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x406ec630"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x40729e10"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x406eb100"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x4072a570"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x4073cdb8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1C.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x4073cdb8"/></from>
      <to><interface-ref name="HplUsart" scoped="" ref="0x407363d0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40728370"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40779358"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40779358"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40777908"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x40738848"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x40733e28"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1C.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x407481f8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403e0bc8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x4074a330"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x404d69a8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1C.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x4074ad38"/></from>
      <to><interface-ref name="PortD3" scoped="" ref="0x404d74b0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1C.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40749760"/></from>
      <to><interface-ref name="PortD2" scoped="" ref="0x404caa98"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40776b40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407738a0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407738a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40786dd8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40784078"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4077f128"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4077f128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4077d6f8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x4077c898"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40790b08"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40790b08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4079dd30"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x407873f8"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40793238"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4078a010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40797e48"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x407a96b8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403e0bc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x409b1748"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x407da040"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x407da040"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x407e9898"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm1281Usart" scoped="" ref="0x409b1b60"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x4073cdb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x407da7e8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x409ae828"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x407dcba0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x407e9490"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x407e9490"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x409fb750"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x407c59e8"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x407d8a18"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x407dc158"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x407ead40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x407ead40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409fb010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x407e9898"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x409fbb58"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x407e9d48"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x407da7e8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x407d7290"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x407e9898"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x407d8e60"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x40738848"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x409fa030"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x407e9d48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x409fa458"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x409fc010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x409faa50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="McuInitC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.3 2010-08-10 01:28:33 mmaroti Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlinkC" loc="13:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkC.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="38:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
        <short>&#10; The implementation of the LED mote abstraction for the RCB128RFA1&#10; Platform.</short>
        <long>&#10; The implementation of the LED mote abstraction for the RCB128RFA1&#10; Platform.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="25:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the Atmega128RFA1's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the Atmega128RFA1's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega128RFA1 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG" loc="40(HplAtm128GeneralIOC.PortG):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit0" loc="41(HplAtm128GeneralIOC.PortG.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit1" loc="41(HplAtm128GeneralIOC.PortG.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit2" loc="41(HplAtm128GeneralIOC.PortG.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit3" loc="41(HplAtm128GeneralIOC.PortG.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit4" loc="41(HplAtm128GeneralIOC.PortG.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit5" loc="41(HplAtm128GeneralIOC.PortG.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit6" loc="41(HplAtm128GeneralIOC.PortG.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit7" loc="41(HplAtm128GeneralIOC.PortG.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PushButtonC" loc="4:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButtonC.nc">
      <configuration/>
    </component>
    <component qname="PushButtonP" loc="2:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButtonP.nc">
      <module/>
    </component>
    <component qname="BlinkAppC.Timer0" loc="44(BlinkAppC.Timer0):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C" loc="37(TimerMilliP.AlarmMilli32C.Alarm62khz32C):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP" loc="35(TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045bd20"/>
            <typename><typedef-ref name="T62khz" ref="0x4045bec8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="Counter62khz32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterP):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045bd20"/>
            <typename><typedef-ref name="T62khz" ref="0x4045bec8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb18"/>
            <typename><typedef-ref name="TMilli" ref="0x403ecce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045bd20"/>
            <typename><typedef-ref name="T62khz" ref="0x4045bec8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb18"/>
            <typename><typedef-ref name="TMilli" ref="0x403ecce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045bd20"/>
            <typename><typedef-ref name="T62khz" ref="0x4045bec8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb18"/>
            <typename><typedef-ref name="TMilli" ref="0x403ecce0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb18"/>
            <typename><typedef-ref name="TMilli" ref="0x403ecce0"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer1" loc="44(BlinkAppC.Timer1):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer2" loc="44(BlinkAppC.Timer2):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PlatformSerialC" loc="36:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PlatformSerialC.Uart1" loc="42(PlatformSerialC.Uart1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1C.nc">
      <instance number="0">
        <component-ref qname="Atm1281Uart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1281Uart1P" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega1281 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1281Uart1P.UartP" loc="42(Atm1281Uart1P.UartP):/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega1281 port)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Usart1C" loc="36:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1C.nc">
      <documentation loc="29:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1C.nc">
        <short>&#10; HPL for the Atmega 1281 USART.</short>
        <long>&#10; HPL for the Atmega 1281 USART.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega1281 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Usart1P" loc="69:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1P.nc">
      <documentation loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1P.nc">
        <short> &#10; Private component of the Atmega128 serial port HPL.</short>
        <long> &#10; Private component of the Atmega128 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMicro32C.TransformCounterC" loc="54(CounterMicro32C.TransformCounterC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404233b0"/>
            <typename><typedef-ref name="TMicro" ref="0x40423578"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40763878"/>
            <typename><typedef-ref name="TMcu" ref="0x40763c28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu32C.TransformCounterC" loc="54(CounterMcu32C.TransformCounterC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40763878"/>
            <typename><typedef-ref name="TMcu" ref="0x40763c28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40763878"/>
            <typename><typedef-ref name="TMcu" ref="0x40763c28"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu16C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu16C.AtmegaCounterP" loc="35(CounterMcu16C.AtmegaCounterP):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40763878"/>
            <typename><typedef-ref name="TMcu" ref="0x40763c28"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1Timer1C" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1Timer1P" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc" safe="">
      <module/>
    </component>
    <component qname="PlatformSerialC.Uart1.UsartC" loc="41(PlatformSerialC.Uart1.UsartC):/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Usart1C.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the Atmega1281.</short>
        <long>&#10; Provides an interface for USART1 on the Atmega1281.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega1281 port)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281Usart1C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1281UsartShare1P" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega1281 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm1281UsartShare1P.UsartShareP" loc="37(Atm1281UsartShare1P.UsartShareP):/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShareP.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega1281 port)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm1281UsartShare1P.ArbiterC" loc="83(Atm1281UsartShare1P.ArbiterC):/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm1281Usart1.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm1281UsartShare1P.ArbiterC.Queue" loc="42(Atm1281UsartShare1P.ArbiterC.Queue):/opt/tinyos-main/src/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm1281UsartShare1P.ArbiterC.Arbiter" loc="49(Atm1281UsartShare1P.ArbiterC.Arbiter):/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialP" loc="3:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialP.nc">
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404e0e48" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404ea088" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404ea2a0" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404f0238" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404f0460" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404f0688" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404f0878" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCompareP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x4055ead0" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4055ead0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4055ef00" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055ef00"/></type-var>
        </typedef>
        <constant name="mode" ref="0x4056a120" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x4056a328" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x406158b8" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406158b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40615ce8" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40615ce8"/></type-var>
        </typedef>
        <constant name="mode" ref="0x40615ed8" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40634710" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40634710"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40634b70" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40634b70"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40634dd8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40634dd8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40631278" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40631278"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x406314e0" loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40631968" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40631968"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40647508" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40647508"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40647968" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40647968"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40647bd0" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40647bd0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40646058" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40646058"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x406462c0" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40662368" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40662368"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40685ef8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40685ef8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x406810f0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm1281Uart1C" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281UartP" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega1281 port)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm1281Usart1C" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Usart1C.nc" abstract="">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Usart1C.nc">
        <short>&#10; Provides an interface for USART1 on the Atmega1281.</short>
        <long>&#10; Provides an interface for USART1 on the Atmega1281.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega1281 port)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281UsartShareP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega1281 port)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x407eb920" loc="83:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x407e5730" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x403f2d18" loc="58:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x403f2d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f2ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403f2068" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403f2068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403f2240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403f4520" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403f4520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f46f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x403f4930" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x403f4930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f4b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x403f7ec0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x403f7ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f60c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403f7348" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403f7348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f7520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x403f7af8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x403f7af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f7cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x403f7738" loc="43:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x403f7738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f7910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403f9aa0" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403f9aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f9c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x403f9ea8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x403f9ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404030c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404038d8" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404038d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40403ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x40403d00" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x40403d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40403ed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x404000e0" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x404000e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404002b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40404df0" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40404df0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4040d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40412740" loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40412740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40412918"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404129f8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40412ad8"/>
        <function-ref name="actualMicro" scoped="" ref="0x40412bb8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40412c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x40402ea0" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x40402ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404010c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x40420010" loc="60:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40420010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404201e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x404211e8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404211e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404213c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40421b48" loc="59:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40421b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40421d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x40421580" loc="58:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40421580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40421758"/>
        <function-ref name="taskLoop" scoped="" ref="0x40421838"/>
        <function-ref name="runNextTask" scoped="" ref="0x40421918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40304a98" loc="48:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40304c70"/>
        <function-ref name="runTask" scoped="" ref="0x40304d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x402ff378" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x402ff378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x402ff550"/>
        <function-ref name="taskLoop" scoped="" ref="0x402ff630"/>
        <function-ref name="runNextTask" scoped="" ref="0x402ff710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403c9950" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403c9950"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403c9b28"/>
        <function-ref name="runTask" scoped="" ref="0x403c9c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403d05f0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403d05f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403d07c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403c9118" loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403c9118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403c92f0"/>
        <function-ref name="taskLoop" scoped="" ref="0x403c93d0"/>
        <function-ref name="runNextTask" scoped="" ref="0x403c94b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403dfb68" loc="88:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403dfb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403dfd40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x403e1e70" loc="89:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x403e1e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x403dd070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x403dd150"/>
        <function-ref name="led1On" scoped="" ref="0x403dd230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x403dd310"/>
        <function-ref name="led2Toggle" scoped="" ref="0x403dd3f0"/>
        <function-ref name="get" scoped="" ref="0x403dd4d0"/>
        <function-ref name="led1Off" scoped="" ref="0x403dd5b0"/>
        <function-ref name="led2Off" scoped="" ref="0x403dd930"/>
        <function-ref name="set" scoped="" ref="0x403dd690"/>
        <function-ref name="led0On" scoped="" ref="0x403dd770"/>
        <function-ref name="led2On" scoped="" ref="0x403dd850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x403d7ef0" loc="84:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403d7ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403e00e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403e0bc8" loc="85:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403e0bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403e0da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x4049aea0" loc="15:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x4049aea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb18"/>
            <typename><typedef-ref name="TMilli" ref="0x403ecce0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40499988"/>
        <function-ref name="fired" scoped="" ref="0x40494c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40499348"/>
        <function-ref name="isOneShot" scoped="" ref="0x404990f0"/>
        <function-ref name="getdt" scoped="" ref="0x40499e38"/>
        <function-ref name="gett0" scoped="" ref="0x40499be0"/>
        <function-ref name="isRunning" scoped="" ref="0x40494e88"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404944d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40499668"/>
        <function-ref name="startOneShot" scoped="" ref="0x40494758"/>
        <function-ref name="stop" scoped="" ref="0x404949d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x4049e520" loc="19:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4049e520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4049e6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x404a5e98" loc="23:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x404a5e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4049d0c0"/>
        <function-ref name="receive" scoped="" ref="0x4049d1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x404981f8" loc="16:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x404981f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb18"/>
            <typename><typedef-ref name="TMilli" ref="0x403ecce0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40497d58"/>
        <function-ref name="fired" scoped="" ref="0x40497010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40497718"/>
        <function-ref name="isOneShot" scoped="" ref="0x404974c0"/>
        <function-ref name="getdt" scoped="" ref="0x40495268"/>
        <function-ref name="gett0" scoped="" ref="0x40495010"/>
        <function-ref name="isRunning" scoped="" ref="0x40497268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40498820"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40497a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40498aa0"/>
        <function-ref name="stop" scoped="" ref="0x40498d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4049f820" loc="18:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4049f820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4049f9f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4049fad8"/>
        <function-ref name="led1On" scoped="" ref="0x4049fbb8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4049fc98"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4049fd78"/>
        <function-ref name="get" scoped="" ref="0x4049fe58"/>
        <function-ref name="led1Off" scoped="" ref="0x4049e010"/>
        <function-ref name="led2Off" scoped="" ref="0x4049e390"/>
        <function-ref name="set" scoped="" ref="0x4049e0f0"/>
        <function-ref name="led0On" scoped="" ref="0x4049e1d0"/>
        <function-ref name="led2On" scoped="" ref="0x4049e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x40495600" loc="17:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer2" scoped="" ref="0x40495600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb18"/>
            <typename><typedef-ref name="TMilli" ref="0x403ecce0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4049f110"/>
        <function-ref name="fired" scoped="" ref="0x404a03a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404a0ab0"/>
        <function-ref name="isOneShot" scoped="" ref="0x404a0858"/>
        <function-ref name="getdt" scoped="" ref="0x4049f5c0"/>
        <function-ref name="gett0" scoped="" ref="0x4049f368"/>
        <function-ref name="isRunning" scoped="" ref="0x404a0600"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40495c28"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404a0dd0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40495ea8"/>
        <function-ref name="stop" scoped="" ref="0x404a0150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PushButton0" ref="0x4049b3d0" loc="20:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PushButton0" scoped="" ref="0x4049b3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PushButton"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4049b5a8"/>
        <function-ref name="waitUntilPressed" scoped="" ref="0x4049b688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x404a3398" loc="25:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartControl" scoped="" ref="0x404a3398"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x404a3570"/>
        <function-ref name="stop" scoped="" ref="0x404a3650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x403eb9f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x403eb9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x403ebbd0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x403ebcb0"/>
        <function-ref name="led1On" scoped="" ref="0x403ebd90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x403ebe70"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404b4010"/>
        <function-ref name="get" scoped="" ref="0x404b40f0"/>
        <function-ref name="led1Off" scoped="" ref="0x404b41d0"/>
        <function-ref name="led2Off" scoped="" ref="0x404b4550"/>
        <function-ref name="set" scoped="" ref="0x404b42b0"/>
        <function-ref name="led0On" scoped="" ref="0x404b4390"/>
        <function-ref name="led2On" scoped="" ref="0x404b4470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x404bbd90" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x404bbd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b0010"/>
        <function-ref name="isInput" scoped="" ref="0x404b00f0"/>
        <function-ref name="toggle" scoped="" ref="0x404b01d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b02b0"/>
        <function-ref name="get" scoped="" ref="0x404b0390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b0470"/>
        <function-ref name="set" scoped="" ref="0x404b0550"/>
        <function-ref name="clr" scoped="" ref="0x404b0630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404b4ba0" loc="40:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404b4ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b4d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x404b0820" loc="45:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x404b0820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b09f8"/>
        <function-ref name="isInput" scoped="" ref="0x404b0ad8"/>
        <function-ref name="toggle" scoped="" ref="0x404b0bb8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b0c98"/>
        <function-ref name="get" scoped="" ref="0x404b0d78"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b0e58"/>
        <function-ref name="set" scoped="" ref="0x404af010"/>
        <function-ref name="clr" scoped="" ref="0x404af0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x404b4ee8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404b4ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404b10e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404b11c0"/>
        <function-ref name="led1On" scoped="" ref="0x404b12a0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404b1380"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404b1460"/>
        <function-ref name="get" scoped="" ref="0x404b1540"/>
        <function-ref name="led1Off" scoped="" ref="0x404b1620"/>
        <function-ref name="led2Off" scoped="" ref="0x404b19a0"/>
        <function-ref name="set" scoped="" ref="0x404b1700"/>
        <function-ref name="led0On" scoped="" ref="0x404b17e0"/>
        <function-ref name="led2On" scoped="" ref="0x404b18c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x404af2e0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x404af2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404af4b8"/>
        <function-ref name="isInput" scoped="" ref="0x404af598"/>
        <function-ref name="toggle" scoped="" ref="0x404af678"/>
        <function-ref name="isOutput" scoped="" ref="0x404af758"/>
        <function-ref name="get" scoped="" ref="0x404af838"/>
        <function-ref name="makeOutput" scoped="" ref="0x404af918"/>
        <function-ref name="set" scoped="" ref="0x404af9f8"/>
        <function-ref name="clr" scoped="" ref="0x404afad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x404b3a70" loc="37:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x404b3a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b3c48"/>
        <function-ref name="isInput" scoped="" ref="0x404b3d28"/>
        <function-ref name="toggle" scoped="" ref="0x404b3e08"/>
        <function-ref name="isOutput" scoped="" ref="0x404b3ee8"/>
        <function-ref name="get" scoped="" ref="0x404c7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c70f0"/>
        <function-ref name="set" scoped="" ref="0x404c71d0"/>
        <function-ref name="clr" scoped="" ref="0x404c72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x404c74c0" loc="38:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x404c74c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c7698"/>
        <function-ref name="isInput" scoped="" ref="0x404c7778"/>
        <function-ref name="toggle" scoped="" ref="0x404c7858"/>
        <function-ref name="isOutput" scoped="" ref="0x404c7938"/>
        <function-ref name="get" scoped="" ref="0x404c7a18"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c7af8"/>
        <function-ref name="set" scoped="" ref="0x404c7bd8"/>
        <function-ref name="clr" scoped="" ref="0x404c7cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x404c6870" loc="40:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404c6870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404c6a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x404c7ec8" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x404c7ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c60c0"/>
        <function-ref name="isInput" scoped="" ref="0x404c61a0"/>
        <function-ref name="toggle" scoped="" ref="0x404c6280"/>
        <function-ref name="isOutput" scoped="" ref="0x404c6360"/>
        <function-ref name="get" scoped="" ref="0x404c6440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c6520"/>
        <function-ref name="set" scoped="" ref="0x404c6600"/>
        <function-ref name="clr" scoped="" ref="0x404c66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x404ca0a0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x404ca0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ca278"/>
        <function-ref name="isInput" scoped="" ref="0x404ca358"/>
        <function-ref name="toggle" scoped="" ref="0x404ca438"/>
        <function-ref name="isOutput" scoped="" ref="0x404ca518"/>
        <function-ref name="get" scoped="" ref="0x404ca5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ca6d8"/>
        <function-ref name="set" scoped="" ref="0x404ca7b8"/>
        <function-ref name="clr" scoped="" ref="0x404ca898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x404d2750" loc="58:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x404d2750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d2928"/>
        <function-ref name="isInput" scoped="" ref="0x404d2a08"/>
        <function-ref name="toggle" scoped="" ref="0x404d2ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404d2bc8"/>
        <function-ref name="get" scoped="" ref="0x404d2ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d2d88"/>
        <function-ref name="set" scoped="" ref="0x404d2e68"/>
        <function-ref name="clr" scoped="" ref="0x404d1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x404dba98" loc="67:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x404dba98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dbc70"/>
        <function-ref name="isInput" scoped="" ref="0x404dbd50"/>
        <function-ref name="toggle" scoped="" ref="0x404dbe30"/>
        <function-ref name="isOutput" scoped="" ref="0x404dbf10"/>
        <function-ref name="get" scoped="" ref="0x404da010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404da0f0"/>
        <function-ref name="set" scoped="" ref="0x404da1d0"/>
        <function-ref name="clr" scoped="" ref="0x404da2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x404d8cf8" loc="74:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x404d8cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d8ed0"/>
        <function-ref name="isInput" scoped="" ref="0x404e5010"/>
        <function-ref name="toggle" scoped="" ref="0x404e50f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404e51d0"/>
        <function-ref name="get" scoped="" ref="0x404e52b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e5390"/>
        <function-ref name="set" scoped="" ref="0x404e5470"/>
        <function-ref name="clr" scoped="" ref="0x404e5550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x404e20a0" loc="79:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x404e20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e2278"/>
        <function-ref name="isInput" scoped="" ref="0x404e2358"/>
        <function-ref name="toggle" scoped="" ref="0x404e2438"/>
        <function-ref name="isOutput" scoped="" ref="0x404e2518"/>
        <function-ref name="get" scoped="" ref="0x404e25f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e26d8"/>
        <function-ref name="set" scoped="" ref="0x404e27b8"/>
        <function-ref name="clr" scoped="" ref="0x404e2898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x404dc670" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x404dc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dc848"/>
        <function-ref name="isInput" scoped="" ref="0x404dc928"/>
        <function-ref name="toggle" scoped="" ref="0x404dca08"/>
        <function-ref name="isOutput" scoped="" ref="0x404dcae8"/>
        <function-ref name="get" scoped="" ref="0x404dcbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dcca8"/>
        <function-ref name="set" scoped="" ref="0x404dcd88"/>
        <function-ref name="clr" scoped="" ref="0x404dce68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x404d0360" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x404d0360"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d0538"/>
        <function-ref name="isInput" scoped="" ref="0x404d0618"/>
        <function-ref name="toggle" scoped="" ref="0x404d06f8"/>
        <function-ref name="isOutput" scoped="" ref="0x404d07d8"/>
        <function-ref name="get" scoped="" ref="0x404d08b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d0998"/>
        <function-ref name="set" scoped="" ref="0x404d0a78"/>
        <function-ref name="clr" scoped="" ref="0x404d0b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x404d7ea8" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x404d7ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d6188"/>
        <function-ref name="isInput" scoped="" ref="0x404d6268"/>
        <function-ref name="toggle" scoped="" ref="0x404d6348"/>
        <function-ref name="isOutput" scoped="" ref="0x404d6428"/>
        <function-ref name="get" scoped="" ref="0x404d6508"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d65e8"/>
        <function-ref name="set" scoped="" ref="0x404d66c8"/>
        <function-ref name="clr" scoped="" ref="0x404d67a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x404ce2f0" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x404ce2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ce4c8"/>
        <function-ref name="isInput" scoped="" ref="0x404ce5a8"/>
        <function-ref name="toggle" scoped="" ref="0x404ce688"/>
        <function-ref name="isOutput" scoped="" ref="0x404ce768"/>
        <function-ref name="get" scoped="" ref="0x404ce848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ce928"/>
        <function-ref name="set" scoped="" ref="0x404cea08"/>
        <function-ref name="clr" scoped="" ref="0x404ceae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x404d5dc8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x404d5dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d4010"/>
        <function-ref name="isInput" scoped="" ref="0x404d40f0"/>
        <function-ref name="toggle" scoped="" ref="0x404d41d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404d42b0"/>
        <function-ref name="get" scoped="" ref="0x404d4390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d4470"/>
        <function-ref name="set" scoped="" ref="0x404d4550"/>
        <function-ref name="clr" scoped="" ref="0x404d4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x404de670" loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x404de670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404de848"/>
        <function-ref name="isInput" scoped="" ref="0x404de928"/>
        <function-ref name="toggle" scoped="" ref="0x404dea08"/>
        <function-ref name="isOutput" scoped="" ref="0x404deae8"/>
        <function-ref name="get" scoped="" ref="0x404debc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404deca8"/>
        <function-ref name="set" scoped="" ref="0x404ded88"/>
        <function-ref name="clr" scoped="" ref="0x404dee68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x404d32f0" loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x404d32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d34c8"/>
        <function-ref name="isInput" scoped="" ref="0x404d35a8"/>
        <function-ref name="toggle" scoped="" ref="0x404d3688"/>
        <function-ref name="isOutput" scoped="" ref="0x404d3768"/>
        <function-ref name="get" scoped="" ref="0x404d3848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d3928"/>
        <function-ref name="set" scoped="" ref="0x404d3a08"/>
        <function-ref name="clr" scoped="" ref="0x404d3ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x404d98e0" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x404d98e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d9ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404d9b98"/>
        <function-ref name="toggle" scoped="" ref="0x404d9c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404d9d58"/>
        <function-ref name="get" scoped="" ref="0x404d9e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d9f18"/>
        <function-ref name="set" scoped="" ref="0x404d8010"/>
        <function-ref name="clr" scoped="" ref="0x404d80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x404e4c08" loc="77:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x404e4c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e4de0"/>
        <function-ref name="isInput" scoped="" ref="0x404e4ec0"/>
        <function-ref name="toggle" scoped="" ref="0x404e3010"/>
        <function-ref name="isOutput" scoped="" ref="0x404e30f0"/>
        <function-ref name="get" scoped="" ref="0x404e31d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e32b0"/>
        <function-ref name="set" scoped="" ref="0x404e3390"/>
        <function-ref name="clr" scoped="" ref="0x404e3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x404cc210" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x404cc210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cc3e8"/>
        <function-ref name="isInput" scoped="" ref="0x404cc4c8"/>
        <function-ref name="toggle" scoped="" ref="0x404cc5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404cc688"/>
        <function-ref name="get" scoped="" ref="0x404cc768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cc848"/>
        <function-ref name="set" scoped="" ref="0x404cc928"/>
        <function-ref name="clr" scoped="" ref="0x404cca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x404e5750" loc="75:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x404e5750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e5928"/>
        <function-ref name="isInput" scoped="" ref="0x404e5a08"/>
        <function-ref name="toggle" scoped="" ref="0x404e5ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404e5bc8"/>
        <function-ref name="get" scoped="" ref="0x404e5ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e5d88"/>
        <function-ref name="set" scoped="" ref="0x404e5e68"/>
        <function-ref name="clr" scoped="" ref="0x404e4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x404caa98" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x404caa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cac70"/>
        <function-ref name="isInput" scoped="" ref="0x404cad50"/>
        <function-ref name="toggle" scoped="" ref="0x404cae30"/>
        <function-ref name="isOutput" scoped="" ref="0x404caf10"/>
        <function-ref name="get" scoped="" ref="0x404d7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d70f0"/>
        <function-ref name="set" scoped="" ref="0x404d71d0"/>
        <function-ref name="clr" scoped="" ref="0x404d72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x404d1210" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x404d1210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d13e8"/>
        <function-ref name="isInput" scoped="" ref="0x404d14c8"/>
        <function-ref name="toggle" scoped="" ref="0x404d15a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404d1688"/>
        <function-ref name="get" scoped="" ref="0x404d1768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d1848"/>
        <function-ref name="set" scoped="" ref="0x404d1928"/>
        <function-ref name="clr" scoped="" ref="0x404d1a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x404da4b0" loc="68:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x404da4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404da688"/>
        <function-ref name="isInput" scoped="" ref="0x404da768"/>
        <function-ref name="toggle" scoped="" ref="0x404da848"/>
        <function-ref name="isOutput" scoped="" ref="0x404da928"/>
        <function-ref name="get" scoped="" ref="0x404daa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404daae8"/>
        <function-ref name="set" scoped="" ref="0x404dabc8"/>
        <function-ref name="clr" scoped="" ref="0x404daca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x404d0d58" loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x404d0d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cf010"/>
        <function-ref name="isInput" scoped="" ref="0x404cf0f0"/>
        <function-ref name="toggle" scoped="" ref="0x404cf1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404cf2b0"/>
        <function-ref name="get" scoped="" ref="0x404cf390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cf470"/>
        <function-ref name="set" scoped="" ref="0x404cf550"/>
        <function-ref name="clr" scoped="" ref="0x404cf630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x404d69a8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x404d69a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d6b80"/>
        <function-ref name="isInput" scoped="" ref="0x404d6c60"/>
        <function-ref name="toggle" scoped="" ref="0x404d6d40"/>
        <function-ref name="isOutput" scoped="" ref="0x404d6e20"/>
        <function-ref name="get" scoped="" ref="0x404d6f00"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d5010"/>
        <function-ref name="set" scoped="" ref="0x404d50f0"/>
        <function-ref name="clr" scoped="" ref="0x404d51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x404cece8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x404cece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ceec0"/>
        <function-ref name="isInput" scoped="" ref="0x404cd010"/>
        <function-ref name="toggle" scoped="" ref="0x404cd0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404cd1d0"/>
        <function-ref name="get" scoped="" ref="0x404cd2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cd390"/>
        <function-ref name="set" scoped="" ref="0x404cd470"/>
        <function-ref name="clr" scoped="" ref="0x404cd550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x404dd0a0" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x404dd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dd278"/>
        <function-ref name="isInput" scoped="" ref="0x404dd358"/>
        <function-ref name="toggle" scoped="" ref="0x404dd438"/>
        <function-ref name="isOutput" scoped="" ref="0x404dd518"/>
        <function-ref name="get" scoped="" ref="0x404dd5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dd6d8"/>
        <function-ref name="set" scoped="" ref="0x404dd7b8"/>
        <function-ref name="clr" scoped="" ref="0x404dd898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x404d82f0" loc="71:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x404d82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d84c8"/>
        <function-ref name="isInput" scoped="" ref="0x404d85a8"/>
        <function-ref name="toggle" scoped="" ref="0x404d8688"/>
        <function-ref name="isOutput" scoped="" ref="0x404d8768"/>
        <function-ref name="get" scoped="" ref="0x404d8848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d8928"/>
        <function-ref name="set" scoped="" ref="0x404d8a08"/>
        <function-ref name="clr" scoped="" ref="0x404d8ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x404cb670" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x404cb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cb848"/>
        <function-ref name="isInput" scoped="" ref="0x404cb928"/>
        <function-ref name="toggle" scoped="" ref="0x404cba08"/>
        <function-ref name="isOutput" scoped="" ref="0x404cbae8"/>
        <function-ref name="get" scoped="" ref="0x404cbbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cbca8"/>
        <function-ref name="set" scoped="" ref="0x404cbd88"/>
        <function-ref name="clr" scoped="" ref="0x404cbe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x404d3ce8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x404d3ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d3ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404d2010"/>
        <function-ref name="toggle" scoped="" ref="0x404d20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404d21d0"/>
        <function-ref name="get" scoped="" ref="0x404d22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d2390"/>
        <function-ref name="set" scoped="" ref="0x404d2470"/>
        <function-ref name="clr" scoped="" ref="0x404d2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x404db0a0" loc="66:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x404db0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404db278"/>
        <function-ref name="isInput" scoped="" ref="0x404db358"/>
        <function-ref name="toggle" scoped="" ref="0x404db438"/>
        <function-ref name="isOutput" scoped="" ref="0x404db518"/>
        <function-ref name="get" scoped="" ref="0x404db5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404db6d8"/>
        <function-ref name="set" scoped="" ref="0x404db7b8"/>
        <function-ref name="clr" scoped="" ref="0x404db898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x404e3670" loc="78:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x404e3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e3848"/>
        <function-ref name="isInput" scoped="" ref="0x404e3928"/>
        <function-ref name="toggle" scoped="" ref="0x404e3a08"/>
        <function-ref name="isOutput" scoped="" ref="0x404e3ae8"/>
        <function-ref name="get" scoped="" ref="0x404e3bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e3ca8"/>
        <function-ref name="set" scoped="" ref="0x404e3d88"/>
        <function-ref name="clr" scoped="" ref="0x404e3e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x404ccc08" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x404ccc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ccde0"/>
        <function-ref name="isInput" scoped="" ref="0x404ccec0"/>
        <function-ref name="toggle" scoped="" ref="0x404cb010"/>
        <function-ref name="isOutput" scoped="" ref="0x404cb0f0"/>
        <function-ref name="get" scoped="" ref="0x404cb1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cb2b0"/>
        <function-ref name="set" scoped="" ref="0x404cb390"/>
        <function-ref name="clr" scoped="" ref="0x404cb470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x404d74b0" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x404d74b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d7688"/>
        <function-ref name="isInput" scoped="" ref="0x404d7768"/>
        <function-ref name="toggle" scoped="" ref="0x404d7848"/>
        <function-ref name="isOutput" scoped="" ref="0x404d7928"/>
        <function-ref name="get" scoped="" ref="0x404d7a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d7ae8"/>
        <function-ref name="set" scoped="" ref="0x404d7bc8"/>
        <function-ref name="clr" scoped="" ref="0x404d7ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x404d1c08" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x404d1c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d1de0"/>
        <function-ref name="isInput" scoped="" ref="0x404d1ec0"/>
        <function-ref name="toggle" scoped="" ref="0x404de010"/>
        <function-ref name="isOutput" scoped="" ref="0x404de0f0"/>
        <function-ref name="get" scoped="" ref="0x404de1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404de2b0"/>
        <function-ref name="set" scoped="" ref="0x404de390"/>
        <function-ref name="clr" scoped="" ref="0x404de470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x404cf830" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x404cf830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cfa08"/>
        <function-ref name="isInput" scoped="" ref="0x404cfae8"/>
        <function-ref name="toggle" scoped="" ref="0x404cfbc8"/>
        <function-ref name="isOutput" scoped="" ref="0x404cfca8"/>
        <function-ref name="get" scoped="" ref="0x404cfd88"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cfe68"/>
        <function-ref name="set" scoped="" ref="0x404ce010"/>
        <function-ref name="clr" scoped="" ref="0x404ce0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x404d53d0" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x404d53d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d55a8"/>
        <function-ref name="isInput" scoped="" ref="0x404d5688"/>
        <function-ref name="toggle" scoped="" ref="0x404d5768"/>
        <function-ref name="isOutput" scoped="" ref="0x404d5848"/>
        <function-ref name="get" scoped="" ref="0x404d5928"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d5a08"/>
        <function-ref name="set" scoped="" ref="0x404d5ae8"/>
        <function-ref name="clr" scoped="" ref="0x404d5bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x404dda98" loc="64:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x404dda98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ddd70"/>
        <function-ref name="isInput" scoped="" ref="0x404dde50"/>
        <function-ref name="toggle" scoped="" ref="0x404dc010"/>
        <function-ref name="isOutput" scoped="" ref="0x404dc0f0"/>
        <function-ref name="get" scoped="" ref="0x404dc1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dc2b0"/>
        <function-ref name="set" scoped="" ref="0x404dc390"/>
        <function-ref name="clr" scoped="" ref="0x404dc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x404daea8" loc="69:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x404daea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d90c0"/>
        <function-ref name="isInput" scoped="" ref="0x404d91a0"/>
        <function-ref name="toggle" scoped="" ref="0x404d9280"/>
        <function-ref name="isOutput" scoped="" ref="0x404d9360"/>
        <function-ref name="get" scoped="" ref="0x404d9440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d9520"/>
        <function-ref name="set" scoped="" ref="0x404d9600"/>
        <function-ref name="clr" scoped="" ref="0x404d96e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x404d4830" loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x404d4830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d4a08"/>
        <function-ref name="isInput" scoped="" ref="0x404d4ae8"/>
        <function-ref name="toggle" scoped="" ref="0x404d4bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x404d4ca8"/>
        <function-ref name="get" scoped="" ref="0x404d4d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d4e68"/>
        <function-ref name="set" scoped="" ref="0x404d3010"/>
        <function-ref name="clr" scoped="" ref="0x404d30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x404e4210" loc="76:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x404e4210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e43e8"/>
        <function-ref name="isInput" scoped="" ref="0x404e44c8"/>
        <function-ref name="toggle" scoped="" ref="0x404e45a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404e4688"/>
        <function-ref name="get" scoped="" ref="0x404e4768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e4848"/>
        <function-ref name="set" scoped="" ref="0x404e4928"/>
        <function-ref name="clr" scoped="" ref="0x404e4a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x404cd750" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x404cd750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cd928"/>
        <function-ref name="isInput" scoped="" ref="0x404cda08"/>
        <function-ref name="toggle" scoped="" ref="0x404cdae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404cdbc8"/>
        <function-ref name="get" scoped="" ref="0x404cdca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cdd88"/>
        <function-ref name="set" scoped="" ref="0x404cde68"/>
        <function-ref name="clr" scoped="" ref="0x404cc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4050b4f0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4050b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050b6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4050b7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4050b888"/>
        <function-ref name="isOutput" scoped="" ref="0x4050b968"/>
        <function-ref name="get" scoped="" ref="0x4050ba48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050bb28"/>
        <function-ref name="set" scoped="" ref="0x4050bc08"/>
        <function-ref name="clr" scoped="" ref="0x4050bce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40509170" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40509170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40509348"/>
        <function-ref name="isInput" scoped="" ref="0x40509428"/>
        <function-ref name="toggle" scoped="" ref="0x40509508"/>
        <function-ref name="isOutput" scoped="" ref="0x405095e8"/>
        <function-ref name="get" scoped="" ref="0x405096c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405097a8"/>
        <function-ref name="set" scoped="" ref="0x40509888"/>
        <function-ref name="clr" scoped="" ref="0x40509968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4050d228" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4050d228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050d400"/>
        <function-ref name="isInput" scoped="" ref="0x4050d4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4050d5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4050d6a0"/>
        <function-ref name="get" scoped="" ref="0x4050d780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050d860"/>
        <function-ref name="set" scoped="" ref="0x4050d940"/>
        <function-ref name="clr" scoped="" ref="0x4050da20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4050be48" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4050be48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050a050"/>
        <function-ref name="isInput" scoped="" ref="0x4050a130"/>
        <function-ref name="toggle" scoped="" ref="0x4050a210"/>
        <function-ref name="isOutput" scoped="" ref="0x4050a2f0"/>
        <function-ref name="get" scoped="" ref="0x4050a3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050a4b0"/>
        <function-ref name="set" scoped="" ref="0x4050a590"/>
        <function-ref name="clr" scoped="" ref="0x4050a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40509ac8" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40509ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40509ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40509d80"/>
        <function-ref name="toggle" scoped="" ref="0x40509e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40516010"/>
        <function-ref name="get" scoped="" ref="0x405160f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405161d0"/>
        <function-ref name="set" scoped="" ref="0x405162b0"/>
        <function-ref name="clr" scoped="" ref="0x40516390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4050db80" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4050db80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050dd58"/>
        <function-ref name="isInput" scoped="" ref="0x4050de38"/>
        <function-ref name="toggle" scoped="" ref="0x4050df18"/>
        <function-ref name="isOutput" scoped="" ref="0x4050b010"/>
        <function-ref name="get" scoped="" ref="0x4050b0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050b1d0"/>
        <function-ref name="set" scoped="" ref="0x4050b2b0"/>
        <function-ref name="clr" scoped="" ref="0x4050b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4050a7d0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4050a7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050a9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4050aa88"/>
        <function-ref name="toggle" scoped="" ref="0x4050ab68"/>
        <function-ref name="isOutput" scoped="" ref="0x4050ac48"/>
        <function-ref name="get" scoped="" ref="0x4050ad28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050ae08"/>
        <function-ref name="set" scoped="" ref="0x4050aee8"/>
        <function-ref name="clr" scoped="" ref="0x40509010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405164f0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405164f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405166c8"/>
        <function-ref name="isInput" scoped="" ref="0x405167a8"/>
        <function-ref name="toggle" scoped="" ref="0x40516888"/>
        <function-ref name="isOutput" scoped="" ref="0x40516968"/>
        <function-ref name="get" scoped="" ref="0x40516a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40516b28"/>
        <function-ref name="set" scoped="" ref="0x40516c08"/>
        <function-ref name="clr" scoped="" ref="0x40516ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40830f28" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40830f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4084d110"/>
        <function-ref name="isInput" scoped="" ref="0x4084d1f0"/>
        <function-ref name="toggle" scoped="" ref="0x4084d2d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4084d3b0"/>
        <function-ref name="get" scoped="" ref="0x4084d490"/>
        <function-ref name="makeOutput" scoped="" ref="0x4084d570"/>
        <function-ref name="set" scoped="" ref="0x4084d650"/>
        <function-ref name="clr" scoped="" ref="0x4084d730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4084c8f0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4084c8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4084cac8"/>
        <function-ref name="isInput" scoped="" ref="0x4084cba8"/>
        <function-ref name="toggle" scoped="" ref="0x4084cc88"/>
        <function-ref name="isOutput" scoped="" ref="0x4084cd68"/>
        <function-ref name="get" scoped="" ref="0x4084ce48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4084cf28"/>
        <function-ref name="set" scoped="" ref="0x4084b018"/>
        <function-ref name="clr" scoped="" ref="0x4084b0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4084a2d0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4084a2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4084a4a8"/>
        <function-ref name="isInput" scoped="" ref="0x4084a588"/>
        <function-ref name="toggle" scoped="" ref="0x4084a668"/>
        <function-ref name="isOutput" scoped="" ref="0x4084a748"/>
        <function-ref name="get" scoped="" ref="0x4084a828"/>
        <function-ref name="makeOutput" scoped="" ref="0x4084a908"/>
        <function-ref name="set" scoped="" ref="0x4084a9e8"/>
        <function-ref name="clr" scoped="" ref="0x4084aac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40849c90" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40849c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40849e68"/>
        <function-ref name="isInput" scoped="" ref="0x40848010"/>
        <function-ref name="toggle" scoped="" ref="0x408480f0"/>
        <function-ref name="isOutput" scoped="" ref="0x408481d0"/>
        <function-ref name="get" scoped="" ref="0x408482b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40848390"/>
        <function-ref name="set" scoped="" ref="0x40848470"/>
        <function-ref name="clr" scoped="" ref="0x40848550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40847718" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40847718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408478f0"/>
        <function-ref name="isInput" scoped="" ref="0x408479d0"/>
        <function-ref name="toggle" scoped="" ref="0x40847ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x40847b90"/>
        <function-ref name="get" scoped="" ref="0x40847c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40847d50"/>
        <function-ref name="set" scoped="" ref="0x40847e30"/>
        <function-ref name="clr" scoped="" ref="0x40847f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408450f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408450f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408452d0"/>
        <function-ref name="isInput" scoped="" ref="0x408453b0"/>
        <function-ref name="toggle" scoped="" ref="0x40845490"/>
        <function-ref name="isOutput" scoped="" ref="0x40845570"/>
        <function-ref name="get" scoped="" ref="0x40845650"/>
        <function-ref name="makeOutput" scoped="" ref="0x40845730"/>
        <function-ref name="set" scoped="" ref="0x40845810"/>
        <function-ref name="clr" scoped="" ref="0x408458f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40843ac8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40843ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40843ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40843d80"/>
        <function-ref name="toggle" scoped="" ref="0x40843e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40842010"/>
        <function-ref name="get" scoped="" ref="0x408420f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408421d0"/>
        <function-ref name="set" scoped="" ref="0x408422b0"/>
        <function-ref name="clr" scoped="" ref="0x40842390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40841570" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40841570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40841748"/>
        <function-ref name="isInput" scoped="" ref="0x40841828"/>
        <function-ref name="toggle" scoped="" ref="0x40841908"/>
        <function-ref name="isOutput" scoped="" ref="0x408419e8"/>
        <function-ref name="get" scoped="" ref="0x40841ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40841ba8"/>
        <function-ref name="set" scoped="" ref="0x40841c88"/>
        <function-ref name="clr" scoped="" ref="0x40841d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40512e48" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40512e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40511050"/>
        <function-ref name="isInput" scoped="" ref="0x40511130"/>
        <function-ref name="toggle" scoped="" ref="0x40511210"/>
        <function-ref name="isOutput" scoped="" ref="0x405112f0"/>
        <function-ref name="get" scoped="" ref="0x405113d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405114b0"/>
        <function-ref name="set" scoped="" ref="0x40511590"/>
        <function-ref name="clr" scoped="" ref="0x40511670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40510ac8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40510ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40510ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40510d80"/>
        <function-ref name="toggle" scoped="" ref="0x40510e60"/>
        <function-ref name="isOutput" scoped="" ref="0x4051d010"/>
        <function-ref name="get" scoped="" ref="0x4051d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051d1d0"/>
        <function-ref name="set" scoped="" ref="0x4051d2b0"/>
        <function-ref name="clr" scoped="" ref="0x4051d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40513b00" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40513b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40513cd8"/>
        <function-ref name="isInput" scoped="" ref="0x40513db8"/>
        <function-ref name="toggle" scoped="" ref="0x40513e98"/>
        <function-ref name="isOutput" scoped="" ref="0x40512010"/>
        <function-ref name="get" scoped="" ref="0x405120f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405121d0"/>
        <function-ref name="set" scoped="" ref="0x405122b0"/>
        <function-ref name="clr" scoped="" ref="0x40512390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405117d0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405117d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405119a8"/>
        <function-ref name="isInput" scoped="" ref="0x40511a88"/>
        <function-ref name="toggle" scoped="" ref="0x40511b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40511c48"/>
        <function-ref name="get" scoped="" ref="0x40511d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40511e08"/>
        <function-ref name="set" scoped="" ref="0x40511ee8"/>
        <function-ref name="clr" scoped="" ref="0x40510010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4051d4f0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4051d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051d6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4051d7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4051d888"/>
        <function-ref name="isOutput" scoped="" ref="0x4051d968"/>
        <function-ref name="get" scoped="" ref="0x4051da48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051db28"/>
        <function-ref name="set" scoped="" ref="0x4051dc08"/>
        <function-ref name="clr" scoped="" ref="0x4051dce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x405124f0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x405124f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405126c8"/>
        <function-ref name="isInput" scoped="" ref="0x405127a8"/>
        <function-ref name="toggle" scoped="" ref="0x40512888"/>
        <function-ref name="isOutput" scoped="" ref="0x40512968"/>
        <function-ref name="get" scoped="" ref="0x40512a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40512b28"/>
        <function-ref name="set" scoped="" ref="0x40512c08"/>
        <function-ref name="clr" scoped="" ref="0x40512ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40510170" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40510170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40510348"/>
        <function-ref name="isInput" scoped="" ref="0x40510428"/>
        <function-ref name="toggle" scoped="" ref="0x40510508"/>
        <function-ref name="isOutput" scoped="" ref="0x405105e8"/>
        <function-ref name="get" scoped="" ref="0x405106c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405107a8"/>
        <function-ref name="set" scoped="" ref="0x40510888"/>
        <function-ref name="clr" scoped="" ref="0x40510968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4051de48" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4051de48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051b050"/>
        <function-ref name="isInput" scoped="" ref="0x4051b130"/>
        <function-ref name="toggle" scoped="" ref="0x4051b210"/>
        <function-ref name="isOutput" scoped="" ref="0x4051b2f0"/>
        <function-ref name="get" scoped="" ref="0x4051b3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051b4b0"/>
        <function-ref name="set" scoped="" ref="0x4051b590"/>
        <function-ref name="clr" scoped="" ref="0x4051b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40885938" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40885938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40885b10"/>
        <function-ref name="isInput" scoped="" ref="0x40885bf0"/>
        <function-ref name="toggle" scoped="" ref="0x40885cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40885db0"/>
        <function-ref name="get" scoped="" ref="0x40885e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40884010"/>
        <function-ref name="set" scoped="" ref="0x408840f0"/>
        <function-ref name="clr" scoped="" ref="0x408841d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408833b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408833b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40883588"/>
        <function-ref name="isInput" scoped="" ref="0x40883668"/>
        <function-ref name="toggle" scoped="" ref="0x40883748"/>
        <function-ref name="isOutput" scoped="" ref="0x40883828"/>
        <function-ref name="get" scoped="" ref="0x40883908"/>
        <function-ref name="makeOutput" scoped="" ref="0x408839e8"/>
        <function-ref name="set" scoped="" ref="0x40883ac8"/>
        <function-ref name="clr" scoped="" ref="0x40883ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40882d70" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40882d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40881010"/>
        <function-ref name="isInput" scoped="" ref="0x408810f0"/>
        <function-ref name="toggle" scoped="" ref="0x408811d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408812b0"/>
        <function-ref name="get" scoped="" ref="0x40881390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40881470"/>
        <function-ref name="set" scoped="" ref="0x40881550"/>
        <function-ref name="clr" scoped="" ref="0x40881630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408807f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408807f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408809d0"/>
        <function-ref name="isInput" scoped="" ref="0x40880ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40880b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40880c70"/>
        <function-ref name="get" scoped="" ref="0x40880d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40880e30"/>
        <function-ref name="set" scoped="" ref="0x40880f10"/>
        <function-ref name="clr" scoped="" ref="0x4087f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4087e228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4087e228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4087e400"/>
        <function-ref name="isInput" scoped="" ref="0x4087e4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4087e5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4087e6a0"/>
        <function-ref name="get" scoped="" ref="0x4087e780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4087e860"/>
        <function-ref name="set" scoped="" ref="0x4087e940"/>
        <function-ref name="clr" scoped="" ref="0x4087ea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4087dc08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4087dc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4087dde0"/>
        <function-ref name="isInput" scoped="" ref="0x4087dec0"/>
        <function-ref name="toggle" scoped="" ref="0x4087c010"/>
        <function-ref name="isOutput" scoped="" ref="0x4087c0f0"/>
        <function-ref name="get" scoped="" ref="0x4087c1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4087c2b0"/>
        <function-ref name="set" scoped="" ref="0x4087c390"/>
        <function-ref name="clr" scoped="" ref="0x4087c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4087b6c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4087b6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4087b898"/>
        <function-ref name="isInput" scoped="" ref="0x4087b978"/>
        <function-ref name="toggle" scoped="" ref="0x4087ba58"/>
        <function-ref name="isOutput" scoped="" ref="0x4087bb38"/>
        <function-ref name="get" scoped="" ref="0x4087bc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4087bcf8"/>
        <function-ref name="set" scoped="" ref="0x4087bdd8"/>
        <function-ref name="clr" scoped="" ref="0x4087beb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408790b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408790b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40879288"/>
        <function-ref name="isInput" scoped="" ref="0x40879368"/>
        <function-ref name="toggle" scoped="" ref="0x40879448"/>
        <function-ref name="isOutput" scoped="" ref="0x40879528"/>
        <function-ref name="get" scoped="" ref="0x40879608"/>
        <function-ref name="makeOutput" scoped="" ref="0x408796e8"/>
        <function-ref name="set" scoped="" ref="0x408797c8"/>
        <function-ref name="clr" scoped="" ref="0x408798a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405176b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405176b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40517888"/>
        <function-ref name="isInput" scoped="" ref="0x40517968"/>
        <function-ref name="toggle" scoped="" ref="0x40517a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40517b28"/>
        <function-ref name="get" scoped="" ref="0x40517c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40517ce8"/>
        <function-ref name="set" scoped="" ref="0x40517dc8"/>
        <function-ref name="clr" scoped="" ref="0x40517ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40523330" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40523330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40523508"/>
        <function-ref name="isInput" scoped="" ref="0x405235e8"/>
        <function-ref name="toggle" scoped="" ref="0x405236c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405237a8"/>
        <function-ref name="get" scoped="" ref="0x40523888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40523968"/>
        <function-ref name="set" scoped="" ref="0x40523a48"/>
        <function-ref name="clr" scoped="" ref="0x40523b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405183d8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405183d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405185b0"/>
        <function-ref name="isInput" scoped="" ref="0x40518690"/>
        <function-ref name="toggle" scoped="" ref="0x40518770"/>
        <function-ref name="isOutput" scoped="" ref="0x40518850"/>
        <function-ref name="get" scoped="" ref="0x40518930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40518a10"/>
        <function-ref name="set" scoped="" ref="0x40518af0"/>
        <function-ref name="clr" scoped="" ref="0x40518bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40524030" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40524030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40524208"/>
        <function-ref name="isInput" scoped="" ref="0x405242e8"/>
        <function-ref name="toggle" scoped="" ref="0x405243c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405244a8"/>
        <function-ref name="get" scoped="" ref="0x40524588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40524668"/>
        <function-ref name="set" scoped="" ref="0x40524748"/>
        <function-ref name="clr" scoped="" ref="0x40524828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40523c88" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40523c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40523e60"/>
        <function-ref name="isInput" scoped="" ref="0x40522010"/>
        <function-ref name="toggle" scoped="" ref="0x405220f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405221d0"/>
        <function-ref name="get" scoped="" ref="0x405222b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40522390"/>
        <function-ref name="set" scoped="" ref="0x40522470"/>
        <function-ref name="clr" scoped="" ref="0x40522550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40518d30" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40518d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40518f08"/>
        <function-ref name="isInput" scoped="" ref="0x40517010"/>
        <function-ref name="toggle" scoped="" ref="0x405170f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405171d0"/>
        <function-ref name="get" scoped="" ref="0x405172b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40517390"/>
        <function-ref name="set" scoped="" ref="0x40517470"/>
        <function-ref name="clr" scoped="" ref="0x40517550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40524988" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40524988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40524b60"/>
        <function-ref name="isInput" scoped="" ref="0x40524c40"/>
        <function-ref name="toggle" scoped="" ref="0x40524d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40524e00"/>
        <function-ref name="get" scoped="" ref="0x40524ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40523010"/>
        <function-ref name="set" scoped="" ref="0x405230f0"/>
        <function-ref name="clr" scoped="" ref="0x405231d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405226b0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405226b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40522888"/>
        <function-ref name="isInput" scoped="" ref="0x40522968"/>
        <function-ref name="toggle" scoped="" ref="0x40522a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40522b28"/>
        <function-ref name="get" scoped="" ref="0x40522c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40522ce8"/>
        <function-ref name="set" scoped="" ref="0x40522dc8"/>
        <function-ref name="clr" scoped="" ref="0x40522ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408be538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408be538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408be710"/>
        <function-ref name="isInput" scoped="" ref="0x408be7f0"/>
        <function-ref name="toggle" scoped="" ref="0x408be8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408be9b0"/>
        <function-ref name="get" scoped="" ref="0x408bea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x408beb70"/>
        <function-ref name="set" scoped="" ref="0x408bec50"/>
        <function-ref name="clr" scoped="" ref="0x408bed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408bc010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408bc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408bc1e8"/>
        <function-ref name="isInput" scoped="" ref="0x408bc2c8"/>
        <function-ref name="toggle" scoped="" ref="0x408bc3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x408bc488"/>
        <function-ref name="get" scoped="" ref="0x408bc568"/>
        <function-ref name="makeOutput" scoped="" ref="0x408bc648"/>
        <function-ref name="set" scoped="" ref="0x408bc728"/>
        <function-ref name="clr" scoped="" ref="0x408bc808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408bb9e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408bb9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408bbbc0"/>
        <function-ref name="isInput" scoped="" ref="0x408bbca0"/>
        <function-ref name="toggle" scoped="" ref="0x408bbd80"/>
        <function-ref name="isOutput" scoped="" ref="0x408bbe60"/>
        <function-ref name="get" scoped="" ref="0x408ba010"/>
        <function-ref name="makeOutput" scoped="" ref="0x408ba0f0"/>
        <function-ref name="set" scoped="" ref="0x408ba1d0"/>
        <function-ref name="clr" scoped="" ref="0x408ba2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408b9538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408b9538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408b9710"/>
        <function-ref name="isInput" scoped="" ref="0x408b97f0"/>
        <function-ref name="toggle" scoped="" ref="0x408b98d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408b99b0"/>
        <function-ref name="get" scoped="" ref="0x408b9a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x408b9b70"/>
        <function-ref name="set" scoped="" ref="0x408b9c50"/>
        <function-ref name="clr" scoped="" ref="0x408b9d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408b6010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408b6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408b61e8"/>
        <function-ref name="isInput" scoped="" ref="0x408b62c8"/>
        <function-ref name="toggle" scoped="" ref="0x408b63a8"/>
        <function-ref name="isOutput" scoped="" ref="0x408b6488"/>
        <function-ref name="get" scoped="" ref="0x408b6568"/>
        <function-ref name="makeOutput" scoped="" ref="0x408b6648"/>
        <function-ref name="set" scoped="" ref="0x408b6728"/>
        <function-ref name="clr" scoped="" ref="0x408b6808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408b59e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408b59e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408b5bc0"/>
        <function-ref name="isInput" scoped="" ref="0x408b5ca0"/>
        <function-ref name="toggle" scoped="" ref="0x408b5d80"/>
        <function-ref name="isOutput" scoped="" ref="0x408b5e60"/>
        <function-ref name="get" scoped="" ref="0x408b4010"/>
        <function-ref name="makeOutput" scoped="" ref="0x408b40f0"/>
        <function-ref name="set" scoped="" ref="0x408b41d0"/>
        <function-ref name="clr" scoped="" ref="0x408b42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408b3538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408b3538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408b3710"/>
        <function-ref name="isInput" scoped="" ref="0x408b37f0"/>
        <function-ref name="toggle" scoped="" ref="0x408b38d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408b39b0"/>
        <function-ref name="get" scoped="" ref="0x408b3a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x408b3b70"/>
        <function-ref name="set" scoped="" ref="0x408b3c50"/>
        <function-ref name="clr" scoped="" ref="0x408b3d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408b1010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408b1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408b11e8"/>
        <function-ref name="isInput" scoped="" ref="0x408b12c8"/>
        <function-ref name="toggle" scoped="" ref="0x408b13a8"/>
        <function-ref name="isOutput" scoped="" ref="0x408b1488"/>
        <function-ref name="get" scoped="" ref="0x408b1568"/>
        <function-ref name="makeOutput" scoped="" ref="0x408b1648"/>
        <function-ref name="set" scoped="" ref="0x408b1728"/>
        <function-ref name="clr" scoped="" ref="0x408b1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4052a170" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4052a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052a348"/>
        <function-ref name="isInput" scoped="" ref="0x4052a428"/>
        <function-ref name="toggle" scoped="" ref="0x4052a508"/>
        <function-ref name="isOutput" scoped="" ref="0x4052a5e8"/>
        <function-ref name="get" scoped="" ref="0x4052a6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052a7a8"/>
        <function-ref name="set" scoped="" ref="0x4052a888"/>
        <function-ref name="clr" scoped="" ref="0x4052a968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40529e48" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40529e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40528050"/>
        <function-ref name="isInput" scoped="" ref="0x40528130"/>
        <function-ref name="toggle" scoped="" ref="0x40528210"/>
        <function-ref name="isOutput" scoped="" ref="0x405282f0"/>
        <function-ref name="get" scoped="" ref="0x405283d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405284b0"/>
        <function-ref name="set" scoped="" ref="0x40528590"/>
        <function-ref name="clr" scoped="" ref="0x40528670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4051edc8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4051edc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052b010"/>
        <function-ref name="isInput" scoped="" ref="0x4052b0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4052b1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4052b2b0"/>
        <function-ref name="get" scoped="" ref="0x4052b390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052b470"/>
        <function-ref name="set" scoped="" ref="0x4052b550"/>
        <function-ref name="clr" scoped="" ref="0x4052b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4052aac8" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4052aac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052aca0"/>
        <function-ref name="isInput" scoped="" ref="0x4052ad80"/>
        <function-ref name="toggle" scoped="" ref="0x4052ae60"/>
        <function-ref name="isOutput" scoped="" ref="0x40529010"/>
        <function-ref name="get" scoped="" ref="0x405290f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405291d0"/>
        <function-ref name="set" scoped="" ref="0x405292b0"/>
        <function-ref name="clr" scoped="" ref="0x40529390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405287d0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405287d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405289a8"/>
        <function-ref name="isInput" scoped="" ref="0x40528a88"/>
        <function-ref name="toggle" scoped="" ref="0x40528b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40528c48"/>
        <function-ref name="get" scoped="" ref="0x40528d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40528e08"/>
        <function-ref name="set" scoped="" ref="0x40528ee8"/>
        <function-ref name="clr" scoped="" ref="0x40527010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4052b790" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4052b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052b968"/>
        <function-ref name="isInput" scoped="" ref="0x4052ba48"/>
        <function-ref name="toggle" scoped="" ref="0x4052bb28"/>
        <function-ref name="isOutput" scoped="" ref="0x4052bc08"/>
        <function-ref name="get" scoped="" ref="0x4052bce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052bdc8"/>
        <function-ref name="set" scoped="" ref="0x4052bea8"/>
        <function-ref name="clr" scoped="" ref="0x4052a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x405294f0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x405294f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405296c8"/>
        <function-ref name="isInput" scoped="" ref="0x405297a8"/>
        <function-ref name="toggle" scoped="" ref="0x40529888"/>
        <function-ref name="isOutput" scoped="" ref="0x40529968"/>
        <function-ref name="get" scoped="" ref="0x40529a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40529b28"/>
        <function-ref name="set" scoped="" ref="0x40529c08"/>
        <function-ref name="clr" scoped="" ref="0x40529ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40527170" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40527170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40527348"/>
        <function-ref name="isInput" scoped="" ref="0x40527428"/>
        <function-ref name="toggle" scoped="" ref="0x40527508"/>
        <function-ref name="isOutput" scoped="" ref="0x405275e8"/>
        <function-ref name="get" scoped="" ref="0x405276c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405277a8"/>
        <function-ref name="set" scoped="" ref="0x40527888"/>
        <function-ref name="clr" scoped="" ref="0x40527968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408df418" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408df418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408df5f0"/>
        <function-ref name="isInput" scoped="" ref="0x408df6d0"/>
        <function-ref name="toggle" scoped="" ref="0x408df7b0"/>
        <function-ref name="isOutput" scoped="" ref="0x408df890"/>
        <function-ref name="get" scoped="" ref="0x408df970"/>
        <function-ref name="makeOutput" scoped="" ref="0x408dfa50"/>
        <function-ref name="set" scoped="" ref="0x408dfb30"/>
        <function-ref name="clr" scoped="" ref="0x408dfc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408dede0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408dede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408dd010"/>
        <function-ref name="isInput" scoped="" ref="0x408dd0f0"/>
        <function-ref name="toggle" scoped="" ref="0x408dd1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408dd2b0"/>
        <function-ref name="get" scoped="" ref="0x408dd390"/>
        <function-ref name="makeOutput" scoped="" ref="0x408dd470"/>
        <function-ref name="set" scoped="" ref="0x408dd550"/>
        <function-ref name="clr" scoped="" ref="0x408dd630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408fa7f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408fa7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408fa9d0"/>
        <function-ref name="isInput" scoped="" ref="0x408faab0"/>
        <function-ref name="toggle" scoped="" ref="0x408fab90"/>
        <function-ref name="isOutput" scoped="" ref="0x408fac70"/>
        <function-ref name="get" scoped="" ref="0x408fad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x408fae30"/>
        <function-ref name="set" scoped="" ref="0x408faf10"/>
        <function-ref name="clr" scoped="" ref="0x408f9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408f8228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408f8228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408f8400"/>
        <function-ref name="isInput" scoped="" ref="0x408f84e0"/>
        <function-ref name="toggle" scoped="" ref="0x408f85c0"/>
        <function-ref name="isOutput" scoped="" ref="0x408f86a0"/>
        <function-ref name="get" scoped="" ref="0x408f8780"/>
        <function-ref name="makeOutput" scoped="" ref="0x408f8860"/>
        <function-ref name="set" scoped="" ref="0x408f8940"/>
        <function-ref name="clr" scoped="" ref="0x408f8a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408f7c08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408f7c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408f7de0"/>
        <function-ref name="isInput" scoped="" ref="0x408f7ec0"/>
        <function-ref name="toggle" scoped="" ref="0x408f6010"/>
        <function-ref name="isOutput" scoped="" ref="0x408f60f0"/>
        <function-ref name="get" scoped="" ref="0x408f61d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408f62b0"/>
        <function-ref name="set" scoped="" ref="0x408f6390"/>
        <function-ref name="clr" scoped="" ref="0x408f6470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408f56c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408f56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408f5898"/>
        <function-ref name="isInput" scoped="" ref="0x408f5978"/>
        <function-ref name="toggle" scoped="" ref="0x408f5a58"/>
        <function-ref name="isOutput" scoped="" ref="0x408f5b38"/>
        <function-ref name="get" scoped="" ref="0x408f5c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x408f5cf8"/>
        <function-ref name="set" scoped="" ref="0x408f5dd8"/>
        <function-ref name="clr" scoped="" ref="0x408f5eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408f30b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408f30b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408f3288"/>
        <function-ref name="isInput" scoped="" ref="0x408f3368"/>
        <function-ref name="toggle" scoped="" ref="0x408f3448"/>
        <function-ref name="isOutput" scoped="" ref="0x408f3528"/>
        <function-ref name="get" scoped="" ref="0x408f3608"/>
        <function-ref name="makeOutput" scoped="" ref="0x408f36e8"/>
        <function-ref name="set" scoped="" ref="0x408f37c8"/>
        <function-ref name="clr" scoped="" ref="0x408f38a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408f2a88" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408f2a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408f2c60"/>
        <function-ref name="isInput" scoped="" ref="0x408f2d40"/>
        <function-ref name="toggle" scoped="" ref="0x408f2e20"/>
        <function-ref name="isOutput" scoped="" ref="0x408f2f00"/>
        <function-ref name="get" scoped="" ref="0x408f1010"/>
        <function-ref name="makeOutput" scoped="" ref="0x408f10f0"/>
        <function-ref name="set" scoped="" ref="0x408f11d0"/>
        <function-ref name="clr" scoped="" ref="0x408f12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x405329e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x405329e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40532bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40532ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40532d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40532e60"/>
        <function-ref name="get" scoped="" ref="0x40530010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405300f0"/>
        <function-ref name="set" scoped="" ref="0x405301d0"/>
        <function-ref name="clr" scoped="" ref="0x405302b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4052f790" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4052f790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052f968"/>
        <function-ref name="isInput" scoped="" ref="0x4052fa48"/>
        <function-ref name="toggle" scoped="" ref="0x4052fb28"/>
        <function-ref name="isOutput" scoped="" ref="0x4052fc08"/>
        <function-ref name="get" scoped="" ref="0x4052fce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052fdc8"/>
        <function-ref name="set" scoped="" ref="0x4052fea8"/>
        <function-ref name="clr" scoped="" ref="0x4052e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405336f8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405336f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405338d0"/>
        <function-ref name="isInput" scoped="" ref="0x405339b0"/>
        <function-ref name="toggle" scoped="" ref="0x40533a90"/>
        <function-ref name="isOutput" scoped="" ref="0x40533b70"/>
        <function-ref name="get" scoped="" ref="0x40533c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40533d30"/>
        <function-ref name="set" scoped="" ref="0x40533e10"/>
        <function-ref name="clr" scoped="" ref="0x40533ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40530410" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40530410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405305e8"/>
        <function-ref name="isInput" scoped="" ref="0x405306c8"/>
        <function-ref name="toggle" scoped="" ref="0x405307a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40530888"/>
        <function-ref name="get" scoped="" ref="0x40530968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40530a48"/>
        <function-ref name="set" scoped="" ref="0x40530b28"/>
        <function-ref name="clr" scoped="" ref="0x40530c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4052e170" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4052e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052e348"/>
        <function-ref name="isInput" scoped="" ref="0x4052e428"/>
        <function-ref name="toggle" scoped="" ref="0x4052e508"/>
        <function-ref name="isOutput" scoped="" ref="0x4052e5e8"/>
        <function-ref name="get" scoped="" ref="0x4052e6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052e7a8"/>
        <function-ref name="set" scoped="" ref="0x4052e888"/>
        <function-ref name="clr" scoped="" ref="0x4052e968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40532090" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40532090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40532268"/>
        <function-ref name="isInput" scoped="" ref="0x40532348"/>
        <function-ref name="toggle" scoped="" ref="0x40532428"/>
        <function-ref name="isOutput" scoped="" ref="0x40532508"/>
        <function-ref name="get" scoped="" ref="0x405325e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405326c8"/>
        <function-ref name="set" scoped="" ref="0x405327a8"/>
        <function-ref name="clr" scoped="" ref="0x40532888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40530d68" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40530d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052f010"/>
        <function-ref name="isInput" scoped="" ref="0x4052f0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4052f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4052f2b0"/>
        <function-ref name="get" scoped="" ref="0x4052f390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052f470"/>
        <function-ref name="set" scoped="" ref="0x4052f550"/>
        <function-ref name="clr" scoped="" ref="0x4052f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4052eac8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4052eac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052eca0"/>
        <function-ref name="isInput" scoped="" ref="0x4052ed80"/>
        <function-ref name="toggle" scoped="" ref="0x4052ee60"/>
        <function-ref name="isOutput" scoped="" ref="0x4052d010"/>
        <function-ref name="get" scoped="" ref="0x4052d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052d1d0"/>
        <function-ref name="set" scoped="" ref="0x4052d2b0"/>
        <function-ref name="clr" scoped="" ref="0x4052d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40923de8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40923de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4091f010"/>
        <function-ref name="isInput" scoped="" ref="0x4091f0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4091f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4091f2b0"/>
        <function-ref name="get" scoped="" ref="0x4091f390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4091f470"/>
        <function-ref name="set" scoped="" ref="0x4091f550"/>
        <function-ref name="clr" scoped="" ref="0x4091f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4091e7f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4091e7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4091e9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4091eab0"/>
        <function-ref name="toggle" scoped="" ref="0x4091eb90"/>
        <function-ref name="isOutput" scoped="" ref="0x4091ec70"/>
        <function-ref name="get" scoped="" ref="0x4091ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4091ee30"/>
        <function-ref name="set" scoped="" ref="0x4091ef10"/>
        <function-ref name="clr" scoped="" ref="0x4091d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4091c228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4091c228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4091c400"/>
        <function-ref name="isInput" scoped="" ref="0x4091c4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4091c5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4091c6a0"/>
        <function-ref name="get" scoped="" ref="0x4091c780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4091c860"/>
        <function-ref name="set" scoped="" ref="0x4091c940"/>
        <function-ref name="clr" scoped="" ref="0x4091ca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4091ac08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4091ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4091ade0"/>
        <function-ref name="isInput" scoped="" ref="0x4091aec0"/>
        <function-ref name="toggle" scoped="" ref="0x40919010"/>
        <function-ref name="isOutput" scoped="" ref="0x409190f0"/>
        <function-ref name="get" scoped="" ref="0x409191d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x409192b0"/>
        <function-ref name="set" scoped="" ref="0x40919390"/>
        <function-ref name="clr" scoped="" ref="0x40919470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x409376c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x409376c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40937898"/>
        <function-ref name="isInput" scoped="" ref="0x40937978"/>
        <function-ref name="toggle" scoped="" ref="0x40937a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40937b38"/>
        <function-ref name="get" scoped="" ref="0x40937c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40937cf8"/>
        <function-ref name="set" scoped="" ref="0x40937dd8"/>
        <function-ref name="clr" scoped="" ref="0x40937eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x409350b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x409350b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40935288"/>
        <function-ref name="isInput" scoped="" ref="0x40935368"/>
        <function-ref name="toggle" scoped="" ref="0x40935448"/>
        <function-ref name="isOutput" scoped="" ref="0x40935528"/>
        <function-ref name="get" scoped="" ref="0x40935608"/>
        <function-ref name="makeOutput" scoped="" ref="0x409356e8"/>
        <function-ref name="set" scoped="" ref="0x409357c8"/>
        <function-ref name="clr" scoped="" ref="0x409358a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40934a88" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40934a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40934c60"/>
        <function-ref name="isInput" scoped="" ref="0x40934d40"/>
        <function-ref name="toggle" scoped="" ref="0x40934e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40934f00"/>
        <function-ref name="get" scoped="" ref="0x40933010"/>
        <function-ref name="makeOutput" scoped="" ref="0x409330f0"/>
        <function-ref name="set" scoped="" ref="0x409331d0"/>
        <function-ref name="clr" scoped="" ref="0x409332b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40932538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40932538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40932710"/>
        <function-ref name="isInput" scoped="" ref="0x409327f0"/>
        <function-ref name="toggle" scoped="" ref="0x409328d0"/>
        <function-ref name="isOutput" scoped="" ref="0x409329b0"/>
        <function-ref name="get" scoped="" ref="0x40932a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40932b70"/>
        <function-ref name="set" scoped="" ref="0x40932c50"/>
        <function-ref name="clr" scoped="" ref="0x40932d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PushButton0Init" ref="0x4054b378" loc="7:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButtonC.nc">
      <component-ref qname="PushButtonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PushButton0Init" scoped="" ref="0x4054b378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4054b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PushButton0" ref="0x404a7e38" loc="6:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButtonC.nc">
      <component-ref qname="PushButtonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PushButton0" scoped="" ref="0x404a7e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PushButton"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4054b050"/>
        <function-ref name="waitUntilPressed" scoped="" ref="0x4054b130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4054bb60" loc="4:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButtonP.nc">
      <component-ref qname="PushButtonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4054bb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4054bd38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x40548488" loc="6:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButtonP.nc">
      <component-ref qname="PushButtonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x40548488"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40548660"/>
        <function-ref name="isInput" scoped="" ref="0x40548740"/>
        <function-ref name="toggle" scoped="" ref="0x40548820"/>
        <function-ref name="isOutput" scoped="" ref="0x40548900"/>
        <function-ref name="get" scoped="" ref="0x405489e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40548ac0"/>
        <function-ref name="set" scoped="" ref="0x40548ba0"/>
        <function-ref name="clr" scoped="" ref="0x40548c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PushButton0" ref="0x40548010" loc="5:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButtonP.nc">
      <component-ref qname="PushButtonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PushButton0" scoped="" ref="0x40548010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PushButton"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x405481e8"/>
        <function-ref name="waitUntilPressed" scoped="" ref="0x405482c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4054c330" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4054c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb18"/>
            <typename><typedef-ref name="TMilli" ref="0x403ecce0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40549e38"/>
        <function-ref name="fired" scoped="" ref="0x405490f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405497f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x405495a0"/>
        <function-ref name="getdt" scoped="" ref="0x406a5310"/>
        <function-ref name="gett0" scoped="" ref="0x406a50b8"/>
        <function-ref name="isRunning" scoped="" ref="0x40549348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4054c958"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40549b18"/>
        <function-ref name="startOneShot" scoped="" ref="0x4054cbd8"/>
        <function-ref name="stop" scoped="" ref="0x4054ce58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40551b68" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40551b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb18"/>
            <typename><typedef-ref name="TMilli" ref="0x403ecce0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4055c6a8"/>
        <function-ref name="fired" scoped="" ref="0x4055d938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4055c068"/>
        <function-ref name="isOneShot" scoped="" ref="0x4055dde8"/>
        <function-ref name="getdt" scoped="" ref="0x4055cb58"/>
        <function-ref name="gett0" scoped="" ref="0x4055c900"/>
        <function-ref name="isRunning" scoped="" ref="0x4055db90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4055d1e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4055c388"/>
        <function-ref name="startOneShot" scoped="" ref="0x4055d460"/>
        <function-ref name="stop" scoped="" ref="0x4055d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4055af20" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4055af20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb18"/>
            <typename><typedef-ref name="TMilli" ref="0x403ecce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406653e8"/>
        <function-ref name="fired" scoped="" ref="0x40559ba0"/>
        <function-ref name="startAt" scoped="" ref="0x406650a8"/>
        <function-ref name="isRunning" scoped="" ref="0x40559e18"/>
        <function-ref name="getAlarm" scoped="" ref="0x40665660"/>
        <function-ref name="start" scoped="" ref="0x40559688"/>
        <function-ref name="stop" scoped="" ref="0x40559928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40967d50" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40967d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045bd20"/>
            <typename><typedef-ref name="T62khz" ref="0x4045bec8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40964258"/>
        <function-ref name="fired" scoped="" ref="0x40965a00"/>
        <function-ref name="startAt" scoped="" ref="0x40965ef0"/>
        <function-ref name="isRunning" scoped="" ref="0x40965c78"/>
        <function-ref name="getAlarm" scoped="" ref="0x409644d0"/>
        <function-ref name="start" scoped="" ref="0x409654e8"/>
        <function-ref name="stop" scoped="" ref="0x40965788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x409767c8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x409767c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40973288"/>
        <function-ref name="test" scoped="" ref="0x409745c0"/>
        <function-ref name="fired" scoped="" ref="0x40974348"/>
        <function-ref name="force" scoped="" ref="0x409737a0"/>
        <function-ref name="get" scoped="" ref="0x40976e10"/>
        <function-ref name="reset" scoped="" ref="0x40974838"/>
        <function-ref name="getMode" scoped="" ref="0x40973528"/>
        <function-ref name="isOn" scoped="" ref="0x40973010"/>
        <function-ref name="set" scoped="" ref="0x409740a8"/>
        <function-ref name="start" scoped="" ref="0x40974ab0"/>
        <function-ref name="stop" scoped="" ref="0x40974d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4095ad38" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4095ad38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045bd20"/>
            <typename><typedef-ref name="T62khz" ref="0x4045bec8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40958208"/>
        <function-ref name="fired" scoped="" ref="0x409599b0"/>
        <function-ref name="startAt" scoped="" ref="0x40959ea0"/>
        <function-ref name="isRunning" scoped="" ref="0x40959c28"/>
        <function-ref name="getAlarm" scoped="" ref="0x40958480"/>
        <function-ref name="start" scoped="" ref="0x40959498"/>
        <function-ref name="stop" scoped="" ref="0x40959738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4095a900" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4095a900"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4095aad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x40958750" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x40958750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40976288"/>
        <function-ref name="test" scoped="" ref="0x40977560"/>
        <function-ref name="get" scoped="" ref="0x40958d98"/>
        <function-ref name="reset" scoped="" ref="0x409777d8"/>
        <function-ref name="getMode" scoped="" ref="0x40976528"/>
        <function-ref name="overflow" scoped="" ref="0x409772e8"/>
        <function-ref name="isOn" scoped="" ref="0x40976010"/>
        <function-ref name="set" scoped="" ref="0x40977048"/>
        <function-ref name="start" scoped="" ref="0x40977a50"/>
        <function-ref name="stop" scoped="" ref="0x40977cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconCapture" ref="0x4059b5e8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconCapture" scoped="" ref="0x4059b5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405a4068"/>
        <function-ref name="test" scoped="" ref="0x405a53e8"/>
        <function-ref name="fired" scoped="" ref="0x405a5170"/>
        <function-ref name="get" scoped="" ref="0x4059bc30"/>
        <function-ref name="reset" scoped="" ref="0x405a5660"/>
        <function-ref name="getMode" scoped="" ref="0x405a4308"/>
        <function-ref name="isOn" scoped="" ref="0x405a5dc8"/>
        <function-ref name="set" scoped="" ref="0x4059bea8"/>
        <function-ref name="start" scoped="" ref="0x405a58d8"/>
        <function-ref name="stop" scoped="" ref="0x405a5b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40586c10" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40586c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40591690"/>
        <function-ref name="test" scoped="" ref="0x40593a08"/>
        <function-ref name="get" scoped="" ref="0x40593278"/>
        <function-ref name="reset" scoped="" ref="0x40593c80"/>
        <function-ref name="getMode" scoped="" ref="0x40591930"/>
        <function-ref name="overflow" scoped="" ref="0x40593790"/>
        <function-ref name="isOn" scoped="" ref="0x40591418"/>
        <function-ref name="set" scoped="" ref="0x405934f0"/>
        <function-ref name="start" scoped="" ref="0x40593ef8"/>
        <function-ref name="stop" scoped="" ref="0x405911a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x40597420" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40597420"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4059cee0"/>
        <function-ref name="test" scoped="" ref="0x4059c288"/>
        <function-ref name="fired" scoped="" ref="0x4059c010"/>
        <function-ref name="get" scoped="" ref="0x40597a68"/>
        <function-ref name="reset" scoped="" ref="0x4059c500"/>
        <function-ref name="getMode" scoped="" ref="0x4059b1c0"/>
        <function-ref name="isOn" scoped="" ref="0x4059cc68"/>
        <function-ref name="set" scoped="" ref="0x40597ce0"/>
        <function-ref name="start" scoped="" ref="0x4059c778"/>
        <function-ref name="stop" scoped="" ref="0x4059c9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40590010" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40590010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4058fa68"/>
        <function-ref name="test" scoped="" ref="0x40590de8"/>
        <function-ref name="fired" scoped="" ref="0x40590b70"/>
        <function-ref name="force" scoped="" ref="0x4059d010"/>
        <function-ref name="get" scoped="" ref="0x40590658"/>
        <function-ref name="reset" scoped="" ref="0x4058f088"/>
        <function-ref name="getMode" scoped="" ref="0x4058fd08"/>
        <function-ref name="isOn" scoped="" ref="0x4058f7f0"/>
        <function-ref name="set" scoped="" ref="0x405908d0"/>
        <function-ref name="start" scoped="" ref="0x4058f300"/>
        <function-ref name="stop" scoped="" ref="0x4058f578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x4059e010" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x4059e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405ada68"/>
        <function-ref name="test" scoped="" ref="0x4059ede8"/>
        <function-ref name="fired" scoped="" ref="0x4059eb70"/>
        <function-ref name="force" scoped="" ref="0x405ac010"/>
        <function-ref name="get" scoped="" ref="0x4059e658"/>
        <function-ref name="reset" scoped="" ref="0x405ad088"/>
        <function-ref name="getMode" scoped="" ref="0x405add08"/>
        <function-ref name="isOn" scoped="" ref="0x405ad7f0"/>
        <function-ref name="set" scoped="" ref="0x4059e8d0"/>
        <function-ref name="start" scoped="" ref="0x405ad300"/>
        <function-ref name="stop" scoped="" ref="0x405ad578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconCapture" ref="0x405b5d58" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconCapture" scoped="" ref="0x405b5d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405b27f0"/>
        <function-ref name="test" scoped="" ref="0x405b3b70"/>
        <function-ref name="fired" scoped="" ref="0x405b38f8"/>
        <function-ref name="get" scoped="" ref="0x405b33e0"/>
        <function-ref name="reset" scoped="" ref="0x405b3de8"/>
        <function-ref name="getMode" scoped="" ref="0x405b2a90"/>
        <function-ref name="isOn" scoped="" ref="0x405b2578"/>
        <function-ref name="set" scoped="" ref="0x405b3658"/>
        <function-ref name="start" scoped="" ref="0x405b2088"/>
        <function-ref name="stop" scoped="" ref="0x405b2300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x405b2d48" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x405b2d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x405b2f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x405ac408" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x405ac408"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405aaee0"/>
        <function-ref name="test" scoped="" ref="0x405aa288"/>
        <function-ref name="fired" scoped="" ref="0x405aa010"/>
        <function-ref name="force" scoped="" ref="0x405a9438"/>
        <function-ref name="get" scoped="" ref="0x405aca50"/>
        <function-ref name="reset" scoped="" ref="0x405aa500"/>
        <function-ref name="getMode" scoped="" ref="0x405a91c0"/>
        <function-ref name="isOn" scoped="" ref="0x405aac68"/>
        <function-ref name="set" scoped="" ref="0x405accc8"/>
        <function-ref name="start" scoped="" ref="0x405aa778"/>
        <function-ref name="stop" scoped="" ref="0x405aa9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x405a4ea8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x405a4ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4059f908"/>
        <function-ref name="test" scoped="" ref="0x405a1c98"/>
        <function-ref name="get" scoped="" ref="0x405a1508"/>
        <function-ref name="reset" scoped="" ref="0x405a1f10"/>
        <function-ref name="getMode" scoped="" ref="0x4059fba8"/>
        <function-ref name="overflow" scoped="" ref="0x405a1a20"/>
        <function-ref name="isOn" scoped="" ref="0x4059f690"/>
        <function-ref name="set" scoped="" ref="0x405a1780"/>
        <function-ref name="start" scoped="" ref="0x4059f1a0"/>
        <function-ref name="stop" scoped="" ref="0x4059f418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x405b1150" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x405b1150"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x405b1328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x405a6be0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x405a6be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405b5690"/>
        <function-ref name="test" scoped="" ref="0x405b6a08"/>
        <function-ref name="fired" scoped="" ref="0x405b6790"/>
        <function-ref name="get" scoped="" ref="0x405b6278"/>
        <function-ref name="reset" scoped="" ref="0x405b6c80"/>
        <function-ref name="getMode" scoped="" ref="0x405b5930"/>
        <function-ref name="isOn" scoped="" ref="0x405b5418"/>
        <function-ref name="set" scoped="" ref="0x405b64f0"/>
        <function-ref name="start" scoped="" ref="0x405b6ef8"/>
        <function-ref name="stop" scoped="" ref="0x405b51a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x405a9830" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x405a9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405a62c0"/>
        <function-ref name="test" scoped="" ref="0x405a8628"/>
        <function-ref name="fired" scoped="" ref="0x405a83b0"/>
        <function-ref name="force" scoped="" ref="0x405a67d8"/>
        <function-ref name="get" scoped="" ref="0x405a9e78"/>
        <function-ref name="reset" scoped="" ref="0x405a88a0"/>
        <function-ref name="getMode" scoped="" ref="0x405a6560"/>
        <function-ref name="isOn" scoped="" ref="0x405a6048"/>
        <function-ref name="set" scoped="" ref="0x405a8110"/>
        <function-ref name="start" scoped="" ref="0x405a8b18"/>
        <function-ref name="stop" scoped="" ref="0x405a8d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40616d18" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40616d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045bd20"/>
            <typename><typedef-ref name="T62khz" ref="0x4045bec8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40608478"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40608968"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406086f0"/>
        <function-ref name="overflow" scoped="" ref="0x40608be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40614088" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40614088"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40614260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406144c0" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406144c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045bd20"/>
            <typename><typedef-ref name="T62khz" ref="0x4045bec8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40614c10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4062b110"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40614e88"/>
        <function-ref name="overflow" scoped="" ref="0x4062b388"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x4062b658" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x4062b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x406290b8"/>
        <function-ref name="test" scoped="" ref="0x4062a448"/>
        <function-ref name="get" scoped="" ref="0x4062bca0"/>
        <function-ref name="reset" scoped="" ref="0x4062a6c0"/>
        <function-ref name="getMode" scoped="" ref="0x40629358"/>
        <function-ref name="overflow" scoped="" ref="0x4062a1d0"/>
        <function-ref name="isOn" scoped="" ref="0x4062ae28"/>
        <function-ref name="set" scoped="" ref="0x4062bf18"/>
        <function-ref name="start" scoped="" ref="0x4062a938"/>
        <function-ref name="stop" scoped="" ref="0x4062abb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406267b0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406267b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb18"/>
            <typename><typedef-ref name="TMilli" ref="0x403ecce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40626f00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40623418"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406231a0"/>
        <function-ref name="overflow" scoped="" ref="0x40623690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40637380" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40637380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045bd20"/>
            <typename><typedef-ref name="T62khz" ref="0x4045bec8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40637ad0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40636010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40637d48"/>
        <function-ref name="overflow" scoped="" ref="0x40636288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406380c0" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406380c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb18"/>
            <typename><typedef-ref name="TMilli" ref="0x403ecce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40638810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40638d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40638a88"/>
        <function-ref name="overflow" scoped="" ref="0x40637010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x409636f0" loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x409636f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb18"/>
            <typename><typedef-ref name="TMilli" ref="0x403ecce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40962ba0"/>
        <function-ref name="fired" scoped="" ref="0x40962370"/>
        <function-ref name="startAt" scoped="" ref="0x40962860"/>
        <function-ref name="isRunning" scoped="" ref="0x409625e8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40962e18"/>
        <function-ref name="start" scoped="" ref="0x40963e40"/>
        <function-ref name="stop" scoped="" ref="0x409620f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x4095f3b8" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x4095f3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4045bd20"/>
            <typename><typedef-ref name="T62khz" ref="0x4045bec8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4095e878"/>
        <function-ref name="fired" scoped="" ref="0x4095e048"/>
        <function-ref name="startAt" scoped="" ref="0x4095e538"/>
        <function-ref name="isRunning" scoped="" ref="0x4095e2c0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4095eaf0"/>
        <function-ref name="start" scoped="" ref="0x4095fb08"/>
        <function-ref name="stop" scoped="" ref="0x4095fda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40960180" loc="68:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40960180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb18"/>
            <typename><typedef-ref name="TMilli" ref="0x403ecce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409608d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40960dc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40960b48"/>
        <function-ref name="overflow" scoped="" ref="0x4095f048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40672658" loc="74:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40672658"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40672830"/>
        <function-ref name="runTask" scoped="" ref="0x40672910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40674cc8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40674cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb18"/>
            <typename><typedef-ref name="TMilli" ref="0x403ecce0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40672190"/>
        <function-ref name="fired" scoped="" ref="0x40673950"/>
        <function-ref name="startAt" scoped="" ref="0x40673e40"/>
        <function-ref name="isRunning" scoped="" ref="0x40673bc8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40672408"/>
        <function-ref name="start" scoped="" ref="0x40673438"/>
        <function-ref name="stop" scoped="" ref="0x406736d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40664968" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40664968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb18"/>
            <typename><typedef-ref name="TMilli" ref="0x403ecce0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406744c8"/>
        <function-ref name="fired" scoped="" ref="0x40663768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40663e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40663c18"/>
        <function-ref name="getdt" scoped="" ref="0x40674978"/>
        <function-ref name="gett0" scoped="" ref="0x40674720"/>
        <function-ref name="isRunning" scoped="" ref="0x406639c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40663010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406741a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40663290"/>
        <function-ref name="stop" scoped="" ref="0x40663510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x406a82b8" loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x406a82b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406a8490"/>
        <function-ref name="runTask" scoped="" ref="0x406a8570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x406ab0c0" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x406ab0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb18"/>
            <typename><typedef-ref name="TMilli" ref="0x403ecce0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406aaba8"/>
        <function-ref name="fired" scoped="" ref="0x406abe40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406aa568"/>
        <function-ref name="isOneShot" scoped="" ref="0x406aa310"/>
        <function-ref name="getdt" scoped="" ref="0x406a8068"/>
        <function-ref name="gett0" scoped="" ref="0x406aae00"/>
        <function-ref name="isRunning" scoped="" ref="0x406aa0b8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406ab6e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406aa888"/>
        <function-ref name="startOneShot" scoped="" ref="0x406ab968"/>
        <function-ref name="stop" scoped="" ref="0x406abbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40683cc8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40683cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb18"/>
            <typename><typedef-ref name="TMilli" ref="0x403ecce0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406ac8d8"/>
        <function-ref name="fired" scoped="" ref="0x40682ad8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406ac278"/>
        <function-ref name="isOneShot" scoped="" ref="0x406ac010"/>
        <function-ref name="getdt" scoped="" ref="0x406acda8"/>
        <function-ref name="gett0" scoped="" ref="0x406acb40"/>
        <function-ref name="isRunning" scoped="" ref="0x40682d40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40682350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406ac5a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x406825e0"/>
        <function-ref name="stop" scoped="" ref="0x40682870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406a40f0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406a40f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb18"/>
            <typename><typedef-ref name="TMilli" ref="0x403ecce0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406b8be0"/>
        <function-ref name="fired" scoped="" ref="0x406a4e70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406b85a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x406b8348"/>
        <function-ref name="getdt" scoped="" ref="0x406b70b8"/>
        <function-ref name="gett0" scoped="" ref="0x406b8e38"/>
        <function-ref name="isRunning" scoped="" ref="0x406b80f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406a4718"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406b88c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x406a4998"/>
        <function-ref name="stop" scoped="" ref="0x406a4c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406b7e70" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406b7e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x403ecb18"/>
            <typename><typedef-ref name="TMilli" ref="0x403ecce0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406b4988"/>
        <function-ref name="fired" scoped="" ref="0x406b6c10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406b4348"/>
        <function-ref name="isOneShot" scoped="" ref="0x406b40f0"/>
        <function-ref name="getdt" scoped="" ref="0x406b4e38"/>
        <function-ref name="gett0" scoped="" ref="0x406b4be0"/>
        <function-ref name="isRunning" scoped="" ref="0x406b6e68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406b64b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406b4668"/>
        <function-ref name="startOneShot" scoped="" ref="0x406b6738"/>
        <function-ref name="stop" scoped="" ref="0x406b69b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x406becc0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x406becc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406bee98"/>
        <function-ref name="receive" scoped="" ref="0x406b0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x406be3f0" loc="38:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x406be3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406be5c8"/>
        <function-ref name="receivedByte" scoped="" ref="0x406be6a8"/>
        <function-ref name="receive" scoped="" ref="0x406be788"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x406be868"/>
        <function-ref name="receiveDone" scoped="" ref="0x406be948"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x406bea28"/>
        <function-ref name="sendDone" scoped="" ref="0x406beb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x406b01d8" loc="40:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x406b01d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406b03b0"/>
        <function-ref name="stop" scoped="" ref="0x406b0490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40815410" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1C.nc">
      <component-ref qname="PlatformSerialC.Uart1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40815410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x408155e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x408156c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40814170" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1C.nc">
      <component-ref qname="PlatformSerialC.Uart1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40814170"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40814348"/>
        <function-ref name="receive" scoped="" ref="0x40814428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1281UartConfigure" ref="0x40814588" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1C.nc">
      <component-ref qname="PlatformSerialC.Uart1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1281UartConfigure" scoped="" ref="0x40814588"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1281UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x40814760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40815828" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1C.nc">
      <component-ref qname="PlatformSerialC.Uart1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40815828"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40815a00"/>
        <function-ref name="receivedByte" scoped="" ref="0x40815ae0"/>
        <function-ref name="receive" scoped="" ref="0x40815bc0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40815ca0"/>
        <function-ref name="receiveDone" scoped="" ref="0x40815d80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40815e60"/>
        <function-ref name="sendDone" scoped="" ref="0x40814010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x406bfd28" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1C.nc">
      <component-ref qname="PlatformSerialC.Uart1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406bfd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406bff00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40815010"/>
        <function-ref name="request" scoped="" ref="0x408150f0"/>
        <function-ref name="granted" scoped="" ref="0x408151d0"/>
        <function-ref name="isOwner" scoped="" ref="0x408152b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x406edad0" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <component-ref qname="Atm1281Uart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x406edad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x406edca8"/>
        <function-ref name="configure" scoped="" ref="0x406edd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x406efe08" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <component-ref qname="Atm1281Uart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x406efe08"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406ec010"/>
        <function-ref name="receive" scoped="" ref="0x406ec0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1281UartConfigure" ref="0x406eb8c8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <component-ref qname="Atm1281Uart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1281UartConfigure" scoped="" ref="0x406eb8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1281UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x406ebaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x406ef258" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <component-ref qname="Atm1281Uart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x406ef258"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406ef430"/>
        <function-ref name="receivedByte" scoped="" ref="0x406ef510"/>
        <function-ref name="receive" scoped="" ref="0x406ef5f0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x406ef6d0"/>
        <function-ref name="receiveDone" scoped="" ref="0x406ef7b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x406ef890"/>
        <function-ref name="sendDone" scoped="" ref="0x406ef970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x406ec630" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <component-ref qname="Atm1281Uart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UsartResource" scoped="" ref="0x406ec630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406ec808"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406ec8e8"/>
        <function-ref name="request" scoped="" ref="0x406ec9c8"/>
        <function-ref name="granted" scoped="" ref="0x406ecaa8"/>
        <function-ref name="isOwner" scoped="" ref="0x406ecb88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x406da120" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <component-ref qname="Atm1281Uart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406da120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406da2f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406da3d8"/>
        <function-ref name="request" scoped="" ref="0x406da4b8"/>
        <function-ref name="granted" scoped="" ref="0x406da598"/>
        <function-ref name="isOwner" scoped="" ref="0x406da678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x406eb100" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Uart1P.nc">
      <component-ref qname="Atm1281Uart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UsartInterrupts" scoped="" ref="0x406eb100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1281UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x406eb2d8"/>
        <function-ref name="txDone" scoped="" ref="0x406eb3b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x406e7770" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
      <component-ref qname="Atm1281Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x406e7770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x406e7958"/>
        <function-ref name="configure" scoped="" ref="0x406e7a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x406e7c30" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
      <component-ref qname="Atm1281Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x406e7c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406e7e18"/>
        <function-ref name="receive" scoped="" ref="0x406e7ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm1281UartConfigure" ref="0x4072a208" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
      <component-ref qname="Atm1281Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1281UartConfigure" scoped="" ref="0x4072a208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1281UartConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x4072a3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x4072a570" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
      <component-ref qname="Atm1281Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Usart" scoped="" ref="0x4072a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1281Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x4072a748"/>
        <function-ref name="enableUart" scoped="" ref="0x4072a828"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x4072a908"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x4072a9e8"/>
        <function-ref name="resetUsart" scoped="" ref="0x4072aac8"/>
        <function-ref name="disableIntr" scoped="" ref="0x4072aba8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x4072ac88"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x4072ad68"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x4072ae48"/>
        <function-ref name="isUart" scoped="" ref="0x4072af28"/>
        <function-ref name="enableIntr" scoped="" ref="0x40729018"/>
        <function-ref name="isSpi" scoped="" ref="0x407290f8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x407291d8"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x40729338"/>
        <function-ref name="tx" scoped="" ref="0x40729418"/>
        <function-ref name="disableUart" scoped="" ref="0x407294f8"/>
        <function-ref name="enableSpi" scoped="" ref="0x407295d8"/>
        <function-ref name="setModeUart" scoped="" ref="0x407296b8"/>
        <function-ref name="clrIntr" scoped="" ref="0x40729798"/>
        <function-ref name="setModeSpi" scoped="" ref="0x40729878"/>
        <function-ref name="rx" scoped="" ref="0x40729958"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x40729a38"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x40729b18"/>
        <function-ref name="disableSpi" scoped="" ref="0x40729bf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x4072b108" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
      <component-ref qname="Atm1281Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x4072b108"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4072b2f0"/>
        <function-ref name="receivedByte" scoped="" ref="0x4072b3d0"/>
        <function-ref name="receive" scoped="" ref="0x4072b4b0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x4072b590"/>
        <function-ref name="receiveDone" scoped="" ref="0x4072b670"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4072b750"/>
        <function-ref name="sendDone" scoped="" ref="0x4072b830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40728370" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
      <component-ref qname="Atm1281Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40728370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404233b0"/>
            <typename><typedef-ref name="TMicro" ref="0x40423578"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40728ac0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40727010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40728d38"/>
        <function-ref name="overflow" scoped="" ref="0x40727288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x4072ba48" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
      <component-ref qname="Atm1281Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UsartResource" scoped="" ref="0x4072ba48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4072bc30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4072bd10"/>
        <function-ref name="request" scoped="" ref="0x4072bdf0"/>
        <function-ref name="granted" scoped="" ref="0x4072bed0"/>
        <function-ref name="isOwner" scoped="" ref="0x4072a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x406e7010" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
      <component-ref qname="Atm1281Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406e7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406e71f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406e72d8"/>
        <function-ref name="request" scoped="" ref="0x406e73b8"/>
        <function-ref name="granted" scoped="" ref="0x406e7498"/>
        <function-ref name="isOwner" scoped="" ref="0x406e7578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x40729e10" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
      <component-ref qname="Atm1281Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UsartInterrupts" scoped="" ref="0x40729e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1281UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x40728010"/>
        <function-ref name="txDone" scoped="" ref="0x407280f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x407274b8" loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartP.nc">
      <component-ref qname="Atm1281Uart1P.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407274b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40727690"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40727770"/>
        <function-ref name="led1On" scoped="" ref="0x40727850"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40727930"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40727a10"/>
        <function-ref name="get" scoped="" ref="0x40727af0"/>
        <function-ref name="led1Off" scoped="" ref="0x40727bd0"/>
        <function-ref name="led2On" scoped="" ref="0x4073e010"/>
        <function-ref name="set" scoped="" ref="0x40727d90"/>
        <function-ref name="led2Off" scoped="" ref="0x40727cb0"/>
        <function-ref name="led0On" scoped="" ref="0x40727e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x4073cdb8" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1C.nc">
      <component-ref qname="HplAtm1281Usart1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Usart" scoped="" ref="0x4073cdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1281Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40739010"/>
        <function-ref name="enableUart" scoped="" ref="0x407390f0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x407391d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x407392b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x40739390"/>
        <function-ref name="disableIntr" scoped="" ref="0x40739470"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40739550"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40739630"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40739710"/>
        <function-ref name="isUart" scoped="" ref="0x407397f0"/>
        <function-ref name="enableIntr" scoped="" ref="0x407398d0"/>
        <function-ref name="isSpi" scoped="" ref="0x407399b0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40739a90"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x40739bf0"/>
        <function-ref name="tx" scoped="" ref="0x40739cd0"/>
        <function-ref name="disableUart" scoped="" ref="0x40739db0"/>
        <function-ref name="enableSpi" scoped="" ref="0x40739e90"/>
        <function-ref name="setModeUart" scoped="" ref="0x40738010"/>
        <function-ref name="clrIntr" scoped="" ref="0x407380f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x407381d0"/>
        <function-ref name="rx" scoped="" ref="0x407382b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x40738390"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x40738470"/>
        <function-ref name="disableSpi" scoped="" ref="0x40738550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UsartInterrupts" ref="0x40738848" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1C.nc">
      <component-ref qname="HplAtm1281Usart1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UsartInterrupts" scoped="" ref="0x40738848"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1281UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x40738a20"/>
        <function-ref name="txDone" scoped="" ref="0x40738b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUsart" ref="0x407363d0" loc="71:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1P.nc">
      <component-ref qname="HplAtm1281Usart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUsart" scoped="" ref="0x407363d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1281Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x407365a8"/>
        <function-ref name="enableUart" scoped="" ref="0x40736688"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40736768"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x40736848"/>
        <function-ref name="resetUsart" scoped="" ref="0x40736928"/>
        <function-ref name="disableIntr" scoped="" ref="0x40736a08"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40736ae8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40736bc8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40736ca8"/>
        <function-ref name="isUart" scoped="" ref="0x40736d88"/>
        <function-ref name="enableIntr" scoped="" ref="0x40736e68"/>
        <function-ref name="isSpi" scoped="" ref="0x40733010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x407330f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x40733250"/>
        <function-ref name="tx" scoped="" ref="0x40733330"/>
        <function-ref name="disableUart" scoped="" ref="0x40733410"/>
        <function-ref name="enableSpi" scoped="" ref="0x407334f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x407335d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x407336b0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x40733790"/>
        <function-ref name="rx" scoped="" ref="0x40733870"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x40733950"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x40733a30"/>
        <function-ref name="disableSpi" scoped="" ref="0x40733b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40749760" loc="76:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1P.nc">
      <component-ref qname="HplAtm1281Usart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40749760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40749938"/>
        <function-ref name="isInput" scoped="" ref="0x40749a18"/>
        <function-ref name="toggle" scoped="" ref="0x40749af8"/>
        <function-ref name="isOutput" scoped="" ref="0x40749bd8"/>
        <function-ref name="get" scoped="" ref="0x40749cb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40749d98"/>
        <function-ref name="set" scoped="" ref="0x40749e78"/>
        <function-ref name="clr" scoped="" ref="0x40748010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x4074a330" loc="74:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1P.nc">
      <component-ref qname="HplAtm1281Usart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x4074a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4074a508"/>
        <function-ref name="isInput" scoped="" ref="0x4074a5e8"/>
        <function-ref name="toggle" scoped="" ref="0x4074a6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4074a7a8"/>
        <function-ref name="get" scoped="" ref="0x4074a888"/>
        <function-ref name="makeOutput" scoped="" ref="0x4074a968"/>
        <function-ref name="set" scoped="" ref="0x4074aa48"/>
        <function-ref name="clr" scoped="" ref="0x4074ab28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UsartInterrupts" ref="0x40733e28" loc="72:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1P.nc">
      <component-ref qname="HplAtm1281Usart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UsartInterrupts" scoped="" ref="0x40733e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1281UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x4074a050"/>
        <function-ref name="txDone" scoped="" ref="0x4074a130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x407481f8" loc="77:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1P.nc">
      <component-ref qname="HplAtm1281Usart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x407481f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x407483d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x4074ad38" loc="75:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart1P.nc">
      <component-ref qname="HplAtm1281Usart1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x4074ad38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4074af10"/>
        <function-ref name="isInput" scoped="" ref="0x40749010"/>
        <function-ref name="toggle" scoped="" ref="0x407490f0"/>
        <function-ref name="isOutput" scoped="" ref="0x407491d0"/>
        <function-ref name="get" scoped="" ref="0x407492b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40749390"/>
        <function-ref name="set" scoped="" ref="0x40749470"/>
        <function-ref name="clr" scoped="" ref="0x40749550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40779358" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40779358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404233b0"/>
            <typename><typedef-ref name="TMicro" ref="0x40423578"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40779aa8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40778010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40779d20"/>
        <function-ref name="overflow" scoped="" ref="0x40778288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40776b40" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40776b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40763878"/>
            <typename><typedef-ref name="TMcu" ref="0x40763c28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40774308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407747f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40774580"/>
        <function-ref name="overflow" scoped="" ref="0x40774a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40777908" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40777908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404233b0"/>
            <typename><typedef-ref name="TMicro" ref="0x40423578"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40776068"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40776558"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407762e0"/>
        <function-ref name="overflow" scoped="" ref="0x407767d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407738a0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <component-ref qname="CounterMcu32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407738a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40763878"/>
            <typename><typedef-ref name="TMcu" ref="0x40763c28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40770010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40770500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40770288"/>
        <function-ref name="overflow" scoped="" ref="0x40770778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40784078" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40784078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40763878"/>
            <typename><typedef-ref name="TMcu" ref="0x40763c28"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407847c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40784cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40784a40"/>
        <function-ref name="overflow" scoped="" ref="0x40783010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40786dd8" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40786dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40763878"/>
            <typename><typedef-ref name="TMcu" ref="0x40763c28"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40785570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40785a60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407857e8"/>
        <function-ref name="overflow" scoped="" ref="0x40785cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4077f128" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <component-ref qname="CounterMcu16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4077f128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40763878"/>
            <typename><typedef-ref name="TMcu" ref="0x40763c28"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4077f878"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4077fd68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4077faf0"/>
        <function-ref name="overflow" scoped="" ref="0x4077e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4077d2c0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4077d2c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4077d498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4077d6f8" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4077d6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40763878"/>
            <typename><typedef-ref name="TMcu" ref="0x40763c28"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4077de48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4077c350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4077c0d8"/>
        <function-ref name="overflow" scoped="" ref="0x4077c5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x4077c898" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x4077c898"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40791300"/>
        <function-ref name="test" scoped="" ref="0x40792688"/>
        <function-ref name="get" scoped="" ref="0x4077cee0"/>
        <function-ref name="reset" scoped="" ref="0x40792900"/>
        <function-ref name="getMode" scoped="" ref="0x407915a0"/>
        <function-ref name="overflow" scoped="" ref="0x40792410"/>
        <function-ref name="isOn" scoped="" ref="0x40791088"/>
        <function-ref name="set" scoped="" ref="0x40792170"/>
        <function-ref name="start" scoped="" ref="0x40792b78"/>
        <function-ref name="stop" scoped="" ref="0x40792df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407873f8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x407873f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4079eee0"/>
        <function-ref name="test" scoped="" ref="0x4079e288"/>
        <function-ref name="fired" scoped="" ref="0x4079e010"/>
        <function-ref name="get" scoped="" ref="0x40787a40"/>
        <function-ref name="reset" scoped="" ref="0x4079e500"/>
        <function-ref name="getMode" scoped="" ref="0x4079d1c0"/>
        <function-ref name="isOn" scoped="" ref="0x4079ec68"/>
        <function-ref name="set" scoped="" ref="0x40787cb8"/>
        <function-ref name="start" scoped="" ref="0x4079e778"/>
        <function-ref name="stop" scoped="" ref="0x4079e9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40790b08" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40790b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4078b600"/>
        <function-ref name="test" scoped="" ref="0x4078d990"/>
        <function-ref name="get" scoped="" ref="0x4078d200"/>
        <function-ref name="reset" scoped="" ref="0x4078dc08"/>
        <function-ref name="getMode" scoped="" ref="0x4078b8a0"/>
        <function-ref name="overflow" scoped="" ref="0x4078d718"/>
        <function-ref name="isOn" scoped="" ref="0x4078b388"/>
        <function-ref name="set" scoped="" ref="0x4078d478"/>
        <function-ref name="start" scoped="" ref="0x4078de80"/>
        <function-ref name="stop" scoped="" ref="0x4078b110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4078a010" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4078a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40789a68"/>
        <function-ref name="test" scoped="" ref="0x4078ade8"/>
        <function-ref name="fired" scoped="" ref="0x4078ab70"/>
        <function-ref name="force" scoped="" ref="0x40787010"/>
        <function-ref name="get" scoped="" ref="0x4078a658"/>
        <function-ref name="reset" scoped="" ref="0x40789088"/>
        <function-ref name="getMode" scoped="" ref="0x40789d08"/>
        <function-ref name="isOn" scoped="" ref="0x407897f0"/>
        <function-ref name="set" scoped="" ref="0x4078a8d0"/>
        <function-ref name="start" scoped="" ref="0x40789300"/>
        <function-ref name="stop" scoped="" ref="0x40789578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40797e48" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40797e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407948d8"/>
        <function-ref name="test" scoped="" ref="0x40796c68"/>
        <function-ref name="fired" scoped="" ref="0x407969f0"/>
        <function-ref name="force" scoped="" ref="0x40794df0"/>
        <function-ref name="get" scoped="" ref="0x407964d8"/>
        <function-ref name="reset" scoped="" ref="0x40796ee0"/>
        <function-ref name="getMode" scoped="" ref="0x40794b78"/>
        <function-ref name="isOn" scoped="" ref="0x40794660"/>
        <function-ref name="set" scoped="" ref="0x40796750"/>
        <function-ref name="start" scoped="" ref="0x40794170"/>
        <function-ref name="stop" scoped="" ref="0x407943e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40793238" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40793238"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407aaca0"/>
        <function-ref name="test" scoped="" ref="0x407aa048"/>
        <function-ref name="fired" scoped="" ref="0x40793d98"/>
        <function-ref name="get" scoped="" ref="0x40793880"/>
        <function-ref name="reset" scoped="" ref="0x407aa2c0"/>
        <function-ref name="getMode" scoped="" ref="0x407a9010"/>
        <function-ref name="isOn" scoped="" ref="0x407aaa28"/>
        <function-ref name="set" scoped="" ref="0x40793af8"/>
        <function-ref name="start" scoped="" ref="0x407aa538"/>
        <function-ref name="stop" scoped="" ref="0x407aa7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x407a92c8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x407a92c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x407a94a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x407a96b8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x407a96b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x407a9890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4079dd30" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4079dd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407977b0"/>
        <function-ref name="test" scoped="" ref="0x40798b20"/>
        <function-ref name="get" scoped="" ref="0x40798390"/>
        <function-ref name="reset" scoped="" ref="0x40798d98"/>
        <function-ref name="getMode" scoped="" ref="0x40797a50"/>
        <function-ref name="overflow" scoped="" ref="0x407988a8"/>
        <function-ref name="isOn" scoped="" ref="0x40797538"/>
        <function-ref name="set" scoped="" ref="0x40798608"/>
        <function-ref name="start" scoped="" ref="0x40797048"/>
        <function-ref name="stop" scoped="" ref="0x407972c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x409b1330" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Usart1C.nc">
      <component-ref qname="PlatformSerialC.Uart1.UsartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x409b1330"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x409b1508"/>
        <function-ref name="immediateRequested" scoped="" ref="0x409b15e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x409ae828" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Usart1C.nc">
      <component-ref qname="PlatformSerialC.Uart1.UsartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x409ae828"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x409aea00"/>
        <function-ref name="configure" scoped="" ref="0x409aeae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409b2ba0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Usart1C.nc">
      <component-ref qname="PlatformSerialC.Uart1.UsartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409b2ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409b2d78"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409b2e58"/>
        <function-ref name="request" scoped="" ref="0x409b1010"/>
        <function-ref name="granted" scoped="" ref="0x409b10f0"/>
        <function-ref name="isOwner" scoped="" ref="0x409b11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm1281UsartInterrupts" ref="0x409ae410" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Usart1C.nc">
      <component-ref qname="PlatformSerialC.Uart1.UsartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1281UsartInterrupts" scoped="" ref="0x409ae410"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1281UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x409ae5e8"/>
        <function-ref name="txDone" scoped="" ref="0x409ae6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x409b1748" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Usart1C.nc">
      <component-ref qname="PlatformSerialC.Uart1.UsartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x409b1748"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x409b1920"/>
        <function-ref name="userId" scoped="" ref="0x409b1a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm1281Usart" ref="0x409b1b60" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281Usart1C.nc">
      <component-ref qname="PlatformSerialC.Uart1.UsartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm1281Usart" scoped="" ref="0x409b1b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1281Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x409b1d38"/>
        <function-ref name="enableUart" scoped="" ref="0x409b1e18"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x409b1ef8"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x409af010"/>
        <function-ref name="resetUsart" scoped="" ref="0x409af0f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x409af1d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x409af2b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x409af390"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x409af470"/>
        <function-ref name="isUart" scoped="" ref="0x409af550"/>
        <function-ref name="enableIntr" scoped="" ref="0x409af630"/>
        <function-ref name="isSpi" scoped="" ref="0x409af710"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x409af7f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x409af950"/>
        <function-ref name="tx" scoped="" ref="0x409afa30"/>
        <function-ref name="disableUart" scoped="" ref="0x409afb10"/>
        <function-ref name="enableSpi" scoped="" ref="0x409afbf0"/>
        <function-ref name="setModeUart" scoped="" ref="0x409afcd0"/>
        <function-ref name="clrIntr" scoped="" ref="0x409afdb0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x409afe90"/>
        <function-ref name="rx" scoped="" ref="0x409ae010"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x409ae0f0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x409ae1d0"/>
        <function-ref name="disableSpi" scoped="" ref="0x409ae2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x407dcba0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <component-ref qname="Atm1281UsartShare1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x407dcba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x407dcd78"/>
        <function-ref name="immediateRequested" scoped="" ref="0x407dce58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x407da7e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <component-ref qname="Atm1281UsartShare1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x407da7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x407da9c0"/>
        <function-ref name="configure" scoped="" ref="0x407daaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x407c59e8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <component-ref qname="Atm1281UsartShare1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupts" scoped="" ref="0x407c59e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1281UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x407c5bc0"/>
        <function-ref name="txDone" scoped="" ref="0x407c5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x407dc158" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <component-ref qname="Atm1281UsartShare1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x407dc158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407dc330"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407dc410"/>
        <function-ref name="request" scoped="" ref="0x407dc4f0"/>
        <function-ref name="granted" scoped="" ref="0x407dc5d0"/>
        <function-ref name="isOwner" scoped="" ref="0x407dc6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x407da040" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShare1P.nc">
      <component-ref qname="Atm1281UsartShare1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x407da040"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x407da218"/>
        <function-ref name="userId" scoped="" ref="0x407da2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x407d8a18" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShareP.nc">
      <component-ref qname="Atm1281UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupts" scoped="" ref="0x407d8a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1281UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x407d8c00"/>
        <function-ref name="txDone" scoped="" ref="0x407d8ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x407d7290" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShareP.nc">
      <component-ref qname="Atm1281UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x407d7290"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x407d7468"/>
        <function-ref name="userId" scoped="" ref="0x407d7548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x407d8e60" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UsartShareP.nc">
      <component-ref qname="Atm1281UsartShare1P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RawInterrupts" scoped="" ref="0x407d8e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm1281UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x407d7050"/>
        <function-ref name="txDone" scoped="" ref="0x407d7130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x407e9490" loc="86:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1281UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x407e9490"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x407e9678"/>
        <function-ref name="immediateRequested" scoped="" ref="0x407e9758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x407e9d48" loc="89:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1281UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x407e9d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4081d010"/>
        <function-ref name="configure" scoped="" ref="0x4081d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x407ead40" loc="85:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1281UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x407ead40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407eaf28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407e9018"/>
        <function-ref name="request" scoped="" ref="0x407e90f8"/>
        <function-ref name="granted" scoped="" ref="0x407e91d8"/>
        <function-ref name="isOwner" scoped="" ref="0x407e92b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x407e9898" loc="87:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm1281UsartShare1P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x407e9898"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x407e9a70"/>
        <function-ref name="userId" scoped="" ref="0x407e9b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409fec00" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm1281UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409fec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409fedd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x409fc010" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm1281UsartShare1P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x409fc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x409fc1e8"/>
        <function-ref name="isEmpty" scoped="" ref="0x409fc2c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x409fc3a8"/>
        <function-ref name="dequeue" scoped="" ref="0x409fc488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x409fb750" loc="52:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1281UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x409fb750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x409fb938"/>
        <function-ref name="immediateRequested" scoped="" ref="0x409fba18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x409fa030" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1281UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x409fa030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x409fa218"/>
        <function-ref name="configure" scoped="" ref="0x409fa2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x409fa458" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1281UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x409fa458"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x409fa630"/>
        <function-ref name="isEmpty" scoped="" ref="0x409fa710"/>
        <function-ref name="isEnqueued" scoped="" ref="0x409fa7f0"/>
        <function-ref name="dequeue" scoped="" ref="0x409fa8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409fb010" loc="51:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1281UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409fb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409fb1f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409fb2d8"/>
        <function-ref name="request" scoped="" ref="0x409fb3b8"/>
        <function-ref name="granted" scoped="" ref="0x409fb498"/>
        <function-ref name="isOwner" scoped="" ref="0x409fb578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x409fbb58" loc="53:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1281UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x409fbb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x409fbd30"/>
        <function-ref name="userId" scoped="" ref="0x409fbe10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x409faa50" loc="69:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm1281UsartShare1P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x409faa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409fac28"/>
        <function-ref name="runTask" scoped="" ref="0x409fad08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm1281UartConfigure" ref="0x40813c58" loc="6:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialP.nc">
      <component-ref qname="PlatformSerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm1281UartConfigure" scoped="" ref="0x40813c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm1281UartConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x40813e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x4082a010" loc="7:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialP.nc">
      <component-ref qname="PlatformSerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4082a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4082a1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4082a2c8"/>
        <function-ref name="request" scoped="" ref="0x4082a3a8"/>
        <function-ref name="granted" scoped="" ref="0x4082a488"/>
        <function-ref name="isOwner" scoped="" ref="0x4082a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40813770" loc="5:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialP.nc">
      <component-ref qname="PlatformSerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40813770"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40813948"/>
        <function-ref name="stop" scoped="" ref="0x40813a28"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403f29d0" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x4002edb0" loc="60:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x404124e8" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x40412390" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x4040da78" loc="31:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x4040a168" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4040a010" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x4040a830" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4040a6d8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x4040ad88" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403327e0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402ff138" loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40332c20" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x40304010" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40304528" loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403d0418" loc="76:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403df808" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x403b7bc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x403e3090" loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x403e34d8" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x403e3958" loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x403e21d8" loc="83:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x403e2ec8" loc="100:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403e1390" loc="117:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x403e3d80" loc="77:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403e1ad0" loc="134:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x403e1978" loc="134:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x403e5c58" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x403e2658" loc="89:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x403e2a80" loc="94:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403e0950" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40489968" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40489968"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4049a1a8" loc="136:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40490010" loc="83:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x4048f170" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40490e08" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4048f010" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x40490960" loc="98:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x4049ab20" loc="151:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x4049a5f0" loc="144:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x404904a0" loc="92:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40491010" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40489e68" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x4048fb58" loc="129:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4048f810" loc="129:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4048f9f8" loc="129:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x404916a8" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40491550" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40491b78" loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x404a5088" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x4049bef0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x404a5920" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x404a55b8" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x404a57c0" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PushButton" loc="2:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButton.nc">
      <function command="" provided="0" name="get" ref="0x4049ed98" loc="4:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButton.nc">
        <interfacedef-ref qname="PushButton"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="waitUntilPressed" ref="0x4049b1c8" loc="5:/home/alpsayin/tinyos_workspace/BlinkWithSwitch/src/PushButton.nc">
        <interfacedef-ref qname="PushButton"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x4049db28" loc="95:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404a3010" loc="105:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x404bb010" loc="44:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x404bb3f8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x404ae7d0" loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x404bbbc8" loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x404aeb90" loc="43:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x404bb7d0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x404ae090" loc="40:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x404ae420" loc="41:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4055b9d8" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4055b9d8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4055bb40" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055bb40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40564eb0" loc="109:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055bb40"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40565ac8" loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40564868" loc="103:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055bb40"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055bb40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40564518" loc="103:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055bb40"/></type-var>
          </variable>
          <variable name="dt" ref="0x40564708" loc="103:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055bb40"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40564010" loc="88:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40563368" loc="116:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055bb40"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40565188" loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055bb40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40565030" loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4055bb40"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40565668" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCompare" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x40571ac0" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
          <interfacedef-ref qname="AtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40571ac0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x4057c188" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x4057c030" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4056ecf8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4056e918" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x4057c960" loc="78:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4056e010" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40571ac0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4057d0c8" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x4057c598" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4057dc20" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4056e550" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40571ac0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4056e3f8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40571ac0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4057d490" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4057d840" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCounter" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x40568a90" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
          <interfacedef-ref qname="AtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40568a90"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x405721c0" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40572068" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40575d18" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40575010" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40568a90"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405730f8" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x405725d0" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40575938" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40573c50" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40575550" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40568a90"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x405753f8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40568a90"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405734c0" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40573870" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCapture" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x4059d570" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
          <interfacedef-ref qname="AtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4059d570"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x40598cf8" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40598ba0" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4059a7b8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4059a3d8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4059da68" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4059d570"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4059ab70" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x40597138" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x405987a0" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4059a010" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4059d570"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4059de50" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4059d570"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40598010" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405983c0" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406173c8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406173c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40617530" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40617530"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40617a18" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40617530"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40616510" loc="76:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40616010" loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40616938" loc="82:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x406ae360" loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x406ae010" loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406ae200" loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x406c2708" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x406c25b0" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x406c2f10" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x406c2bc0" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406c2db0" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x406c3b40" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x406c0da8" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x406c0858" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406c0a48" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x406c0c40" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x406c20f8" loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x406c31f0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x406aec70" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x406aee60" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x406c3088" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x406e38c8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x406e3ea0" loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm1281UartConfigure" loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartConfigure.nc">
      <documentation loc="30:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartConfigure.nc">
        <short>&#10; Interface used by Atm1281Uart clients to reconfigure the UART before use&#10; </short>
        <long>&#10; Interface used by Atm1281Uart clients to reconfigure the UART before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega1281 port)&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x406e2cc8" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/Atm1281UartConfigure.nc">
        <interfacedef-ref qname="Atm1281UartConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:5" alignment="I:1"><union-ref ref="0x406d53a0"/>
              <typename><typedef-ref name="Atm1281UartUnionConfig_t" ref="0x406d55c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x406e0010" loc="120:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x406e1638" loc="97:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x406e1038" loc="88:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x406e1ae8" loc="102:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x406e0708" loc="128:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x406ed5b8" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x406ed0f8" loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1281UsartInterrupts" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281UsartInterrupts.nc">
      <documentation loc="30:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281UsartInterrupts.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART. &#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information.&#10;&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega1281 port)&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x406e8b58" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281UsartInterrupts.nc">
        <documentation loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1281UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x406e8a00" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x406e8578" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281UsartInterrupts.nc">
        <documentation loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm1281UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm1281Usart" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega1281 port)&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x406f0488" loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x406f23e8" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x406f37a8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x40704de8" loc="68:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x406f5298" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x406f5ae0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x406f5f18" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x406f3370" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x406f3be8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x406f2010" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x406f56b8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x406f1a20" loc="58:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x406f0888" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x407045e0" loc="66:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x406f0d90" loc="63:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x406f0c38" loc="63:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x406f27c8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x406f11f0" loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x406f2e08" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:5" alignment="I:1"><union-ref ref="0x406d53a0"/>
                <typename><typedef-ref name="Atm1281UartUnionConfig_t" ref="0x406d55c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x406f2cb0" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:5" alignment="I:1"><union-ref ref="0x406d53a0"/>
                <typename><typedef-ref name="Atm1281UartUnionConfig_t" ref="0x406d55c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x40703580" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x406f0088" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:5" alignment="I:1"><union-ref ref="0x406cf010"/>
                <typename><typedef-ref name="Atm1281SpiUnionConfig_t" ref="0x406cf238"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x406f1ef0" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:5" alignment="I:1"><union-ref ref="0x406cf010"/>
                <typename><typedef-ref name="Atm1281SpiUnionConfig_t" ref="0x406cf238"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x407041a8" loc="64:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x40704a18" loc="67:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x407031c8" loc="69:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x406f15c8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm1281/usart/HplAtm1281Usart.nc">
        <interfacedef-ref qname="HplAtm1281Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x407c99c0" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x407c9ec0" loc="98:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x407dfa30" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x407e53c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x407df8d8" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x407e53c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x407e2690" loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x407e2d50" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x407e53c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x407e2bf8" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x407e53c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x407df348" loc="70:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x407e53c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
