   1               		.file	"main.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__ = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
  15               	.Ltext0:
  16               		.section	.text.printStr,"ax",@progbits
  17               	.global	printStr
  19               	printStr:
  20               	.LFB7:
  21               	.LSM0:
  22               	.LVL0:
  23               	/* prologue: function */
  24               	/* frame size = 0 */
  25               	/* stack size = 0 */
  26               	.L__stack_usage = 0
  27               	.LSM1:
  28 0000 E82F      		mov r30,r24
  29 0002 F92F      		mov r31,r25
  30 0004 80E0      		ldi r24,lo8(0)
  31               	.LVL1:
  32 0006 00C0      		rjmp .L2
  33               	.LVL2:
  34               	.L5:
  35               	.LSM2:
  36 0008 9081      		ld r25,Z
  37 000a 9093 CE00 		sts 206,r25
  38               	.L3:
  39               	.LSM3:
  40 000e 9091 C800 		lds r25,200
  41 0012 95FF      		sbrs r25,5
  42 0014 00C0      		rjmp .L3
  43               	.LSM4:
  44 0016 9191      		ld r25,Z+
  45 0018 9093 C600 		sts 198,r25
  46               	.L4:
  47               	.LSM5:
  48 001c 9091 C000 		lds r25,192
  49 0020 95FF      		sbrs r25,5
  50 0022 00C0      		rjmp .L4
  51               	.LSM6:
  52 0024 8F5F      		subi r24,lo8(-(1))
  53               	.LVL3:
  54               	.L2:
  55               	.LSM7:
  56 0026 8617      		cp r24,r22
  57 0028 00F0      		brlo .L5
  58               	/* epilogue start */
  59               	.LSM8:
  60 002a 0895      		ret
  61               	.LFE7:
  63               		.data
  64               	.LC0:
  65 0000 3078 2558 		.string	"0x%X%X\r\n"
  65      2558 0D0A 
  65      00
  66               		.section	.text.print_uint16,"ax",@progbits
  67               	.global	print_uint16
  69               	print_uint16:
  70               	.LFB8:
  71               	.LSM9:
  72               	.LVL4:
  73 0000 0F93      		push r16
  74 0002 1F93      		push r17
  75 0004 DF93      		push r29
  76 0006 CF93      		push r28
  77 0008 CDB7      		in r28,__SP_L__
  78 000a DEB7      		in r29,__SP_H__
  79 000c 6097      		sbiw r28,16
  80 000e 0FB6      		in __tmp_reg__,__SREG__
  81 0010 F894      		cli
  82 0012 DEBF      		out __SP_H__,r29
  83 0014 0FBE      		out __SREG__,__tmp_reg__
  84 0016 CDBF      		out __SP_L__,r28
  85               	/* prologue: function */
  86               	/* frame size = 16 */
  87               	/* stack size = 20 */
  88               	.L__stack_usage = 20
  89               	.LVL5:
  90               	.LSM10:
  91 0018 2DB7      		in r18,__SP_L__
  92 001a 3EB7      		in r19,__SP_H__
  93 001c 2850      		subi r18,lo8(-(-8))
  94 001e 3040      		sbci r19,hi8(-(-8))
  95 0020 0FB6      		in __tmp_reg__,__SREG__
  96 0022 F894      		cli
  97 0024 3EBF      		out __SP_H__,r19
  98 0026 0FBE      		out __SREG__,__tmp_reg__
  99 0028 2DBF      		out __SP_L__,r18
 100 002a EDB7      		in r30,__SP_L__
 101 002c FEB7      		in r31,__SP_H__
 102 002e 3196      		adiw r30,1
 103 0030 8E01      		movw r16,r28
 104 0032 0F5F      		subi r16,lo8(-(1))
 105 0034 1F4F      		sbci r17,hi8(-(1))
 106 0036 ADB7      		in r26,__SP_L__
 107 0038 BEB7      		in r27,__SP_H__
 108 003a 1296      		adiw r26,1+1
 109 003c 1C93      		st X,r17
 110 003e 0E93      		st -X,r16
 111 0040 1197      		sbiw r26,1
 112 0042 20E0      		ldi r18,lo8(.LC0)
 113 0044 30E0      		ldi r19,hi8(.LC0)
 114 0046 3383      		std Z+3,r19
 115 0048 2283      		std Z+2,r18
 116 004a 9483      		std Z+4,r25
 117 004c 1582      		std Z+5,__zero_reg__
 118 004e 9070      		andi r25,hi8(255)
 119               	.LVL6:
 120 0050 9783      		std Z+7,r25
 121 0052 8683      		std Z+6,r24
 122 0054 0E94 0000 		call sprintf
 123 0058 682F      		mov r22,r24
 124               	.LVL7:
 125               	.LSM11:
 126 005a 2DB7      		in r18,__SP_L__
 127 005c 3EB7      		in r19,__SP_H__
 128 005e 285F      		subi r18,lo8(-(8))
 129 0060 3F4F      		sbci r19,hi8(-(8))
 130 0062 0FB6      		in __tmp_reg__,__SREG__
 131 0064 F894      		cli
 132 0066 3EBF      		out __SP_H__,r19
 133 0068 0FBE      		out __SREG__,__tmp_reg__
 134 006a 2DBF      		out __SP_L__,r18
 135 006c C801      		movw r24,r16
 136               	.LVL8:
 137 006e 0E94 0000 		call printStr
 138               	.LVL9:
 139               	/* epilogue start */
 140               	.LSM12:
 141 0072 6096      		adiw r28,16
 142 0074 0FB6      		in __tmp_reg__,__SREG__
 143 0076 F894      		cli
 144 0078 DEBF      		out __SP_H__,r29
 145 007a 0FBE      		out __SREG__,__tmp_reg__
 146 007c CDBF      		out __SP_L__,r28
 147 007e CF91      		pop r28
 148 0080 DF91      		pop r29
 149 0082 1F91      		pop r17
 150 0084 0F91      		pop r16
 151 0086 0895      		ret
 152               	.LFE8:
 154               		.section	.text.setupUSART1,"ax",@progbits
 155               	.global	setupUSART1
 157               	setupUSART1:
 158               	.LFB9:
 159               	.LSM13:
 160               	/* prologue: function */
 161               	/* frame size = 0 */
 162               	/* stack size = 0 */
 163               	.L__stack_usage = 0
 164               	.LVL10:
 165               	.LSM14:
 166 0000 E5E6      		ldi r30,lo8(101)
 167 0002 F0E0      		ldi r31,hi8(101)
 168 0004 8081      		ld r24,Z
 169 0006 8E7F      		andi r24,lo8(-2)
 170 0008 8083      		st Z,r24
 171               	.LSM15:
 172 000a E8EC      		ldi r30,lo8(200)
 173 000c F0E0      		ldi r31,hi8(200)
 174 000e 8081      		ld r24,Z
 175 0010 8F77      		andi r24,lo8(127)
 176 0012 8083      		st Z,r24
 177               	.LSM16:
 178 0014 8081      		ld r24,Z
 179 0016 8F7B      		andi r24,lo8(-65)
 180 0018 8083      		st Z,r24
 181               	.LSM17:
 182 001a 8081      		ld r24,Z
 183 001c 8D7F      		andi r24,lo8(-3)
 184 001e 8083      		st Z,r24
 185               	.LSM18:
 186 0020 8081      		ld r24,Z
 187 0022 8E7F      		andi r24,lo8(-2)
 188 0024 8083      		st Z,r24
 189               	.LSM19:
 190 0026 A9EC      		ldi r26,lo8(201)
 191 0028 B0E0      		ldi r27,hi8(201)
 192 002a 8C91      		ld r24,X
 193 002c 8068      		ori r24,lo8(-128)
 194 002e 8C93      		st X,r24
 195               	.LSM20:
 196 0030 8C91      		ld r24,X
 197 0032 8F7B      		andi r24,lo8(-65)
 198 0034 8C93      		st X,r24
 199               	.LSM21:
 200 0036 8C91      		ld r24,X
 201 0038 8F7D      		andi r24,lo8(-33)
 202 003a 8C93      		st X,r24
 203               	.LSM22:
 204 003c 8C91      		ld r24,X
 205 003e 8061      		ori r24,lo8(16)
 206 0040 8C93      		st X,r24
 207               	.LSM23:
 208 0042 8C91      		ld r24,X
 209 0044 8860      		ori r24,lo8(8)
 210 0046 8C93      		st X,r24
 211               	.LSM24:
 212 0048 EAEC      		ldi r30,lo8(202)
 213 004a F0E0      		ldi r31,hi8(202)
 214 004c 8081      		ld r24,Z
 215 004e 8F77      		andi r24,lo8(127)
 216 0050 8083      		st Z,r24
 217               	.LSM25:
 218 0052 8081      		ld r24,Z
 219 0054 8F7B      		andi r24,lo8(-65)
 220 0056 8083      		st Z,r24
 221               	.LSM26:
 222 0058 8081      		ld r24,Z
 223 005a 8F7D      		andi r24,lo8(-33)
 224 005c 8083      		st Z,r24
 225               	.LSM27:
 226 005e 8081      		ld r24,Z
 227 0060 8F7E      		andi r24,lo8(-17)
 228 0062 8083      		st Z,r24
 229               	.LSM28:
 230 0064 8081      		ld r24,Z
 231 0066 877F      		andi r24,lo8(-9)
 232 0068 8083      		st Z,r24
 233               	.LSM29:
 234 006a 8C91      		ld r24,X
 235 006c 8B7F      		andi r24,lo8(-5)
 236 006e 8C93      		st X,r24
 237               	.LSM30:
 238 0070 8081      		ld r24,Z
 239 0072 8460      		ori r24,lo8(4)
 240 0074 8083      		st Z,r24
 241               	.LSM31:
 242 0076 8081      		ld r24,Z
 243 0078 8260      		ori r24,lo8(2)
 244 007a 8083      		st Z,r24
 245               	.LSM32:
 246 007c 1092 CD00 		sts 205,__zero_reg__
 247               	.LSM33:
 248 0080 8CE0      		ldi r24,lo8(12)
 249 0082 8093 CC00 		sts 204,r24
 250               	/* epilogue start */
 251               	.LSM34:
 252 0086 0895      		ret
 253               	.LFE9:
 255               		.section	.text.setupUSART0,"ax",@progbits
 256               	.global	setupUSART0
 258               	setupUSART0:
 259               	.LFB10:
 260               	.LSM35:
 261               	/* prologue: function */
 262               	/* frame size = 0 */
 263               	/* stack size = 0 */
 264               	.L__stack_usage = 0
 265               	.LVL11:
 266               	.LSM36:
 267 0000 E4E6      		ldi r30,lo8(100)
 268 0002 F0E0      		ldi r31,hi8(100)
 269 0004 8081      		ld r24,Z
 270 0006 8D7F      		andi r24,lo8(-3)
 271 0008 8083      		st Z,r24
 272               	.LSM37:
 273 000a E0EC      		ldi r30,lo8(192)
 274 000c F0E0      		ldi r31,hi8(192)
 275 000e 8081      		ld r24,Z
 276 0010 8F77      		andi r24,lo8(127)
 277 0012 8083      		st Z,r24
 278               	.LSM38:
 279 0014 8081      		ld r24,Z
 280 0016 8F7B      		andi r24,lo8(-65)
 281 0018 8083      		st Z,r24
 282               	.LSM39:
 283 001a 8081      		ld r24,Z
 284 001c 8D7F      		andi r24,lo8(-3)
 285 001e 8083      		st Z,r24
 286               	.LSM40:
 287 0020 8081      		ld r24,Z
 288 0022 8E7F      		andi r24,lo8(-2)
 289 0024 8083      		st Z,r24
 290               	.LSM41:
 291 0026 A1EC      		ldi r26,lo8(193)
 292 0028 B0E0      		ldi r27,hi8(193)
 293 002a 8C91      		ld r24,X
 294 002c 8068      		ori r24,lo8(-128)
 295 002e 8C93      		st X,r24
 296               	.LSM42:
 297 0030 8C91      		ld r24,X
 298 0032 8F7B      		andi r24,lo8(-65)
 299 0034 8C93      		st X,r24
 300               	.LSM43:
 301 0036 8C91      		ld r24,X
 302 0038 8F7D      		andi r24,lo8(-33)
 303 003a 8C93      		st X,r24
 304               	.LSM44:
 305 003c 8C91      		ld r24,X
 306 003e 8061      		ori r24,lo8(16)
 307 0040 8C93      		st X,r24
 308               	.LSM45:
 309 0042 8C91      		ld r24,X
 310 0044 8860      		ori r24,lo8(8)
 311 0046 8C93      		st X,r24
 312               	.LSM46:
 313 0048 E2EC      		ldi r30,lo8(194)
 314 004a F0E0      		ldi r31,hi8(194)
 315 004c 8081      		ld r24,Z
 316 004e 8F77      		andi r24,lo8(127)
 317 0050 8083      		st Z,r24
 318               	.LSM47:
 319 0052 8081      		ld r24,Z
 320 0054 8F7B      		andi r24,lo8(-65)
 321 0056 8083      		st Z,r24
 322               	.LSM48:
 323 0058 8081      		ld r24,Z
 324 005a 8F7D      		andi r24,lo8(-33)
 325 005c 8083      		st Z,r24
 326               	.LSM49:
 327 005e 8081      		ld r24,Z
 328 0060 8F7E      		andi r24,lo8(-17)
 329 0062 8083      		st Z,r24
 330               	.LSM50:
 331 0064 8081      		ld r24,Z
 332 0066 877F      		andi r24,lo8(-9)
 333 0068 8083      		st Z,r24
 334               	.LSM51:
 335 006a 8C91      		ld r24,X
 336 006c 8B7F      		andi r24,lo8(-5)
 337 006e 8C93      		st X,r24
 338               	.LSM52:
 339 0070 8081      		ld r24,Z
 340 0072 8460      		ori r24,lo8(4)
 341 0074 8083      		st Z,r24
 342               	.LSM53:
 343 0076 8081      		ld r24,Z
 344 0078 8260      		ori r24,lo8(2)
 345 007a 8083      		st Z,r24
 346               	.LSM54:
 347 007c 1092 C500 		sts 197,__zero_reg__
 348               	.LSM55:
 349 0080 8CE0      		ldi r24,lo8(12)
 350 0082 8093 C400 		sts 196,r24
 351               	/* epilogue start */
 352               	.LSM56:
 353 0086 0895      		ret
 354               	.LFE10:
 356               		.section	.text.setupClock,"ax",@progbits
 357               	.global	setupClock
 359               	setupClock:
 360               	.LFB11:
 361               	.LSM57:
 362               	/* prologue: function */
 363               	/* frame size = 0 */
 364               	/* stack size = 0 */
 365               	.L__stack_usage = 0
 366               	.LSM58:
 367 0000 1092 6100 		sts 97,__zero_reg__
 368               	.LSM59:
 369 0004 80E8      		ldi r24,lo8(-128)
 370 0006 8093 6100 		sts 97,r24
 371               	.LSM60:
 372 000a 1092 6100 		sts 97,__zero_reg__
 373               	.L12:
 374               	.LSM61:
 375 000e 8091 6100 		lds r24,97
 376 0012 87FD      		sbrc r24,7
 377 0014 00C0      		rjmp .L12
 378               	/* epilogue start */
 379               	.LSM62:
 380 0016 0895      		ret
 381               	.LFE11:
 383               		.section	.text.setupIO,"ax",@progbits
 384               	.global	setupIO
 386               	setupIO:
 387               	.LFB12:
 388               	.LSM63:
 389               	/* prologue: function */
 390               	/* frame size = 0 */
 391               	/* stack size = 0 */
 392               	.L__stack_usage = 0
 393               	.LSM64:
 394 0000 6A9A      		sbi 45-32,2
 395               	.LSM65:
 396 0002 6898      		cbi 45-32,0
 397               	.LSM66:
 398 0004 699A      		sbi 45-32,1
 399               	.LSM67:
 400 0006 6A9A      		sbi 45-32,2
 401               	.LSM68:
 402 0008 6B9A      		sbi 45-32,3
 403               	.LSM69:
 404 000a 6C9A      		sbi 45-32,4
 405               	.LSM70:
 406 000c 6D98      		cbi 45-32,5
 407               	.LSM71:
 408 000e 5298      		cbi 42-32,2
 409               	.LSM72:
 410 0010 539A      		sbi 42-32,3
 411               	.LSM73:
 412 0012 10BA      		out 48-32,__zero_reg__
 413               	.LSM74:
 414 0014 85B7      		in r24,85-32
 415 0016 8068      		ori r24,lo8(-128)
 416 0018 85BF      		out 85-32,r24
 417               	.LSM75:
 418 001a 85B7      		in r24,85-32
 419 001c 8068      		ori r24,lo8(-128)
 420 001e 85BF      		out 85-32,r24
 421               	/* epilogue start */
 422               	.LSM76:
 423 0020 0895      		ret
 424               	.LFE12:
 426               		.data
 427               	.LC1:
 428 0009 7761 6974 		.string	"waiting for AVDDOK\r\n"
 428      696E 6720 
 428      666F 7220 
 428      4156 4444 
 428      4F4B 0D0A 
 429               	.LC2:
 430 001e 7761 6974 		.string	"waiting for REFOK\r\n"
 430      696E 6720 
 430      666F 7220 
 430      5245 464F 
 430      4B0D 0A00 
 431               		.section	.text.setupAdc,"ax",@progbits
 432               	.global	setupAdc
 434               	setupAdc:
 435               	.LFB13:
 436               	.LSM77:
 437               	/* prologue: function */
 438               	/* frame size = 0 */
 439               	/* stack size = 0 */
 440               	.L__stack_usage = 0
 441               	.LSM78:
 442 0000 1092 7B00 		sts 123,__zero_reg__
 443               	.LSM79:
 444 0004 80EC      		ldi r24,lo8(-64)
 445 0006 8093 7C00 		sts 124,r24
 446               	.LSM80:
 447 000a 8FE8      		ldi r24,lo8(-113)
 448 000c 8093 7A00 		sts 122,r24
 449               	.L16:
 450               	.LSM81:
 451 0010 80E0      		ldi r24,lo8(.LC1)
 452 0012 90E0      		ldi r25,hi8(.LC1)
 453 0014 64E1      		ldi r22,lo8(20)
 454 0016 0E94 0000 		call printStr
 455               	.LSM82:
 456 001a 8091 7B00 		lds r24,123
 457 001e 87FF      		sbrs r24,7
 458 0020 00C0      		rjmp .L16
 459               	.L18:
 460               	.LSM83:
 461 0022 80E0      		ldi r24,lo8(.LC2)
 462 0024 90E0      		ldi r25,hi8(.LC2)
 463 0026 63E1      		ldi r22,lo8(19)
 464 0028 0E94 0000 		call printStr
 465               	.LSM84:
 466 002c 8091 7B00 		lds r24,123
 467 0030 85FF      		sbrs r24,5
 468 0032 00C0      		rjmp .L18
 469               	/* epilogue start */
 470               	.LSM85:
 471 0034 0895      		ret
 472               	.LFE13:
 474               		.section	.text.setupAdcComplex,"ax",@progbits
 475               	.global	setupAdcComplex
 477               	setupAdcComplex:
 478               	.LFB14:
 479               	.LSM86:
 480               	/* prologue: function */
 481               	/* frame size = 0 */
 482               	/* stack size = 0 */
 483               	.L__stack_usage = 0
 484               	.LSM87:
 485 0000 8091 7A00 		lds r24,122
 486 0004 8068      		ori r24,lo8(-128)
 487 0006 8093 7A00 		sts 122,r24
 488               	.LSM88:
 489 000a 8091 7C00 		lds r24,124
 490 000e 8068      		ori r24,lo8(-128)
 491 0010 8093 7C00 		sts 124,r24
 492               	.LSM89:
 493 0014 8091 7C00 		lds r24,124
 494 0018 8064      		ori r24,lo8(64)
 495 001a 8093 7C00 		sts 124,r24
 496               	.LSM90:
 497 001e 8091 7C00 		lds r24,124
 498 0022 8F7D      		andi r24,lo8(-33)
 499 0024 8093 7C00 		sts 124,r24
 500               	.LSM91:
 501 0028 8091 7B00 		lds r24,123
 502 002c 877F      		andi r24,lo8(-9)
 503 002e 8093 7B00 		sts 123,r24
 504               	.LSM92:
 505 0032 8091 7C00 		lds r24,124
 506 0036 8F7E      		andi r24,lo8(-17)
 507 0038 8093 7C00 		sts 124,r24
 508               	.LSM93:
 509 003c 8091 7C00 		lds r24,124
 510 0040 877F      		andi r24,lo8(-9)
 511 0042 8093 7C00 		sts 124,r24
 512               	.LSM94:
 513 0046 8091 7C00 		lds r24,124
 514 004a 8B7F      		andi r24,lo8(-5)
 515 004c 8093 7C00 		sts 124,r24
 516               	.LSM95:
 517 0050 8091 7C00 		lds r24,124
 518 0054 8D7F      		andi r24,lo8(-3)
 519 0056 8093 7C00 		sts 124,r24
 520               	.LSM96:
 521 005a 8091 7C00 		lds r24,124
 522 005e 8E7F      		andi r24,lo8(-2)
 523 0060 8093 7C00 		sts 124,r24
 524               	.LSM97:
 525 0064 8091 7B00 		lds r24,123
 526 0068 8F7B      		andi r24,lo8(-65)
 527 006a 8093 7B00 		sts 123,r24
 528               	.LSM98:
 529 006e 8091 7B00 		lds r24,123
 530 0072 8B7F      		andi r24,lo8(-5)
 531 0074 8093 7B00 		sts 123,r24
 532               	.LSM99:
 533 0078 8091 7B00 		lds r24,123
 534 007c 8D7F      		andi r24,lo8(-3)
 535 007e 8093 7B00 		sts 123,r24
 536               	.LSM100:
 537 0082 8091 7B00 		lds r24,123
 538 0086 8E7F      		andi r24,lo8(-2)
 539 0088 8093 7B00 		sts 123,r24
 540               	.LSM101:
 541 008c 8091 7A00 		lds r24,122
 542 0090 8F7D      		andi r24,lo8(-33)
 543 0092 8093 7A00 		sts 122,r24
 544               	.LSM102:
 545 0096 8091 7A00 		lds r24,122
 546 009a 8F7E      		andi r24,lo8(-17)
 547 009c 8093 7A00 		sts 122,r24
 548               	.LSM103:
 549 00a0 8091 7A00 		lds r24,122
 550 00a4 8860      		ori r24,lo8(8)
 551 00a6 8093 7A00 		sts 122,r24
 552               	.LSM104:
 553 00aa 8091 7A00 		lds r24,122
 554 00ae 8460      		ori r24,lo8(4)
 555 00b0 8093 7A00 		sts 122,r24
 556               	.LSM105:
 557 00b4 8091 7A00 		lds r24,122
 558 00b8 8260      		ori r24,lo8(2)
 559 00ba 8093 7A00 		sts 122,r24
 560               	.LSM106:
 561 00be 8091 7A00 		lds r24,122
 562 00c2 8160      		ori r24,lo8(1)
 563 00c4 8093 7A00 		sts 122,r24
 564               	.LSM107:
 565 00c8 8091 7B00 		lds r24,123
 566 00cc 8061      		ori r24,lo8(16)
 567 00ce 8093 7B00 		sts 123,r24
 568               	.L22:
 569               	.LSM108:
 570 00d2 8091 7B00 		lds r24,123
 571 00d6 84FD      		sbrc r24,4
 572 00d8 00C0      		rjmp .L22
 573               	.L26:
 574               	.LSM109:
 575 00da 80E0      		ldi r24,lo8(.LC1)
 576 00dc 90E0      		ldi r25,hi8(.LC1)
 577 00de 64E1      		ldi r22,lo8(20)
 578 00e0 0E94 0000 		call printStr
 579               	.LSM110:
 580 00e4 8091 7B00 		lds r24,123
 581 00e8 87FF      		sbrs r24,7
 582 00ea 00C0      		rjmp .L26
 583               	.L25:
 584               	.LSM111:
 585 00ec 80E0      		ldi r24,lo8(.LC2)
 586 00ee 90E0      		ldi r25,hi8(.LC2)
 587 00f0 63E1      		ldi r22,lo8(19)
 588 00f2 0E94 0000 		call printStr
 589               	.LSM112:
 590 00f6 8091 7B00 		lds r24,123
 591 00fa 85FF      		sbrs r24,5
 592 00fc 00C0      		rjmp .L25
 593               	/* epilogue start */
 594               	.LSM113:
 595 00fe 0895      		ret
 596               	.LFE14:
 598               		.data
 599               	.LC3:
 600 0032 7374 6172 		.string	"starting while loop\r\n"
 600      7469 6E67 
 600      2077 6869 
 600      6C65 206C 
 600      6F6F 700D 
 601               	.LC4:
 602 0048 0D0A 4144 		.string	"\r\nADC(hex) = "
 602      4328 6865 
 602      7829 203D 
 602      2000 
 603               	.LC5:
 604 0056 4144 4328 		.string	"ADC(dec) = %d\r\n"
 604      6465 6329 
 604      203D 2025 
 604      640D 0A00 
 605               	.LC6:
 606 0066 4144 4328 		.string	"ADC(Volts) = %d mV\r\n"
 606      566F 6C74 
 606      7329 203D 
 606      2025 6420 
 606      6D56 0D0A 
 607               		.section	.text.main,"ax",@progbits
 608               	.global	main
 610               	main:
 611               	.LFB15:
 612               	.LSM114:
 613 0000 AF92      		push r10
 614 0002 BF92      		push r11
 615 0004 CF92      		push r12
 616 0006 DF92      		push r13
 617 0008 EF92      		push r14
 618 000a FF92      		push r15
 619 000c 0F93      		push r16
 620 000e 1F93      		push r17
 621 0010 DF93      		push r29
 622 0012 CF93      		push r28
 623 0014 CDB7      		in r28,__SP_L__
 624 0016 DEB7      		in r29,__SP_H__
 625 0018 C058      		subi r28,lo8(-(-128))
 626 001a D040      		sbci r29,hi8(-(-128))
 627 001c 0FB6      		in __tmp_reg__,__SREG__
 628 001e F894      		cli
 629 0020 DEBF      		out __SP_H__,r29
 630 0022 0FBE      		out __SREG__,__tmp_reg__
 631 0024 CDBF      		out __SP_L__,r28
 632               	/* prologue: function */
 633               	/* frame size = 128 */
 634               	/* stack size = 138 */
 635               	.L__stack_usage = 138
 636               	.LVL12:
 637               	.LSM115:
 638 0026 0E94 0000 		call setupClock
 639               	.LSM116:
 640 002a 0E94 0000 		call setupUSART0
 641               	.LSM117:
 642 002e 0E94 0000 		call setupUSART1
 643               	.LSM118:
 644 0032 0E94 0000 		call setupIO
 645               	.LSM119:
 646 0036 0E94 0000 		call setupAdc
 647               	.LSM120:
 648               	/* #APP */
 649               	 ;  285 "main.c" 1
 650 003a 7894      		sei
 651               	 ;  0 "" 2
 652               	.LSM121:
 653               	/* #NOAPP */
 654 003c 8091 7A00 		lds r24,122
 655 0040 8064      		ori r24,lo8(64)
 656 0042 8093 7A00 		sts 122,r24
 657               	.LSM122:
 658 0046 729A      		sbi 46-32,2
 659               	.LSM123:
 660 0048 739A      		sbi 46-32,3
 661               	.LSM124:
 662 004a 749A      		sbi 46-32,4
 663               	.LSM125:
 664 004c 80E0      		ldi r24,lo8(.LC3)
 665 004e 90E0      		ldi r25,hi8(.LC3)
 666 0050 65E1      		ldi r22,lo8(21)
 667 0052 0E94 0000 		call printStr
 668               	.LSM126:
 669 0056 8E01      		movw r16,r28
 670 0058 0F5F      		subi r16,lo8(-(1))
 671 005a 1F4F      		sbci r17,hi8(-(1))
 672 005c 40E0      		ldi r20,lo8(.LC5)
 673 005e C42E      		mov r12,r20
 674 0060 40E0      		ldi r20,hi8(.LC5)
 675 0062 D42E      		mov r13,r20
 676               	.LSM127:
 677 0064 30E0      		ldi r19,lo8(.LC6)
 678 0066 A32E      		mov r10,r19
 679 0068 30E0      		ldi r19,hi8(.LC6)
 680 006a B32E      		mov r11,r19
 681               	.LVL13:
 682               	.L37:
 683               	.LSM128:
 684 006c 8091 0000 		lds r24,serial_flag
 685 0070 8130      		cpi r24,lo8(1)
 686 0072 01F4      		brne .L31
 687               	.LSM129:
 688 0074 1092 0000 		sts serial_flag,__zero_reg__
 689               	.L31:
 690               	.LSM130:
 691 0078 8091 0000 		lds r24,serial_flag
 692 007c 8230      		cpi r24,lo8(2)
 693 007e 01F4      		brne .L32
 694               	.LSM131:
 695 0080 1092 0000 		sts serial_flag,__zero_reg__
 696               	.L32:
 697               	.LSM132:
 698 0084 8091 0000 		lds r24,adc_flag
 699 0088 8823      		tst r24
 700 008a 01F0      		breq .L37
 701               	.LSM133:
 702 008c 80E0      		ldi r24,lo8(.LC4)
 703 008e 90E0      		ldi r25,hi8(.LC4)
 704 0090 6BE0      		ldi r22,lo8(11)
 705 0092 0E94 0000 		call printStr
 706               	.LSM134:
 707 0096 8091 0000 		lds r24,adcVal
 708 009a 9091 0000 		lds r25,adcVal+1
 709 009e 0E94 0000 		call print_uint16
 710               	.LSM135:
 711 00a2 8091 0000 		lds r24,adcVal
 712 00a6 9091 0000 		lds r25,adcVal+1
 713 00aa 00D0      		rcall .
 714 00ac 00D0      		rcall .
 715 00ae 00D0      		rcall .
 716 00b0 EDB7      		in r30,__SP_L__
 717 00b2 FEB7      		in r31,__SP_H__
 718 00b4 3196      		adiw r30,1
 719 00b6 ADB7      		in r26,__SP_L__
 720 00b8 BEB7      		in r27,__SP_H__
 721 00ba 1296      		adiw r26,1+1
 722 00bc 1C93      		st X,r17
 723 00be 0E93      		st -X,r16
 724 00c0 1197      		sbiw r26,1
 725 00c2 D382      		std Z+3,r13
 726 00c4 C282      		std Z+2,r12
 727 00c6 9583      		std Z+5,r25
 728 00c8 8483      		std Z+4,r24
 729 00ca 0E94 0000 		call sprintf
 730 00ce 682F      		mov r22,r24
 731               	.LVL14:
 732               	.LSM136:
 733 00d0 EDB7      		in r30,__SP_L__
 734 00d2 FEB7      		in r31,__SP_H__
 735 00d4 3696      		adiw r30,6
 736 00d6 0FB6      		in __tmp_reg__,__SREG__
 737 00d8 F894      		cli
 738 00da FEBF      		out __SP_H__,r31
 739 00dc 0FBE      		out __SREG__,__tmp_reg__
 740 00de EDBF      		out __SP_L__,r30
 741 00e0 C801      		movw r24,r16
 742               	.LVL15:
 743 00e2 0E94 0000 		call printStr
 744               	.LVL16:
 745               	.LSM137:
 746 00e6 6091 0000 		lds r22,adcVal
 747 00ea 7091 0000 		lds r23,adcVal+1
 748               	.LVL17:
 749               	.LSM138:
 750 00ee 8DB7      		in r24,__SP_L__
 751 00f0 9EB7      		in r25,__SP_H__
 752 00f2 0897      		sbiw r24,8
 753 00f4 0FB6      		in __tmp_reg__,__SREG__
 754 00f6 F894      		cli
 755 00f8 9EBF      		out __SP_H__,r25
 756 00fa 0FBE      		out __SREG__,__tmp_reg__
 757 00fc 8DBF      		out __SP_L__,r24
 758 00fe EDB6      		in r14,__SP_L__
 759 0100 FEB6      		in r15,__SP_H__
 760 0102 0894      		sec
 761 0104 E11C      		adc r14,__zero_reg__
 762 0106 F11C      		adc r15,__zero_reg__
 763 0108 ADB7      		in r26,__SP_L__
 764 010a BEB7      		in r27,__SP_H__
 765 010c 1296      		adiw r26,1+1
 766 010e 1C93      		st X,r17
 767 0110 0E93      		st -X,r16
 768 0112 1197      		sbiw r26,1
 769 0114 F701      		movw r30,r14
 770 0116 B382      		std Z+3,r11
 771 0118 A282      		std Z+2,r10
 772               	.LSM139:
 773 011a 80E0      		ldi r24,lo8(0)
 774 011c 90E0      		ldi r25,hi8(0)
 775 011e 20E4      		ldi r18,lo8(1600)
 776 0120 36E0      		ldi r19,hi8(1600)
 777 0122 40E0      		ldi r20,hlo8(1600)
 778 0124 50E0      		ldi r21,hhi8(1600)
 779 0126 0E94 0000 		call __mulsi3
 780               	.LVL18:
 781 012a 2AE0      		ldi r18,10
 782 012c 9695      	1:	lsr r25
 783 012e 8795      		ror r24
 784 0130 7795      		ror r23
 785 0132 6795      		ror r22
 786 0134 2A95      		dec r18
 787 0136 01F4      		brne 1b
 788               	.LSM140:
 789 0138 D701      		movw r26,r14
 790 013a 1496      		adiw r26,4
 791 013c 6D93      		st X+,r22
 792 013e 7D93      		st X+,r23
 793 0140 8D93      		st X+,r24
 794 0142 9C93      		st X,r25
 795 0144 1797      		sbiw r26,4+3
 796 0146 0E94 0000 		call sprintf
 797 014a 682F      		mov r22,r24
 798               	.LVL19:
 799               	.LSM141:
 800 014c EDB7      		in r30,__SP_L__
 801 014e FEB7      		in r31,__SP_H__
 802 0150 3896      		adiw r30,8
 803 0152 0FB6      		in __tmp_reg__,__SREG__
 804 0154 F894      		cli
 805 0156 FEBF      		out __SP_H__,r31
 806 0158 0FBE      		out __SREG__,__tmp_reg__
 807 015a EDBF      		out __SP_L__,r30
 808 015c C801      		movw r24,r16
 809               	.LVL20:
 810 015e 0E94 0000 		call printStr
 811               	.LVL21:
 812               	.LSM142:
 813 0162 1092 0000 		sts adc_flag,__zero_reg__
 814               	.LSM143:
 815 0166 8091 7A00 		lds r24,122
 816 016a 8064      		ori r24,lo8(64)
 817 016c 8093 7A00 		sts 122,r24
 818               	.LVL22:
 819               	.LBB4:
 820               	.LBB5:
 821               	.LSM144:
 822 0170 8FEF      		 ldi r24,lo8(1599999)
 823 0172 99E6      	    ldi r25,hi8(1599999)
 824 0174 A8E1      	    ldi r26,hlo8(1599999)
 825 0176 8150      	    1:subi r24,1
 826 0178 9040      	    sbci r25,0
 827 017a A040      	    sbci r26,0
 828 017c 01F4      	    brne 1b
 829 017e 00C0      		rjmp .
 830 0180 0000      		nop
 831 0182 00C0      		rjmp .L37
 832               	.LBE5:
 833               	.LBE4:
 834               	.LFE15:
 836               		.section	.text.__vector_29,"ax",@progbits
 837               	.global	__vector_29
 839               	__vector_29:
 840               	.LFB16:
 841               	.LSM145:
 842 0000 1F92      		push __zero_reg__
 843 0002 0F92      		push r0
 844 0004 0FB6      		in r0,__SREG__
 845 0006 0F92      		push r0
 846 0008 1124      		clr __zero_reg__
 847 000a 8F93      		push r24
 848 000c 9F93      		push r25
 849               	/* prologue: Signal */
 850               	/* frame size = 0 */
 851               	/* stack size = 5 */
 852               	.L__stack_usage = 5
 853               	.LSM146:
 854 000e 81E0      		ldi r24,lo8(1)
 855 0010 8093 0000 		sts adc_flag,r24
 856               	.LSM147:
 857 0014 8091 7800 		lds r24,120
 858 0018 9091 7900 		lds r25,120+1
 859 001c 9093 0000 		sts adcVal+1,r25
 860 0020 8093 0000 		sts adcVal,r24
 861               	/* epilogue start */
 862               	.LSM148:
 863 0024 9F91      		pop r25
 864 0026 8F91      		pop r24
 865 0028 0F90      		pop r0
 866 002a 0FBE      		out __SREG__,r0
 867 002c 0F90      		pop r0
 868 002e 1F90      		pop __zero_reg__
 869 0030 1895      		reti
 870               	.LFE16:
 872               		.section	.text.__vector_25,"ax",@progbits
 873               	.global	__vector_25
 875               	__vector_25:
 876               	.LFB17:
 877               	.LSM149:
 878 0000 1F92      		push __zero_reg__
 879 0002 0F92      		push r0
 880 0004 0FB6      		in r0,__SREG__
 881 0006 0F92      		push r0
 882 0008 0BB6      		in r0,91-32
 883 000a 0F92      		push r0
 884 000c 1124      		clr __zero_reg__
 885 000e 8F93      		push r24
 886 0010 EF93      		push r30
 887 0012 FF93      		push r31
 888               	/* prologue: Signal */
 889               	/* frame size = 0 */
 890               	/* stack size = 7 */
 891               	.L__stack_usage = 7
 892               	.LSM150:
 893 0014 E6EC      		ldi r30,lo8(198)
 894 0016 F0E0      		ldi r31,hi8(198)
 895 0018 8081      		ld r24,Z
 896 001a 8093 0000 		sts myByte0,r24
 897               	.LSM151:
 898 001e 8091 0000 		lds r24,myByte0
 899 0022 8083      		st Z,r24
 900               	.LSM152:
 901 0024 8091 0000 		lds r24,myByte0
 902 0028 8093 CE00 		sts 206,r24
 903               	.LSM153:
 904 002c 81E0      		ldi r24,lo8(1)
 905 002e 8093 0000 		sts serial_flag,r24
 906               	/* epilogue start */
 907               	.LSM154:
 908 0032 FF91      		pop r31
 909 0034 EF91      		pop r30
 910 0036 8F91      		pop r24
 911 0038 0F90      		pop r0
 912 003a 0BBE      		out 91-32,r0
 913 003c 0F90      		pop r0
 914 003e 0FBE      		out __SREG__,r0
 915 0040 0F90      		pop r0
 916 0042 1F90      		pop __zero_reg__
 917 0044 1895      		reti
 918               	.LFE17:
 920               		.section	.text.__vector_36,"ax",@progbits
 921               	.global	__vector_36
 923               	__vector_36:
 924               	.LFB18:
 925               	.LSM155:
 926 0000 1F92      		push __zero_reg__
 927 0002 0F92      		push r0
 928 0004 0FB6      		in r0,__SREG__
 929 0006 0F92      		push r0
 930 0008 0BB6      		in r0,91-32
 931 000a 0F92      		push r0
 932 000c 1124      		clr __zero_reg__
 933 000e 8F93      		push r24
 934 0010 EF93      		push r30
 935 0012 FF93      		push r31
 936               	/* prologue: Signal */
 937               	/* frame size = 0 */
 938               	/* stack size = 7 */
 939               	.L__stack_usage = 7
 940               	.LSM156:
 941 0014 EEEC      		ldi r30,lo8(206)
 942 0016 F0E0      		ldi r31,hi8(206)
 943 0018 8081      		ld r24,Z
 944 001a 8093 0000 		sts myByte1,r24
 945               	.LSM157:
 946 001e 8091 0000 		lds r24,myByte1
 947 0022 8083      		st Z,r24
 948               	.LSM158:
 949 0024 8091 0000 		lds r24,myByte1
 950 0028 8093 C600 		sts 198,r24
 951               	.LSM159:
 952 002c 82E0      		ldi r24,lo8(2)
 953 002e 8093 0000 		sts serial_flag,r24
 954               	/* epilogue start */
 955               	.LSM160:
 956 0032 FF91      		pop r31
 957 0034 EF91      		pop r30
 958 0036 8F91      		pop r24
 959 0038 0F90      		pop r0
 960 003a 0BBE      		out 91-32,r0
 961 003c 0F90      		pop r0
 962 003e 0FBE      		out __SREG__,r0
 963 0040 0F90      		pop r0
 964 0042 1F90      		pop __zero_reg__
 965 0044 1895      		reti
 966               	.LFE18:
 968               		.section	.text.__vector_default,"ax",@progbits
 969               	.global	__vector_default
 971               	__vector_default:
 972               	.LFB19:
 973               	.LSM161:
 974 0000 1F92      		push __zero_reg__
 975 0002 0F92      		push r0
 976 0004 0FB6      		in r0,__SREG__
 977 0006 0F92      		push r0
 978 0008 1124      		clr __zero_reg__
 979 000a 8F93      		push r24
 980 000c 9F93      		push r25
 981               	/* prologue: Signal */
 982               	/* frame size = 0 */
 983               	/* stack size = 5 */
 984               	.L__stack_usage = 5
 985               	.LSM162:
 986 000e 8EB1      		in r24,46-32
 987 0010 90E1      		ldi r25,lo8(16)
 988 0012 8927      		eor r24,r25
 989 0014 8EB9      		out 46-32,r24
 990               	/* epilogue start */
 991               	.LSM163:
 992 0016 9F91      		pop r25
 993 0018 8F91      		pop r24
 994 001a 0F90      		pop r0
 995 001c 0FBE      		out __SREG__,r0
 996 001e 0F90      		pop r0
 997 0020 1F90      		pop __zero_reg__
 998 0022 1895      		reti
 999               	.LFE19:
 1001               	.global	hexTable
 1002               		.data
 1005               	hexTable:
 1006 007b 3031 3233 		.ascii	"0123456789ABCDEF"
 1006      3435 3637 
 1006      3839 4142 
 1006      4344 4546 
 1007               	.global	myByte0
 1010               	myByte0:
 1011 008b 55        		.byte	85
 1012               	.global	myByte1
 1015               	myByte1:
 1016 008c 58        		.byte	88
 1017               	.global	adcVal
 1018               	.global	adcVal
 1019               		.section .bss
 1022               	adcVal:
 1023 0000 0000      		.skip 2,0
 1024               	.global	adc_flag
 1025               	.global	adc_flag
 1028               	adc_flag:
 1029 0002 00        		.skip 1,0
 1030               	.global	serial_flag
 1031               	.global	serial_flag
 1034               	serial_flag:
 1035 0003 00        		.skip 1,0
 1156               	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccTpO7Al.s:2      *ABS*:0000003f __SREG__
     /tmp/ccTpO7Al.s:3      *ABS*:0000003e __SP_H__
     /tmp/ccTpO7Al.s:4      *ABS*:0000003d __SP_L__
     /tmp/ccTpO7Al.s:5      *ABS*:00000034 __CCP__
     /tmp/ccTpO7Al.s:6      *ABS*:00000000 __tmp_reg__
     /tmp/ccTpO7Al.s:7      *ABS*:00000001 __zero_reg__
     /tmp/ccTpO7Al.s:19     .text.printStr:00000000 printStr
     /tmp/ccTpO7Al.s:69     .text.print_uint16:00000000 print_uint16
     /tmp/ccTpO7Al.s:157    .text.setupUSART1:00000000 setupUSART1
     /tmp/ccTpO7Al.s:258    .text.setupUSART0:00000000 setupUSART0
     /tmp/ccTpO7Al.s:359    .text.setupClock:00000000 setupClock
     /tmp/ccTpO7Al.s:386    .text.setupIO:00000000 setupIO
     /tmp/ccTpO7Al.s:434    .text.setupAdc:00000000 setupAdc
     /tmp/ccTpO7Al.s:477    .text.setupAdcComplex:00000000 setupAdcComplex
     /tmp/ccTpO7Al.s:610    .text.main:00000000 main
     /tmp/ccTpO7Al.s:1034   .bss:00000003 serial_flag
     /tmp/ccTpO7Al.s:1028   .bss:00000002 adc_flag
     /tmp/ccTpO7Al.s:1022   .bss:00000000 adcVal
     /tmp/ccTpO7Al.s:839    .text.__vector_29:00000000 __vector_29
     /tmp/ccTpO7Al.s:875    .text.__vector_25:00000000 __vector_25
     /tmp/ccTpO7Al.s:1010   .data:0000008b myByte0
     /tmp/ccTpO7Al.s:923    .text.__vector_36:00000000 __vector_36
     /tmp/ccTpO7Al.s:1015   .data:0000008c myByte1
     /tmp/ccTpO7Al.s:971    .text.__vector_default:00000000 __vector_default
     /tmp/ccTpO7Al.s:1005   .data:0000007b hexTable

UNDEFINED SYMBOLS
sprintf
__mulsi3
__do_copy_data
__do_clear_bss
