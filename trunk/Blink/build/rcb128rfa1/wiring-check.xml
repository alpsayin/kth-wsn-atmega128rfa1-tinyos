<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="25:/home/alpsayin/tinyos_workspace/Blink/src/BlinkAppC.nc">
      <from><interface-ref name="Uart1Byte" scoped="" ref="0x40614aa8"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x406df2a8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x406df2a8"/></from>
      <to><interface-ref name="Uart1Byte" scoped="" ref="0x4042a858"/></to>
    </wire>
    <wire loc="26:/home/alpsayin/tinyos_workspace/Blink/src/BlinkAppC.nc">
      <from><interface-ref name="Uart1Stream" scoped="" ref="0x40614178"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x406cd998"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x406cd998"/></from>
      <to><interface-ref name="Uart1Stream" scoped="" ref="0x40422950"/></to>
    </wire>
    <wire loc="27:/home/alpsayin/tinyos_workspace/Blink/src/BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40616d80"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403f37a0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403f37a0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403f6338"/></to>
    </wire>
    <wire loc="28:/home/alpsayin/tinyos_workspace/Blink/src/BlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x4060b7e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40622330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40622330"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4062f5a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="29:/home/alpsayin/tinyos_workspace/Blink/src/BlinkAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x405ffb78"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406d40f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x406d40f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4062f5a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="30:/home/alpsayin/tinyos_workspace/Blink/src/BlinkAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x40608ef0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406d1e70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x406d1e70"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4062f5a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/home/alpsayin/tinyos_workspace/Blink/src/BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40616158"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40475580"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40475580"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40491a88"/></to>
    </wire>
    <wire loc="32:/home/alpsayin/tinyos_workspace/Blink/src/BlinkAppC.nc">
      <from><interface-ref name="PushButton" scoped="" ref="0x40615c30"/></from>
      <to><interface-ref name="PushButton0" scoped="" ref="0x406ccd78"/></to>
    </wire>
    <wire loc="15:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PushButtonC.nc">
      <from><interface-ref name="PushButton0" scoped="" ref="0x406ccd78"/></from>
      <to><interface-ref name="PushButton0" scoped="" ref="0x406d9010"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x403f66d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x402ff378"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x402ff378"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403c83e0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x403f6c98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403f9c68"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403f9c68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403f8ab8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405f20e0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x403f9480"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x403f52a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404a7440"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x403f52a8"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x403f80b8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x403f8ea8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40402250"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40402250"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40401410"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x403f5670"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x405e3010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerInit" scoped="" ref="0x40402658"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40839808"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40402658"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40550440"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40408010"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x40402658"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x404083c0"/></from>
      <to><interface-ref name="AdcInit" scoped="" ref="0x40402a08"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="SerialInit" scoped="" ref="0x40401820"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x40420ae0"/></to>
    </wire>
    <wire loc="12:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Init" scoped="" ref="0x40420ae0"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x4041ecd0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x40401c08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4040b910"/></to>
    </wire>
    <wire loc="13:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Byte" scoped="" ref="0x4042a858"/></from>
      <to><interface-ref name="Uart1Byte" scoped="" ref="0x40428138"/></to>
    </wire>
    <wire loc="14:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Stream" scoped="" ref="0x40422950"/></from>
      <to><interface-ref name="Uart1Stream" scoped="" ref="0x40428648"/></to>
    </wire>
    <wire loc="15:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x4042adb8"/></from>
      <to><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x40427030"/></to>
    </wire>
    <wire loc="16:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4047fb10"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40475580"/></to>
    </wire>
    <wire loc="17:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40431040"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4052b8f0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4052b8f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40537320"/></to>
    </wire>
    <wire loc="18:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Interrupts" scoped="" ref="0x40438240"/></from>
      <to><interface-ref name="Uart1Interrupts" scoped="" ref="0x40477ec8"/></to>
    </wire>
    <wire loc="19:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40437188"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40475580"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403e5218"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x405921e0"/></to>
    </wire>
    <wire loc="20:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403e5218"/></from>
      <to><interface-ref name="Uart1PowerOverride" scoped="" ref="0x40427a28"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="sendBlockingDoneTask" scoped="" ref="0x4043ddf8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="sendDoneTask" scoped="" ref="0x4043ceb8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="unexpectedByteReceivedTask" scoped="" ref="0x4043a010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="receiveBlockingDoneTask" scoped="" ref="0x4043c6b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="receiveDoneTask" scoped="" ref="0x4043b708"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404a7440"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40491740"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x404949a8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x404905a0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x404905a0"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x404b48e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x404983c0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x404a8010"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x404a8010"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x404b32f0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40498da8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x404a8a18"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x404a8a18"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x404b3ce8"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x404b48e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404f9170"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x404b32f0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404f9ac8"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x404b3ce8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404f84f0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x404acc08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404f5ef8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404f5ef8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4073b7f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404f9ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407787f8"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x404bc670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4050c410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4050c410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407b8538"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x404c68f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40513128"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40513128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407ed418"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x404c3c08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40510170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40510170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407e56c0"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x404bd210"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404ff090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404ff090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407a2010"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x404a7f10"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404efcc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404efcc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407042d0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x404b8a98"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404f2ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404f2ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407366c0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x404b0dc8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404ed988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404ed988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406ff0f8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x404b6a08"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404fe890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404fe890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40749538"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x404bf210"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405047d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405047d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407736c0"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x404b5ea8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404fa7f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404fa7f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4077b3b0"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x404b94b0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4050a170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4050a170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407b3538"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x404c4750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40512d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40512d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407e8228"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x404aece8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404eb6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404eb6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40710010"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x404c52f8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40513a80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40513a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407ecde0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x404ab670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404f3860"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404f3860"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40739228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404f84f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40776228"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x404ba0a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4050cd68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4050cd68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407b6010"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x404b1928"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404ee6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404ee6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40703c90"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x404b7590"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404f15d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x404f15d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4074c0b0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x404af830"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404ec330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404ec330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406feac8"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x404bfc08"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40503170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40503170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407710b0"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x404b9ea8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4050aac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4050aac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407b1010"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x404ac210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404f55a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404f55a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40729de8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404f9170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4077ad70"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x404bdc08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404ff9e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404ff9e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407a19e8"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x404c3210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40511790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40511790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407e7c08"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x404ad750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404ea030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404ea030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4070f9e8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x404b80a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404f2250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404f2250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40738c08"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x404b2750"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404f8e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x404f8e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40775c08"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x404b03d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404ed030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404ed030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40701718"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x404b6010"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404f1f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404f1f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4074ba88"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x404be670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x405006f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x405006f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407a4538"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x404baa98"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4050b790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4050b790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407b59e8"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x404b54b0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404fbe78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404fbe78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40765938"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x404c5cf0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40512410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40512410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407ea7f8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x404ae2f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404ecc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x404ecc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40712570"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40510ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407e20b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4050f4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407e1a88"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x405365f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40552368"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40552368"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40550878"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x4055fa48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4055bc90"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4055bc90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40573278"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="BeaconCapture" scoped="" ref="0x405789a8"/></from>
      <to><interface-ref name="BeaconCapture" scoped="" ref="0x40584158"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x40579860"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x40587010"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40566470"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40580408"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40566470"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x4057d830"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40566470"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x4057bbd0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x405925d0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403dc148"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c8c18"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403d18b8"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x403df470"/></to>
    </wire>
    <wire loc="33:/home/alpsayin/tinyos_workspace/Blink/src/BlinkC.nc">
      <from><interface-ref name="toggleLed2Task" scoped="" ref="0x40612b50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/home/alpsayin/tinyos_workspace/Blink/src/BlinkC.nc">
      <from><interface-ref name="toggleLed0Task" scoped="" ref="0x40613b10"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/home/alpsayin/tinyos_workspace/Blink/src/BlinkC.nc">
      <from><interface-ref name="toggleLed1Task" scoped="" ref="0x40612338"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x4062f5a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40697cc8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4069dcc8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4062bf20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x4062bf20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x408266b8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x406c40c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4068c968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x408233b8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4082ace0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x4082ace0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40839c40"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x40824180"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4052b8f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x40836640"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4055bc90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x408345e8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40566470"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x4069a658"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x406c22b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="UartStreamBlocking" scoped="" ref="0x406df800"/></from>
      <to><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x4042adb8"/></to>
    </wire>
    <wire loc="13:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PushButtonC.nc">
      <from><interface-ref name="PushButton0Init" scoped="" ref="0x406dc338"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403f9c68"/></to>
    </wire>
    <wire loc="16:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PushButtonC.nc">
      <from><interface-ref name="PushButton0Init" scoped="" ref="0x406dc338"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406dcb28"/></to>
    </wire>
    <wire loc="14:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PushButtonC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x406d9488"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x404b2750"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="McuInitC" loc="36:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128Rfa1SerialC" loc="1:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <configuration/>
    </component>
    <component qname="Atm128Rfa1SerialP" loc="10:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <module/>
    </component>
    <component qname="Atm128Rfa1Uart1InterruptsP" loc="5:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1Uart1InterruptsP.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="38:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
        <short>&#10; The implementation of the LED mote abstraction for the RCB128RFA1&#10; Platform.</short>
        <long>&#10; The implementation of the LED mote abstraction for the RCB128RFA1&#10; Platform.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="25:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the Atmega128RFA1's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the Atmega128RFA1's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega128RFA1 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG" loc="40(HplAtm128GeneralIOC.PortG):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit0" loc="41(HplAtm128GeneralIOC.PortG.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit1" loc="41(HplAtm128GeneralIOC.PortG.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit2" loc="41(HplAtm128GeneralIOC.PortG.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit3" loc="41(HplAtm128GeneralIOC.PortG.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit4" loc="41(HplAtm128GeneralIOC.PortG.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit5" loc="41(HplAtm128GeneralIOC.PortG.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit6" loc="41(HplAtm128GeneralIOC.PortG.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit7" loc="41(HplAtm128GeneralIOC.PortG.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.3 2010-08-10 01:28:33 mmaroti Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40432780"/>
            <typename><typedef-ref name="TMilli" ref="0x40432948"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40527060"/>
            <typename><typedef-ref name="T62khz" ref="0x40527208"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter62khz32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterP):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40527060"/>
            <typename><typedef-ref name="T62khz" ref="0x40527208"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="BlinkC" loc="13:/home/alpsayin/tinyos_workspace/Blink/src/BlinkC.nc" safe="">
      <module/>
    </component>
    <component qname="BlinkAppC.Timer0" loc="44(BlinkAppC.Timer0):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C" loc="37(TimerMilliP.AlarmMilli32C.Alarm62khz32C):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP" loc="35(TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40527060"/>
            <typename><typedef-ref name="T62khz" ref="0x40527208"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40432780"/>
            <typename><typedef-ref name="TMilli" ref="0x40432948"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40527060"/>
            <typename><typedef-ref name="T62khz" ref="0x40527208"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40432780"/>
            <typename><typedef-ref name="TMilli" ref="0x40432948"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40432780"/>
            <typename><typedef-ref name="TMilli" ref="0x40432948"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer1" loc="44(BlinkAppC.Timer1):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer2" loc="44(BlinkAppC.Timer2):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PlatformSerialC" loc="36:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="PushButtonC" loc="4:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PushButtonC.nc">
      <configuration/>
    </component>
    <component qname="PushButtonP" loc="2:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PushButtonP.nc">
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404c1a18" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404c1c30" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404c1e48" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404c7d60" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404d2010" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404d2238" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404d2428" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40538888" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40538888"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40538ce8" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40538ce8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40535010" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40535010"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40535480" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40535480"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x405356e8" loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40535b70" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40535b70"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x40551d20" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40551d20"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4054e168" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054e168"/></type-var>
        </typedef>
        <constant name="mode" ref="0x4054e358" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCompareP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x40646470" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40646470"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x406468a0" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406468a0"/></type-var>
        </typedef>
        <constant name="mode" ref="0x40646a90" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x40646c98" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x4065e648" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x4065e648"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x4065eaa8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x4065eaa8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x4065ed10" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x4065ed10"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x4065b1b8" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x4065b1b8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x4065b420" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4068a368" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4068a368"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40699ef8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40699ef8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x406aa0f0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x403f9480" loc="58:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x403f9480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f9658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403f37a0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403f37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403f3978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403f9c68" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403f9c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f9e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x403f80b8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x403f80b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f8290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x403f5670" loc="45:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x403f5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f5848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403f8ab8" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403f8ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f8c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x403f52a8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x403f52a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f5480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x403f8ea8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x403f8ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f50c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40402250" loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40402250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40402428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x40402a08" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x40402a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40402be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x40402658" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x40402658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40402830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40401410" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40401410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404015e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x404083c0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x404083c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40408598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialInit" ref="0x40401820" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialInit" scoped="" ref="0x40401820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404019f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x40401c08" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x40401c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40401de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x40408010" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x40408010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404081e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4040b910" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4040b910"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4040bae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4040f268" loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4040f268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4040f440"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4040f520"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4040f600"/>
        <function-ref name="actualMicro" scoped="" ref="0x4040f6e0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4040f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Byte" ref="0x4042a858" loc="5:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Byte" scoped="" ref="0x4042a858"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4042aa30"/>
        <function-ref name="receive" scoped="" ref="0x4042ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Stream" ref="0x40422950" loc="4:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Stream" scoped="" ref="0x40422950"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40422b28"/>
        <function-ref name="receivedByte" scoped="" ref="0x40422c08"/>
        <function-ref name="receive" scoped="" ref="0x40422ce8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40422dc8"/>
        <function-ref name="receiveDone" scoped="" ref="0x40422ea8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4041f010"/>
        <function-ref name="sendDone" scoped="" ref="0x4041f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x40420ae0" loc="3:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x40420ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40420cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1StreamBlocking" ref="0x4042adb8" loc="6:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x4042adb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4041e010"/>
        <function-ref name="receivedByte" scoped="" ref="0x4041e0f0"/>
        <function-ref name="receive" scoped="" ref="0x4041e1d0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x4041e2b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x4041e390"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4041e470"/>
        <function-ref name="sendDone" scoped="" ref="0x4041e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Byte" ref="0x40428138" loc="13:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Byte" scoped="" ref="0x40428138"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40428310"/>
        <function-ref name="receive" scoped="" ref="0x404283f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBlockingDoneTask" ref="0x4043ddf8" loc="33:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBlockingDoneTask" scoped="" ref="0x4043ddf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4043c010"/>
        <function-ref name="runTask" scoped="" ref="0x4043c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDoneTask" ref="0x4043ceb8" loc="36:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDoneTask" scoped="" ref="0x4043ceb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4043b0c0"/>
        <function-ref name="runTask" scoped="" ref="0x4043b1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Stream" ref="0x40428648" loc="14:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Stream" scoped="" ref="0x40428648"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40428820"/>
        <function-ref name="receivedByte" scoped="" ref="0x40428900"/>
        <function-ref name="receive" scoped="" ref="0x404289e0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40428ac0"/>
        <function-ref name="receiveDone" scoped="" ref="0x40428ba0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40428c80"/>
        <function-ref name="sendDone" scoped="" ref="0x40428d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="unexpectedByteReceivedTask" ref="0x4043a010" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="unexpectedByteReceivedTask" scoped="" ref="0x4043a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4043a268"/>
        <function-ref name="runTask" scoped="" ref="0x4043a348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1StreamBlocking" ref="0x40427030" loc="15:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x40427030"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40427208"/>
        <function-ref name="receivedByte" scoped="" ref="0x404272e8"/>
        <function-ref name="receive" scoped="" ref="0x404273c8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x404274a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x40427588"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40427668"/>
        <function-ref name="sendDone" scoped="" ref="0x40427748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x4041ecd0" loc="12:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x4041ecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4041eea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Uart1Interrupts" ref="0x40438240" loc="18:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Interrupts" scoped="" ref="0x40438240"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxInterruptPending" scoped="" ref="0x40438cd8"/>
        <function-ref name="txInterruptHandler" scoped="" ref="0x404384f8"/>
        <function-ref name="rxInterruptHandler" scoped="" ref="0x404385d8"/>
        <function-ref name="enableRxInterrupt" scoped="" ref="0x404386b8"/>
        <function-ref name="enableTxInterrupt" scoped="" ref="0x40438798"/>
        <function-ref name="disableRxInterrupt" scoped="" ref="0x40438878"/>
        <function-ref name="clearTxInterrupt" scoped="" ref="0x40438958"/>
        <function-ref name="isRxInterruptPending" scoped="" ref="0x40438a38"/>
        <function-ref name="disableTxInterrupt" scoped="" ref="0x40438b18"/>
        <function-ref name="setSendData" scoped="" ref="0x40438418"/>
        <function-ref name="clearRxInterrupt" scoped="" ref="0x40438bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40431040" loc="19:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40431040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40432780"/>
            <typename><typedef-ref name="TMilli" ref="0x40432948"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40431790"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40431c80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40431a08"/>
        <function-ref name="overflow" scoped="" ref="0x40431ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40437188" loc="20:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40437188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40437360"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40437440"/>
        <function-ref name="led1On" scoped="" ref="0x40437520"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40437600"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404376e0"/>
        <function-ref name="get" scoped="" ref="0x404377c0"/>
        <function-ref name="led1Off" scoped="" ref="0x404378a0"/>
        <function-ref name="led2Off" scoped="" ref="0x40437c20"/>
        <function-ref name="set" scoped="" ref="0x40437980"/>
        <function-ref name="led0On" scoped="" ref="0x40437a60"/>
        <function-ref name="led2On" scoped="" ref="0x40437b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1PowerOverride" ref="0x40427a28" loc="16:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1PowerOverride" scoped="" ref="0x40427a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40427c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveBlockingDoneTask" ref="0x4043c6b0" loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveBlockingDoneTask" scoped="" ref="0x4043c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4043c888"/>
        <function-ref name="runTask" scoped="" ref="0x4043c968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDoneTask" ref="0x4043b708" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDoneTask" scoped="" ref="0x4043b708"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4043b8e0"/>
        <function-ref name="runTask" scoped="" ref="0x4043b9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Interrupts" ref="0x40477ec8" loc="7:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1Uart1InterruptsP.nc">
      <component-ref qname="Atm128Rfa1Uart1InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Interrupts" scoped="" ref="0x40477ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxInterruptPending" scoped="" ref="0x4047f980"/>
        <function-ref name="txInterruptHandler" scoped="" ref="0x4047f1a0"/>
        <function-ref name="rxInterruptHandler" scoped="" ref="0x4047f280"/>
        <function-ref name="enableRxInterrupt" scoped="" ref="0x4047f360"/>
        <function-ref name="enableTxInterrupt" scoped="" ref="0x4047f440"/>
        <function-ref name="disableRxInterrupt" scoped="" ref="0x4047f520"/>
        <function-ref name="clearTxInterrupt" scoped="" ref="0x4047f600"/>
        <function-ref name="isRxInterruptPending" scoped="" ref="0x4047f6e0"/>
        <function-ref name="disableTxInterrupt" scoped="" ref="0x4047f7c0"/>
        <function-ref name="setSendData" scoped="" ref="0x4047f0c0"/>
        <function-ref name="clearRxInterrupt" scoped="" ref="0x4047f8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4047fb10" loc="8:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1Uart1InterruptsP.nc">
      <component-ref qname="Atm128Rfa1Uart1InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4047fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4047fce8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4047fdc8"/>
        <function-ref name="led1On" scoped="" ref="0x4047fea8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4047e010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4047e0f0"/>
        <function-ref name="get" scoped="" ref="0x4047e1d0"/>
        <function-ref name="led1Off" scoped="" ref="0x4047e2b0"/>
        <function-ref name="led2Off" scoped="" ref="0x4047e630"/>
        <function-ref name="set" scoped="" ref="0x4047e390"/>
        <function-ref name="led0On" scoped="" ref="0x4047e470"/>
        <function-ref name="led2On" scoped="" ref="0x4047e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40475580" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40475580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40475758"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40475838"/>
        <function-ref name="led1On" scoped="" ref="0x40475918"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404759f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40475ad8"/>
        <function-ref name="get" scoped="" ref="0x40475bb8"/>
        <function-ref name="led1Off" scoped="" ref="0x40475c98"/>
        <function-ref name="led2Off" scoped="" ref="0x404910f0"/>
        <function-ref name="set" scoped="" ref="0x40475d78"/>
        <function-ref name="led0On" scoped="" ref="0x40475e58"/>
        <function-ref name="led2On" scoped="" ref="0x40491010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x404949a8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x404949a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40494b80"/>
        <function-ref name="isInput" scoped="" ref="0x40494c60"/>
        <function-ref name="toggle" scoped="" ref="0x40494d40"/>
        <function-ref name="isOutput" scoped="" ref="0x40494e20"/>
        <function-ref name="get" scoped="" ref="0x40494f00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40498010"/>
        <function-ref name="set" scoped="" ref="0x404980f0"/>
        <function-ref name="clr" scoped="" ref="0x404981d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40491740" loc="40:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40491740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40491918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x404983c0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x404983c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40498598"/>
        <function-ref name="isInput" scoped="" ref="0x40498678"/>
        <function-ref name="toggle" scoped="" ref="0x40498758"/>
        <function-ref name="isOutput" scoped="" ref="0x40498838"/>
        <function-ref name="get" scoped="" ref="0x40498918"/>
        <function-ref name="makeOutput" scoped="" ref="0x404989f8"/>
        <function-ref name="set" scoped="" ref="0x40498ad8"/>
        <function-ref name="clr" scoped="" ref="0x40498bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40491a88" loc="41:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40491a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40491c60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40491d40"/>
        <function-ref name="led1On" scoped="" ref="0x40491e20"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40491f00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4048d010"/>
        <function-ref name="get" scoped="" ref="0x4048d0f0"/>
        <function-ref name="led1Off" scoped="" ref="0x4048d1d0"/>
        <function-ref name="led2Off" scoped="" ref="0x4048d550"/>
        <function-ref name="set" scoped="" ref="0x4048d2b0"/>
        <function-ref name="led0On" scoped="" ref="0x4048d390"/>
        <function-ref name="led2On" scoped="" ref="0x4048d470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x40498da8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40498da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40497010"/>
        <function-ref name="isInput" scoped="" ref="0x404970f0"/>
        <function-ref name="toggle" scoped="" ref="0x404971d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404972b0"/>
        <function-ref name="get" scoped="" ref="0x40497390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40497470"/>
        <function-ref name="set" scoped="" ref="0x40497550"/>
        <function-ref name="clr" scoped="" ref="0x40497630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x404905a0" loc="37:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x404905a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40490778"/>
        <function-ref name="isInput" scoped="" ref="0x40490858"/>
        <function-ref name="toggle" scoped="" ref="0x40490938"/>
        <function-ref name="isOutput" scoped="" ref="0x40490a18"/>
        <function-ref name="get" scoped="" ref="0x40490af8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40490bd8"/>
        <function-ref name="set" scoped="" ref="0x40490cb8"/>
        <function-ref name="clr" scoped="" ref="0x40490d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x404a8010" loc="38:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x404a8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a81e8"/>
        <function-ref name="isInput" scoped="" ref="0x404a82c8"/>
        <function-ref name="toggle" scoped="" ref="0x404a83a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404a8488"/>
        <function-ref name="get" scoped="" ref="0x404a8568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a8648"/>
        <function-ref name="set" scoped="" ref="0x404a8728"/>
        <function-ref name="clr" scoped="" ref="0x404a8808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x404a7440" loc="40:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404a7440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a7618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x404a8a18" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x404a8a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a8bf0"/>
        <function-ref name="isInput" scoped="" ref="0x404a8cd0"/>
        <function-ref name="toggle" scoped="" ref="0x404a8db0"/>
        <function-ref name="isOutput" scoped="" ref="0x404a8e90"/>
        <function-ref name="get" scoped="" ref="0x404a7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a70f0"/>
        <function-ref name="set" scoped="" ref="0x404a71d0"/>
        <function-ref name="clr" scoped="" ref="0x404a72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x404acc08" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x404acc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404acde0"/>
        <function-ref name="isInput" scoped="" ref="0x404acec0"/>
        <function-ref name="toggle" scoped="" ref="0x404ab010"/>
        <function-ref name="isOutput" scoped="" ref="0x404ab0f0"/>
        <function-ref name="get" scoped="" ref="0x404ab1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ab2b0"/>
        <function-ref name="set" scoped="" ref="0x404ab390"/>
        <function-ref name="clr" scoped="" ref="0x404ab470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x404b32f0" loc="58:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x404b32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b34c8"/>
        <function-ref name="isInput" scoped="" ref="0x404b35a8"/>
        <function-ref name="toggle" scoped="" ref="0x404b3688"/>
        <function-ref name="isOutput" scoped="" ref="0x404b3768"/>
        <function-ref name="get" scoped="" ref="0x404b3848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b3928"/>
        <function-ref name="set" scoped="" ref="0x404b3a08"/>
        <function-ref name="clr" scoped="" ref="0x404b3ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x404bc670" loc="67:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x404bc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bc848"/>
        <function-ref name="isInput" scoped="" ref="0x404bc928"/>
        <function-ref name="toggle" scoped="" ref="0x404bca08"/>
        <function-ref name="isOutput" scoped="" ref="0x404bcae8"/>
        <function-ref name="get" scoped="" ref="0x404bcbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bcca8"/>
        <function-ref name="set" scoped="" ref="0x404bcd88"/>
        <function-ref name="clr" scoped="" ref="0x404bce68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x404c68f0" loc="74:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x404c68f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c6ac8"/>
        <function-ref name="isInput" scoped="" ref="0x404c6ba8"/>
        <function-ref name="toggle" scoped="" ref="0x404c6c88"/>
        <function-ref name="isOutput" scoped="" ref="0x404c6d68"/>
        <function-ref name="get" scoped="" ref="0x404c6e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c6f28"/>
        <function-ref name="set" scoped="" ref="0x404c5018"/>
        <function-ref name="clr" scoped="" ref="0x404c50f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x404c3c08" loc="79:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x404c3c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c3de0"/>
        <function-ref name="isInput" scoped="" ref="0x404c3ec0"/>
        <function-ref name="toggle" scoped="" ref="0x404c2010"/>
        <function-ref name="isOutput" scoped="" ref="0x404c20f0"/>
        <function-ref name="get" scoped="" ref="0x404c21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c22b0"/>
        <function-ref name="set" scoped="" ref="0x404c2390"/>
        <function-ref name="clr" scoped="" ref="0x404c2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x404bd210" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x404bd210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bd3e8"/>
        <function-ref name="isInput" scoped="" ref="0x404bd4c8"/>
        <function-ref name="toggle" scoped="" ref="0x404bd5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404bd688"/>
        <function-ref name="get" scoped="" ref="0x404bd768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bd848"/>
        <function-ref name="set" scoped="" ref="0x404bd928"/>
        <function-ref name="clr" scoped="" ref="0x404bda08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x404a7f10" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x404a7f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b1108"/>
        <function-ref name="isInput" scoped="" ref="0x404b11e8"/>
        <function-ref name="toggle" scoped="" ref="0x404b12c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b13a8"/>
        <function-ref name="get" scoped="" ref="0x404b1488"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b1568"/>
        <function-ref name="set" scoped="" ref="0x404b1648"/>
        <function-ref name="clr" scoped="" ref="0x404b1728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x404b8a98" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x404b8a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b8cf0"/>
        <function-ref name="isInput" scoped="" ref="0x404b8dd0"/>
        <function-ref name="toggle" scoped="" ref="0x404b8eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b7010"/>
        <function-ref name="get" scoped="" ref="0x404b70f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b71d0"/>
        <function-ref name="set" scoped="" ref="0x404b72b0"/>
        <function-ref name="clr" scoped="" ref="0x404b7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x404b0dc8" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x404b0dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404af010"/>
        <function-ref name="isInput" scoped="" ref="0x404af0f0"/>
        <function-ref name="toggle" scoped="" ref="0x404af1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404af2b0"/>
        <function-ref name="get" scoped="" ref="0x404af390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404af470"/>
        <function-ref name="set" scoped="" ref="0x404af550"/>
        <function-ref name="clr" scoped="" ref="0x404af630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x404b6a08" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x404b6a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b6be0"/>
        <function-ref name="isInput" scoped="" ref="0x404b6cc0"/>
        <function-ref name="toggle" scoped="" ref="0x404b6da0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b6e80"/>
        <function-ref name="get" scoped="" ref="0x404b5010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b50f0"/>
        <function-ref name="set" scoped="" ref="0x404b51d0"/>
        <function-ref name="clr" scoped="" ref="0x404b52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x404bf210" loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x404bf210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bf3e8"/>
        <function-ref name="isInput" scoped="" ref="0x404bf4c8"/>
        <function-ref name="toggle" scoped="" ref="0x404bf5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404bf688"/>
        <function-ref name="get" scoped="" ref="0x404bf768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bf848"/>
        <function-ref name="set" scoped="" ref="0x404bf928"/>
        <function-ref name="clr" scoped="" ref="0x404bfa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x404b5ea8" loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x404b5ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b40c0"/>
        <function-ref name="isInput" scoped="" ref="0x404b41a0"/>
        <function-ref name="toggle" scoped="" ref="0x404b4280"/>
        <function-ref name="isOutput" scoped="" ref="0x404b4360"/>
        <function-ref name="get" scoped="" ref="0x404b4440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b4520"/>
        <function-ref name="set" scoped="" ref="0x404b4600"/>
        <function-ref name="clr" scoped="" ref="0x404b46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x404b94b0" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x404b94b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b9688"/>
        <function-ref name="isInput" scoped="" ref="0x404b9768"/>
        <function-ref name="toggle" scoped="" ref="0x404b9848"/>
        <function-ref name="isOutput" scoped="" ref="0x404b9928"/>
        <function-ref name="get" scoped="" ref="0x404b9a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b9ae8"/>
        <function-ref name="set" scoped="" ref="0x404b9bc8"/>
        <function-ref name="clr" scoped="" ref="0x404b9ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x404c4750" loc="77:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x404c4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c4928"/>
        <function-ref name="isInput" scoped="" ref="0x404c4a08"/>
        <function-ref name="toggle" scoped="" ref="0x404c4ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404c4bc8"/>
        <function-ref name="get" scoped="" ref="0x404c4ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c4d88"/>
        <function-ref name="set" scoped="" ref="0x404c4e68"/>
        <function-ref name="clr" scoped="" ref="0x404c3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x404aece8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x404aece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404aeec0"/>
        <function-ref name="isInput" scoped="" ref="0x404ad010"/>
        <function-ref name="toggle" scoped="" ref="0x404ad0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404ad1d0"/>
        <function-ref name="get" scoped="" ref="0x404ad2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ad390"/>
        <function-ref name="set" scoped="" ref="0x404ad470"/>
        <function-ref name="clr" scoped="" ref="0x404ad550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x404c52f8" loc="75:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x404c52f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c54d0"/>
        <function-ref name="isInput" scoped="" ref="0x404c55b0"/>
        <function-ref name="toggle" scoped="" ref="0x404c5690"/>
        <function-ref name="isOutput" scoped="" ref="0x404c5770"/>
        <function-ref name="get" scoped="" ref="0x404c5850"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c5930"/>
        <function-ref name="set" scoped="" ref="0x404c5a10"/>
        <function-ref name="clr" scoped="" ref="0x404c5af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x404ab670" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x404ab670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ab848"/>
        <function-ref name="isInput" scoped="" ref="0x404ab928"/>
        <function-ref name="toggle" scoped="" ref="0x404aba08"/>
        <function-ref name="isOutput" scoped="" ref="0x404abae8"/>
        <function-ref name="get" scoped="" ref="0x404abbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404abca8"/>
        <function-ref name="set" scoped="" ref="0x404abd88"/>
        <function-ref name="clr" scoped="" ref="0x404abe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x404b3ce8" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x404b3ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b3ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404b2010"/>
        <function-ref name="toggle" scoped="" ref="0x404b20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b21d0"/>
        <function-ref name="get" scoped="" ref="0x404b22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b2390"/>
        <function-ref name="set" scoped="" ref="0x404b2470"/>
        <function-ref name="clr" scoped="" ref="0x404b2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x404ba0a0" loc="68:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x404ba0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ba278"/>
        <function-ref name="isInput" scoped="" ref="0x404ba358"/>
        <function-ref name="toggle" scoped="" ref="0x404ba438"/>
        <function-ref name="isOutput" scoped="" ref="0x404ba518"/>
        <function-ref name="get" scoped="" ref="0x404ba5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ba6d8"/>
        <function-ref name="set" scoped="" ref="0x404ba7b8"/>
        <function-ref name="clr" scoped="" ref="0x404ba898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x404b1928" loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x404b1928"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b1b00"/>
        <function-ref name="isInput" scoped="" ref="0x404b1be0"/>
        <function-ref name="toggle" scoped="" ref="0x404b1cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b1da0"/>
        <function-ref name="get" scoped="" ref="0x404b1e80"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b0010"/>
        <function-ref name="set" scoped="" ref="0x404b00f0"/>
        <function-ref name="clr" scoped="" ref="0x404b01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x404b7590" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x404b7590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b7768"/>
        <function-ref name="isInput" scoped="" ref="0x404b7848"/>
        <function-ref name="toggle" scoped="" ref="0x404b7928"/>
        <function-ref name="isOutput" scoped="" ref="0x404b7a08"/>
        <function-ref name="get" scoped="" ref="0x404b7ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b7bc8"/>
        <function-ref name="set" scoped="" ref="0x404b7ca8"/>
        <function-ref name="clr" scoped="" ref="0x404b7d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x404af830" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x404af830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404afa08"/>
        <function-ref name="isInput" scoped="" ref="0x404afae8"/>
        <function-ref name="toggle" scoped="" ref="0x404afbc8"/>
        <function-ref name="isOutput" scoped="" ref="0x404afca8"/>
        <function-ref name="get" scoped="" ref="0x404afd88"/>
        <function-ref name="makeOutput" scoped="" ref="0x404afe68"/>
        <function-ref name="set" scoped="" ref="0x404ae010"/>
        <function-ref name="clr" scoped="" ref="0x404ae0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x404bfc08" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x404bfc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bfde0"/>
        <function-ref name="isInput" scoped="" ref="0x404bfec0"/>
        <function-ref name="toggle" scoped="" ref="0x404be010"/>
        <function-ref name="isOutput" scoped="" ref="0x404be0f0"/>
        <function-ref name="get" scoped="" ref="0x404be1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404be2b0"/>
        <function-ref name="set" scoped="" ref="0x404be390"/>
        <function-ref name="clr" scoped="" ref="0x404be470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x404b9ea8" loc="71:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x404b9ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c60c0"/>
        <function-ref name="isInput" scoped="" ref="0x404c61a0"/>
        <function-ref name="toggle" scoped="" ref="0x404c6280"/>
        <function-ref name="isOutput" scoped="" ref="0x404c6360"/>
        <function-ref name="get" scoped="" ref="0x404c6440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c6520"/>
        <function-ref name="set" scoped="" ref="0x404c6600"/>
        <function-ref name="clr" scoped="" ref="0x404c66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x404ac210" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x404ac210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ac3e8"/>
        <function-ref name="isInput" scoped="" ref="0x404ac4c8"/>
        <function-ref name="toggle" scoped="" ref="0x404ac5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ac688"/>
        <function-ref name="get" scoped="" ref="0x404ac768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ac848"/>
        <function-ref name="set" scoped="" ref="0x404ac928"/>
        <function-ref name="clr" scoped="" ref="0x404aca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x404b48e0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x404b48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b4ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404b4b98"/>
        <function-ref name="toggle" scoped="" ref="0x404b4c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404b4d58"/>
        <function-ref name="get" scoped="" ref="0x404b4e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b4f18"/>
        <function-ref name="set" scoped="" ref="0x404b3010"/>
        <function-ref name="clr" scoped="" ref="0x404b30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x404bdc08" loc="66:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x404bdc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bdde0"/>
        <function-ref name="isInput" scoped="" ref="0x404bdec0"/>
        <function-ref name="toggle" scoped="" ref="0x404bc010"/>
        <function-ref name="isOutput" scoped="" ref="0x404bc0f0"/>
        <function-ref name="get" scoped="" ref="0x404bc1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bc2b0"/>
        <function-ref name="set" scoped="" ref="0x404bc390"/>
        <function-ref name="clr" scoped="" ref="0x404bc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x404c3210" loc="78:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x404c3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c33e8"/>
        <function-ref name="isInput" scoped="" ref="0x404c34c8"/>
        <function-ref name="toggle" scoped="" ref="0x404c35a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404c3688"/>
        <function-ref name="get" scoped="" ref="0x404c3768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c3848"/>
        <function-ref name="set" scoped="" ref="0x404c3928"/>
        <function-ref name="clr" scoped="" ref="0x404c3a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x404ad750" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x404ad750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ad928"/>
        <function-ref name="isInput" scoped="" ref="0x404ada08"/>
        <function-ref name="toggle" scoped="" ref="0x404adae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404adbc8"/>
        <function-ref name="get" scoped="" ref="0x404adca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404add88"/>
        <function-ref name="set" scoped="" ref="0x404ade68"/>
        <function-ref name="clr" scoped="" ref="0x404ac010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x404b80a0" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x404b80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b8278"/>
        <function-ref name="isInput" scoped="" ref="0x404b8358"/>
        <function-ref name="toggle" scoped="" ref="0x404b8438"/>
        <function-ref name="isOutput" scoped="" ref="0x404b8518"/>
        <function-ref name="get" scoped="" ref="0x404b85f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b86d8"/>
        <function-ref name="set" scoped="" ref="0x404b87b8"/>
        <function-ref name="clr" scoped="" ref="0x404b8898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x404b2750" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x404b2750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b2928"/>
        <function-ref name="isInput" scoped="" ref="0x404b2a08"/>
        <function-ref name="toggle" scoped="" ref="0x404b2ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b2bc8"/>
        <function-ref name="get" scoped="" ref="0x404b2ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b2d88"/>
        <function-ref name="set" scoped="" ref="0x404b2e68"/>
        <function-ref name="clr" scoped="" ref="0x404bf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x404b03d0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x404b03d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b05a8"/>
        <function-ref name="isInput" scoped="" ref="0x404b0688"/>
        <function-ref name="toggle" scoped="" ref="0x404b0768"/>
        <function-ref name="isOutput" scoped="" ref="0x404b0848"/>
        <function-ref name="get" scoped="" ref="0x404b0928"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b0a08"/>
        <function-ref name="set" scoped="" ref="0x404b0ae8"/>
        <function-ref name="clr" scoped="" ref="0x404b0bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x404b6010" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x404b6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b61e8"/>
        <function-ref name="isInput" scoped="" ref="0x404b62c8"/>
        <function-ref name="toggle" scoped="" ref="0x404b63a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b6488"/>
        <function-ref name="get" scoped="" ref="0x404b6568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b6648"/>
        <function-ref name="set" scoped="" ref="0x404b6728"/>
        <function-ref name="clr" scoped="" ref="0x404b6808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x404be670" loc="64:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x404be670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404be948"/>
        <function-ref name="isInput" scoped="" ref="0x404bea28"/>
        <function-ref name="toggle" scoped="" ref="0x404beb08"/>
        <function-ref name="isOutput" scoped="" ref="0x404bebe8"/>
        <function-ref name="get" scoped="" ref="0x404becc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404beda8"/>
        <function-ref name="set" scoped="" ref="0x404bee88"/>
        <function-ref name="clr" scoped="" ref="0x404bd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x404baa98" loc="69:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x404baa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bac70"/>
        <function-ref name="isInput" scoped="" ref="0x404bad50"/>
        <function-ref name="toggle" scoped="" ref="0x404bae30"/>
        <function-ref name="isOutput" scoped="" ref="0x404baf10"/>
        <function-ref name="get" scoped="" ref="0x404b9010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b90f0"/>
        <function-ref name="set" scoped="" ref="0x404b91d0"/>
        <function-ref name="clr" scoped="" ref="0x404b92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x404b54b0" loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x404b54b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b5688"/>
        <function-ref name="isInput" scoped="" ref="0x404b5768"/>
        <function-ref name="toggle" scoped="" ref="0x404b5848"/>
        <function-ref name="isOutput" scoped="" ref="0x404b5928"/>
        <function-ref name="get" scoped="" ref="0x404b5a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b5ae8"/>
        <function-ref name="set" scoped="" ref="0x404b5bc8"/>
        <function-ref name="clr" scoped="" ref="0x404b5ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x404c5cf0" loc="76:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x404c5cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c5ec8"/>
        <function-ref name="isInput" scoped="" ref="0x404c4010"/>
        <function-ref name="toggle" scoped="" ref="0x404c40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404c41d0"/>
        <function-ref name="get" scoped="" ref="0x404c42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c4390"/>
        <function-ref name="set" scoped="" ref="0x404c4470"/>
        <function-ref name="clr" scoped="" ref="0x404c4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x404ae2f0" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x404ae2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ae4c8"/>
        <function-ref name="isInput" scoped="" ref="0x404ae5a8"/>
        <function-ref name="toggle" scoped="" ref="0x404ae688"/>
        <function-ref name="isOutput" scoped="" ref="0x404ae768"/>
        <function-ref name="get" scoped="" ref="0x404ae848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ae928"/>
        <function-ref name="set" scoped="" ref="0x404aea08"/>
        <function-ref name="clr" scoped="" ref="0x404aeae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404ed030" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404ed030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ed208"/>
        <function-ref name="isInput" scoped="" ref="0x404ed2e8"/>
        <function-ref name="toggle" scoped="" ref="0x404ed3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ed4a8"/>
        <function-ref name="get" scoped="" ref="0x404ed588"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ed668"/>
        <function-ref name="set" scoped="" ref="0x404ed748"/>
        <function-ref name="clr" scoped="" ref="0x404ed828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404ecc88" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404ecc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ece60"/>
        <function-ref name="isInput" scoped="" ref="0x404eb010"/>
        <function-ref name="toggle" scoped="" ref="0x404eb0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404eb1d0"/>
        <function-ref name="get" scoped="" ref="0x404eb2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404eb390"/>
        <function-ref name="set" scoped="" ref="0x404eb470"/>
        <function-ref name="clr" scoped="" ref="0x404eb550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404efcc8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404efcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404efea0"/>
        <function-ref name="isInput" scoped="" ref="0x404ee010"/>
        <function-ref name="toggle" scoped="" ref="0x404ee0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404ee1d0"/>
        <function-ref name="get" scoped="" ref="0x404ee2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ee390"/>
        <function-ref name="set" scoped="" ref="0x404ee470"/>
        <function-ref name="clr" scoped="" ref="0x404ee550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404ed988" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404ed988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404edb60"/>
        <function-ref name="isInput" scoped="" ref="0x404edc40"/>
        <function-ref name="toggle" scoped="" ref="0x404edd20"/>
        <function-ref name="isOutput" scoped="" ref="0x404ede00"/>
        <function-ref name="get" scoped="" ref="0x404edee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ec010"/>
        <function-ref name="set" scoped="" ref="0x404ec0f0"/>
        <function-ref name="clr" scoped="" ref="0x404ec1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404eb6b0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404eb6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404eb888"/>
        <function-ref name="isInput" scoped="" ref="0x404eb968"/>
        <function-ref name="toggle" scoped="" ref="0x404eba48"/>
        <function-ref name="isOutput" scoped="" ref="0x404ebb28"/>
        <function-ref name="get" scoped="" ref="0x404ebc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ebce8"/>
        <function-ref name="set" scoped="" ref="0x404ebdc8"/>
        <function-ref name="clr" scoped="" ref="0x404ebea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404ee6b0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404ee6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ee888"/>
        <function-ref name="isInput" scoped="" ref="0x404ee968"/>
        <function-ref name="toggle" scoped="" ref="0x404eea48"/>
        <function-ref name="isOutput" scoped="" ref="0x404eeb28"/>
        <function-ref name="get" scoped="" ref="0x404eec08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404eece8"/>
        <function-ref name="set" scoped="" ref="0x404eedc8"/>
        <function-ref name="clr" scoped="" ref="0x404eeea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404ec330" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404ec330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ec508"/>
        <function-ref name="isInput" scoped="" ref="0x404ec5e8"/>
        <function-ref name="toggle" scoped="" ref="0x404ec6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ec7a8"/>
        <function-ref name="get" scoped="" ref="0x404ec888"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ec968"/>
        <function-ref name="set" scoped="" ref="0x404eca48"/>
        <function-ref name="clr" scoped="" ref="0x404ecb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404ea030" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404ea030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ea208"/>
        <function-ref name="isInput" scoped="" ref="0x404ea2e8"/>
        <function-ref name="toggle" scoped="" ref="0x404ea3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ea4a8"/>
        <function-ref name="get" scoped="" ref="0x404ea588"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ea668"/>
        <function-ref name="set" scoped="" ref="0x404ea748"/>
        <function-ref name="clr" scoped="" ref="0x404ea828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407042d0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407042d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407044a8"/>
        <function-ref name="isInput" scoped="" ref="0x40704588"/>
        <function-ref name="toggle" scoped="" ref="0x40704668"/>
        <function-ref name="isOutput" scoped="" ref="0x40704748"/>
        <function-ref name="get" scoped="" ref="0x40704828"/>
        <function-ref name="makeOutput" scoped="" ref="0x40704908"/>
        <function-ref name="set" scoped="" ref="0x407049e8"/>
        <function-ref name="clr" scoped="" ref="0x40704ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40703c90" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40703c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40703e68"/>
        <function-ref name="isInput" scoped="" ref="0x40702010"/>
        <function-ref name="toggle" scoped="" ref="0x407020f0"/>
        <function-ref name="isOutput" scoped="" ref="0x407021d0"/>
        <function-ref name="get" scoped="" ref="0x407022b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40702390"/>
        <function-ref name="set" scoped="" ref="0x40702470"/>
        <function-ref name="clr" scoped="" ref="0x40702550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40701718" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40701718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407018f0"/>
        <function-ref name="isInput" scoped="" ref="0x407019d0"/>
        <function-ref name="toggle" scoped="" ref="0x40701ab0"/>
        <function-ref name="isOutput" scoped="" ref="0x40701b90"/>
        <function-ref name="get" scoped="" ref="0x40701c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x40701d50"/>
        <function-ref name="set" scoped="" ref="0x40701e30"/>
        <function-ref name="clr" scoped="" ref="0x40701f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406ff0f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406ff0f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406ff2d0"/>
        <function-ref name="isInput" scoped="" ref="0x406ff3b0"/>
        <function-ref name="toggle" scoped="" ref="0x406ff490"/>
        <function-ref name="isOutput" scoped="" ref="0x406ff570"/>
        <function-ref name="get" scoped="" ref="0x406ff650"/>
        <function-ref name="makeOutput" scoped="" ref="0x406ff730"/>
        <function-ref name="set" scoped="" ref="0x406ff810"/>
        <function-ref name="clr" scoped="" ref="0x406ff8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406feac8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406feac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406feca0"/>
        <function-ref name="isInput" scoped="" ref="0x406fed80"/>
        <function-ref name="toggle" scoped="" ref="0x406fee60"/>
        <function-ref name="isOutput" scoped="" ref="0x406fd010"/>
        <function-ref name="get" scoped="" ref="0x406fd0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406fd1d0"/>
        <function-ref name="set" scoped="" ref="0x406fd2b0"/>
        <function-ref name="clr" scoped="" ref="0x406fd390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40712570" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40712570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40712748"/>
        <function-ref name="isInput" scoped="" ref="0x40712828"/>
        <function-ref name="toggle" scoped="" ref="0x40712908"/>
        <function-ref name="isOutput" scoped="" ref="0x407129e8"/>
        <function-ref name="get" scoped="" ref="0x40712ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40712ba8"/>
        <function-ref name="set" scoped="" ref="0x40712c88"/>
        <function-ref name="clr" scoped="" ref="0x40712d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40710010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40710010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407101e8"/>
        <function-ref name="isInput" scoped="" ref="0x407102c8"/>
        <function-ref name="toggle" scoped="" ref="0x407103a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40710488"/>
        <function-ref name="get" scoped="" ref="0x40710568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40710648"/>
        <function-ref name="set" scoped="" ref="0x40710728"/>
        <function-ref name="clr" scoped="" ref="0x40710808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4070f9e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4070f9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4070fbc0"/>
        <function-ref name="isInput" scoped="" ref="0x4070fca0"/>
        <function-ref name="toggle" scoped="" ref="0x4070fd80"/>
        <function-ref name="isOutput" scoped="" ref="0x4070fe60"/>
        <function-ref name="get" scoped="" ref="0x4070e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4070e0f0"/>
        <function-ref name="set" scoped="" ref="0x4070e1d0"/>
        <function-ref name="clr" scoped="" ref="0x4070e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404f3860" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404f3860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f3a38"/>
        <function-ref name="isInput" scoped="" ref="0x404f3b18"/>
        <function-ref name="toggle" scoped="" ref="0x404f3bf8"/>
        <function-ref name="isOutput" scoped="" ref="0x404f3cd8"/>
        <function-ref name="get" scoped="" ref="0x404f3db8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f3e98"/>
        <function-ref name="set" scoped="" ref="0x404f2010"/>
        <function-ref name="clr" scoped="" ref="0x404f20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404f15d0" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404f15d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f17a8"/>
        <function-ref name="isInput" scoped="" ref="0x404f1888"/>
        <function-ref name="toggle" scoped="" ref="0x404f1968"/>
        <function-ref name="isOutput" scoped="" ref="0x404f1a48"/>
        <function-ref name="get" scoped="" ref="0x404f1b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f1c08"/>
        <function-ref name="set" scoped="" ref="0x404f1ce8"/>
        <function-ref name="clr" scoped="" ref="0x404f1dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404f55a0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404f55a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f5778"/>
        <function-ref name="isInput" scoped="" ref="0x404f5858"/>
        <function-ref name="toggle" scoped="" ref="0x404f5938"/>
        <function-ref name="isOutput" scoped="" ref="0x404f5a18"/>
        <function-ref name="get" scoped="" ref="0x404f5af8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f5bd8"/>
        <function-ref name="set" scoped="" ref="0x404f5cb8"/>
        <function-ref name="clr" scoped="" ref="0x404f5d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404f2250" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404f2250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f2428"/>
        <function-ref name="isInput" scoped="" ref="0x404f2508"/>
        <function-ref name="toggle" scoped="" ref="0x404f25e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404f26c8"/>
        <function-ref name="get" scoped="" ref="0x404f27a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f2888"/>
        <function-ref name="set" scoped="" ref="0x404f2968"/>
        <function-ref name="clr" scoped="" ref="0x404f2a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404f1f28" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404f1f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fe110"/>
        <function-ref name="isInput" scoped="" ref="0x404fe1f0"/>
        <function-ref name="toggle" scoped="" ref="0x404fe2d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404fe3b0"/>
        <function-ref name="get" scoped="" ref="0x404fe490"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fe570"/>
        <function-ref name="set" scoped="" ref="0x404fe650"/>
        <function-ref name="clr" scoped="" ref="0x404fe730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404f5ef8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404f5ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f30e0"/>
        <function-ref name="isInput" scoped="" ref="0x404f31c0"/>
        <function-ref name="toggle" scoped="" ref="0x404f32a0"/>
        <function-ref name="isOutput" scoped="" ref="0x404f3380"/>
        <function-ref name="get" scoped="" ref="0x404f3460"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f3540"/>
        <function-ref name="set" scoped="" ref="0x404f3620"/>
        <function-ref name="clr" scoped="" ref="0x404f3700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404f2ba8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404f2ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f2d80"/>
        <function-ref name="isInput" scoped="" ref="0x404f2e60"/>
        <function-ref name="toggle" scoped="" ref="0x404f1010"/>
        <function-ref name="isOutput" scoped="" ref="0x404f10f0"/>
        <function-ref name="get" scoped="" ref="0x404f11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f12b0"/>
        <function-ref name="set" scoped="" ref="0x404f1390"/>
        <function-ref name="clr" scoped="" ref="0x404f1470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404fe890" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404fe890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fea68"/>
        <function-ref name="isInput" scoped="" ref="0x404feb48"/>
        <function-ref name="toggle" scoped="" ref="0x404fec28"/>
        <function-ref name="isOutput" scoped="" ref="0x404fed08"/>
        <function-ref name="get" scoped="" ref="0x404fede8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404feec8"/>
        <function-ref name="set" scoped="" ref="0x404fd010"/>
        <function-ref name="clr" scoped="" ref="0x404fd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40729de8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40729de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4073c010"/>
        <function-ref name="isInput" scoped="" ref="0x4073c0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4073c1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4073c2b0"/>
        <function-ref name="get" scoped="" ref="0x4073c390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4073c470"/>
        <function-ref name="set" scoped="" ref="0x4073c550"/>
        <function-ref name="clr" scoped="" ref="0x4073c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4073b7f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4073b7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4073b9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4073bab0"/>
        <function-ref name="toggle" scoped="" ref="0x4073bb90"/>
        <function-ref name="isOutput" scoped="" ref="0x4073bc70"/>
        <function-ref name="get" scoped="" ref="0x4073bd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4073be30"/>
        <function-ref name="set" scoped="" ref="0x4073bf10"/>
        <function-ref name="clr" scoped="" ref="0x4073a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40739228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40739228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40739400"/>
        <function-ref name="isInput" scoped="" ref="0x407394e0"/>
        <function-ref name="toggle" scoped="" ref="0x407395c0"/>
        <function-ref name="isOutput" scoped="" ref="0x407396a0"/>
        <function-ref name="get" scoped="" ref="0x40739780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40739860"/>
        <function-ref name="set" scoped="" ref="0x40739940"/>
        <function-ref name="clr" scoped="" ref="0x40739a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40738c08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40738c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40738de0"/>
        <function-ref name="isInput" scoped="" ref="0x40738ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40737010"/>
        <function-ref name="isOutput" scoped="" ref="0x407370f0"/>
        <function-ref name="get" scoped="" ref="0x407371d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407372b0"/>
        <function-ref name="set" scoped="" ref="0x40737390"/>
        <function-ref name="clr" scoped="" ref="0x40737470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407366c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407366c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40736898"/>
        <function-ref name="isInput" scoped="" ref="0x40736978"/>
        <function-ref name="toggle" scoped="" ref="0x40736a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40736b38"/>
        <function-ref name="get" scoped="" ref="0x40736c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40736cf8"/>
        <function-ref name="set" scoped="" ref="0x40736dd8"/>
        <function-ref name="clr" scoped="" ref="0x40736eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4074c0b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4074c0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4074c288"/>
        <function-ref name="isInput" scoped="" ref="0x4074c368"/>
        <function-ref name="toggle" scoped="" ref="0x4074c448"/>
        <function-ref name="isOutput" scoped="" ref="0x4074c528"/>
        <function-ref name="get" scoped="" ref="0x4074c608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4074c6e8"/>
        <function-ref name="set" scoped="" ref="0x4074c7c8"/>
        <function-ref name="clr" scoped="" ref="0x4074c8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4074ba88" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4074ba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4074bc60"/>
        <function-ref name="isInput" scoped="" ref="0x4074bd40"/>
        <function-ref name="toggle" scoped="" ref="0x4074be20"/>
        <function-ref name="isOutput" scoped="" ref="0x4074bf00"/>
        <function-ref name="get" scoped="" ref="0x4074a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4074a0f0"/>
        <function-ref name="set" scoped="" ref="0x4074a1d0"/>
        <function-ref name="clr" scoped="" ref="0x4074a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40749538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40749538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40749710"/>
        <function-ref name="isInput" scoped="" ref="0x407497f0"/>
        <function-ref name="toggle" scoped="" ref="0x407498d0"/>
        <function-ref name="isOutput" scoped="" ref="0x407499b0"/>
        <function-ref name="get" scoped="" ref="0x40749a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40749b70"/>
        <function-ref name="set" scoped="" ref="0x40749c50"/>
        <function-ref name="clr" scoped="" ref="0x40749d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404f9170" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404f9170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f9348"/>
        <function-ref name="isInput" scoped="" ref="0x404f9428"/>
        <function-ref name="toggle" scoped="" ref="0x404f9508"/>
        <function-ref name="isOutput" scoped="" ref="0x404f95e8"/>
        <function-ref name="get" scoped="" ref="0x404f96c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f97a8"/>
        <function-ref name="set" scoped="" ref="0x404f9888"/>
        <function-ref name="clr" scoped="" ref="0x404f9968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404f8e48" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404f8e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40504050"/>
        <function-ref name="isInput" scoped="" ref="0x40504130"/>
        <function-ref name="toggle" scoped="" ref="0x40504210"/>
        <function-ref name="isOutput" scoped="" ref="0x405042f0"/>
        <function-ref name="get" scoped="" ref="0x405043d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405044b0"/>
        <function-ref name="set" scoped="" ref="0x40504590"/>
        <function-ref name="clr" scoped="" ref="0x40504670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404fbe78" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404fbe78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fa070"/>
        <function-ref name="isInput" scoped="" ref="0x404fa150"/>
        <function-ref name="toggle" scoped="" ref="0x404fa230"/>
        <function-ref name="isOutput" scoped="" ref="0x404fa310"/>
        <function-ref name="get" scoped="" ref="0x404fa3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fa4d0"/>
        <function-ref name="set" scoped="" ref="0x404fa5b0"/>
        <function-ref name="clr" scoped="" ref="0x404fa690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404f9ac8" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404f9ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f9ca0"/>
        <function-ref name="isInput" scoped="" ref="0x404f9d80"/>
        <function-ref name="toggle" scoped="" ref="0x404f9e60"/>
        <function-ref name="isOutput" scoped="" ref="0x404f8010"/>
        <function-ref name="get" scoped="" ref="0x404f80f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f81d0"/>
        <function-ref name="set" scoped="" ref="0x404f82b0"/>
        <function-ref name="clr" scoped="" ref="0x404f8390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405047d0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405047d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405049a8"/>
        <function-ref name="isInput" scoped="" ref="0x40504a88"/>
        <function-ref name="toggle" scoped="" ref="0x40504b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40504c48"/>
        <function-ref name="get" scoped="" ref="0x40504d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40504e08"/>
        <function-ref name="set" scoped="" ref="0x40504ee8"/>
        <function-ref name="clr" scoped="" ref="0x40503010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404fa7f0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404fa7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fa9c8"/>
        <function-ref name="isInput" scoped="" ref="0x404faaa8"/>
        <function-ref name="toggle" scoped="" ref="0x404fab88"/>
        <function-ref name="isOutput" scoped="" ref="0x404fac68"/>
        <function-ref name="get" scoped="" ref="0x404fad48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fae28"/>
        <function-ref name="set" scoped="" ref="0x404faf08"/>
        <function-ref name="clr" scoped="" ref="0x404f9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404f84f0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404f84f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f86c8"/>
        <function-ref name="isInput" scoped="" ref="0x404f87a8"/>
        <function-ref name="toggle" scoped="" ref="0x404f8888"/>
        <function-ref name="isOutput" scoped="" ref="0x404f8968"/>
        <function-ref name="get" scoped="" ref="0x404f8a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f8b28"/>
        <function-ref name="set" scoped="" ref="0x404f8c08"/>
        <function-ref name="clr" scoped="" ref="0x404f8ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40503170" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40503170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40503348"/>
        <function-ref name="isInput" scoped="" ref="0x40503428"/>
        <function-ref name="toggle" scoped="" ref="0x40503508"/>
        <function-ref name="isOutput" scoped="" ref="0x405035e8"/>
        <function-ref name="get" scoped="" ref="0x405036c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405037a8"/>
        <function-ref name="set" scoped="" ref="0x40503888"/>
        <function-ref name="clr" scoped="" ref="0x40503968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40765938" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40765938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40765b10"/>
        <function-ref name="isInput" scoped="" ref="0x40765bf0"/>
        <function-ref name="toggle" scoped="" ref="0x40765cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40765db0"/>
        <function-ref name="get" scoped="" ref="0x40765e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4077c010"/>
        <function-ref name="set" scoped="" ref="0x4077c0f0"/>
        <function-ref name="clr" scoped="" ref="0x4077c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4077b3b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4077b3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4077b588"/>
        <function-ref name="isInput" scoped="" ref="0x4077b668"/>
        <function-ref name="toggle" scoped="" ref="0x4077b748"/>
        <function-ref name="isOutput" scoped="" ref="0x4077b828"/>
        <function-ref name="get" scoped="" ref="0x4077b908"/>
        <function-ref name="makeOutput" scoped="" ref="0x4077b9e8"/>
        <function-ref name="set" scoped="" ref="0x4077bac8"/>
        <function-ref name="clr" scoped="" ref="0x4077bba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4077ad70" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4077ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40779010"/>
        <function-ref name="isInput" scoped="" ref="0x407790f0"/>
        <function-ref name="toggle" scoped="" ref="0x407791d0"/>
        <function-ref name="isOutput" scoped="" ref="0x407792b0"/>
        <function-ref name="get" scoped="" ref="0x40779390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40779470"/>
        <function-ref name="set" scoped="" ref="0x40779550"/>
        <function-ref name="clr" scoped="" ref="0x40779630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407787f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407787f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407789d0"/>
        <function-ref name="isInput" scoped="" ref="0x40778ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40778b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40778c70"/>
        <function-ref name="get" scoped="" ref="0x40778d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40778e30"/>
        <function-ref name="set" scoped="" ref="0x40778f10"/>
        <function-ref name="clr" scoped="" ref="0x40777010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40776228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40776228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40776400"/>
        <function-ref name="isInput" scoped="" ref="0x407764e0"/>
        <function-ref name="toggle" scoped="" ref="0x407765c0"/>
        <function-ref name="isOutput" scoped="" ref="0x407766a0"/>
        <function-ref name="get" scoped="" ref="0x40776780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40776860"/>
        <function-ref name="set" scoped="" ref="0x40776940"/>
        <function-ref name="clr" scoped="" ref="0x40776a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40775c08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40775c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40775de0"/>
        <function-ref name="isInput" scoped="" ref="0x40775ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40774010"/>
        <function-ref name="isOutput" scoped="" ref="0x407740f0"/>
        <function-ref name="get" scoped="" ref="0x407741d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407742b0"/>
        <function-ref name="set" scoped="" ref="0x40774390"/>
        <function-ref name="clr" scoped="" ref="0x40774470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407736c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407736c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40773898"/>
        <function-ref name="isInput" scoped="" ref="0x40773978"/>
        <function-ref name="toggle" scoped="" ref="0x40773a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40773b38"/>
        <function-ref name="get" scoped="" ref="0x40773c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40773cf8"/>
        <function-ref name="set" scoped="" ref="0x40773dd8"/>
        <function-ref name="clr" scoped="" ref="0x40773eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407710b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407710b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40771288"/>
        <function-ref name="isInput" scoped="" ref="0x40771368"/>
        <function-ref name="toggle" scoped="" ref="0x40771448"/>
        <function-ref name="isOutput" scoped="" ref="0x40771528"/>
        <function-ref name="get" scoped="" ref="0x40771608"/>
        <function-ref name="makeOutput" scoped="" ref="0x407716e8"/>
        <function-ref name="set" scoped="" ref="0x407717c8"/>
        <function-ref name="clr" scoped="" ref="0x407718a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404ff9e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404ff9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ffbc0"/>
        <function-ref name="isInput" scoped="" ref="0x404ffca0"/>
        <function-ref name="toggle" scoped="" ref="0x404ffd80"/>
        <function-ref name="isOutput" scoped="" ref="0x404ffe60"/>
        <function-ref name="get" scoped="" ref="0x4050c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050c0f0"/>
        <function-ref name="set" scoped="" ref="0x4050c1d0"/>
        <function-ref name="clr" scoped="" ref="0x4050c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4050b790" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4050b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050b968"/>
        <function-ref name="isInput" scoped="" ref="0x4050ba48"/>
        <function-ref name="toggle" scoped="" ref="0x4050bb28"/>
        <function-ref name="isOutput" scoped="" ref="0x4050bc08"/>
        <function-ref name="get" scoped="" ref="0x4050bce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050bdc8"/>
        <function-ref name="set" scoped="" ref="0x4050bea8"/>
        <function-ref name="clr" scoped="" ref="0x4050a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x405006f8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x405006f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405008d0"/>
        <function-ref name="isInput" scoped="" ref="0x405009b0"/>
        <function-ref name="toggle" scoped="" ref="0x40500a90"/>
        <function-ref name="isOutput" scoped="" ref="0x40500b70"/>
        <function-ref name="get" scoped="" ref="0x40500c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40500d30"/>
        <function-ref name="set" scoped="" ref="0x40500e10"/>
        <function-ref name="clr" scoped="" ref="0x40500ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4050c410" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4050c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050c5e8"/>
        <function-ref name="isInput" scoped="" ref="0x4050c6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4050c7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4050c888"/>
        <function-ref name="get" scoped="" ref="0x4050c968"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050ca48"/>
        <function-ref name="set" scoped="" ref="0x4050cb28"/>
        <function-ref name="clr" scoped="" ref="0x4050cc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4050a170" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4050a170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050a348"/>
        <function-ref name="isInput" scoped="" ref="0x4050a428"/>
        <function-ref name="toggle" scoped="" ref="0x4050a508"/>
        <function-ref name="isOutput" scoped="" ref="0x4050a5e8"/>
        <function-ref name="get" scoped="" ref="0x4050a6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050a7a8"/>
        <function-ref name="set" scoped="" ref="0x4050a888"/>
        <function-ref name="clr" scoped="" ref="0x4050a968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404ff090" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404ff090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ff268"/>
        <function-ref name="isInput" scoped="" ref="0x404ff348"/>
        <function-ref name="toggle" scoped="" ref="0x404ff428"/>
        <function-ref name="isOutput" scoped="" ref="0x404ff508"/>
        <function-ref name="get" scoped="" ref="0x404ff5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ff6c8"/>
        <function-ref name="set" scoped="" ref="0x404ff7a8"/>
        <function-ref name="clr" scoped="" ref="0x404ff888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4050cd68" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4050cd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050b010"/>
        <function-ref name="isInput" scoped="" ref="0x4050b0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4050b1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4050b2b0"/>
        <function-ref name="get" scoped="" ref="0x4050b390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050b470"/>
        <function-ref name="set" scoped="" ref="0x4050b550"/>
        <function-ref name="clr" scoped="" ref="0x4050b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4050aac8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4050aac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050aca0"/>
        <function-ref name="isInput" scoped="" ref="0x4050ad80"/>
        <function-ref name="toggle" scoped="" ref="0x4050ae60"/>
        <function-ref name="isOutput" scoped="" ref="0x40509010"/>
        <function-ref name="get" scoped="" ref="0x405090f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405091d0"/>
        <function-ref name="set" scoped="" ref="0x405092b0"/>
        <function-ref name="clr" scoped="" ref="0x40509390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407a4538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407a4538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407a4710"/>
        <function-ref name="isInput" scoped="" ref="0x407a47f0"/>
        <function-ref name="toggle" scoped="" ref="0x407a48d0"/>
        <function-ref name="isOutput" scoped="" ref="0x407a49b0"/>
        <function-ref name="get" scoped="" ref="0x407a4a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x407a4b70"/>
        <function-ref name="set" scoped="" ref="0x407a4c50"/>
        <function-ref name="clr" scoped="" ref="0x407a4d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407a2010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407a2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407a21e8"/>
        <function-ref name="isInput" scoped="" ref="0x407a22c8"/>
        <function-ref name="toggle" scoped="" ref="0x407a23a8"/>
        <function-ref name="isOutput" scoped="" ref="0x407a2488"/>
        <function-ref name="get" scoped="" ref="0x407a2568"/>
        <function-ref name="makeOutput" scoped="" ref="0x407a2648"/>
        <function-ref name="set" scoped="" ref="0x407a2728"/>
        <function-ref name="clr" scoped="" ref="0x407a2808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407a19e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407a19e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407a1bc0"/>
        <function-ref name="isInput" scoped="" ref="0x407a1ca0"/>
        <function-ref name="toggle" scoped="" ref="0x407a1d80"/>
        <function-ref name="isOutput" scoped="" ref="0x407a1e60"/>
        <function-ref name="get" scoped="" ref="0x407b9010"/>
        <function-ref name="makeOutput" scoped="" ref="0x407b90f0"/>
        <function-ref name="set" scoped="" ref="0x407b91d0"/>
        <function-ref name="clr" scoped="" ref="0x407b92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407b8538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407b8538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407b8710"/>
        <function-ref name="isInput" scoped="" ref="0x407b87f0"/>
        <function-ref name="toggle" scoped="" ref="0x407b88d0"/>
        <function-ref name="isOutput" scoped="" ref="0x407b89b0"/>
        <function-ref name="get" scoped="" ref="0x407b8a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x407b8b70"/>
        <function-ref name="set" scoped="" ref="0x407b8c50"/>
        <function-ref name="clr" scoped="" ref="0x407b8d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407b6010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407b6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407b61e8"/>
        <function-ref name="isInput" scoped="" ref="0x407b62c8"/>
        <function-ref name="toggle" scoped="" ref="0x407b63a8"/>
        <function-ref name="isOutput" scoped="" ref="0x407b6488"/>
        <function-ref name="get" scoped="" ref="0x407b6568"/>
        <function-ref name="makeOutput" scoped="" ref="0x407b6648"/>
        <function-ref name="set" scoped="" ref="0x407b6728"/>
        <function-ref name="clr" scoped="" ref="0x407b6808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407b59e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407b59e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407b5bc0"/>
        <function-ref name="isInput" scoped="" ref="0x407b5ca0"/>
        <function-ref name="toggle" scoped="" ref="0x407b5d80"/>
        <function-ref name="isOutput" scoped="" ref="0x407b5e60"/>
        <function-ref name="get" scoped="" ref="0x407b4010"/>
        <function-ref name="makeOutput" scoped="" ref="0x407b40f0"/>
        <function-ref name="set" scoped="" ref="0x407b41d0"/>
        <function-ref name="clr" scoped="" ref="0x407b42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407b3538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407b3538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407b3710"/>
        <function-ref name="isInput" scoped="" ref="0x407b37f0"/>
        <function-ref name="toggle" scoped="" ref="0x407b38d0"/>
        <function-ref name="isOutput" scoped="" ref="0x407b39b0"/>
        <function-ref name="get" scoped="" ref="0x407b3a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x407b3b70"/>
        <function-ref name="set" scoped="" ref="0x407b3c50"/>
        <function-ref name="clr" scoped="" ref="0x407b3d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407b1010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407b1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407b11e8"/>
        <function-ref name="isInput" scoped="" ref="0x407b12c8"/>
        <function-ref name="toggle" scoped="" ref="0x407b13a8"/>
        <function-ref name="isOutput" scoped="" ref="0x407b1488"/>
        <function-ref name="get" scoped="" ref="0x407b1568"/>
        <function-ref name="makeOutput" scoped="" ref="0x407b1648"/>
        <function-ref name="set" scoped="" ref="0x407b1728"/>
        <function-ref name="clr" scoped="" ref="0x407b1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40512410" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40512410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405125e8"/>
        <function-ref name="isInput" scoped="" ref="0x405126c8"/>
        <function-ref name="toggle" scoped="" ref="0x405127a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40512888"/>
        <function-ref name="get" scoped="" ref="0x40512968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40512a48"/>
        <function-ref name="set" scoped="" ref="0x40512b28"/>
        <function-ref name="clr" scoped="" ref="0x40512c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40510170" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40510170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40510348"/>
        <function-ref name="isInput" scoped="" ref="0x40510428"/>
        <function-ref name="toggle" scoped="" ref="0x40510508"/>
        <function-ref name="isOutput" scoped="" ref="0x405105e8"/>
        <function-ref name="get" scoped="" ref="0x405106c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405107a8"/>
        <function-ref name="set" scoped="" ref="0x40510888"/>
        <function-ref name="clr" scoped="" ref="0x40510968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40513128" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40513128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40513300"/>
        <function-ref name="isInput" scoped="" ref="0x405133e0"/>
        <function-ref name="toggle" scoped="" ref="0x405134c0"/>
        <function-ref name="isOutput" scoped="" ref="0x405135a0"/>
        <function-ref name="get" scoped="" ref="0x40513680"/>
        <function-ref name="makeOutput" scoped="" ref="0x40513760"/>
        <function-ref name="set" scoped="" ref="0x40513840"/>
        <function-ref name="clr" scoped="" ref="0x40513920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40512d68" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40512d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40511010"/>
        <function-ref name="isInput" scoped="" ref="0x405110f0"/>
        <function-ref name="toggle" scoped="" ref="0x405111d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405112b0"/>
        <function-ref name="get" scoped="" ref="0x40511390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40511470"/>
        <function-ref name="set" scoped="" ref="0x40511550"/>
        <function-ref name="clr" scoped="" ref="0x40511630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40510ac8" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40510ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40510ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40510d80"/>
        <function-ref name="toggle" scoped="" ref="0x40510e60"/>
        <function-ref name="isOutput" scoped="" ref="0x4050f010"/>
        <function-ref name="get" scoped="" ref="0x4050f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050f1d0"/>
        <function-ref name="set" scoped="" ref="0x4050f2b0"/>
        <function-ref name="clr" scoped="" ref="0x4050f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40513a80" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40513a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40513c58"/>
        <function-ref name="isInput" scoped="" ref="0x40513d38"/>
        <function-ref name="toggle" scoped="" ref="0x40513e18"/>
        <function-ref name="isOutput" scoped="" ref="0x40513ef8"/>
        <function-ref name="get" scoped="" ref="0x40512010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405120f0"/>
        <function-ref name="set" scoped="" ref="0x405121d0"/>
        <function-ref name="clr" scoped="" ref="0x405122b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40511790" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40511790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40511968"/>
        <function-ref name="isInput" scoped="" ref="0x40511a48"/>
        <function-ref name="toggle" scoped="" ref="0x40511b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40511c08"/>
        <function-ref name="get" scoped="" ref="0x40511ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40511dc8"/>
        <function-ref name="set" scoped="" ref="0x40511ea8"/>
        <function-ref name="clr" scoped="" ref="0x40510010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4050f4f0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4050f4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050f6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4050f7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4050f888"/>
        <function-ref name="isOutput" scoped="" ref="0x4050f968"/>
        <function-ref name="get" scoped="" ref="0x4050fa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050fb28"/>
        <function-ref name="set" scoped="" ref="0x4050fc08"/>
        <function-ref name="clr" scoped="" ref="0x4050fce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407ed418" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407ed418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407ed5f0"/>
        <function-ref name="isInput" scoped="" ref="0x407ed6d0"/>
        <function-ref name="toggle" scoped="" ref="0x407ed7b0"/>
        <function-ref name="isOutput" scoped="" ref="0x407ed890"/>
        <function-ref name="get" scoped="" ref="0x407ed970"/>
        <function-ref name="makeOutput" scoped="" ref="0x407eda50"/>
        <function-ref name="set" scoped="" ref="0x407edb30"/>
        <function-ref name="clr" scoped="" ref="0x407edc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407ecde0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407ecde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407eb010"/>
        <function-ref name="isInput" scoped="" ref="0x407eb0f0"/>
        <function-ref name="toggle" scoped="" ref="0x407eb1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x407eb2b0"/>
        <function-ref name="get" scoped="" ref="0x407eb390"/>
        <function-ref name="makeOutput" scoped="" ref="0x407eb470"/>
        <function-ref name="set" scoped="" ref="0x407eb550"/>
        <function-ref name="clr" scoped="" ref="0x407eb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407ea7f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407ea7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407ea9d0"/>
        <function-ref name="isInput" scoped="" ref="0x407eaab0"/>
        <function-ref name="toggle" scoped="" ref="0x407eab90"/>
        <function-ref name="isOutput" scoped="" ref="0x407eac70"/>
        <function-ref name="get" scoped="" ref="0x407ead50"/>
        <function-ref name="makeOutput" scoped="" ref="0x407eae30"/>
        <function-ref name="set" scoped="" ref="0x407eaf10"/>
        <function-ref name="clr" scoped="" ref="0x407e9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407e8228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407e8228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407e8400"/>
        <function-ref name="isInput" scoped="" ref="0x407e84e0"/>
        <function-ref name="toggle" scoped="" ref="0x407e85c0"/>
        <function-ref name="isOutput" scoped="" ref="0x407e86a0"/>
        <function-ref name="get" scoped="" ref="0x407e8780"/>
        <function-ref name="makeOutput" scoped="" ref="0x407e8860"/>
        <function-ref name="set" scoped="" ref="0x407e8940"/>
        <function-ref name="clr" scoped="" ref="0x407e8a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407e7c08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407e7c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407e7de0"/>
        <function-ref name="isInput" scoped="" ref="0x407e7ec0"/>
        <function-ref name="toggle" scoped="" ref="0x407e6010"/>
        <function-ref name="isOutput" scoped="" ref="0x407e60f0"/>
        <function-ref name="get" scoped="" ref="0x407e61d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407e62b0"/>
        <function-ref name="set" scoped="" ref="0x407e6390"/>
        <function-ref name="clr" scoped="" ref="0x407e6470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407e56c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407e56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407e5898"/>
        <function-ref name="isInput" scoped="" ref="0x407e5978"/>
        <function-ref name="toggle" scoped="" ref="0x407e5a58"/>
        <function-ref name="isOutput" scoped="" ref="0x407e5b38"/>
        <function-ref name="get" scoped="" ref="0x407e5c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x407e5cf8"/>
        <function-ref name="set" scoped="" ref="0x407e5dd8"/>
        <function-ref name="clr" scoped="" ref="0x407e5eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407e20b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407e20b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407e2288"/>
        <function-ref name="isInput" scoped="" ref="0x407e2368"/>
        <function-ref name="toggle" scoped="" ref="0x407e2448"/>
        <function-ref name="isOutput" scoped="" ref="0x407e2528"/>
        <function-ref name="get" scoped="" ref="0x407e2608"/>
        <function-ref name="makeOutput" scoped="" ref="0x407e26e8"/>
        <function-ref name="set" scoped="" ref="0x407e27c8"/>
        <function-ref name="clr" scoped="" ref="0x407e28a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407e1a88" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407e1a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407e1c60"/>
        <function-ref name="isInput" scoped="" ref="0x407e1d40"/>
        <function-ref name="toggle" scoped="" ref="0x407e1e20"/>
        <function-ref name="isOutput" scoped="" ref="0x407e1f00"/>
        <function-ref name="get" scoped="" ref="0x407fa010"/>
        <function-ref name="makeOutput" scoped="" ref="0x407fa0f0"/>
        <function-ref name="set" scoped="" ref="0x407fa1d0"/>
        <function-ref name="clr" scoped="" ref="0x407fa2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403e5218" loc="88:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403e5218"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403e53f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x403e9560" loc="89:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x403e9560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x403e9738"/>
        <function-ref name="led0Toggle" scoped="" ref="0x403e9818"/>
        <function-ref name="led1On" scoped="" ref="0x403e98f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x403e99d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x403e9ab8"/>
        <function-ref name="get" scoped="" ref="0x403e9b98"/>
        <function-ref name="led1Off" scoped="" ref="0x403e9c78"/>
        <function-ref name="led2Off" scoped="" ref="0x403de010"/>
        <function-ref name="set" scoped="" ref="0x403e9d58"/>
        <function-ref name="led0On" scoped="" ref="0x403e9e38"/>
        <function-ref name="led2On" scoped="" ref="0x403e9f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x403df470" loc="84:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403df470"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403df648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403dc148" loc="85:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403dc148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403dc320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4052b8f0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4052b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40432780"/>
            <typename><typedef-ref name="TMilli" ref="0x40432948"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4053a068"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4053a558"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4053a2e0"/>
        <function-ref name="overflow" scoped="" ref="0x4053a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x405365f8" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x405365f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40527060"/>
            <typename><typedef-ref name="T62khz" ref="0x40527208"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40536d48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40545288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40545010"/>
        <function-ref name="overflow" scoped="" ref="0x40545500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40537320" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40537320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40432780"/>
            <typename><typedef-ref name="TMilli" ref="0x40432948"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40537a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40536010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40537ce8"/>
        <function-ref name="overflow" scoped="" ref="0x40536288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40552368" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40552368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40527060"/>
            <typename><typedef-ref name="T62khz" ref="0x40527208"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40552ab8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40551010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40552d30"/>
        <function-ref name="overflow" scoped="" ref="0x40551288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40550440" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40550440"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40550618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40550878" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40550878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40527060"/>
            <typename><typedef-ref name="T62khz" ref="0x40527208"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4055f010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4055f500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4055f288"/>
        <function-ref name="overflow" scoped="" ref="0x4055f778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x4055fa48" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x4055fa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4055d500"/>
        <function-ref name="test" scoped="" ref="0x4055e838"/>
        <function-ref name="get" scoped="" ref="0x4055e0a8"/>
        <function-ref name="reset" scoped="" ref="0x4055eab0"/>
        <function-ref name="getMode" scoped="" ref="0x4055d7a0"/>
        <function-ref name="overflow" scoped="" ref="0x4055e5c0"/>
        <function-ref name="isOn" scoped="" ref="0x4055d288"/>
        <function-ref name="set" scoped="" ref="0x4055e320"/>
        <function-ref name="start" scoped="" ref="0x4055ed28"/>
        <function-ref name="stop" scoped="" ref="0x4055d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconCapture" ref="0x405789a8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconCapture" scoped="" ref="0x405789a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40576418"/>
        <function-ref name="test" scoped="" ref="0x405777a0"/>
        <function-ref name="fired" scoped="" ref="0x40577528"/>
        <function-ref name="get" scoped="" ref="0x40577010"/>
        <function-ref name="reset" scoped="" ref="0x40577a18"/>
        <function-ref name="getMode" scoped="" ref="0x405766b8"/>
        <function-ref name="isOn" scoped="" ref="0x405761a0"/>
        <function-ref name="set" scoped="" ref="0x40577288"/>
        <function-ref name="start" scoped="" ref="0x40577c90"/>
        <function-ref name="stop" scoped="" ref="0x40577f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4055bc90" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4055bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40567778"/>
        <function-ref name="test" scoped="" ref="0x40568a78"/>
        <function-ref name="get" scoped="" ref="0x405682e8"/>
        <function-ref name="reset" scoped="" ref="0x40568cf0"/>
        <function-ref name="getMode" scoped="" ref="0x40567a18"/>
        <function-ref name="overflow" scoped="" ref="0x40568800"/>
        <function-ref name="isOn" scoped="" ref="0x40567500"/>
        <function-ref name="set" scoped="" ref="0x40568560"/>
        <function-ref name="start" scoped="" ref="0x40567010"/>
        <function-ref name="stop" scoped="" ref="0x40567288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x40579860" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40579860"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405782e0"/>
        <function-ref name="test" scoped="" ref="0x4056e668"/>
        <function-ref name="fired" scoped="" ref="0x4056e3f0"/>
        <function-ref name="get" scoped="" ref="0x40579ea8"/>
        <function-ref name="reset" scoped="" ref="0x4056e8e0"/>
        <function-ref name="getMode" scoped="" ref="0x40578580"/>
        <function-ref name="isOn" scoped="" ref="0x40578068"/>
        <function-ref name="set" scoped="" ref="0x4056e150"/>
        <function-ref name="start" scoped="" ref="0x4056eb58"/>
        <function-ref name="stop" scoped="" ref="0x4056edd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40566470" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40566470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40570ee0"/>
        <function-ref name="test" scoped="" ref="0x40570288"/>
        <function-ref name="fired" scoped="" ref="0x40570010"/>
        <function-ref name="force" scoped="" ref="0x4056f438"/>
        <function-ref name="get" scoped="" ref="0x40566ab8"/>
        <function-ref name="reset" scoped="" ref="0x40570500"/>
        <function-ref name="getMode" scoped="" ref="0x4056f1c0"/>
        <function-ref name="isOn" scoped="" ref="0x40570c68"/>
        <function-ref name="set" scoped="" ref="0x40566d30"/>
        <function-ref name="start" scoped="" ref="0x40570778"/>
        <function-ref name="stop" scoped="" ref="0x405709f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40580408" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40580408"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4057fee0"/>
        <function-ref name="test" scoped="" ref="0x4057f288"/>
        <function-ref name="fired" scoped="" ref="0x4057f010"/>
        <function-ref name="force" scoped="" ref="0x4057d438"/>
        <function-ref name="get" scoped="" ref="0x40580a50"/>
        <function-ref name="reset" scoped="" ref="0x4057f500"/>
        <function-ref name="getMode" scoped="" ref="0x4057d1c0"/>
        <function-ref name="isOn" scoped="" ref="0x4057fc68"/>
        <function-ref name="set" scoped="" ref="0x40580cc8"/>
        <function-ref name="start" scoped="" ref="0x4057f778"/>
        <function-ref name="stop" scoped="" ref="0x4057f9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconCapture" ref="0x40584158" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconCapture" scoped="" ref="0x40584158"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40583c68"/>
        <function-ref name="test" scoped="" ref="0x40583010"/>
        <function-ref name="fired" scoped="" ref="0x40584cb8"/>
        <function-ref name="get" scoped="" ref="0x405847a0"/>
        <function-ref name="reset" scoped="" ref="0x40583288"/>
        <function-ref name="getMode" scoped="" ref="0x40583f08"/>
        <function-ref name="isOn" scoped="" ref="0x405839f0"/>
        <function-ref name="set" scoped="" ref="0x40584a18"/>
        <function-ref name="start" scoped="" ref="0x40583500"/>
        <function-ref name="stop" scoped="" ref="0x40583778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x405921e0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x405921e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x405923b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x4057d830" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x4057d830"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4057b2c0"/>
        <function-ref name="test" scoped="" ref="0x4057c628"/>
        <function-ref name="fired" scoped="" ref="0x4057c3b0"/>
        <function-ref name="force" scoped="" ref="0x4057b7d8"/>
        <function-ref name="get" scoped="" ref="0x4057de78"/>
        <function-ref name="reset" scoped="" ref="0x4057c8a0"/>
        <function-ref name="getMode" scoped="" ref="0x4057b560"/>
        <function-ref name="isOn" scoped="" ref="0x4057b048"/>
        <function-ref name="set" scoped="" ref="0x4057c110"/>
        <function-ref name="start" scoped="" ref="0x4057cb18"/>
        <function-ref name="stop" scoped="" ref="0x4057cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40573278" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40573278"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40581cc0"/>
        <function-ref name="test" scoped="" ref="0x40581068"/>
        <function-ref name="get" scoped="" ref="0x405738c0"/>
        <function-ref name="reset" scoped="" ref="0x405812e0"/>
        <function-ref name="getMode" scoped="" ref="0x40580010"/>
        <function-ref name="overflow" scoped="" ref="0x40573dd8"/>
        <function-ref name="isOn" scoped="" ref="0x40581a48"/>
        <function-ref name="set" scoped="" ref="0x40573b38"/>
        <function-ref name="start" scoped="" ref="0x40581558"/>
        <function-ref name="stop" scoped="" ref="0x405817d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x405925d0" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x405925d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x405927a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x40587010" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40587010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40586a68"/>
        <function-ref name="test" scoped="" ref="0x40587de8"/>
        <function-ref name="fired" scoped="" ref="0x40587b70"/>
        <function-ref name="get" scoped="" ref="0x40587658"/>
        <function-ref name="reset" scoped="" ref="0x40586088"/>
        <function-ref name="getMode" scoped="" ref="0x40586d08"/>
        <function-ref name="isOn" scoped="" ref="0x405867f0"/>
        <function-ref name="set" scoped="" ref="0x405878d0"/>
        <function-ref name="start" scoped="" ref="0x40586300"/>
        <function-ref name="stop" scoped="" ref="0x40586578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x4057bbd0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x4057bbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40588640"/>
        <function-ref name="test" scoped="" ref="0x4058a9c8"/>
        <function-ref name="fired" scoped="" ref="0x4058a750"/>
        <function-ref name="force" scoped="" ref="0x40588b58"/>
        <function-ref name="get" scoped="" ref="0x4058a238"/>
        <function-ref name="reset" scoped="" ref="0x4058ac40"/>
        <function-ref name="getMode" scoped="" ref="0x405888e0"/>
        <function-ref name="isOn" scoped="" ref="0x405883c8"/>
        <function-ref name="set" scoped="" ref="0x4058a4b0"/>
        <function-ref name="start" scoped="" ref="0x4058aeb8"/>
        <function-ref name="stop" scoped="" ref="0x40588150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x405e3010" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x405e3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405e31e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x405f20e0" loc="60:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x405f20e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405f22b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403f6338" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403f6338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403f6510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x403f6c98" loc="59:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403f6c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f6e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x403f66d0" loc="58:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403f66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f68a8"/>
        <function-ref name="taskLoop" scoped="" ref="0x403f6988"/>
        <function-ref name="runNextTask" scoped="" ref="0x403f6a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40304a98" loc="48:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40304c70"/>
        <function-ref name="runTask" scoped="" ref="0x40304d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x402ff378" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x402ff378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x402ff550"/>
        <function-ref name="taskLoop" scoped="" ref="0x402ff630"/>
        <function-ref name="runNextTask" scoped="" ref="0x402ff710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403c8c18" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403c8c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403c8df0"/>
        <function-ref name="runTask" scoped="" ref="0x403c8ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403d18b8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403d18b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403d1a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403c83e0" loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403c83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403c85b8"/>
        <function-ref name="taskLoop" scoped="" ref="0x403c8698"/>
        <function-ref name="runNextTask" scoped="" ref="0x403c8778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x4060b7e0" loc="15:/home/alpsayin/tinyos_workspace/Blink/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x4060b7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40432780"/>
            <typename><typedef-ref name="TMilli" ref="0x40432948"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405ff330"/>
        <function-ref name="fired" scoped="" ref="0x40600590"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40600c98"/>
        <function-ref name="isOneShot" scoped="" ref="0x40600a40"/>
        <function-ref name="getdt" scoped="" ref="0x405ff7e0"/>
        <function-ref name="gett0" scoped="" ref="0x405ff588"/>
        <function-ref name="isRunning" scoped="" ref="0x406007e8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4060be08"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405ff010"/>
        <function-ref name="startOneShot" scoped="" ref="0x406000b8"/>
        <function-ref name="stop" scoped="" ref="0x40600338"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Uart1Byte" ref="0x40614aa8" loc="24:/home/alpsayin/tinyos_workspace/Blink/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Byte" scoped="" ref="0x40614aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40614c80"/>
        <function-ref name="receive" scoped="" ref="0x40614d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40616d80" loc="19:/home/alpsayin/tinyos_workspace/Blink/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40616d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40615010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="toggleLed2Task" ref="0x40612b50" loc="33:/home/alpsayin/tinyos_workspace/Blink/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="toggleLed2Task" scoped="" ref="0x40612b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40612d28"/>
        <function-ref name="runTask" scoped="" ref="0x40612e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="toggleLed0Task" ref="0x40613b10" loc="31:/home/alpsayin/tinyos_workspace/Blink/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="toggleLed0Task" scoped="" ref="0x40613b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40613ce8"/>
        <function-ref name="runTask" scoped="" ref="0x40613dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Uart1Stream" ref="0x40614178" loc="23:/home/alpsayin/tinyos_workspace/Blink/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Stream" scoped="" ref="0x40614178"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40614350"/>
        <function-ref name="receivedByte" scoped="" ref="0x40614430"/>
        <function-ref name="receive" scoped="" ref="0x40614510"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x406145f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x406146d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x406147b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40614890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x405ffb78" loc="16:/home/alpsayin/tinyos_workspace/Blink/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x405ffb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40432780"/>
            <typename><typedef-ref name="TMilli" ref="0x40432948"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406086a8"/>
        <function-ref name="fired" scoped="" ref="0x40609938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40608068"/>
        <function-ref name="isOneShot" scoped="" ref="0x40609de8"/>
        <function-ref name="getdt" scoped="" ref="0x40608b58"/>
        <function-ref name="gett0" scoped="" ref="0x40608900"/>
        <function-ref name="isRunning" scoped="" ref="0x40609b90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406091e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40608388"/>
        <function-ref name="startOneShot" scoped="" ref="0x40609460"/>
        <function-ref name="stop" scoped="" ref="0x406096e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="toggleLed1Task" ref="0x40612338" loc="32:/home/alpsayin/tinyos_workspace/Blink/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="toggleLed1Task" scoped="" ref="0x40612338"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40612510"/>
        <function-ref name="runTask" scoped="" ref="0x406125f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40616158" loc="18:/home/alpsayin/tinyos_workspace/Blink/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40616158"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40616330"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40616410"/>
        <function-ref name="led1On" scoped="" ref="0x406164f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x406165d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x406166b0"/>
        <function-ref name="get" scoped="" ref="0x40616790"/>
        <function-ref name="led1Off" scoped="" ref="0x40616870"/>
        <function-ref name="led2Off" scoped="" ref="0x40616bf0"/>
        <function-ref name="set" scoped="" ref="0x40616950"/>
        <function-ref name="led0On" scoped="" ref="0x40616a30"/>
        <function-ref name="led2On" scoped="" ref="0x40616b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlinkPowerOverride" ref="0x406130e8" loc="26:/home/alpsayin/tinyos_workspace/Blink/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlinkPowerOverride" scoped="" ref="0x406130e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x406132c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x40608ef0" loc="17:/home/alpsayin/tinyos_workspace/Blink/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer2" scoped="" ref="0x40608ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40432780"/>
            <typename><typedef-ref name="TMilli" ref="0x40432948"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40605a18"/>
        <function-ref name="fired" scoped="" ref="0x40607cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406053d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40605180"/>
        <function-ref name="getdt" scoped="" ref="0x40605ec8"/>
        <function-ref name="gett0" scoped="" ref="0x40605c70"/>
        <function-ref name="isRunning" scoped="" ref="0x40607f08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40607558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406056f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x406077d8"/>
        <function-ref name="stop" scoped="" ref="0x40607a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PushButton" ref="0x40615c30" loc="20:/home/alpsayin/tinyos_workspace/Blink/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PushButton" scoped="" ref="0x40615c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PushButton"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40615e08"/>
        <function-ref name="waitUntilPressed" scoped="" ref="0x40615ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40622330" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40622330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40432780"/>
            <typename><typedef-ref name="TMilli" ref="0x40432948"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40621e38"/>
        <function-ref name="fired" scoped="" ref="0x406210f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406217f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x406215a0"/>
        <function-ref name="getdt" scoped="" ref="0x406d5310"/>
        <function-ref name="gett0" scoped="" ref="0x406d50b8"/>
        <function-ref name="isRunning" scoped="" ref="0x40621348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40622958"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40621b18"/>
        <function-ref name="startOneShot" scoped="" ref="0x40622bd8"/>
        <function-ref name="stop" scoped="" ref="0x40622e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x4062f5a0" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x4062f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40432780"/>
            <typename><typedef-ref name="TMilli" ref="0x40432948"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4062c098"/>
        <function-ref name="fired" scoped="" ref="0x4062d330"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4062da38"/>
        <function-ref name="isOneShot" scoped="" ref="0x4062d7e0"/>
        <function-ref name="getdt" scoped="" ref="0x4062c548"/>
        <function-ref name="gett0" scoped="" ref="0x4062c2f0"/>
        <function-ref name="isRunning" scoped="" ref="0x4062d588"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4062fbc8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4062dd58"/>
        <function-ref name="startOneShot" scoped="" ref="0x4062fe48"/>
        <function-ref name="stop" scoped="" ref="0x4062d0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4062bf20" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4062bf20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40432780"/>
            <typename><typedef-ref name="TMilli" ref="0x40432948"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406793e8"/>
        <function-ref name="fired" scoped="" ref="0x4062aba0"/>
        <function-ref name="startAt" scoped="" ref="0x406790a8"/>
        <function-ref name="isRunning" scoped="" ref="0x4062ae18"/>
        <function-ref name="getAlarm" scoped="" ref="0x40679660"/>
        <function-ref name="start" scoped="" ref="0x4062a688"/>
        <function-ref name="stop" scoped="" ref="0x4062a928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4082ace0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4082ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40527060"/>
            <typename><typedef-ref name="T62khz" ref="0x40527208"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408271e8"/>
        <function-ref name="fired" scoped="" ref="0x40829990"/>
        <function-ref name="startAt" scoped="" ref="0x40829e80"/>
        <function-ref name="isRunning" scoped="" ref="0x40829c08"/>
        <function-ref name="getAlarm" scoped="" ref="0x40827460"/>
        <function-ref name="start" scoped="" ref="0x40829478"/>
        <function-ref name="stop" scoped="" ref="0x40829718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x408345e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x408345e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40831068"/>
        <function-ref name="test" scoped="" ref="0x408333e8"/>
        <function-ref name="fired" scoped="" ref="0x40833170"/>
        <function-ref name="force" scoped="" ref="0x40831580"/>
        <function-ref name="get" scoped="" ref="0x40834c30"/>
        <function-ref name="reset" scoped="" ref="0x40833660"/>
        <function-ref name="getMode" scoped="" ref="0x40831308"/>
        <function-ref name="isOn" scoped="" ref="0x40833dc8"/>
        <function-ref name="set" scoped="" ref="0x40834ea8"/>
        <function-ref name="start" scoped="" ref="0x408338d8"/>
        <function-ref name="stop" scoped="" ref="0x40833b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40839c40" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40839c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40527060"/>
            <typename><typedef-ref name="T62khz" ref="0x40527208"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408360f8"/>
        <function-ref name="fired" scoped="" ref="0x408388b8"/>
        <function-ref name="startAt" scoped="" ref="0x40838da8"/>
        <function-ref name="isRunning" scoped="" ref="0x40838b30"/>
        <function-ref name="getAlarm" scoped="" ref="0x40836370"/>
        <function-ref name="start" scoped="" ref="0x408383a0"/>
        <function-ref name="stop" scoped="" ref="0x40838640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40839808" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40839808"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408399e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x40836640" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x40836640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x408340a8"/>
        <function-ref name="test" scoped="" ref="0x40835438"/>
        <function-ref name="get" scoped="" ref="0x40836c88"/>
        <function-ref name="reset" scoped="" ref="0x408356b0"/>
        <function-ref name="getMode" scoped="" ref="0x40834348"/>
        <function-ref name="overflow" scoped="" ref="0x408351c0"/>
        <function-ref name="isOn" scoped="" ref="0x40835e18"/>
        <function-ref name="set" scoped="" ref="0x40836f00"/>
        <function-ref name="start" scoped="" ref="0x40835928"/>
        <function-ref name="stop" scoped="" ref="0x40835ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x408266b8" loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x408266b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40432780"/>
            <typename><typedef-ref name="TMilli" ref="0x40432948"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40825b80"/>
        <function-ref name="fired" scoped="" ref="0x40825350"/>
        <function-ref name="startAt" scoped="" ref="0x40825840"/>
        <function-ref name="isRunning" scoped="" ref="0x408255c8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40825df8"/>
        <function-ref name="start" scoped="" ref="0x40826e08"/>
        <function-ref name="stop" scoped="" ref="0x408250d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x408233b8" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x408233b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40527060"/>
            <typename><typedef-ref name="T62khz" ref="0x40527208"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4083c878"/>
        <function-ref name="fired" scoped="" ref="0x4083c048"/>
        <function-ref name="startAt" scoped="" ref="0x4083c538"/>
        <function-ref name="isRunning" scoped="" ref="0x4083c2c0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4083caf0"/>
        <function-ref name="start" scoped="" ref="0x40823b08"/>
        <function-ref name="stop" scoped="" ref="0x40823da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40824180" loc="68:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40824180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40432780"/>
            <typename><typedef-ref name="TMilli" ref="0x40432948"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408248d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40824dc0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40824b48"/>
        <function-ref name="overflow" scoped="" ref="0x40823048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x4069a658" loc="74:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x4069a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4069a830"/>
        <function-ref name="runTask" scoped="" ref="0x4069a910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x4069dcc8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4069dcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40432780"/>
            <typename><typedef-ref name="TMilli" ref="0x40432948"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4069a190"/>
        <function-ref name="fired" scoped="" ref="0x4069b950"/>
        <function-ref name="startAt" scoped="" ref="0x4069be40"/>
        <function-ref name="isRunning" scoped="" ref="0x4069bbc8"/>
        <function-ref name="getAlarm" scoped="" ref="0x4069a408"/>
        <function-ref name="start" scoped="" ref="0x4069b438"/>
        <function-ref name="stop" scoped="" ref="0x4069b6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4068c968" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4068c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40432780"/>
            <typename><typedef-ref name="TMilli" ref="0x40432948"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4069d4c8"/>
        <function-ref name="fired" scoped="" ref="0x4068b768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4068be70"/>
        <function-ref name="isOneShot" scoped="" ref="0x4068bc18"/>
        <function-ref name="getdt" scoped="" ref="0x4069d978"/>
        <function-ref name="gett0" scoped="" ref="0x4069d720"/>
        <function-ref name="isRunning" scoped="" ref="0x4068b9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4068b010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4069d1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x4068b290"/>
        <function-ref name="stop" scoped="" ref="0x4068b510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x406c22b8" loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x406c22b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406c2490"/>
        <function-ref name="runTask" scoped="" ref="0x406c2570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x406c40c0" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x406c40c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40432780"/>
            <typename><typedef-ref name="TMilli" ref="0x40432948"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406c3ba8"/>
        <function-ref name="fired" scoped="" ref="0x406c4e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406c3568"/>
        <function-ref name="isOneShot" scoped="" ref="0x406c3310"/>
        <function-ref name="getdt" scoped="" ref="0x406c2068"/>
        <function-ref name="gett0" scoped="" ref="0x406c3e00"/>
        <function-ref name="isRunning" scoped="" ref="0x406c30b8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406c46e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406c3888"/>
        <function-ref name="startOneShot" scoped="" ref="0x406c4968"/>
        <function-ref name="stop" scoped="" ref="0x406c4be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40697cc8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40697cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40432780"/>
            <typename><typedef-ref name="TMilli" ref="0x40432948"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406c68d8"/>
        <function-ref name="fired" scoped="" ref="0x406c7ad8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406c6278"/>
        <function-ref name="isOneShot" scoped="" ref="0x406c6010"/>
        <function-ref name="getdt" scoped="" ref="0x406c6da8"/>
        <function-ref name="gett0" scoped="" ref="0x406c6b40"/>
        <function-ref name="isRunning" scoped="" ref="0x406c7d40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406c7350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406c65a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x406c75e0"/>
        <function-ref name="stop" scoped="" ref="0x406c7870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406d40f0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406d40f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40432780"/>
            <typename><typedef-ref name="TMilli" ref="0x40432948"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406d2be0"/>
        <function-ref name="fired" scoped="" ref="0x406d4e70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406d25a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x406d2348"/>
        <function-ref name="getdt" scoped="" ref="0x406d10b8"/>
        <function-ref name="gett0" scoped="" ref="0x406d2e38"/>
        <function-ref name="isRunning" scoped="" ref="0x406d20f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406d4718"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406d28c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x406d4998"/>
        <function-ref name="stop" scoped="" ref="0x406d4c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406d1e70" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406d1e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40432780"/>
            <typename><typedef-ref name="TMilli" ref="0x40432948"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406cf988"/>
        <function-ref name="fired" scoped="" ref="0x406d0c10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406cf348"/>
        <function-ref name="isOneShot" scoped="" ref="0x406cf0f0"/>
        <function-ref name="getdt" scoped="" ref="0x406cfe38"/>
        <function-ref name="gett0" scoped="" ref="0x406cfbe0"/>
        <function-ref name="isRunning" scoped="" ref="0x406d0e68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406d04b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406cf668"/>
        <function-ref name="startOneShot" scoped="" ref="0x406d0738"/>
        <function-ref name="stop" scoped="" ref="0x406d09b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x406df2a8" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x406df2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406df480"/>
        <function-ref name="receive" scoped="" ref="0x406df560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStreamBlocking" ref="0x406df800" loc="40:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStreamBlocking" scoped="" ref="0x406df800"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406df9d8"/>
        <function-ref name="receivedByte" scoped="" ref="0x406dfab8"/>
        <function-ref name="receive" scoped="" ref="0x406dfb98"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x406dfc78"/>
        <function-ref name="receiveDone" scoped="" ref="0x406dfd58"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x406dfe38"/>
        <function-ref name="sendDone" scoped="" ref="0x406dff18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x406cd998" loc="38:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x406cd998"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x406cdb70"/>
        <function-ref name="receivedByte" scoped="" ref="0x406cdc50"/>
        <function-ref name="receive" scoped="" ref="0x406cdd30"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x406cde10"/>
        <function-ref name="receiveDone" scoped="" ref="0x406cdef0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x406df010"/>
        <function-ref name="sendDone" scoped="" ref="0x406df0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PushButton0Init" ref="0x406dc338" loc="7:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PushButtonC.nc">
      <component-ref qname="PushButtonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PushButton0Init" scoped="" ref="0x406dc338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406dc510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PushButton0" ref="0x406ccd78" loc="6:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PushButtonC.nc">
      <component-ref qname="PushButtonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PushButton0" scoped="" ref="0x406ccd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PushButton"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406dc010"/>
        <function-ref name="waitUntilPressed" scoped="" ref="0x406dc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406dcb28" loc="4:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PushButtonP.nc">
      <component-ref qname="PushButtonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406dcb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406dcd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x406d9488" loc="6:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PushButtonP.nc">
      <component-ref qname="PushButtonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x406d9488"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406d9660"/>
        <function-ref name="isInput" scoped="" ref="0x406d9740"/>
        <function-ref name="toggle" scoped="" ref="0x406d9820"/>
        <function-ref name="isOutput" scoped="" ref="0x406d9900"/>
        <function-ref name="get" scoped="" ref="0x406d99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406d9ac0"/>
        <function-ref name="set" scoped="" ref="0x406d9ba0"/>
        <function-ref name="clr" scoped="" ref="0x406d9c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PushButton0" ref="0x406d9010" loc="5:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PushButtonP.nc">
      <component-ref qname="PushButtonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PushButton0" scoped="" ref="0x406d9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PushButton"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406d91e8"/>
        <function-ref name="waitUntilPressed" scoped="" ref="0x406d92c8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403f9138" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x403f3510" loc="60:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x4040f010" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x40410dd8" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x404115c0" loc="31:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x40411bf8" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40411aa0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x404102d8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40410180" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x40410830" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4041f9a0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x4041f848" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x4042a250" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x4041fed0" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x4042a0f0" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4041d7a8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x4041d458" loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4041d648" loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40424ba8" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40424a50" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x404233d8" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40423088" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40423278" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x40424010" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x40422290" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40423d00" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40423ef0" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40422128" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x40424598" loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40426618" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x404260c8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404262b8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x404264b0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x40304010" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40304528" loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialInterrupts" loc="3:/home/alpsayin/tinyos_workspace/Blink/src/SerialInterrupts.nc">
      <function command="" provided="0" name="setSendData" ref="0x4042d5a8" loc="17:/home/alpsayin/tinyos_workspace/Blink/src/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="txInterruptHandler" ref="0x40438010" loc="20:/home/alpsayin/tinyos_workspace/Blink/src/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxInterruptHandler" ref="0x4042db50" loc="19:/home/alpsayin/tinyos_workspace/Blink/src/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x4042d9f8" loc="19:/home/alpsayin/tinyos_workspace/Blink/src/SerialInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxInterrupt" ref="0x40430828" loc="6:/home/alpsayin/tinyos_workspace/Blink/src/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxInterrupt" ref="0x40430408" loc="5:/home/alpsayin/tinyos_workspace/Blink/src/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxInterrupt" ref="0x4042f090" loc="9:/home/alpsayin/tinyos_workspace/Blink/src/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearTxInterrupt" ref="0x4042f4a8" loc="11:/home/alpsayin/tinyos_workspace/Blink/src/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxInterruptPending" ref="0x4042fd30" loc="14:/home/alpsayin/tinyos_workspace/Blink/src/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxInterrupt" ref="0x40430c50" loc="8:/home/alpsayin/tinyos_workspace/Blink/src/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearRxInterrupt" ref="0x4042f8c0" loc="12:/home/alpsayin/tinyos_workspace/Blink/src/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxInterruptPending" ref="0x4042d1c8" loc="15:/home/alpsayin/tinyos_workspace/Blink/src/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40436768" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40436768"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x404368d0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404368d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40436db8" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404368d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40434810" loc="76:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40434310" loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40434c38" loc="82:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x403e3750" loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x403e3b98" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x403e1038" loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x403e18a8" loc="83:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x403ea5b0" loc="100:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403eaa58" loc="117:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x403e1460" loc="77:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403e91c0" loc="134:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x403e9068" loc="134:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x403e3328" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x403e1d28" loc="89:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x403ea168" loc="94:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403dcd68" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x403b7bc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x40496b50" loc="44:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x40494010" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x404963c0" loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x404947e0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40496780" loc="43:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x404943e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4048dc18" loc="40:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x40496010" loc="41:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403d16e0" loc="76:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403dfeb8" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCounter" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x4054b298" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
          <interfacedef-ref qname="AtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054b298"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x40557970" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40557818" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x405584d8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4054b790" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054b298"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40558890" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x40557d80" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x405580f8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40557418" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4054bcd0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054b298"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4054bb78" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054b298"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40558c58" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40557038" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCapture" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x4056f998" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
          <interfacedef-ref qname="AtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4056f998"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x40579168" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40579010" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4056cb98" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4056c7b8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4056fe90" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4056f998"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4057a010" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x40579578" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4057ab68" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4056c3f0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4056f998"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4056c298" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4056f998"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4057a3d8" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4057a788" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCompare" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x40564010" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
          <interfacedef-ref qname="AtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40564010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x40571690" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40571538" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40572210" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40564e10" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x40571e68" loc="78:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40564508" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40564010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405725c8" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x40571aa0" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40571138" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40564a48" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40564010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x405648f0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40564010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40572990" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40572d40" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403327e0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402ff138" loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40332c20" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405fe340" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405fe340"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4060ca80" loc="136:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x405fd8f0" loc="83:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x405fca60" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x405fc718" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x405fc900" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x405fc270" loc="98:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x4060b460" loc="151:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x4060cec8" loc="144:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x405fdd80" loc="92:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x405fe998" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x405fe840" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x4060c460" loc="129:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4060c118" loc="129:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4060c300" loc="129:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x405fd058" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x405feed8" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405fd528" loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PushButton" loc="2:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PushButton.nc">
      <function command="" provided="0" name="get" ref="0x406156b0" loc="4:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PushButton.nc">
        <interfacedef-ref qname="PushButton"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="waitUntilPressed" ref="0x40615ac8" loc="5:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PushButton.nc">
        <interfacedef-ref qname="PushButton"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4063b400" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4063b400"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4063b568" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4063b568"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40638830" loc="109:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4063b568"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x406394f0" loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x406381e8" loc="103:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4063b568"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4063b568"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40639e68" loc="103:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4063b568"/></type-var>
          </variable>
          <variable name="dt" ref="0x40638088" loc="103:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4063b568"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40639960" loc="88:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40638cc0" loc="116:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4063b568"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4063bb98" loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4063b568"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4063ba40" loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4063b568"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40639090" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
