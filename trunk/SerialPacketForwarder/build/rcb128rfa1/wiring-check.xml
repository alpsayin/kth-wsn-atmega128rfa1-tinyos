<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="11:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderTestC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403ff500"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403f6cf8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403f6cf8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404b3cd0"/></to>
    </wire>
    <wire loc="14:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderTestC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x403ff848"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x405384d8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x405384d8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x405449a8"/></to>
    </wire>
    <wire loc="17:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderTestC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x403fdd20"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40632628"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40632628"/></from>
      <to><interface-ref name="Uart1Byte" scoped="" ref="0x404d5328"/></to>
    </wire>
    <wire loc="20:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderTestC.nc">
      <from><interface-ref name="CommandNotification" scoped="" ref="0x40407f18"/></from>
      <to><interface-ref name="CommandNotification" scoped="" ref="0x404a1e88"/></to>
    </wire>
    <wire loc="34:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderC.nc">
      <from><interface-ref name="CommandNotification" scoped="" ref="0x404a1e88"/></from>
      <to><interface-ref name="CommandNotification" scoped="" ref="0x40674010"/></to>
    </wire>
    <wire loc="21:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderTestC.nc">
      <from><interface-ref name="ForwardCommand" scoped="" ref="0x40405c38"/></from>
      <to><interface-ref name="ForwardCommand" scoped="" ref="0x4062fde8"/></to>
    </wire>
    <wire loc="35:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderC.nc">
      <from><interface-ref name="ForwardCommand" scoped="" ref="0x4062fde8"/></from>
      <to><interface-ref name="ForwardCommand" scoped="" ref="0x40673010"/></to>
    </wire>
    <wire loc="22:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderTestC.nc">
      <from><interface-ref name="ForwardData" scoped="" ref="0x404086b8"/></from>
      <to><interface-ref name="ForwardData" scoped="" ref="0x4062d888"/></to>
    </wire>
    <wire loc="36:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderC.nc">
      <from><interface-ref name="ForwardData" scoped="" ref="0x4062d888"/></from>
      <to><interface-ref name="ForwardData" scoped="" ref="0x40673a78"/></to>
    </wire>
    <wire loc="23:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderTestC.nc">
      <from><interface-ref name="ForwardStatus" scoped="" ref="0x40404158"/></from>
      <to><interface-ref name="ForwardStatus" scoped="" ref="0x4062c338"/></to>
    </wire>
    <wire loc="37:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderC.nc">
      <from><interface-ref name="ForwardStatus" scoped="" ref="0x4062c338"/></from>
      <to><interface-ref name="ForwardStatus" scoped="" ref="0x40672520"/></to>
    </wire>
    <wire loc="26:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderTestC.nc">
      <from><interface-ref name="PacketTypes" scoped="" ref="0x40401328"/></from>
      <to><interface-ref name="PacketTypes" scoped="" ref="0x406fd0d8"/></to>
    </wire>
    <wire loc="29:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderTestC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x4040f528"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406fb330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x406fb330"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4070a418"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderTestC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x4040e870"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407b13b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x407b13b8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4070a418"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40422b70"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x404354b0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x404354b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4047e170"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x404255a0"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x40435ea8"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x40435ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4047eac8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404291c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40544660"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x4042c010"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x404348e0"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x404348e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4047d4f0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x404ac1f8"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x404b4d28"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x404ac1f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404291c8"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x4042f8e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40470d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40470d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408007f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4047eac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4082d7f8"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x4043b210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40481410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40481410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40865538"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x404444c0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40492128"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40492128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408a1418"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x40440750"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4048f170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4048f170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408b66c0"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x4043dd08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40482090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40482090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40868010"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x40429c98"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4046ca28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4046ca28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407b43b0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x4042d750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4047a988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4047a988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407fb6c0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x40427c08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4046a790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4046a790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407c9228"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x40437670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404776b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404776b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40810538"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x40433ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4047c7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4047c7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408446c0"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x40436a98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4047f790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4047f790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408303b0"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x404390a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4048b170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4048b170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4087b538"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x404412f0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40491d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40491d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4089c228"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x40431a98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404744f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404744f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407c40b0"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x40444eb8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40492a80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40492a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408a0de0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x4042e2f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4046f6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4046f6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407fe228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4047d4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40847228"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x4043bc08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40481d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40481d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4087f010"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x40428750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4046b410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4046b410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407cdd70"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x40438210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40478330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40478330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407f90b0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x40432670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40469170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40469170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407c8c08"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x4043e750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4047b170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4047b170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408420b0"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x40439a98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4048bac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4048bac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40879010"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x40430ea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404703d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404703d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407ebde8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4047e170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4082fd70"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x4043c750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404829e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404829e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408679e8"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x40441ce8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40490790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40490790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408b8c08"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x404304b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40474e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40474e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407c3a88"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x4042ece8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4047a030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4047a030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407fdc08"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x404332f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4047de48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4047de48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40846c08"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x40427210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4046bd68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4046bd68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407cb7f8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x40438c08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40478c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40478c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407f8a88"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x4043d210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404836f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404836f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4086a538"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x4043a670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4048c790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4048c790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4087e9e8"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x404360a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40480dc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40480dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40832938"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x404428e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40491410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40491410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4089e7f8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x404310a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40469ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40469ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x407c66c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4048fac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408b40b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4048e4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408b3a88"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x404ac5c0"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x404b0948"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x404a3de0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404b18c8"/></to>
    </wire>
    <wire loc="23:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404b4130"/></from>
      <to><interface-ref name="SerialPacketForwarderInit" scoped="" ref="0x40676a10"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x406180c0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x402ff378"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x402ff378"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403c83e0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40618688"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404b4918"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404b4918"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404a39f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40618a90"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x404b4130"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404b18c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404bb6d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerInit" scoped="" ref="0x404b1cd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40990698"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x404b1cd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405872c0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x404b82b0"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x404b1cd0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="SerialInit" scoped="" ref="0x404bbae0"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x404d3a70"/></to>
    </wire>
    <wire loc="14:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Init" scoped="" ref="0x404d3a70"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x404d4790"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x404bbec8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404bf3f8"/></to>
    </wire>
    <wire loc="15:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Byte" scoped="" ref="0x404d5328"/></from>
      <to><interface-ref name="Uart1Byte" scoped="" ref="0x404e50e0"/></to>
    </wire>
    <wire loc="16:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Stream" scoped="" ref="0x404db950"/></from>
      <to><interface-ref name="Uart1Stream" scoped="" ref="0x404e55f0"/></to>
    </wire>
    <wire loc="17:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x404d5888"/></from>
      <to><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x404e4010"/></to>
    </wire>
    <wire loc="13:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Control" scoped="" ref="0x404d35a8"/></from>
      <to><interface-ref name="Uart1Control" scoped="" ref="0x404d4bd0"/></to>
    </wire>
    <wire loc="18:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40536980"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x405384d8"/></to>
    </wire>
    <wire loc="19:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x404e9d98"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40573890"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40573890"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4056e0c0"/></to>
    </wire>
    <wire loc="20:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Interrupts" scoped="" ref="0x404eb240"/></from>
      <to><interface-ref name="Uart1Interrupts" scoped="" ref="0x40539cc0"/></to>
    </wire>
    <wire loc="21:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x404e3ed0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x405384d8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403e5218"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x405c0d48"/></to>
    </wire>
    <wire loc="22:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403e5218"/></from>
      <to><interface-ref name="Uart1PowerOverride" scoped="" ref="0x404e4a08"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="sendBlockingDoneTask" scoped="" ref="0x404f3010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="sendDoneTask" scoped="" ref="0x404f2170"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="unexpectedByteReceivedTask" scoped="" ref="0x404f12c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="receiveBlockingDoneTask" scoped="" ref="0x404f3888"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="receiveDoneTask" scoped="" ref="0x404f2990"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x405516a0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40422b70"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x405500b0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x404255a0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40550a98"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x4042c010"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x4057f380"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4058a128"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4058a128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405876f8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x40597898"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405a3a70"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x405a3a70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405afea8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="BeaconCapture" scoped="" ref="0x405b15e8"/></from>
      <to><interface-ref name="BeaconCapture" scoped="" ref="0x405c2d58"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x405b2420"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x405c5be0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4059e120"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x405bb010"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4059e120"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x405b8408"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4059e120"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x405b6830"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x405bf150"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403dc148"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403c8c18"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403d18b8"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x403df470"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40426cf0"/></from>
      <to><interface-ref name="Uart1Stream" scoped="" ref="0x404db950"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x40426870"/></from>
      <to><interface-ref name="Uart1Control" scoped="" ref="0x404d35a8"/></to>
    </wire>
    <wire loc="33:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderC.nc">
      <from><interface-ref name="SerialPacketForwarderInit" scoped="" ref="0x404a1918"/></from>
      <to><interface-ref name="SerialPacketForwarderInit" scoped="" ref="0x40676a10"/></to>
    </wire>
    <wire loc="24:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderC.nc">
      <from><interface-ref name="PacketTypes" scoped="" ref="0x4066d5c0"/></from>
      <to><interface-ref name="PacketTypes" scoped="" ref="0x4068d230"/></to>
    </wire>
    <wire loc="25:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x4066d158"/></from>
      <to><interface-ref name="UartControl" scoped="" ref="0x40426870"/></to>
    </wire>
    <wire loc="26:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x4065a380"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40426cf0"/></to>
    </wire>
    <wire loc="27:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x4065ac30"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40632628"/></to>
    </wire>
    <wire loc="28:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4065b730"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x405384d8"/></to>
    </wire>
    <wire loc="29:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderC.nc">
      <from><interface-ref name="DataQueue" scoped="" ref="0x406653b8"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x406d8560"/></to>
    </wire>
    <wire loc="30:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderC.nc">
      <from><interface-ref name="StatusQueue" scoped="" ref="0x406660a0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x406f0a88"/></to>
    </wire>
    <wire loc="31:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderC.nc">
      <from><interface-ref name="CommandQueue" scoped="" ref="0x40664d70"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x406f2010"/></to>
    </wire>
    <wire loc="42:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderP.nc">
      <from><interface-ref name="processReceiveBufferTask" scoped="" ref="0x40671478"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderP.nc">
      <from><interface-ref name="forwardNextPacketTask" scoped="" ref="0x40671ce0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x4070a418"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40780cc8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4076dcc8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40706f20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40706f20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x409784c0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x407a00c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40755968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x40995268"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4097caa8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x4097caa8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40990ad0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x40996010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40573890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x4098d558"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405a3a70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x4098b550"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x4059e120"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x4076b658"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x4079d2b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="DummyNotificationReceiverP" loc="4:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/DummyNotificationReceiverP.nc">
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="25:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the Atmega128RFA1's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the Atmega128RFA1's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega128RFA1 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG" loc="40(HplAtm128GeneralIOC.PortG):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit0" loc="41(HplAtm128GeneralIOC.PortG.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit1" loc="41(HplAtm128GeneralIOC.PortG.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit2" loc="41(HplAtm128GeneralIOC.PortG.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit3" loc="41(HplAtm128GeneralIOC.PortG.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit4" loc="41(HplAtm128GeneralIOC.PortG.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit5" loc="41(HplAtm128GeneralIOC.PortG.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit6" loc="41(HplAtm128GeneralIOC.PortG.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit7" loc="41(HplAtm128GeneralIOC.PortG.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="McuInitC" loc="36:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128Rfa1SerialC" loc="1:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <configuration/>
    </component>
    <component qname="Atm128Rfa1SerialP" loc="13:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <module/>
    </component>
    <component qname="Atm128Rfa1Uart1InterruptsP" loc="5:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1Uart1InterruptsP.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="38:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
        <short>&#10; The implementation of the LED mote abstraction for the RCB128RFA1&#10; Platform.</short>
        <long>&#10; The implementation of the LED mote abstraction for the RCB128RFA1&#10; Platform.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.3 2010-08-10 01:28:33 mmaroti Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4040b1b0"/>
            <typename><typedef-ref name="TMilli" ref="0x4040b378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40545c70"/>
            <typename><typedef-ref name="T62khz" ref="0x40545e18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter62khz32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterP):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40545c70"/>
            <typename><typedef-ref name="T62khz" ref="0x40545e18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="37:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="SerialPacketForwarderC" loc="4:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderC.nc">
      <configuration/>
    </component>
    <component qname="SerialPacketForwarderP" loc="14:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderP.nc" safe="">
      <module/>
    </component>
    <component qname="SerialPacketForwarderC.PacketTypesImpl" loc="11(SerialPacketForwarderC.PacketTypesImpl):/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypesP.nc">
      <instance number="0">
        <component-ref qname="PacketTypesP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketForwarderC.DataQueue" loc="42(SerialPacketForwarderC.DataQueue):/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-tag size="I:14" alignment="I:1"><struct-ref name="data_packet" ref="0x403f3470"/>
            <typename><typedef-ref name="data_packet_t" ref="0x403f2188"/></typename>
          </type-tag>
          <value cst="I:255">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketForwarderC.CommandQueue" loc="42(SerialPacketForwarderC.CommandQueue):/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x403f2398"/>
            <typename><typedef-ref name="command_packet_t" ref="0x403f00c8"/></typename>
          </type-tag>
          <value cst="I:32">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketForwarderC.StatusQueue" loc="42(SerialPacketForwarderC.StatusQueue):/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="status_packet" ref="0x4002e908"/>
            <typename><typedef-ref name="status_packet_t" ref="0x403f4850"/></typename>
          </type-tag>
          <value cst="I:32">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketForwarderTestC.PacketTypesDummy" loc="11(SerialPacketForwarderTestC.PacketTypesDummy):/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypesP.nc">
      <instance number="1">
        <component-ref qname="PacketTypesP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketForwarderTestC.Timer0" loc="44(SerialPacketForwarderTestC.Timer0):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C" loc="37(TimerMilliP.AlarmMilli32C.Alarm62khz32C):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP" loc="35(TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40545c70"/>
            <typename><typedef-ref name="T62khz" ref="0x40545e18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4040b1b0"/>
            <typename><typedef-ref name="TMilli" ref="0x4040b378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40545c70"/>
            <typename><typedef-ref name="T62khz" ref="0x40545e18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4040b1b0"/>
            <typename><typedef-ref name="TMilli" ref="0x4040b378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4040b1b0"/>
            <typename><typedef-ref name="TMilli" ref="0x4040b378"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketForwarderTestC.Timer1" loc="44(SerialPacketForwarderTestC.Timer1):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4044a5e8" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4044a800" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4044aa18" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x4044e9f0" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4044ec18" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4044ee40" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4044b068" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x405707f8" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x405707f8"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40570c58" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40570c58"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40570ec0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40570ec0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x4056d370" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x4056d370"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x4056d5d8" loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x4056da60" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x4056da60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x40589aa8" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40589aa8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40589ed8" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40589ed8"/></type-var>
        </typedef>
        <constant name="mode" ref="0x40586120" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PacketTypesP" loc="11:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypesP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x4069f690" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x4069f690"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x4069f8b8" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCompareP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x4070f470" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4070f470"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4070f8a0" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4070f8a0"/></type-var>
        </typedef>
        <constant name="mode" ref="0x4070fa90" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x4070fc98" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x4072f648" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x4072f648"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x4072faa8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x4072faa8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x4072fd10" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x4072fd10"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x407431b8" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x407431b8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40743420" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40753368" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40753368"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4076aef8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4076aef8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x4077e0f0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Timer0" ref="0x4040f528" loc="18:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/DummyNotificationReceiverP.nc">
      <component-ref qname="DummyNotificationReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x4040f528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4040b1b0"/>
            <typename><typedef-ref name="TMilli" ref="0x4040b378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4040e048"/>
        <function-ref name="fired" scoped="" ref="0x4040d2c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4040d9c8"/>
        <function-ref name="isOneShot" scoped="" ref="0x4040d770"/>
        <function-ref name="getdt" scoped="" ref="0x4040e4f8"/>
        <function-ref name="gett0" scoped="" ref="0x4040e2a0"/>
        <function-ref name="isRunning" scoped="" ref="0x4040d518"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4040fb50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4040dce8"/>
        <function-ref name="startOneShot" scoped="" ref="0x4040fdd0"/>
        <function-ref name="stop" scoped="" ref="0x4040d068"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x403fdd20" loc="8:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/DummyNotificationReceiverP.nc">
      <component-ref qname="DummyNotificationReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x403fdd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x403fdef8"/>
        <function-ref name="receive" scoped="" ref="0x403f5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x403ff500" loc="10:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/DummyNotificationReceiverP.nc">
      <component-ref qname="DummyNotificationReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403ff500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403ff6d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CommandNotification" ref="0x40407f18" loc="13:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/DummyNotificationReceiverP.nc">
      <component-ref qname="DummyNotificationReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommandNotification" scoped="" ref="0x40407f18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x403f2398"/>
            <typename><typedef-ref name="command_packet_t" ref="0x403f00c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x403fc7b0"/>
        <function-ref name="enable" scoped="" ref="0x403fc558"/>
        <function-ref name="notify" scoped="" ref="0x403fca08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardCommand" ref="0x40405c38" loc="14:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/DummyNotificationReceiverP.nc">
      <component-ref qname="DummyNotificationReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardCommand" scoped="" ref="0x40405c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetNow"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x403f2398"/>
            <typename><typedef-ref name="command_packet_t" ref="0x403f00c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setNow" scoped="" ref="0x40408298"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x4040e870" loc="19:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/DummyNotificationReceiverP.nc">
      <component-ref qname="DummyNotificationReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x4040e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4040b1b0"/>
            <typename><typedef-ref name="TMilli" ref="0x4040b378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40416368"/>
        <function-ref name="fired" scoped="" ref="0x40417608"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40417d10"/>
        <function-ref name="isOneShot" scoped="" ref="0x40417ab8"/>
        <function-ref name="getdt" scoped="" ref="0x40416818"/>
        <function-ref name="gett0" scoped="" ref="0x404165c0"/>
        <function-ref name="isRunning" scoped="" ref="0x40417860"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4040ee98"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40416048"/>
        <function-ref name="startOneShot" scoped="" ref="0x40417130"/>
        <function-ref name="stop" scoped="" ref="0x404173b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x403ff848" loc="11:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/DummyNotificationReceiverP.nc">
      <component-ref qname="DummyNotificationReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x403ff848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x403ffa20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x403ffb00"/>
        <function-ref name="led1On" scoped="" ref="0x403ffbe0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x403ffcc0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x403ffda0"/>
        <function-ref name="get" scoped="" ref="0x403ffe80"/>
        <function-ref name="led1Off" scoped="" ref="0x403fe010"/>
        <function-ref name="led2Off" scoped="" ref="0x403fe390"/>
        <function-ref name="set" scoped="" ref="0x403fe0f0"/>
        <function-ref name="led0On" scoped="" ref="0x403fe1d0"/>
        <function-ref name="led2On" scoped="" ref="0x403fe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardData" ref="0x404086b8" loc="15:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/DummyNotificationReceiverP.nc">
      <component-ref qname="DummyNotificationReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardData" scoped="" ref="0x404086b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetNow"/>
        <arguments>
          <type-tag size="I:14" alignment="I:1"><struct-ref name="data_packet" ref="0x403f3470"/>
            <typename><typedef-ref name="data_packet_t" ref="0x403f2188"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setNow" scoped="" ref="0x40408d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardStatus" ref="0x40404158" loc="16:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/DummyNotificationReceiverP.nc">
      <component-ref qname="DummyNotificationReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardStatus" scoped="" ref="0x40404158"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetNow"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="status_packet" ref="0x4002e908"/>
            <typename><typedef-ref name="status_packet_t" ref="0x403f4850"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setNow" scoped="" ref="0x404047a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTypes" ref="0x40401328" loc="9:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/DummyNotificationReceiverP.nc">
      <component-ref qname="DummyNotificationReceiverP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTypes" scoped="" ref="0x40401328"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTypes"/>
      </instance>
      <interface-functions>
        <function-ref name="asciihexToNum" scoped="" ref="0x40401b20"/>
        <function-ref name="getTypeOfPacket" scoped="" ref="0x404015e0"/>
        <function-ref name="statusPacketToStr" scoped="" ref="0x404016c0"/>
        <function-ref name="dataPacketToStr" scoped="" ref="0x404017a0"/>
        <function-ref name="strToCommandPacket" scoped="" ref="0x40401880"/>
        <function-ref name="strToDataPacket" scoped="" ref="0x40401960"/>
        <function-ref name="commandPacketToStr" scoped="" ref="0x40401500"/>
        <function-ref name="strToStatusPacket" scoped="" ref="0x40401a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40422b70" loc="37:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40422b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40422d48"/>
        <function-ref name="isInput" scoped="" ref="0x40422e28"/>
        <function-ref name="toggle" scoped="" ref="0x40422f08"/>
        <function-ref name="isOutput" scoped="" ref="0x40425010"/>
        <function-ref name="get" scoped="" ref="0x404250f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404251d0"/>
        <function-ref name="set" scoped="" ref="0x404252b0"/>
        <function-ref name="clr" scoped="" ref="0x40425390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x404255a0" loc="38:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x404255a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40425778"/>
        <function-ref name="isInput" scoped="" ref="0x40425858"/>
        <function-ref name="toggle" scoped="" ref="0x40425938"/>
        <function-ref name="isOutput" scoped="" ref="0x40425a18"/>
        <function-ref name="get" scoped="" ref="0x40425af8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40425bd8"/>
        <function-ref name="set" scoped="" ref="0x40425cb8"/>
        <function-ref name="clr" scoped="" ref="0x40425d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x404291c8" loc="40:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404291c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404293a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x4042c010" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x4042c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4042c2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4042c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4042c488"/>
        <function-ref name="get" scoped="" ref="0x4042c568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042c648"/>
        <function-ref name="set" scoped="" ref="0x4042c728"/>
        <function-ref name="clr" scoped="" ref="0x4042c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x4042f8e0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x4042f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042fab8"/>
        <function-ref name="isInput" scoped="" ref="0x4042fb98"/>
        <function-ref name="toggle" scoped="" ref="0x4042fc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4042fd58"/>
        <function-ref name="get" scoped="" ref="0x4042fe38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042ff18"/>
        <function-ref name="set" scoped="" ref="0x4042e010"/>
        <function-ref name="clr" scoped="" ref="0x4042e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x40435ea8" loc="58:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x40435ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404340c0"/>
        <function-ref name="isInput" scoped="" ref="0x404341a0"/>
        <function-ref name="toggle" scoped="" ref="0x40434280"/>
        <function-ref name="isOutput" scoped="" ref="0x40434360"/>
        <function-ref name="get" scoped="" ref="0x40434440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40434520"/>
        <function-ref name="set" scoped="" ref="0x40434600"/>
        <function-ref name="clr" scoped="" ref="0x404346e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x4043b210" loc="67:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x4043b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043b3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4043b4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4043b5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4043b688"/>
        <function-ref name="get" scoped="" ref="0x4043b768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043b848"/>
        <function-ref name="set" scoped="" ref="0x4043b928"/>
        <function-ref name="clr" scoped="" ref="0x4043ba08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x404444c0" loc="74:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x404444c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40444698"/>
        <function-ref name="isInput" scoped="" ref="0x40444778"/>
        <function-ref name="toggle" scoped="" ref="0x40444858"/>
        <function-ref name="isOutput" scoped="" ref="0x40444938"/>
        <function-ref name="get" scoped="" ref="0x40444a18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40444af8"/>
        <function-ref name="set" scoped="" ref="0x40444bd8"/>
        <function-ref name="clr" scoped="" ref="0x40444cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x40440750" loc="79:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x40440750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40440928"/>
        <function-ref name="isInput" scoped="" ref="0x40440a08"/>
        <function-ref name="toggle" scoped="" ref="0x40440ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40440bc8"/>
        <function-ref name="get" scoped="" ref="0x40440ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40440d88"/>
        <function-ref name="set" scoped="" ref="0x40440e68"/>
        <function-ref name="clr" scoped="" ref="0x4043f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x4043dd08" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x4043dd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043dee0"/>
        <function-ref name="isInput" scoped="" ref="0x4043c010"/>
        <function-ref name="toggle" scoped="" ref="0x4043c0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4043c1d0"/>
        <function-ref name="get" scoped="" ref="0x4043c2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043c390"/>
        <function-ref name="set" scoped="" ref="0x4043c470"/>
        <function-ref name="clr" scoped="" ref="0x4043c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x40429c98" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x40429c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40429e70"/>
        <function-ref name="isInput" scoped="" ref="0x40428010"/>
        <function-ref name="toggle" scoped="" ref="0x404280f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404281d0"/>
        <function-ref name="get" scoped="" ref="0x404282b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40428390"/>
        <function-ref name="set" scoped="" ref="0x40428470"/>
        <function-ref name="clr" scoped="" ref="0x40428550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x4042d750" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x4042d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4042da88"/>
        <function-ref name="toggle" scoped="" ref="0x4042db68"/>
        <function-ref name="isOutput" scoped="" ref="0x4042dc48"/>
        <function-ref name="get" scoped="" ref="0x4042dd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042de08"/>
        <function-ref name="set" scoped="" ref="0x4042dee8"/>
        <function-ref name="clr" scoped="" ref="0x40438010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x40427c08" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x40427c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40427de0"/>
        <function-ref name="isInput" scoped="" ref="0x40427ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40432010"/>
        <function-ref name="isOutput" scoped="" ref="0x404320f0"/>
        <function-ref name="get" scoped="" ref="0x404321d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404322b0"/>
        <function-ref name="set" scoped="" ref="0x40432390"/>
        <function-ref name="clr" scoped="" ref="0x40432470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x40437670" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x40437670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40437848"/>
        <function-ref name="isInput" scoped="" ref="0x40437928"/>
        <function-ref name="toggle" scoped="" ref="0x40437a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40437ae8"/>
        <function-ref name="get" scoped="" ref="0x40437bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40437ca8"/>
        <function-ref name="set" scoped="" ref="0x40437d88"/>
        <function-ref name="clr" scoped="" ref="0x40437e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x40433ce8" loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x40433ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40433ec0"/>
        <function-ref name="isInput" scoped="" ref="0x4043e010"/>
        <function-ref name="toggle" scoped="" ref="0x4043e0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4043e1d0"/>
        <function-ref name="get" scoped="" ref="0x4043e2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043e390"/>
        <function-ref name="set" scoped="" ref="0x4043e470"/>
        <function-ref name="clr" scoped="" ref="0x4043e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x40436a98" loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x40436a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40436c70"/>
        <function-ref name="isInput" scoped="" ref="0x40436d50"/>
        <function-ref name="toggle" scoped="" ref="0x40436e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40436f10"/>
        <function-ref name="get" scoped="" ref="0x40435010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404350f0"/>
        <function-ref name="set" scoped="" ref="0x404351d0"/>
        <function-ref name="clr" scoped="" ref="0x404352b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x404390a0" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x404390a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40439278"/>
        <function-ref name="isInput" scoped="" ref="0x40439358"/>
        <function-ref name="toggle" scoped="" ref="0x40439438"/>
        <function-ref name="isOutput" scoped="" ref="0x40439518"/>
        <function-ref name="get" scoped="" ref="0x404395f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404396d8"/>
        <function-ref name="set" scoped="" ref="0x404397b8"/>
        <function-ref name="clr" scoped="" ref="0x40439898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x404412f0" loc="77:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x404412f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404414c8"/>
        <function-ref name="isInput" scoped="" ref="0x404415a8"/>
        <function-ref name="toggle" scoped="" ref="0x40441688"/>
        <function-ref name="isOutput" scoped="" ref="0x40441768"/>
        <function-ref name="get" scoped="" ref="0x40441848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40441928"/>
        <function-ref name="set" scoped="" ref="0x40441a08"/>
        <function-ref name="clr" scoped="" ref="0x40441ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x40431a98" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x40431a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40431c70"/>
        <function-ref name="isInput" scoped="" ref="0x40431d50"/>
        <function-ref name="toggle" scoped="" ref="0x40431e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40431f10"/>
        <function-ref name="get" scoped="" ref="0x40430010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404300f0"/>
        <function-ref name="set" scoped="" ref="0x404301d0"/>
        <function-ref name="clr" scoped="" ref="0x404302b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x40444eb8" loc="75:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x40444eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404420c0"/>
        <function-ref name="isInput" scoped="" ref="0x404421a0"/>
        <function-ref name="toggle" scoped="" ref="0x40442280"/>
        <function-ref name="isOutput" scoped="" ref="0x40442360"/>
        <function-ref name="get" scoped="" ref="0x40442440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40442520"/>
        <function-ref name="set" scoped="" ref="0x40442600"/>
        <function-ref name="clr" scoped="" ref="0x404426e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x4042e2f0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x4042e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042e4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4042e5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4042e688"/>
        <function-ref name="isOutput" scoped="" ref="0x4042e768"/>
        <function-ref name="get" scoped="" ref="0x4042e848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042e928"/>
        <function-ref name="set" scoped="" ref="0x4042ea08"/>
        <function-ref name="clr" scoped="" ref="0x4042eae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x404348e0" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x404348e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40434ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40434b98"/>
        <function-ref name="toggle" scoped="" ref="0x40434c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40434d58"/>
        <function-ref name="get" scoped="" ref="0x40434e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40434f18"/>
        <function-ref name="set" scoped="" ref="0x40433010"/>
        <function-ref name="clr" scoped="" ref="0x404330f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x4043bc08" loc="68:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x4043bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043bde0"/>
        <function-ref name="isInput" scoped="" ref="0x4043bec0"/>
        <function-ref name="toggle" scoped="" ref="0x4043a010"/>
        <function-ref name="isOutput" scoped="" ref="0x4043a0f0"/>
        <function-ref name="get" scoped="" ref="0x4043a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043a2b0"/>
        <function-ref name="set" scoped="" ref="0x4043a390"/>
        <function-ref name="clr" scoped="" ref="0x4043a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x40428750" loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x40428750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40428928"/>
        <function-ref name="isInput" scoped="" ref="0x40428a08"/>
        <function-ref name="toggle" scoped="" ref="0x40428ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40428bc8"/>
        <function-ref name="get" scoped="" ref="0x40428ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40428d88"/>
        <function-ref name="set" scoped="" ref="0x40428e68"/>
        <function-ref name="clr" scoped="" ref="0x40427010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x40438210" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x40438210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404383e8"/>
        <function-ref name="isInput" scoped="" ref="0x404384c8"/>
        <function-ref name="toggle" scoped="" ref="0x404385a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40438688"/>
        <function-ref name="get" scoped="" ref="0x40438768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40438848"/>
        <function-ref name="set" scoped="" ref="0x40438928"/>
        <function-ref name="clr" scoped="" ref="0x40438a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x40432670" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x40432670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40432848"/>
        <function-ref name="isInput" scoped="" ref="0x40432928"/>
        <function-ref name="toggle" scoped="" ref="0x40432a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40432ae8"/>
        <function-ref name="get" scoped="" ref="0x40432bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40432ca8"/>
        <function-ref name="set" scoped="" ref="0x40432d88"/>
        <function-ref name="clr" scoped="" ref="0x40432e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x4043e750" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x4043e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043e928"/>
        <function-ref name="isInput" scoped="" ref="0x4043ea08"/>
        <function-ref name="toggle" scoped="" ref="0x4043eae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4043ebc8"/>
        <function-ref name="get" scoped="" ref="0x4043eca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043ed88"/>
        <function-ref name="set" scoped="" ref="0x4043ee68"/>
        <function-ref name="clr" scoped="" ref="0x4043d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x40439a98" loc="71:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x40439a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40439c70"/>
        <function-ref name="isInput" scoped="" ref="0x40439d50"/>
        <function-ref name="toggle" scoped="" ref="0x40439e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40439f10"/>
        <function-ref name="get" scoped="" ref="0x40444010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404440f0"/>
        <function-ref name="set" scoped="" ref="0x404441d0"/>
        <function-ref name="clr" scoped="" ref="0x404442b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x40430ea8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x40430ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042f0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4042f1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4042f280"/>
        <function-ref name="isOutput" scoped="" ref="0x4042f360"/>
        <function-ref name="get" scoped="" ref="0x4042f440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042f520"/>
        <function-ref name="set" scoped="" ref="0x4042f600"/>
        <function-ref name="clr" scoped="" ref="0x4042f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x404354b0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x404354b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40435688"/>
        <function-ref name="isInput" scoped="" ref="0x40435768"/>
        <function-ref name="toggle" scoped="" ref="0x40435848"/>
        <function-ref name="isOutput" scoped="" ref="0x40435928"/>
        <function-ref name="get" scoped="" ref="0x40435a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40435ae8"/>
        <function-ref name="set" scoped="" ref="0x40435bc8"/>
        <function-ref name="clr" scoped="" ref="0x40435ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x4043c750" loc="66:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x4043c750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043c928"/>
        <function-ref name="isInput" scoped="" ref="0x4043ca08"/>
        <function-ref name="toggle" scoped="" ref="0x4043cae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4043cbc8"/>
        <function-ref name="get" scoped="" ref="0x4043cca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043cd88"/>
        <function-ref name="set" scoped="" ref="0x4043ce68"/>
        <function-ref name="clr" scoped="" ref="0x4043b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x40441ce8" loc="78:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x40441ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40441ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40440010"/>
        <function-ref name="toggle" scoped="" ref="0x404400f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404401d0"/>
        <function-ref name="get" scoped="" ref="0x404402b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40440390"/>
        <function-ref name="set" scoped="" ref="0x40440470"/>
        <function-ref name="clr" scoped="" ref="0x40440550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x404304b0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x404304b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40430688"/>
        <function-ref name="isInput" scoped="" ref="0x40430768"/>
        <function-ref name="toggle" scoped="" ref="0x40430848"/>
        <function-ref name="isOutput" scoped="" ref="0x40430928"/>
        <function-ref name="get" scoped="" ref="0x40430a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40430ae8"/>
        <function-ref name="set" scoped="" ref="0x40430bc8"/>
        <function-ref name="clr" scoped="" ref="0x40430ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x4042ece8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x4042ece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4042eec0"/>
        <function-ref name="isInput" scoped="" ref="0x4042d010"/>
        <function-ref name="toggle" scoped="" ref="0x4042d0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4042d1d0"/>
        <function-ref name="get" scoped="" ref="0x4042d2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4042d390"/>
        <function-ref name="set" scoped="" ref="0x4042d470"/>
        <function-ref name="clr" scoped="" ref="0x4042d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x404332f0" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x404332f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404334c8"/>
        <function-ref name="isInput" scoped="" ref="0x404335a8"/>
        <function-ref name="toggle" scoped="" ref="0x40433688"/>
        <function-ref name="isOutput" scoped="" ref="0x40433768"/>
        <function-ref name="get" scoped="" ref="0x40433848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40433928"/>
        <function-ref name="set" scoped="" ref="0x40433a08"/>
        <function-ref name="clr" scoped="" ref="0x40433ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x40427210" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x40427210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404273e8"/>
        <function-ref name="isInput" scoped="" ref="0x404274c8"/>
        <function-ref name="toggle" scoped="" ref="0x404275a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40427688"/>
        <function-ref name="get" scoped="" ref="0x40427768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40427848"/>
        <function-ref name="set" scoped="" ref="0x40427928"/>
        <function-ref name="clr" scoped="" ref="0x40427a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x40438c08" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x40438c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40438de0"/>
        <function-ref name="isInput" scoped="" ref="0x40438ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40437010"/>
        <function-ref name="isOutput" scoped="" ref="0x404370f0"/>
        <function-ref name="get" scoped="" ref="0x404371d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404372b0"/>
        <function-ref name="set" scoped="" ref="0x40437390"/>
        <function-ref name="clr" scoped="" ref="0x40437470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x4043d210" loc="64:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x4043d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043d4e8"/>
        <function-ref name="isInput" scoped="" ref="0x4043d5c8"/>
        <function-ref name="toggle" scoped="" ref="0x4043d6a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4043d788"/>
        <function-ref name="get" scoped="" ref="0x4043d868"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043d948"/>
        <function-ref name="set" scoped="" ref="0x4043da28"/>
        <function-ref name="clr" scoped="" ref="0x4043db08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x4043a670" loc="69:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x4043a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4043a848"/>
        <function-ref name="isInput" scoped="" ref="0x4043a928"/>
        <function-ref name="toggle" scoped="" ref="0x4043aa08"/>
        <function-ref name="isOutput" scoped="" ref="0x4043aae8"/>
        <function-ref name="get" scoped="" ref="0x4043abc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4043aca8"/>
        <function-ref name="set" scoped="" ref="0x4043ad88"/>
        <function-ref name="clr" scoped="" ref="0x4043ae68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x404360a0" loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x404360a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40436278"/>
        <function-ref name="isInput" scoped="" ref="0x40436358"/>
        <function-ref name="toggle" scoped="" ref="0x40436438"/>
        <function-ref name="isOutput" scoped="" ref="0x40436518"/>
        <function-ref name="get" scoped="" ref="0x404365f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404366d8"/>
        <function-ref name="set" scoped="" ref="0x404367b8"/>
        <function-ref name="clr" scoped="" ref="0x40436898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x404428e0" loc="76:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x404428e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40442ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40442b98"/>
        <function-ref name="toggle" scoped="" ref="0x40442c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40442d58"/>
        <function-ref name="get" scoped="" ref="0x40442e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40442f18"/>
        <function-ref name="set" scoped="" ref="0x40441010"/>
        <function-ref name="clr" scoped="" ref="0x404410f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x404310a0" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x404310a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40431278"/>
        <function-ref name="isInput" scoped="" ref="0x40431358"/>
        <function-ref name="toggle" scoped="" ref="0x40431438"/>
        <function-ref name="isOutput" scoped="" ref="0x40431518"/>
        <function-ref name="get" scoped="" ref="0x404315f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404316d8"/>
        <function-ref name="set" scoped="" ref="0x404317b8"/>
        <function-ref name="clr" scoped="" ref="0x40431898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4046bd68" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4046bd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046a010"/>
        <function-ref name="isInput" scoped="" ref="0x4046a0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4046a1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4046a2b0"/>
        <function-ref name="get" scoped="" ref="0x4046a390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046a470"/>
        <function-ref name="set" scoped="" ref="0x4046a550"/>
        <function-ref name="clr" scoped="" ref="0x4046a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40469ac8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40469ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40469ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40469d80"/>
        <function-ref name="toggle" scoped="" ref="0x40469e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40474010"/>
        <function-ref name="get" scoped="" ref="0x404740f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404741d0"/>
        <function-ref name="set" scoped="" ref="0x404742b0"/>
        <function-ref name="clr" scoped="" ref="0x40474390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4046ca28" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4046ca28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046cc00"/>
        <function-ref name="isInput" scoped="" ref="0x4046cce0"/>
        <function-ref name="toggle" scoped="" ref="0x4046cdc0"/>
        <function-ref name="isOutput" scoped="" ref="0x4046cea0"/>
        <function-ref name="get" scoped="" ref="0x4046b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046b0f0"/>
        <function-ref name="set" scoped="" ref="0x4046b1d0"/>
        <function-ref name="clr" scoped="" ref="0x4046b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4046a790" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4046a790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046a968"/>
        <function-ref name="isInput" scoped="" ref="0x4046aa48"/>
        <function-ref name="toggle" scoped="" ref="0x4046ab28"/>
        <function-ref name="isOutput" scoped="" ref="0x4046ac08"/>
        <function-ref name="get" scoped="" ref="0x4046ace8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046adc8"/>
        <function-ref name="set" scoped="" ref="0x4046aea8"/>
        <function-ref name="clr" scoped="" ref="0x40469010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404744f0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404744f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404746c8"/>
        <function-ref name="isInput" scoped="" ref="0x404747a8"/>
        <function-ref name="toggle" scoped="" ref="0x40474888"/>
        <function-ref name="isOutput" scoped="" ref="0x40474968"/>
        <function-ref name="get" scoped="" ref="0x40474a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40474b28"/>
        <function-ref name="set" scoped="" ref="0x40474c08"/>
        <function-ref name="clr" scoped="" ref="0x40474ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4046b410" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4046b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046b5e8"/>
        <function-ref name="isInput" scoped="" ref="0x4046b6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4046b7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4046b888"/>
        <function-ref name="get" scoped="" ref="0x4046b968"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046ba48"/>
        <function-ref name="set" scoped="" ref="0x4046bb28"/>
        <function-ref name="clr" scoped="" ref="0x4046bc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40469170" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40469170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40469348"/>
        <function-ref name="isInput" scoped="" ref="0x40469428"/>
        <function-ref name="toggle" scoped="" ref="0x40469508"/>
        <function-ref name="isOutput" scoped="" ref="0x404695e8"/>
        <function-ref name="get" scoped="" ref="0x404696c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404697a8"/>
        <function-ref name="set" scoped="" ref="0x40469888"/>
        <function-ref name="clr" scoped="" ref="0x40469968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40474e48" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40474e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40473050"/>
        <function-ref name="isInput" scoped="" ref="0x40473130"/>
        <function-ref name="toggle" scoped="" ref="0x40473210"/>
        <function-ref name="isOutput" scoped="" ref="0x404732f0"/>
        <function-ref name="get" scoped="" ref="0x404733d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404734b0"/>
        <function-ref name="set" scoped="" ref="0x40473590"/>
        <function-ref name="clr" scoped="" ref="0x40473670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407b43b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407b43b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407b4588"/>
        <function-ref name="isInput" scoped="" ref="0x407b4668"/>
        <function-ref name="toggle" scoped="" ref="0x407b4748"/>
        <function-ref name="isOutput" scoped="" ref="0x407b4828"/>
        <function-ref name="get" scoped="" ref="0x407b4908"/>
        <function-ref name="makeOutput" scoped="" ref="0x407b49e8"/>
        <function-ref name="set" scoped="" ref="0x407b4ac8"/>
        <function-ref name="clr" scoped="" ref="0x407b4ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407cdd70" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407cdd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407cc010"/>
        <function-ref name="isInput" scoped="" ref="0x407cc0f0"/>
        <function-ref name="toggle" scoped="" ref="0x407cc1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x407cc2b0"/>
        <function-ref name="get" scoped="" ref="0x407cc390"/>
        <function-ref name="makeOutput" scoped="" ref="0x407cc470"/>
        <function-ref name="set" scoped="" ref="0x407cc550"/>
        <function-ref name="clr" scoped="" ref="0x407cc630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407cb7f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407cb7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407cb9d0"/>
        <function-ref name="isInput" scoped="" ref="0x407cbab0"/>
        <function-ref name="toggle" scoped="" ref="0x407cbb90"/>
        <function-ref name="isOutput" scoped="" ref="0x407cbc70"/>
        <function-ref name="get" scoped="" ref="0x407cbd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x407cbe30"/>
        <function-ref name="set" scoped="" ref="0x407cbf10"/>
        <function-ref name="clr" scoped="" ref="0x407ca010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407c9228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407c9228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407c9400"/>
        <function-ref name="isInput" scoped="" ref="0x407c94e0"/>
        <function-ref name="toggle" scoped="" ref="0x407c95c0"/>
        <function-ref name="isOutput" scoped="" ref="0x407c96a0"/>
        <function-ref name="get" scoped="" ref="0x407c9780"/>
        <function-ref name="makeOutput" scoped="" ref="0x407c9860"/>
        <function-ref name="set" scoped="" ref="0x407c9940"/>
        <function-ref name="clr" scoped="" ref="0x407c9a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407c8c08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407c8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407c8de0"/>
        <function-ref name="isInput" scoped="" ref="0x407c8ec0"/>
        <function-ref name="toggle" scoped="" ref="0x407c7010"/>
        <function-ref name="isOutput" scoped="" ref="0x407c70f0"/>
        <function-ref name="get" scoped="" ref="0x407c71d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407c72b0"/>
        <function-ref name="set" scoped="" ref="0x407c7390"/>
        <function-ref name="clr" scoped="" ref="0x407c7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407c66c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407c66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407c6898"/>
        <function-ref name="isInput" scoped="" ref="0x407c6978"/>
        <function-ref name="toggle" scoped="" ref="0x407c6a58"/>
        <function-ref name="isOutput" scoped="" ref="0x407c6b38"/>
        <function-ref name="get" scoped="" ref="0x407c6c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x407c6cf8"/>
        <function-ref name="set" scoped="" ref="0x407c6dd8"/>
        <function-ref name="clr" scoped="" ref="0x407c6eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407c40b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407c40b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407c4288"/>
        <function-ref name="isInput" scoped="" ref="0x407c4368"/>
        <function-ref name="toggle" scoped="" ref="0x407c4448"/>
        <function-ref name="isOutput" scoped="" ref="0x407c4528"/>
        <function-ref name="get" scoped="" ref="0x407c4608"/>
        <function-ref name="makeOutput" scoped="" ref="0x407c46e8"/>
        <function-ref name="set" scoped="" ref="0x407c47c8"/>
        <function-ref name="clr" scoped="" ref="0x407c48a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407c3a88" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407c3a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407c3c60"/>
        <function-ref name="isInput" scoped="" ref="0x407c3d40"/>
        <function-ref name="toggle" scoped="" ref="0x407c3e20"/>
        <function-ref name="isOutput" scoped="" ref="0x407c3f00"/>
        <function-ref name="get" scoped="" ref="0x407c2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x407c20f0"/>
        <function-ref name="set" scoped="" ref="0x407c21d0"/>
        <function-ref name="clr" scoped="" ref="0x407c22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4046f6b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4046f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046f888"/>
        <function-ref name="isInput" scoped="" ref="0x4046f968"/>
        <function-ref name="toggle" scoped="" ref="0x4046fa48"/>
        <function-ref name="isOutput" scoped="" ref="0x4046fb28"/>
        <function-ref name="get" scoped="" ref="0x4046fc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046fce8"/>
        <function-ref name="set" scoped="" ref="0x4046fdc8"/>
        <function-ref name="clr" scoped="" ref="0x4046fea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40478330" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40478330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40478508"/>
        <function-ref name="isInput" scoped="" ref="0x404785e8"/>
        <function-ref name="toggle" scoped="" ref="0x404786c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404787a8"/>
        <function-ref name="get" scoped="" ref="0x40478888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40478968"/>
        <function-ref name="set" scoped="" ref="0x40478a48"/>
        <function-ref name="clr" scoped="" ref="0x40478b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404703d8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404703d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404705b0"/>
        <function-ref name="isInput" scoped="" ref="0x40470690"/>
        <function-ref name="toggle" scoped="" ref="0x40470770"/>
        <function-ref name="isOutput" scoped="" ref="0x40470850"/>
        <function-ref name="get" scoped="" ref="0x40470930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40470a10"/>
        <function-ref name="set" scoped="" ref="0x40470af0"/>
        <function-ref name="clr" scoped="" ref="0x40470bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4047a030" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4047a030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047a208"/>
        <function-ref name="isInput" scoped="" ref="0x4047a2e8"/>
        <function-ref name="toggle" scoped="" ref="0x4047a3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4047a4a8"/>
        <function-ref name="get" scoped="" ref="0x4047a588"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047a668"/>
        <function-ref name="set" scoped="" ref="0x4047a748"/>
        <function-ref name="clr" scoped="" ref="0x4047a828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40478c88" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40478c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40478e60"/>
        <function-ref name="isInput" scoped="" ref="0x40477010"/>
        <function-ref name="toggle" scoped="" ref="0x404770f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404771d0"/>
        <function-ref name="get" scoped="" ref="0x404772b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40477390"/>
        <function-ref name="set" scoped="" ref="0x40477470"/>
        <function-ref name="clr" scoped="" ref="0x40477550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40470d30" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40470d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40470f08"/>
        <function-ref name="isInput" scoped="" ref="0x4046f010"/>
        <function-ref name="toggle" scoped="" ref="0x4046f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4046f1d0"/>
        <function-ref name="get" scoped="" ref="0x4046f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046f390"/>
        <function-ref name="set" scoped="" ref="0x4046f470"/>
        <function-ref name="clr" scoped="" ref="0x4046f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4047a988" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4047a988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047ab60"/>
        <function-ref name="isInput" scoped="" ref="0x4047ac40"/>
        <function-ref name="toggle" scoped="" ref="0x4047ad20"/>
        <function-ref name="isOutput" scoped="" ref="0x4047ae00"/>
        <function-ref name="get" scoped="" ref="0x4047aee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40478010"/>
        <function-ref name="set" scoped="" ref="0x404780f0"/>
        <function-ref name="clr" scoped="" ref="0x404781d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404776b0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404776b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40477888"/>
        <function-ref name="isInput" scoped="" ref="0x40477968"/>
        <function-ref name="toggle" scoped="" ref="0x40477a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40477b28"/>
        <function-ref name="get" scoped="" ref="0x40477c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40477ce8"/>
        <function-ref name="set" scoped="" ref="0x40477dc8"/>
        <function-ref name="clr" scoped="" ref="0x40477ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407ebde8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407ebde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40801010"/>
        <function-ref name="isInput" scoped="" ref="0x408010f0"/>
        <function-ref name="toggle" scoped="" ref="0x408011d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408012b0"/>
        <function-ref name="get" scoped="" ref="0x40801390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40801470"/>
        <function-ref name="set" scoped="" ref="0x40801550"/>
        <function-ref name="clr" scoped="" ref="0x40801630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408007f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408007f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408009d0"/>
        <function-ref name="isInput" scoped="" ref="0x40800ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40800b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40800c70"/>
        <function-ref name="get" scoped="" ref="0x40800d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40800e30"/>
        <function-ref name="set" scoped="" ref="0x40800f10"/>
        <function-ref name="clr" scoped="" ref="0x407ff010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407fe228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407fe228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407fe400"/>
        <function-ref name="isInput" scoped="" ref="0x407fe4e0"/>
        <function-ref name="toggle" scoped="" ref="0x407fe5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x407fe6a0"/>
        <function-ref name="get" scoped="" ref="0x407fe780"/>
        <function-ref name="makeOutput" scoped="" ref="0x407fe860"/>
        <function-ref name="set" scoped="" ref="0x407fe940"/>
        <function-ref name="clr" scoped="" ref="0x407fea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407fdc08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407fdc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407fdde0"/>
        <function-ref name="isInput" scoped="" ref="0x407fdec0"/>
        <function-ref name="toggle" scoped="" ref="0x407fc010"/>
        <function-ref name="isOutput" scoped="" ref="0x407fc0f0"/>
        <function-ref name="get" scoped="" ref="0x407fc1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407fc2b0"/>
        <function-ref name="set" scoped="" ref="0x407fc390"/>
        <function-ref name="clr" scoped="" ref="0x407fc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407fb6c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407fb6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407fb898"/>
        <function-ref name="isInput" scoped="" ref="0x407fb978"/>
        <function-ref name="toggle" scoped="" ref="0x407fba58"/>
        <function-ref name="isOutput" scoped="" ref="0x407fbb38"/>
        <function-ref name="get" scoped="" ref="0x407fbc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x407fbcf8"/>
        <function-ref name="set" scoped="" ref="0x407fbdd8"/>
        <function-ref name="clr" scoped="" ref="0x407fbeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407f90b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407f90b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407f9288"/>
        <function-ref name="isInput" scoped="" ref="0x407f9368"/>
        <function-ref name="toggle" scoped="" ref="0x407f9448"/>
        <function-ref name="isOutput" scoped="" ref="0x407f9528"/>
        <function-ref name="get" scoped="" ref="0x407f9608"/>
        <function-ref name="makeOutput" scoped="" ref="0x407f96e8"/>
        <function-ref name="set" scoped="" ref="0x407f97c8"/>
        <function-ref name="clr" scoped="" ref="0x407f98a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x407f8a88" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x407f8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407f8c60"/>
        <function-ref name="isInput" scoped="" ref="0x407f8d40"/>
        <function-ref name="toggle" scoped="" ref="0x407f8e20"/>
        <function-ref name="isOutput" scoped="" ref="0x407f8f00"/>
        <function-ref name="get" scoped="" ref="0x40811010"/>
        <function-ref name="makeOutput" scoped="" ref="0x408110f0"/>
        <function-ref name="set" scoped="" ref="0x408111d0"/>
        <function-ref name="clr" scoped="" ref="0x408112b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40810538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40810538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40810710"/>
        <function-ref name="isInput" scoped="" ref="0x408107f0"/>
        <function-ref name="toggle" scoped="" ref="0x408108d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408109b0"/>
        <function-ref name="get" scoped="" ref="0x40810a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40810b70"/>
        <function-ref name="set" scoped="" ref="0x40810c50"/>
        <function-ref name="clr" scoped="" ref="0x40810d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4047e170" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4047e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047e348"/>
        <function-ref name="isInput" scoped="" ref="0x4047e428"/>
        <function-ref name="toggle" scoped="" ref="0x4047e508"/>
        <function-ref name="isOutput" scoped="" ref="0x4047e5e8"/>
        <function-ref name="get" scoped="" ref="0x4047e6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047e7a8"/>
        <function-ref name="set" scoped="" ref="0x4047e888"/>
        <function-ref name="clr" scoped="" ref="0x4047e968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4047de48" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4047de48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047c050"/>
        <function-ref name="isInput" scoped="" ref="0x4047c130"/>
        <function-ref name="toggle" scoped="" ref="0x4047c210"/>
        <function-ref name="isOutput" scoped="" ref="0x4047c2f0"/>
        <function-ref name="get" scoped="" ref="0x4047c3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047c4b0"/>
        <function-ref name="set" scoped="" ref="0x4047c590"/>
        <function-ref name="clr" scoped="" ref="0x4047c670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40480dc8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40480dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047f010"/>
        <function-ref name="isInput" scoped="" ref="0x4047f0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4047f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4047f2b0"/>
        <function-ref name="get" scoped="" ref="0x4047f390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047f470"/>
        <function-ref name="set" scoped="" ref="0x4047f550"/>
        <function-ref name="clr" scoped="" ref="0x4047f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4047eac8" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4047eac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047eca0"/>
        <function-ref name="isInput" scoped="" ref="0x4047ed80"/>
        <function-ref name="toggle" scoped="" ref="0x4047ee60"/>
        <function-ref name="isOutput" scoped="" ref="0x4047d010"/>
        <function-ref name="get" scoped="" ref="0x4047d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047d1d0"/>
        <function-ref name="set" scoped="" ref="0x4047d2b0"/>
        <function-ref name="clr" scoped="" ref="0x4047d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4047c7d0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4047c7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047c9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4047ca88"/>
        <function-ref name="toggle" scoped="" ref="0x4047cb68"/>
        <function-ref name="isOutput" scoped="" ref="0x4047cc48"/>
        <function-ref name="get" scoped="" ref="0x4047cd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047ce08"/>
        <function-ref name="set" scoped="" ref="0x4047cee8"/>
        <function-ref name="clr" scoped="" ref="0x4047b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4047f790" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4047f790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047f968"/>
        <function-ref name="isInput" scoped="" ref="0x4047fa48"/>
        <function-ref name="toggle" scoped="" ref="0x4047fb28"/>
        <function-ref name="isOutput" scoped="" ref="0x4047fc08"/>
        <function-ref name="get" scoped="" ref="0x4047fce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047fdc8"/>
        <function-ref name="set" scoped="" ref="0x4047fea8"/>
        <function-ref name="clr" scoped="" ref="0x4047e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4047d4f0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4047d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047d6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4047d7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4047d888"/>
        <function-ref name="isOutput" scoped="" ref="0x4047d968"/>
        <function-ref name="get" scoped="" ref="0x4047da48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047db28"/>
        <function-ref name="set" scoped="" ref="0x4047dc08"/>
        <function-ref name="clr" scoped="" ref="0x4047dce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4047b170" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4047b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4047b348"/>
        <function-ref name="isInput" scoped="" ref="0x4047b428"/>
        <function-ref name="toggle" scoped="" ref="0x4047b508"/>
        <function-ref name="isOutput" scoped="" ref="0x4047b5e8"/>
        <function-ref name="get" scoped="" ref="0x4047b6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4047b7a8"/>
        <function-ref name="set" scoped="" ref="0x4047b888"/>
        <function-ref name="clr" scoped="" ref="0x4047b968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40832938" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40832938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40832b10"/>
        <function-ref name="isInput" scoped="" ref="0x40832bf0"/>
        <function-ref name="toggle" scoped="" ref="0x40832cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40832db0"/>
        <function-ref name="get" scoped="" ref="0x40832e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40831010"/>
        <function-ref name="set" scoped="" ref="0x408310f0"/>
        <function-ref name="clr" scoped="" ref="0x408311d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408303b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408303b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40830588"/>
        <function-ref name="isInput" scoped="" ref="0x40830668"/>
        <function-ref name="toggle" scoped="" ref="0x40830748"/>
        <function-ref name="isOutput" scoped="" ref="0x40830828"/>
        <function-ref name="get" scoped="" ref="0x40830908"/>
        <function-ref name="makeOutput" scoped="" ref="0x408309e8"/>
        <function-ref name="set" scoped="" ref="0x40830ac8"/>
        <function-ref name="clr" scoped="" ref="0x40830ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4082fd70" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4082fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4082e010"/>
        <function-ref name="isInput" scoped="" ref="0x4082e0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4082e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4082e2b0"/>
        <function-ref name="get" scoped="" ref="0x4082e390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4082e470"/>
        <function-ref name="set" scoped="" ref="0x4082e550"/>
        <function-ref name="clr" scoped="" ref="0x4082e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4082d7f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4082d7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4082d9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4082dab0"/>
        <function-ref name="toggle" scoped="" ref="0x4082db90"/>
        <function-ref name="isOutput" scoped="" ref="0x4082dc70"/>
        <function-ref name="get" scoped="" ref="0x4082dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4082de30"/>
        <function-ref name="set" scoped="" ref="0x4082df10"/>
        <function-ref name="clr" scoped="" ref="0x4082c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40847228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40847228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40847400"/>
        <function-ref name="isInput" scoped="" ref="0x408474e0"/>
        <function-ref name="toggle" scoped="" ref="0x408475c0"/>
        <function-ref name="isOutput" scoped="" ref="0x408476a0"/>
        <function-ref name="get" scoped="" ref="0x40847780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40847860"/>
        <function-ref name="set" scoped="" ref="0x40847940"/>
        <function-ref name="clr" scoped="" ref="0x40847a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40846c08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40846c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40846de0"/>
        <function-ref name="isInput" scoped="" ref="0x40846ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40845010"/>
        <function-ref name="isOutput" scoped="" ref="0x408450f0"/>
        <function-ref name="get" scoped="" ref="0x408451d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408452b0"/>
        <function-ref name="set" scoped="" ref="0x40845390"/>
        <function-ref name="clr" scoped="" ref="0x40845470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408446c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408446c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40844898"/>
        <function-ref name="isInput" scoped="" ref="0x40844978"/>
        <function-ref name="toggle" scoped="" ref="0x40844a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40844b38"/>
        <function-ref name="get" scoped="" ref="0x40844c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40844cf8"/>
        <function-ref name="set" scoped="" ref="0x40844dd8"/>
        <function-ref name="clr" scoped="" ref="0x40844eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408420b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408420b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40842288"/>
        <function-ref name="isInput" scoped="" ref="0x40842368"/>
        <function-ref name="toggle" scoped="" ref="0x40842448"/>
        <function-ref name="isOutput" scoped="" ref="0x40842528"/>
        <function-ref name="get" scoped="" ref="0x40842608"/>
        <function-ref name="makeOutput" scoped="" ref="0x408426e8"/>
        <function-ref name="set" scoped="" ref="0x408427c8"/>
        <function-ref name="clr" scoped="" ref="0x408428a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404829e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404829e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40482bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40482ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40482d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40482e60"/>
        <function-ref name="get" scoped="" ref="0x40481010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404810f0"/>
        <function-ref name="set" scoped="" ref="0x404811d0"/>
        <function-ref name="clr" scoped="" ref="0x404812b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4048c790" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4048c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048c968"/>
        <function-ref name="isInput" scoped="" ref="0x4048ca48"/>
        <function-ref name="toggle" scoped="" ref="0x4048cb28"/>
        <function-ref name="isOutput" scoped="" ref="0x4048cc08"/>
        <function-ref name="get" scoped="" ref="0x4048cce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048cdc8"/>
        <function-ref name="set" scoped="" ref="0x4048cea8"/>
        <function-ref name="clr" scoped="" ref="0x4048b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404836f8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404836f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404838d0"/>
        <function-ref name="isInput" scoped="" ref="0x404839b0"/>
        <function-ref name="toggle" scoped="" ref="0x40483a90"/>
        <function-ref name="isOutput" scoped="" ref="0x40483b70"/>
        <function-ref name="get" scoped="" ref="0x40483c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40483d30"/>
        <function-ref name="set" scoped="" ref="0x40483e10"/>
        <function-ref name="clr" scoped="" ref="0x40483ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40481410" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40481410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404815e8"/>
        <function-ref name="isInput" scoped="" ref="0x404816c8"/>
        <function-ref name="toggle" scoped="" ref="0x404817a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40481888"/>
        <function-ref name="get" scoped="" ref="0x40481968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40481a48"/>
        <function-ref name="set" scoped="" ref="0x40481b28"/>
        <function-ref name="clr" scoped="" ref="0x40481c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4048b170" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4048b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048b348"/>
        <function-ref name="isInput" scoped="" ref="0x4048b428"/>
        <function-ref name="toggle" scoped="" ref="0x4048b508"/>
        <function-ref name="isOutput" scoped="" ref="0x4048b5e8"/>
        <function-ref name="get" scoped="" ref="0x4048b6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048b7a8"/>
        <function-ref name="set" scoped="" ref="0x4048b888"/>
        <function-ref name="clr" scoped="" ref="0x4048b968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40482090" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40482090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40482268"/>
        <function-ref name="isInput" scoped="" ref="0x40482348"/>
        <function-ref name="toggle" scoped="" ref="0x40482428"/>
        <function-ref name="isOutput" scoped="" ref="0x40482508"/>
        <function-ref name="get" scoped="" ref="0x404825e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404826c8"/>
        <function-ref name="set" scoped="" ref="0x404827a8"/>
        <function-ref name="clr" scoped="" ref="0x40482888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40481d68" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40481d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048c010"/>
        <function-ref name="isInput" scoped="" ref="0x4048c0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4048c1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4048c2b0"/>
        <function-ref name="get" scoped="" ref="0x4048c390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048c470"/>
        <function-ref name="set" scoped="" ref="0x4048c550"/>
        <function-ref name="clr" scoped="" ref="0x4048c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4048bac8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4048bac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048bca0"/>
        <function-ref name="isInput" scoped="" ref="0x4048bd80"/>
        <function-ref name="toggle" scoped="" ref="0x4048be60"/>
        <function-ref name="isOutput" scoped="" ref="0x4048a010"/>
        <function-ref name="get" scoped="" ref="0x4048a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048a1d0"/>
        <function-ref name="set" scoped="" ref="0x4048a2b0"/>
        <function-ref name="clr" scoped="" ref="0x4048a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4086a538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4086a538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4086a710"/>
        <function-ref name="isInput" scoped="" ref="0x4086a7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4086a8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4086a9b0"/>
        <function-ref name="get" scoped="" ref="0x4086aa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4086ab70"/>
        <function-ref name="set" scoped="" ref="0x4086ac50"/>
        <function-ref name="clr" scoped="" ref="0x4086ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40868010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40868010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408681e8"/>
        <function-ref name="isInput" scoped="" ref="0x408682c8"/>
        <function-ref name="toggle" scoped="" ref="0x408683a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40868488"/>
        <function-ref name="get" scoped="" ref="0x40868568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40868648"/>
        <function-ref name="set" scoped="" ref="0x40868728"/>
        <function-ref name="clr" scoped="" ref="0x40868808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408679e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408679e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40867bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40867ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40867d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40867e60"/>
        <function-ref name="get" scoped="" ref="0x40866010"/>
        <function-ref name="makeOutput" scoped="" ref="0x408660f0"/>
        <function-ref name="set" scoped="" ref="0x408661d0"/>
        <function-ref name="clr" scoped="" ref="0x408662b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40865538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40865538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40865710"/>
        <function-ref name="isInput" scoped="" ref="0x408657f0"/>
        <function-ref name="toggle" scoped="" ref="0x408658d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408659b0"/>
        <function-ref name="get" scoped="" ref="0x40865a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40865b70"/>
        <function-ref name="set" scoped="" ref="0x40865c50"/>
        <function-ref name="clr" scoped="" ref="0x40865d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4087f010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4087f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4087f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4087f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4087f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4087f488"/>
        <function-ref name="get" scoped="" ref="0x4087f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4087f648"/>
        <function-ref name="set" scoped="" ref="0x4087f728"/>
        <function-ref name="clr" scoped="" ref="0x4087f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4087e9e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4087e9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4087ebc0"/>
        <function-ref name="isInput" scoped="" ref="0x4087eca0"/>
        <function-ref name="toggle" scoped="" ref="0x4087ed80"/>
        <function-ref name="isOutput" scoped="" ref="0x4087ee60"/>
        <function-ref name="get" scoped="" ref="0x4087c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4087c0f0"/>
        <function-ref name="set" scoped="" ref="0x4087c1d0"/>
        <function-ref name="clr" scoped="" ref="0x4087c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4087b538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4087b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4087b710"/>
        <function-ref name="isInput" scoped="" ref="0x4087b7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4087b8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4087b9b0"/>
        <function-ref name="get" scoped="" ref="0x4087ba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4087bb70"/>
        <function-ref name="set" scoped="" ref="0x4087bc50"/>
        <function-ref name="clr" scoped="" ref="0x4087bd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40879010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40879010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408791e8"/>
        <function-ref name="isInput" scoped="" ref="0x408792c8"/>
        <function-ref name="toggle" scoped="" ref="0x408793a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40879488"/>
        <function-ref name="get" scoped="" ref="0x40879568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40879648"/>
        <function-ref name="set" scoped="" ref="0x40879728"/>
        <function-ref name="clr" scoped="" ref="0x40879808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40491410" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40491410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404915e8"/>
        <function-ref name="isInput" scoped="" ref="0x404916c8"/>
        <function-ref name="toggle" scoped="" ref="0x404917a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40491888"/>
        <function-ref name="get" scoped="" ref="0x40491968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40491a48"/>
        <function-ref name="set" scoped="" ref="0x40491b28"/>
        <function-ref name="clr" scoped="" ref="0x40491c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4048f170" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4048f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048f348"/>
        <function-ref name="isInput" scoped="" ref="0x4048f428"/>
        <function-ref name="toggle" scoped="" ref="0x4048f508"/>
        <function-ref name="isOutput" scoped="" ref="0x4048f5e8"/>
        <function-ref name="get" scoped="" ref="0x4048f6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048f7a8"/>
        <function-ref name="set" scoped="" ref="0x4048f888"/>
        <function-ref name="clr" scoped="" ref="0x4048f968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40492128" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40492128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40492300"/>
        <function-ref name="isInput" scoped="" ref="0x404923e0"/>
        <function-ref name="toggle" scoped="" ref="0x404924c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404925a0"/>
        <function-ref name="get" scoped="" ref="0x40492680"/>
        <function-ref name="makeOutput" scoped="" ref="0x40492760"/>
        <function-ref name="set" scoped="" ref="0x40492840"/>
        <function-ref name="clr" scoped="" ref="0x40492920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40491d68" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40491d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40490010"/>
        <function-ref name="isInput" scoped="" ref="0x404900f0"/>
        <function-ref name="toggle" scoped="" ref="0x404901d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404902b0"/>
        <function-ref name="get" scoped="" ref="0x40490390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40490470"/>
        <function-ref name="set" scoped="" ref="0x40490550"/>
        <function-ref name="clr" scoped="" ref="0x40490630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4048fac8" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4048fac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048fca0"/>
        <function-ref name="isInput" scoped="" ref="0x4048fd80"/>
        <function-ref name="toggle" scoped="" ref="0x4048fe60"/>
        <function-ref name="isOutput" scoped="" ref="0x4048e010"/>
        <function-ref name="get" scoped="" ref="0x4048e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048e1d0"/>
        <function-ref name="set" scoped="" ref="0x4048e2b0"/>
        <function-ref name="clr" scoped="" ref="0x4048e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40492a80" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40492a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40492c58"/>
        <function-ref name="isInput" scoped="" ref="0x40492d38"/>
        <function-ref name="toggle" scoped="" ref="0x40492e18"/>
        <function-ref name="isOutput" scoped="" ref="0x40492ef8"/>
        <function-ref name="get" scoped="" ref="0x40491010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404910f0"/>
        <function-ref name="set" scoped="" ref="0x404911d0"/>
        <function-ref name="clr" scoped="" ref="0x404912b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40490790" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40490790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40490968"/>
        <function-ref name="isInput" scoped="" ref="0x40490a48"/>
        <function-ref name="toggle" scoped="" ref="0x40490b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40490c08"/>
        <function-ref name="get" scoped="" ref="0x40490ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40490dc8"/>
        <function-ref name="set" scoped="" ref="0x40490ea8"/>
        <function-ref name="clr" scoped="" ref="0x4048f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4048e4f0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4048e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048e6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4048e7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4048e888"/>
        <function-ref name="isOutput" scoped="" ref="0x4048e968"/>
        <function-ref name="get" scoped="" ref="0x4048ea48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048eb28"/>
        <function-ref name="set" scoped="" ref="0x4048ec08"/>
        <function-ref name="clr" scoped="" ref="0x4048ece8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408a1418" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408a1418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408a15f0"/>
        <function-ref name="isInput" scoped="" ref="0x408a16d0"/>
        <function-ref name="toggle" scoped="" ref="0x408a17b0"/>
        <function-ref name="isOutput" scoped="" ref="0x408a1890"/>
        <function-ref name="get" scoped="" ref="0x408a1970"/>
        <function-ref name="makeOutput" scoped="" ref="0x408a1a50"/>
        <function-ref name="set" scoped="" ref="0x408a1b30"/>
        <function-ref name="clr" scoped="" ref="0x408a1c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408a0de0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408a0de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4089f010"/>
        <function-ref name="isInput" scoped="" ref="0x4089f0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4089f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4089f2b0"/>
        <function-ref name="get" scoped="" ref="0x4089f390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4089f470"/>
        <function-ref name="set" scoped="" ref="0x4089f550"/>
        <function-ref name="clr" scoped="" ref="0x4089f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4089e7f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4089e7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4089e9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4089eab0"/>
        <function-ref name="toggle" scoped="" ref="0x4089eb90"/>
        <function-ref name="isOutput" scoped="" ref="0x4089ec70"/>
        <function-ref name="get" scoped="" ref="0x4089ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4089ee30"/>
        <function-ref name="set" scoped="" ref="0x4089ef10"/>
        <function-ref name="clr" scoped="" ref="0x4089d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4089c228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4089c228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4089c400"/>
        <function-ref name="isInput" scoped="" ref="0x4089c4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4089c5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4089c6a0"/>
        <function-ref name="get" scoped="" ref="0x4089c780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4089c860"/>
        <function-ref name="set" scoped="" ref="0x4089c940"/>
        <function-ref name="clr" scoped="" ref="0x4089ca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408b8c08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408b8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408b8de0"/>
        <function-ref name="isInput" scoped="" ref="0x408b8ec0"/>
        <function-ref name="toggle" scoped="" ref="0x408b7010"/>
        <function-ref name="isOutput" scoped="" ref="0x408b70f0"/>
        <function-ref name="get" scoped="" ref="0x408b71d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408b72b0"/>
        <function-ref name="set" scoped="" ref="0x408b7390"/>
        <function-ref name="clr" scoped="" ref="0x408b7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408b66c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408b66c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408b6898"/>
        <function-ref name="isInput" scoped="" ref="0x408b6978"/>
        <function-ref name="toggle" scoped="" ref="0x408b6a58"/>
        <function-ref name="isOutput" scoped="" ref="0x408b6b38"/>
        <function-ref name="get" scoped="" ref="0x408b6c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x408b6cf8"/>
        <function-ref name="set" scoped="" ref="0x408b6dd8"/>
        <function-ref name="clr" scoped="" ref="0x408b6eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408b40b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408b40b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408b4288"/>
        <function-ref name="isInput" scoped="" ref="0x408b4368"/>
        <function-ref name="toggle" scoped="" ref="0x408b4448"/>
        <function-ref name="isOutput" scoped="" ref="0x408b4528"/>
        <function-ref name="get" scoped="" ref="0x408b4608"/>
        <function-ref name="makeOutput" scoped="" ref="0x408b46e8"/>
        <function-ref name="set" scoped="" ref="0x408b47c8"/>
        <function-ref name="clr" scoped="" ref="0x408b48a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408b3a88" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408b3a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408b3c60"/>
        <function-ref name="isInput" scoped="" ref="0x408b3d40"/>
        <function-ref name="toggle" scoped="" ref="0x408b3e20"/>
        <function-ref name="isOutput" scoped="" ref="0x408b3f00"/>
        <function-ref name="get" scoped="" ref="0x408b2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x408b20f0"/>
        <function-ref name="set" scoped="" ref="0x408b21d0"/>
        <function-ref name="clr" scoped="" ref="0x408b22b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x404ac5c0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x404ac5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ac798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404a39f0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404a39f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a3bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x404ac1f8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x404ac1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ac3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x404a3de0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x404a3de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ac010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x404b4130" loc="58:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404b4130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b4308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403f6cf8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403f6cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403f6ed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404b4918" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404b4918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b4af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x404b4d28" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x404b4d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b4f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404b18c8" loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404b18c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b1aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x404b1cd0" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x404b1cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b1ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404bb6d0" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404bb6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404bb8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialInit" ref="0x404bbae0" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialInit" scoped="" ref="0x404bbae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404bbcb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x404bbec8" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x404bbec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b80c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x404b82b0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x404b82b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b8488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404bf3f8" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404bf3f8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404bf5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404c8c50" loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404c8c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404c8e28"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404c8f08"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404be010"/>
        <function-ref name="actualMicro" scoped="" ref="0x404be0f0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404be1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Byte" ref="0x404d5328" loc="6:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Byte" scoped="" ref="0x404d5328"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404d5500"/>
        <function-ref name="receive" scoped="" ref="0x404d55e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Stream" ref="0x404db950" loc="5:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Stream" scoped="" ref="0x404db950"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404dbb28"/>
        <function-ref name="receivedByte" scoped="" ref="0x404dbc08"/>
        <function-ref name="receive" scoped="" ref="0x404dbce8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x404dbdc8"/>
        <function-ref name="receiveDone" scoped="" ref="0x404dbea8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x404d5010"/>
        <function-ref name="sendDone" scoped="" ref="0x404d50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x404d3a70" loc="4:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x404d3a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404d3c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1StreamBlocking" ref="0x404d5888" loc="7:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x404d5888"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404d5a60"/>
        <function-ref name="receivedByte" scoped="" ref="0x404d5b40"/>
        <function-ref name="receive" scoped="" ref="0x404d5c20"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x404d5d00"/>
        <function-ref name="receiveDone" scoped="" ref="0x404d5de0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x404d5ec0"/>
        <function-ref name="sendDone" scoped="" ref="0x404d4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Control" ref="0x404d35a8" loc="3:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Control" scoped="" ref="0x404d35a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x404d3780"/>
        <function-ref name="stop" scoped="" ref="0x404d3860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Byte" ref="0x404e50e0" loc="17:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Byte" scoped="" ref="0x404e50e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404e52b8"/>
        <function-ref name="receive" scoped="" ref="0x404e5398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBlockingDoneTask" ref="0x404f3010" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBlockingDoneTask" scoped="" ref="0x404f3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404f31e8"/>
        <function-ref name="runTask" scoped="" ref="0x404f32c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDoneTask" ref="0x404f2170" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDoneTask" scoped="" ref="0x404f2170"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404f2348"/>
        <function-ref name="runTask" scoped="" ref="0x404f2428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Stream" ref="0x404e55f0" loc="18:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Stream" scoped="" ref="0x404e55f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404e57c8"/>
        <function-ref name="receivedByte" scoped="" ref="0x404e58a8"/>
        <function-ref name="receive" scoped="" ref="0x404e5988"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x404e5a68"/>
        <function-ref name="receiveDone" scoped="" ref="0x404e5b48"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x404e5c28"/>
        <function-ref name="sendDone" scoped="" ref="0x404e5d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="unexpectedByteReceivedTask" ref="0x404f12c8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="unexpectedByteReceivedTask" scoped="" ref="0x404f12c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404f14a0"/>
        <function-ref name="runTask" scoped="" ref="0x404f1580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1StreamBlocking" ref="0x404e4010" loc="19:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x404e4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404e41e8"/>
        <function-ref name="receivedByte" scoped="" ref="0x404e42c8"/>
        <function-ref name="receive" scoped="" ref="0x404e43a8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x404e4488"/>
        <function-ref name="receiveDone" scoped="" ref="0x404e4568"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x404e4648"/>
        <function-ref name="sendDone" scoped="" ref="0x404e4728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x404d4790" loc="15:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x404d4790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404d4968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Uart1Interrupts" ref="0x404eb240" loc="22:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Interrupts" scoped="" ref="0x404eb240"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxInterruptPending" scoped="" ref="0x404ebcd8"/>
        <function-ref name="txInterruptHandler" scoped="" ref="0x404eb4f8"/>
        <function-ref name="rxInterruptHandler" scoped="" ref="0x404eb5d8"/>
        <function-ref name="enableRxInterrupt" scoped="" ref="0x404eb6b8"/>
        <function-ref name="enableTxInterrupt" scoped="" ref="0x404eb798"/>
        <function-ref name="disableRxInterrupt" scoped="" ref="0x404eb878"/>
        <function-ref name="clearTxInterrupt" scoped="" ref="0x404eb958"/>
        <function-ref name="isRxInterruptPending" scoped="" ref="0x404eba38"/>
        <function-ref name="disableTxInterrupt" scoped="" ref="0x404ebb18"/>
        <function-ref name="setSendData" scoped="" ref="0x404eb418"/>
        <function-ref name="clearRxInterrupt" scoped="" ref="0x404ebbf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x404e9d98" loc="23:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x404e9d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4040b1b0"/>
            <typename><typedef-ref name="TMilli" ref="0x4040b378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x404e3508"/>
        <function-ref name="clearOverflow" scoped="" ref="0x404e39f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x404e3780"/>
        <function-ref name="overflow" scoped="" ref="0x404e3c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x404e3ed0" loc="24:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404e3ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404e20c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404e21a0"/>
        <function-ref name="led1On" scoped="" ref="0x404e2280"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404e2360"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404e2440"/>
        <function-ref name="get" scoped="" ref="0x404e2520"/>
        <function-ref name="led1Off" scoped="" ref="0x404e2600"/>
        <function-ref name="led2Off" scoped="" ref="0x404e2980"/>
        <function-ref name="set" scoped="" ref="0x404e26e0"/>
        <function-ref name="led0On" scoped="" ref="0x404e27c0"/>
        <function-ref name="led2On" scoped="" ref="0x404e28a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Control" ref="0x404d4bd0" loc="16:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Control" scoped="" ref="0x404d4bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x404d4da8"/>
        <function-ref name="stop" scoped="" ref="0x404d4e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1PowerOverride" ref="0x404e4a08" loc="20:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1PowerOverride" scoped="" ref="0x404e4a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x404e4be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveBlockingDoneTask" ref="0x404f3888" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveBlockingDoneTask" scoped="" ref="0x404f3888"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404f3a60"/>
        <function-ref name="runTask" scoped="" ref="0x404f3b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDoneTask" ref="0x404f2990" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDoneTask" scoped="" ref="0x404f2990"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404f2be8"/>
        <function-ref name="runTask" scoped="" ref="0x404f2cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Interrupts" ref="0x40539cc0" loc="7:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1Uart1InterruptsP.nc">
      <component-ref qname="Atm128Rfa1Uart1InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Interrupts" scoped="" ref="0x40539cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxInterruptPending" scoped="" ref="0x405367f0"/>
        <function-ref name="txInterruptHandler" scoped="" ref="0x40536010"/>
        <function-ref name="rxInterruptHandler" scoped="" ref="0x405360f0"/>
        <function-ref name="enableRxInterrupt" scoped="" ref="0x405361d0"/>
        <function-ref name="enableTxInterrupt" scoped="" ref="0x405362b0"/>
        <function-ref name="disableRxInterrupt" scoped="" ref="0x40536390"/>
        <function-ref name="clearTxInterrupt" scoped="" ref="0x40536470"/>
        <function-ref name="isRxInterruptPending" scoped="" ref="0x40536550"/>
        <function-ref name="disableTxInterrupt" scoped="" ref="0x40536630"/>
        <function-ref name="setSendData" scoped="" ref="0x40539e98"/>
        <function-ref name="clearRxInterrupt" scoped="" ref="0x40536710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40536980" loc="8:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1Uart1InterruptsP.nc">
      <component-ref qname="Atm128Rfa1Uart1InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40536980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40536b58"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40536c38"/>
        <function-ref name="led1On" scoped="" ref="0x40536d18"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40536df8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40536ed8"/>
        <function-ref name="get" scoped="" ref="0x40535010"/>
        <function-ref name="led1Off" scoped="" ref="0x405350f0"/>
        <function-ref name="led2Off" scoped="" ref="0x40535470"/>
        <function-ref name="set" scoped="" ref="0x405351d0"/>
        <function-ref name="led0On" scoped="" ref="0x405352b0"/>
        <function-ref name="led2On" scoped="" ref="0x40535390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x405384d8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405384d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405386b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40538790"/>
        <function-ref name="led1On" scoped="" ref="0x40538870"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40538950"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40538a30"/>
        <function-ref name="get" scoped="" ref="0x40538b10"/>
        <function-ref name="led1Off" scoped="" ref="0x40538bf0"/>
        <function-ref name="led2Off" scoped="" ref="0x40544010"/>
        <function-ref name="set" scoped="" ref="0x40538cd0"/>
        <function-ref name="led0On" scoped="" ref="0x40538db0"/>
        <function-ref name="led2On" scoped="" ref="0x40538e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x405516a0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x405516a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40551878"/>
        <function-ref name="isInput" scoped="" ref="0x40551958"/>
        <function-ref name="toggle" scoped="" ref="0x40551a38"/>
        <function-ref name="isOutput" scoped="" ref="0x40551b18"/>
        <function-ref name="get" scoped="" ref="0x40551bf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40551cd8"/>
        <function-ref name="set" scoped="" ref="0x40551db8"/>
        <function-ref name="clr" scoped="" ref="0x40551e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40544660" loc="40:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40544660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40544838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x405500b0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x405500b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40550288"/>
        <function-ref name="isInput" scoped="" ref="0x40550368"/>
        <function-ref name="toggle" scoped="" ref="0x40550448"/>
        <function-ref name="isOutput" scoped="" ref="0x40550528"/>
        <function-ref name="get" scoped="" ref="0x40550608"/>
        <function-ref name="makeOutput" scoped="" ref="0x405506e8"/>
        <function-ref name="set" scoped="" ref="0x405507c8"/>
        <function-ref name="clr" scoped="" ref="0x405508a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x405449a8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405449a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40544b80"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40544c60"/>
        <function-ref name="led1On" scoped="" ref="0x40544d40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40544e20"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40544f00"/>
        <function-ref name="get" scoped="" ref="0x40551010"/>
        <function-ref name="led1Off" scoped="" ref="0x405510f0"/>
        <function-ref name="led2Off" scoped="" ref="0x40551470"/>
        <function-ref name="set" scoped="" ref="0x405511d0"/>
        <function-ref name="led0On" scoped="" ref="0x405512b0"/>
        <function-ref name="led2On" scoped="" ref="0x40551390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x40550a98" loc="46:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40550a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40550c70"/>
        <function-ref name="isInput" scoped="" ref="0x40550d50"/>
        <function-ref name="toggle" scoped="" ref="0x40550e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40550f10"/>
        <function-ref name="get" scoped="" ref="0x4054e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4054e0f0"/>
        <function-ref name="set" scoped="" ref="0x4054e1d0"/>
        <function-ref name="clr" scoped="" ref="0x4054e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403e5218" loc="88:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403e5218"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403e53f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x403e9560" loc="89:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x403e9560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x403e9738"/>
        <function-ref name="led0Toggle" scoped="" ref="0x403e9818"/>
        <function-ref name="led1On" scoped="" ref="0x403e98f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x403e99d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x403e9ab8"/>
        <function-ref name="get" scoped="" ref="0x403e9b98"/>
        <function-ref name="led1Off" scoped="" ref="0x403e9c78"/>
        <function-ref name="led2Off" scoped="" ref="0x403de010"/>
        <function-ref name="set" scoped="" ref="0x403e9d58"/>
        <function-ref name="led0On" scoped="" ref="0x403e9e38"/>
        <function-ref name="led2On" scoped="" ref="0x403e9f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x403df470" loc="84:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403df470"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403df648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403dc148" loc="85:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403dc148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403dc320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40573890" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40573890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4040b1b0"/>
            <typename><typedef-ref name="TMilli" ref="0x4040b378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40571010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40571500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40571288"/>
        <function-ref name="overflow" scoped="" ref="0x40571778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x4057f380" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x4057f380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40545c70"/>
            <typename><typedef-ref name="T62khz" ref="0x40545e18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4057fad0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4057d010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4057fd48"/>
        <function-ref name="overflow" scoped="" ref="0x4057d288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4056e0c0" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4056e0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4040b1b0"/>
            <typename><typedef-ref name="TMilli" ref="0x4040b378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4056e810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4056ed00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4056ea88"/>
        <function-ref name="overflow" scoped="" ref="0x4057f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4058a128" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4058a128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40545c70"/>
            <typename><typedef-ref name="T62khz" ref="0x40545e18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4058a878"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4058ad68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4058aaf0"/>
        <function-ref name="overflow" scoped="" ref="0x40589010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405872c0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405872c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40587498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x405876f8" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x405876f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40545c70"/>
            <typename><typedef-ref name="T62khz" ref="0x40545e18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40587e48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40597350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405970d8"/>
        <function-ref name="overflow" scoped="" ref="0x405975c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x40597898" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x40597898"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40594300"/>
        <function-ref name="test" scoped="" ref="0x40596688"/>
        <function-ref name="get" scoped="" ref="0x40597ee0"/>
        <function-ref name="reset" scoped="" ref="0x40596900"/>
        <function-ref name="getMode" scoped="" ref="0x405945a0"/>
        <function-ref name="overflow" scoped="" ref="0x40596410"/>
        <function-ref name="isOn" scoped="" ref="0x40594088"/>
        <function-ref name="set" scoped="" ref="0x40596170"/>
        <function-ref name="start" scoped="" ref="0x40596b78"/>
        <function-ref name="stop" scoped="" ref="0x40596df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconCapture" ref="0x405b15e8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconCapture" scoped="" ref="0x405b15e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405af068"/>
        <function-ref name="test" scoped="" ref="0x405b03e8"/>
        <function-ref name="fired" scoped="" ref="0x405b0170"/>
        <function-ref name="get" scoped="" ref="0x405b1c30"/>
        <function-ref name="reset" scoped="" ref="0x405b0660"/>
        <function-ref name="getMode" scoped="" ref="0x405af308"/>
        <function-ref name="isOn" scoped="" ref="0x405b0dc8"/>
        <function-ref name="set" scoped="" ref="0x405b1ea8"/>
        <function-ref name="start" scoped="" ref="0x405b08d8"/>
        <function-ref name="stop" scoped="" ref="0x405b0b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x405a3a70" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x405a3a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4059f500"/>
        <function-ref name="test" scoped="" ref="0x405a0868"/>
        <function-ref name="get" scoped="" ref="0x405a00d8"/>
        <function-ref name="reset" scoped="" ref="0x405a0ae0"/>
        <function-ref name="getMode" scoped="" ref="0x4059f7a0"/>
        <function-ref name="overflow" scoped="" ref="0x405a05f0"/>
        <function-ref name="isOn" scoped="" ref="0x4059f288"/>
        <function-ref name="set" scoped="" ref="0x405a0350"/>
        <function-ref name="start" scoped="" ref="0x405a0d58"/>
        <function-ref name="stop" scoped="" ref="0x4059f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x405b2420" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x405b2420"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405a6ee0"/>
        <function-ref name="test" scoped="" ref="0x405a6288"/>
        <function-ref name="fired" scoped="" ref="0x405a6010"/>
        <function-ref name="get" scoped="" ref="0x405b2a68"/>
        <function-ref name="reset" scoped="" ref="0x405a6500"/>
        <function-ref name="getMode" scoped="" ref="0x405b11c0"/>
        <function-ref name="isOn" scoped="" ref="0x405a6c68"/>
        <function-ref name="set" scoped="" ref="0x405b2ce0"/>
        <function-ref name="start" scoped="" ref="0x405a6778"/>
        <function-ref name="stop" scoped="" ref="0x405a69f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4059e120" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4059e120"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405a8b80"/>
        <function-ref name="test" scoped="" ref="0x4059eef8"/>
        <function-ref name="fired" scoped="" ref="0x4059ec80"/>
        <function-ref name="force" scoped="" ref="0x405a70b8"/>
        <function-ref name="get" scoped="" ref="0x4059e768"/>
        <function-ref name="reset" scoped="" ref="0x405a81a0"/>
        <function-ref name="getMode" scoped="" ref="0x405a8e20"/>
        <function-ref name="isOn" scoped="" ref="0x405a8908"/>
        <function-ref name="set" scoped="" ref="0x4059e9e0"/>
        <function-ref name="start" scoped="" ref="0x405a8418"/>
        <function-ref name="stop" scoped="" ref="0x405a8690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x405bb010" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x405bb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405baa68"/>
        <function-ref name="test" scoped="" ref="0x405bbde8"/>
        <function-ref name="fired" scoped="" ref="0x405bbb70"/>
        <function-ref name="force" scoped="" ref="0x405b8010"/>
        <function-ref name="get" scoped="" ref="0x405bb658"/>
        <function-ref name="reset" scoped="" ref="0x405ba088"/>
        <function-ref name="getMode" scoped="" ref="0x405bad08"/>
        <function-ref name="isOn" scoped="" ref="0x405ba7f0"/>
        <function-ref name="set" scoped="" ref="0x405bb8d0"/>
        <function-ref name="start" scoped="" ref="0x405ba300"/>
        <function-ref name="stop" scoped="" ref="0x405ba578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconCapture" ref="0x405c2d58" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconCapture" scoped="" ref="0x405c2d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405c07f0"/>
        <function-ref name="test" scoped="" ref="0x405c1b70"/>
        <function-ref name="fired" scoped="" ref="0x405c18f8"/>
        <function-ref name="get" scoped="" ref="0x405c13e0"/>
        <function-ref name="reset" scoped="" ref="0x405c1de8"/>
        <function-ref name="getMode" scoped="" ref="0x405c0a90"/>
        <function-ref name="isOn" scoped="" ref="0x405c0578"/>
        <function-ref name="set" scoped="" ref="0x405c1658"/>
        <function-ref name="start" scoped="" ref="0x405c0088"/>
        <function-ref name="stop" scoped="" ref="0x405c0300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x405c0d48" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x405c0d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x405c0f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x405b8408" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x405b8408"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405b7ee0"/>
        <function-ref name="test" scoped="" ref="0x405b7288"/>
        <function-ref name="fired" scoped="" ref="0x405b7010"/>
        <function-ref name="force" scoped="" ref="0x405b6438"/>
        <function-ref name="get" scoped="" ref="0x405b8a50"/>
        <function-ref name="reset" scoped="" ref="0x405b7500"/>
        <function-ref name="getMode" scoped="" ref="0x405b61c0"/>
        <function-ref name="isOn" scoped="" ref="0x405b7c68"/>
        <function-ref name="set" scoped="" ref="0x405b8cc8"/>
        <function-ref name="start" scoped="" ref="0x405b7778"/>
        <function-ref name="stop" scoped="" ref="0x405b79f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x405afea8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x405afea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405bc908"/>
        <function-ref name="test" scoped="" ref="0x405bdc98"/>
        <function-ref name="get" scoped="" ref="0x405bd508"/>
        <function-ref name="reset" scoped="" ref="0x405bdf10"/>
        <function-ref name="getMode" scoped="" ref="0x405bcba8"/>
        <function-ref name="overflow" scoped="" ref="0x405bda20"/>
        <function-ref name="isOn" scoped="" ref="0x405bc690"/>
        <function-ref name="set" scoped="" ref="0x405bd780"/>
        <function-ref name="start" scoped="" ref="0x405bc1a0"/>
        <function-ref name="stop" scoped="" ref="0x405bc418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x405bf150" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x405bf150"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x405bf328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x405c5be0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x405c5be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405c2690"/>
        <function-ref name="test" scoped="" ref="0x405c4a08"/>
        <function-ref name="fired" scoped="" ref="0x405c4790"/>
        <function-ref name="get" scoped="" ref="0x405c4278"/>
        <function-ref name="reset" scoped="" ref="0x405c4c80"/>
        <function-ref name="getMode" scoped="" ref="0x405c2930"/>
        <function-ref name="isOn" scoped="" ref="0x405c2418"/>
        <function-ref name="set" scoped="" ref="0x405c44f0"/>
        <function-ref name="start" scoped="" ref="0x405c4ef8"/>
        <function-ref name="stop" scoped="" ref="0x405c21a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x405b6830" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x405b6830"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405c52c0"/>
        <function-ref name="test" scoped="" ref="0x405c6628"/>
        <function-ref name="fired" scoped="" ref="0x405c63b0"/>
        <function-ref name="force" scoped="" ref="0x405c57d8"/>
        <function-ref name="get" scoped="" ref="0x405b6e78"/>
        <function-ref name="reset" scoped="" ref="0x405c68a0"/>
        <function-ref name="getMode" scoped="" ref="0x405c5560"/>
        <function-ref name="isOn" scoped="" ref="0x405c5048"/>
        <function-ref name="set" scoped="" ref="0x405c6110"/>
        <function-ref name="start" scoped="" ref="0x405c6b18"/>
        <function-ref name="stop" scoped="" ref="0x405c6d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x404b0948" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x404b0948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b0b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x40618a90" loc="60:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40618a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40618c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x404b3cd0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404b3cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404b3ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40618688" loc="59:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40618688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40618860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x406180c0" loc="58:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x406180c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40618298"/>
        <function-ref name="taskLoop" scoped="" ref="0x40618378"/>
        <function-ref name="runNextTask" scoped="" ref="0x40618458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40304a98" loc="48:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40304a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40304c70"/>
        <function-ref name="runTask" scoped="" ref="0x40304d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x402ff378" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x402ff378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x402ff550"/>
        <function-ref name="taskLoop" scoped="" ref="0x402ff630"/>
        <function-ref name="runNextTask" scoped="" ref="0x402ff710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403c8c18" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403c8c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403c8df0"/>
        <function-ref name="runTask" scoped="" ref="0x403c8ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403d18b8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403d18b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403d1a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403c83e0" loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403c83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403c85b8"/>
        <function-ref name="taskLoop" scoped="" ref="0x403c8698"/>
        <function-ref name="runNextTask" scoped="" ref="0x403c8778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40632628" loc="41:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40632628"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40632800"/>
        <function-ref name="receive" scoped="" ref="0x406328e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40426cf0" loc="40:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40426cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40426ec8"/>
        <function-ref name="receivedByte" scoped="" ref="0x40632010"/>
        <function-ref name="receive" scoped="" ref="0x406320f0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x406321d0"/>
        <function-ref name="receiveDone" scoped="" ref="0x406322b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40632390"/>
        <function-ref name="sendDone" scoped="" ref="0x40632470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartControl" ref="0x40426870" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartControl" scoped="" ref="0x40426870"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40426a48"/>
        <function-ref name="stop" scoped="" ref="0x40426b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CommandNotification" ref="0x404a1e88" loc="9:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderC.nc">
      <component-ref qname="SerialPacketForwarderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommandNotification" scoped="" ref="0x404a1e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x403f2398"/>
            <typename><typedef-ref name="command_packet_t" ref="0x403f00c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x4062f730"/>
        <function-ref name="enable" scoped="" ref="0x4062f4d8"/>
        <function-ref name="notify" scoped="" ref="0x4062f988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardCommand" ref="0x4062fde8" loc="10:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderC.nc">
      <component-ref qname="SerialPacketForwarderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardCommand" scoped="" ref="0x4062fde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetNow"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x403f2398"/>
            <typename><typedef-ref name="command_packet_t" ref="0x403f00c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setNow" scoped="" ref="0x4062d468"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardData" ref="0x4062d888" loc="11:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderC.nc">
      <component-ref qname="SerialPacketForwarderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardData" scoped="" ref="0x4062d888"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetNow"/>
        <arguments>
          <type-tag size="I:14" alignment="I:1"><struct-ref name="data_packet" ref="0x403f3470"/>
            <typename><typedef-ref name="data_packet_t" ref="0x403f2188"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setNow" scoped="" ref="0x4062ded0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardStatus" ref="0x4062c338" loc="12:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderC.nc">
      <component-ref qname="SerialPacketForwarderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardStatus" scoped="" ref="0x4062c338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetNow"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="status_packet" ref="0x4002e908"/>
            <typename><typedef-ref name="status_packet_t" ref="0x403f4850"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setNow" scoped="" ref="0x4062c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialPacketForwarderInit" ref="0x404a1918" loc="8:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderC.nc">
      <component-ref qname="SerialPacketForwarderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketForwarderInit" scoped="" ref="0x404a1918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a1af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="processReceiveBufferTask" ref="0x40671478" loc="42:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderP.nc">
      <component-ref qname="SerialPacketForwarderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="processReceiveBufferTask" scoped="" ref="0x40671478"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40671650"/>
        <function-ref name="runTask" scoped="" ref="0x40671730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartByte" ref="0x4065ac30" loc="20:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderP.nc">
      <component-ref qname="SerialPacketForwarderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x4065ac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4065ae08"/>
        <function-ref name="receive" scoped="" ref="0x4065aee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StatusQueue" ref="0x406660a0" loc="25:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderP.nc">
      <component-ref qname="SerialPacketForwarderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StatusQueue" scoped="" ref="0x406660a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="status_packet" ref="0x4002e908"/>
            <typename><typedef-ref name="status_packet_t" ref="0x403f4850"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40666dd0"/>
        <function-ref name="enqueue" scoped="" ref="0x406644c0"/>
        <function-ref name="element" scoped="" ref="0x40664810"/>
        <function-ref name="maxSize" scoped="" ref="0x40666b78"/>
        <function-ref name="dequeue" scoped="" ref="0x40664150"/>
        <function-ref name="empty" scoped="" ref="0x406666c8"/>
        <function-ref name="size" scoped="" ref="0x40666920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CommandNotification" ref="0x40674010" loc="31:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderP.nc">
      <component-ref qname="SerialPacketForwarderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommandNotification" scoped="" ref="0x40674010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Notify"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x403f2398"/>
            <typename><typedef-ref name="command_packet_t" ref="0x403f00c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="disable" scoped="" ref="0x40674890"/>
        <function-ref name="enable" scoped="" ref="0x40674638"/>
        <function-ref name="notify" scoped="" ref="0x40674ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardCommand" ref="0x40673010" loc="32:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderP.nc">
      <component-ref qname="SerialPacketForwarderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardCommand" scoped="" ref="0x40673010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetNow"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x403f2398"/>
            <typename><typedef-ref name="command_packet_t" ref="0x403f00c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setNow" scoped="" ref="0x40673658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DataQueue" ref="0x406653b8" loc="24:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderP.nc">
      <component-ref qname="SerialPacketForwarderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DataQueue" scoped="" ref="0x406653b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:14" alignment="I:1"><struct-ref name="data_packet" ref="0x403f3470"/>
            <typename><typedef-ref name="data_packet_t" ref="0x403f2188"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x4066b110"/>
        <function-ref name="enqueue" scoped="" ref="0x4066b7f0"/>
        <function-ref name="element" scoped="" ref="0x4066bb40"/>
        <function-ref name="maxSize" scoped="" ref="0x40665e90"/>
        <function-ref name="dequeue" scoped="" ref="0x4066b480"/>
        <function-ref name="empty" scoped="" ref="0x406659e0"/>
        <function-ref name="size" scoped="" ref="0x40665c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x4065a380" loc="19:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderP.nc">
      <component-ref qname="SerialPacketForwarderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x4065a380"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4065a558"/>
        <function-ref name="receivedByte" scoped="" ref="0x4065a638"/>
        <function-ref name="receive" scoped="" ref="0x4065a718"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x4065a7f8"/>
        <function-ref name="receiveDone" scoped="" ref="0x4065a8d8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4065a9b8"/>
        <function-ref name="sendDone" scoped="" ref="0x4065aa98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4065b730" loc="18:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderP.nc">
      <component-ref qname="SerialPacketForwarderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4065b730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4065b908"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4065b9e8"/>
        <function-ref name="led1On" scoped="" ref="0x4065bac8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4065bba8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4065bc88"/>
        <function-ref name="get" scoped="" ref="0x4065bd68"/>
        <function-ref name="led1Off" scoped="" ref="0x4065be48"/>
        <function-ref name="led2Off" scoped="" ref="0x4065a1d8"/>
        <function-ref name="set" scoped="" ref="0x4065bf28"/>
        <function-ref name="led0On" scoped="" ref="0x4065a018"/>
        <function-ref name="led2On" scoped="" ref="0x4065a0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardData" ref="0x40673a78" loc="33:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderP.nc">
      <component-ref qname="SerialPacketForwarderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardData" scoped="" ref="0x40673a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetNow"/>
        <arguments>
          <type-tag size="I:14" alignment="I:1"><struct-ref name="data_packet" ref="0x403f3470"/>
            <typename><typedef-ref name="data_packet_t" ref="0x403f2188"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setNow" scoped="" ref="0x406720d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CommandQueue" ref="0x40664d70" loc="26:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderP.nc">
      <component-ref qname="SerialPacketForwarderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CommandQueue" scoped="" ref="0x40664d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x403f2398"/>
            <typename><typedef-ref name="command_packet_t" ref="0x403f00c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x40677ac8"/>
        <function-ref name="enqueue" scoped="" ref="0x406761d0"/>
        <function-ref name="element" scoped="" ref="0x40676520"/>
        <function-ref name="maxSize" scoped="" ref="0x40677870"/>
        <function-ref name="dequeue" scoped="" ref="0x40677e38"/>
        <function-ref name="empty" scoped="" ref="0x406773c0"/>
        <function-ref name="size" scoped="" ref="0x40677618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialPacketForwarderInit" ref="0x40676a10" loc="30:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderP.nc">
      <component-ref qname="SerialPacketForwarderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketForwarderInit" scoped="" ref="0x40676a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40676be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardStatus" ref="0x40672520" loc="34:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderP.nc">
      <component-ref qname="SerialPacketForwarderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardStatus" scoped="" ref="0x40672520"/></type-interface>
      <instance>
        <interfacedef-ref qname="SetNow"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="status_packet" ref="0x4002e908"/>
            <typename><typedef-ref name="status_packet_t" ref="0x403f4850"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setNow" scoped="" ref="0x40672be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTypes" ref="0x4066d5c0" loc="22:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderP.nc">
      <component-ref qname="SerialPacketForwarderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTypes" scoped="" ref="0x4066d5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTypes"/>
      </instance>
      <interface-functions>
        <function-ref name="asciihexToNum" scoped="" ref="0x4066ddb8"/>
        <function-ref name="getTypeOfPacket" scoped="" ref="0x4066d878"/>
        <function-ref name="statusPacketToStr" scoped="" ref="0x4066d958"/>
        <function-ref name="dataPacketToStr" scoped="" ref="0x4066da38"/>
        <function-ref name="strToCommandPacket" scoped="" ref="0x4066db18"/>
        <function-ref name="strToDataPacket" scoped="" ref="0x4066dbf8"/>
        <function-ref name="commandPacketToStr" scoped="" ref="0x4066d798"/>
        <function-ref name="strToStatusPacket" scoped="" ref="0x4066dcd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x4066d158" loc="21:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderP.nc">
      <component-ref qname="SerialPacketForwarderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartControl" scoped="" ref="0x4066d158"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4066d330"/>
        <function-ref name="stop" scoped="" ref="0x4066d410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="forwardNextPacketTask" ref="0x40671ce0" loc="43:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/SerialPacketForwarderP.nc">
      <component-ref qname="SerialPacketForwarderP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="forwardNextPacketTask" scoped="" ref="0x40671ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40671eb8"/>
        <function-ref name="runTask" scoped="" ref="0x4066f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTypes" ref="0x4068d230" loc="13:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypesP.nc">
      <component-ref qname="SerialPacketForwarderC.PacketTypesImpl"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTypes" scoped="" ref="0x4068d230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTypes"/>
      </instance>
      <interface-functions>
        <function-ref name="strToStatusPacket" scoped="" ref="0x4068da28"/>
        <function-ref name="getTypeOfPacket" scoped="" ref="0x4068d4e8"/>
        <function-ref name="statusPacketToStr" scoped="" ref="0x4068d5c8"/>
        <function-ref name="dataPacketToStr" scoped="" ref="0x4068d6a8"/>
        <function-ref name="strToCommandPacket" scoped="" ref="0x4068d788"/>
        <function-ref name="strToDataPacket" scoped="" ref="0x4068d868"/>
        <function-ref name="commandPacketToStr" scoped="" ref="0x4068d948"/>
        <function-ref name="asciihexToNum" scoped="" ref="0x4068d408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x406d8560" loc="43:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="SerialPacketForwarderC.DataQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x406d8560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:14" alignment="I:1"><struct-ref name="data_packet" ref="0x403f3470"/>
            <typename><typedef-ref name="data_packet_t" ref="0x403f2188"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x406d72a0"/>
        <function-ref name="enqueue" scoped="" ref="0x406d7980"/>
        <function-ref name="element" scoped="" ref="0x406d7cd0"/>
        <function-ref name="maxSize" scoped="" ref="0x406d7048"/>
        <function-ref name="dequeue" scoped="" ref="0x406d7610"/>
        <function-ref name="empty" scoped="" ref="0x406d8b88"/>
        <function-ref name="size" scoped="" ref="0x406d8de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x406f2010" loc="43:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="SerialPacketForwarderC.CommandQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x406f2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x403f2398"/>
            <typename><typedef-ref name="command_packet_t" ref="0x403f00c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x406f2d40"/>
        <function-ref name="enqueue" scoped="" ref="0x406f1458"/>
        <function-ref name="element" scoped="" ref="0x406f17a8"/>
        <function-ref name="maxSize" scoped="" ref="0x406f2ae8"/>
        <function-ref name="dequeue" scoped="" ref="0x406f10e8"/>
        <function-ref name="empty" scoped="" ref="0x406f2638"/>
        <function-ref name="size" scoped="" ref="0x406f2890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x406f0a88" loc="43:/opt/tinyos-main/src/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="SerialPacketForwarderC.StatusQueue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x406f0a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="status_packet" ref="0x4002e908"/>
            <typename><typedef-ref name="status_packet_t" ref="0x403f4850"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x406ef7e0"/>
        <function-ref name="enqueue" scoped="" ref="0x406efec0"/>
        <function-ref name="element" scoped="" ref="0x406ed240"/>
        <function-ref name="maxSize" scoped="" ref="0x406ef588"/>
        <function-ref name="dequeue" scoped="" ref="0x406efb50"/>
        <function-ref name="empty" scoped="" ref="0x406ef0d8"/>
        <function-ref name="size" scoped="" ref="0x406ef330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTypes" ref="0x406fd0d8" loc="13:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypesP.nc">
      <component-ref qname="SerialPacketForwarderTestC.PacketTypesDummy"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTypes" scoped="" ref="0x406fd0d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTypes"/>
      </instance>
      <interface-functions>
        <function-ref name="strToStatusPacket" scoped="" ref="0x406fd8d0"/>
        <function-ref name="getTypeOfPacket" scoped="" ref="0x406fd390"/>
        <function-ref name="statusPacketToStr" scoped="" ref="0x406fd470"/>
        <function-ref name="dataPacketToStr" scoped="" ref="0x406fd550"/>
        <function-ref name="strToCommandPacket" scoped="" ref="0x406fd630"/>
        <function-ref name="strToDataPacket" scoped="" ref="0x406fd710"/>
        <function-ref name="commandPacketToStr" scoped="" ref="0x406fd7f0"/>
        <function-ref name="asciihexToNum" scoped="" ref="0x406fd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406fb330" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="SerialPacketForwarderTestC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406fb330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4040b1b0"/>
            <typename><typedef-ref name="TMilli" ref="0x4040b378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406fae38"/>
        <function-ref name="fired" scoped="" ref="0x406fa0f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406fa7f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x406fa5a0"/>
        <function-ref name="getdt" scoped="" ref="0x4079a310"/>
        <function-ref name="gett0" scoped="" ref="0x4079a0b8"/>
        <function-ref name="isRunning" scoped="" ref="0x406fa348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406fb958"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406fab18"/>
        <function-ref name="startOneShot" scoped="" ref="0x406fbbd8"/>
        <function-ref name="stop" scoped="" ref="0x406fbe58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x4070a418" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x4070a418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4040b1b0"/>
            <typename><typedef-ref name="TMilli" ref="0x4040b378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40708010"/>
        <function-ref name="fired" scoped="" ref="0x40709268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40709970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40709718"/>
        <function-ref name="getdt" scoped="" ref="0x407084c0"/>
        <function-ref name="gett0" scoped="" ref="0x40708268"/>
        <function-ref name="isRunning" scoped="" ref="0x407094c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4070aa40"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40709c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x4070acc0"/>
        <function-ref name="stop" scoped="" ref="0x40709010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40706f20" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40706f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4040b1b0"/>
            <typename><typedef-ref name="TMilli" ref="0x4040b378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407563e8"/>
        <function-ref name="fired" scoped="" ref="0x40705ba0"/>
        <function-ref name="startAt" scoped="" ref="0x407560a8"/>
        <function-ref name="isRunning" scoped="" ref="0x40705e18"/>
        <function-ref name="getAlarm" scoped="" ref="0x40756660"/>
        <function-ref name="start" scoped="" ref="0x40705688"/>
        <function-ref name="stop" scoped="" ref="0x40705928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4097caa8" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4097caa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40545c70"/>
            <typename><typedef-ref name="T62khz" ref="0x40545e18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40979010"/>
        <function-ref name="fired" scoped="" ref="0x4097b740"/>
        <function-ref name="startAt" scoped="" ref="0x4097bc30"/>
        <function-ref name="isRunning" scoped="" ref="0x4097b9b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40979288"/>
        <function-ref name="start" scoped="" ref="0x4097b228"/>
        <function-ref name="stop" scoped="" ref="0x4097b4c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x4098b550" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x4098b550"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40988010"/>
        <function-ref name="test" scoped="" ref="0x4098a350"/>
        <function-ref name="fired" scoped="" ref="0x4098a0d8"/>
        <function-ref name="force" scoped="" ref="0x40988528"/>
        <function-ref name="get" scoped="" ref="0x4098bb98"/>
        <function-ref name="reset" scoped="" ref="0x4098a5c8"/>
        <function-ref name="getMode" scoped="" ref="0x409882b0"/>
        <function-ref name="isOn" scoped="" ref="0x4098ad30"/>
        <function-ref name="set" scoped="" ref="0x4098be10"/>
        <function-ref name="start" scoped="" ref="0x4098a840"/>
        <function-ref name="stop" scoped="" ref="0x4098aab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40990ad0" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40990ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40545c70"/>
            <typename><typedef-ref name="T62khz" ref="0x40545e18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4098d010"/>
        <function-ref name="fired" scoped="" ref="0x4098f748"/>
        <function-ref name="startAt" scoped="" ref="0x4098fc38"/>
        <function-ref name="isRunning" scoped="" ref="0x4098f9c0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4098d288"/>
        <function-ref name="start" scoped="" ref="0x4098f230"/>
        <function-ref name="stop" scoped="" ref="0x4098f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40990698" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40990698"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f97d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f97d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40990870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x4098d558" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x4098d558"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4098b010"/>
        <function-ref name="test" scoped="" ref="0x4098c350"/>
        <function-ref name="get" scoped="" ref="0x4098dba0"/>
        <function-ref name="reset" scoped="" ref="0x4098c5c8"/>
        <function-ref name="getMode" scoped="" ref="0x4098b2b0"/>
        <function-ref name="overflow" scoped="" ref="0x4098c0d8"/>
        <function-ref name="isOn" scoped="" ref="0x4098cd30"/>
        <function-ref name="set" scoped="" ref="0x4098de18"/>
        <function-ref name="start" scoped="" ref="0x4098c840"/>
        <function-ref name="stop" scoped="" ref="0x4098cab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x409784c0" loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x409784c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4040b1b0"/>
            <typename><typedef-ref name="TMilli" ref="0x4040b378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40977980"/>
        <function-ref name="fired" scoped="" ref="0x40977150"/>
        <function-ref name="startAt" scoped="" ref="0x40977640"/>
        <function-ref name="isRunning" scoped="" ref="0x409773c8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40977bf8"/>
        <function-ref name="start" scoped="" ref="0x40978c10"/>
        <function-ref name="stop" scoped="" ref="0x40978eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x40995268" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x40995268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40545c70"/>
            <typename><typedef-ref name="T62khz" ref="0x40545e18"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40993728"/>
        <function-ref name="fired" scoped="" ref="0x40995ed0"/>
        <function-ref name="startAt" scoped="" ref="0x409933e8"/>
        <function-ref name="isRunning" scoped="" ref="0x40993170"/>
        <function-ref name="getAlarm" scoped="" ref="0x409939a0"/>
        <function-ref name="start" scoped="" ref="0x409959b8"/>
        <function-ref name="stop" scoped="" ref="0x40995c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40996010" loc="68:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40996010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4040b1b0"/>
            <typename><typedef-ref name="TMilli" ref="0x4040b378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40996760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40996c50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x409969d8"/>
        <function-ref name="overflow" scoped="" ref="0x40996ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x4076b658" loc="74:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x4076b658"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4076b830"/>
        <function-ref name="runTask" scoped="" ref="0x4076b910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x4076dcc8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4076dcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4040b1b0"/>
            <typename><typedef-ref name="TMilli" ref="0x4040b378"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4076b190"/>
        <function-ref name="fired" scoped="" ref="0x4076c950"/>
        <function-ref name="startAt" scoped="" ref="0x4076ce40"/>
        <function-ref name="isRunning" scoped="" ref="0x4076cbc8"/>
        <function-ref name="getAlarm" scoped="" ref="0x4076b408"/>
        <function-ref name="start" scoped="" ref="0x4076c438"/>
        <function-ref name="stop" scoped="" ref="0x4076c6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40755968" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40755968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4040b1b0"/>
            <typename><typedef-ref name="TMilli" ref="0x4040b378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4076d4c8"/>
        <function-ref name="fired" scoped="" ref="0x40754768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40754e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40754c18"/>
        <function-ref name="getdt" scoped="" ref="0x4076d978"/>
        <function-ref name="gett0" scoped="" ref="0x4076d720"/>
        <function-ref name="isRunning" scoped="" ref="0x407549c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40754010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4076d1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40754290"/>
        <function-ref name="stop" scoped="" ref="0x40754510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x4079d2b8" loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x4079d2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4079d490"/>
        <function-ref name="runTask" scoped="" ref="0x4079d570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x407a00c0" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x407a00c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4040b1b0"/>
            <typename><typedef-ref name="TMilli" ref="0x4040b378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4079fba8"/>
        <function-ref name="fired" scoped="" ref="0x407a0e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4079f568"/>
        <function-ref name="isOneShot" scoped="" ref="0x4079f310"/>
        <function-ref name="getdt" scoped="" ref="0x4079d068"/>
        <function-ref name="gett0" scoped="" ref="0x4079fe00"/>
        <function-ref name="isRunning" scoped="" ref="0x4079f0b8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407a06e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4079f888"/>
        <function-ref name="startOneShot" scoped="" ref="0x407a0968"/>
        <function-ref name="stop" scoped="" ref="0x407a0be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40780cc8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40780cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4040b1b0"/>
            <typename><typedef-ref name="TMilli" ref="0x4040b378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407a28d8"/>
        <function-ref name="fired" scoped="" ref="0x4077fad8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407a2278"/>
        <function-ref name="isOneShot" scoped="" ref="0x407a2010"/>
        <function-ref name="getdt" scoped="" ref="0x407a2da8"/>
        <function-ref name="gett0" scoped="" ref="0x407a2b40"/>
        <function-ref name="isRunning" scoped="" ref="0x4077fd40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4077f350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407a25a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x4077f5e0"/>
        <function-ref name="stop" scoped="" ref="0x4077f870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407b13b8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="SerialPacketForwarderTestC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407b13b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4040b1b0"/>
            <typename><typedef-ref name="TMilli" ref="0x4040b378"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x407b0e98"/>
        <function-ref name="fired" scoped="" ref="0x407b0150"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407b0858"/>
        <function-ref name="isOneShot" scoped="" ref="0x407b0600"/>
        <function-ref name="getdt" scoped="" ref="0x407af368"/>
        <function-ref name="gett0" scoped="" ref="0x407af110"/>
        <function-ref name="isRunning" scoped="" ref="0x407b03a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407b19e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407b0b78"/>
        <function-ref name="startOneShot" scoped="" ref="0x407b1c60"/>
        <function-ref name="stop" scoped="" ref="0x407b1ee0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4040a0c0" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4040a0c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40410820" loc="136:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40409668" loc="83:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40411800" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404114b8" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404116a0" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x40411010" loc="98:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x4040f1a8" loc="151:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40410c68" loc="144:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40409af8" loc="92:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x4040a718" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4040a5c0" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40410200" loc="129:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40411ea0" loc="129:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404100a0" loc="129:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x4040adb0" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4040ac58" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404092a0" loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x403f8ec8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x403f8d70" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x403fd7a8" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x403fd440" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x403fd648" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x403ff270" loc="60:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Notify" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Notify.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Notify.nc">
        <short>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates.</short>
        <long>&#10; The Notify interface is intended for delivery of values from&#10; self-triggered devices, at relatively low rates. For example, a&#10; driver for a motion detector or a switch might provide this&#10; interface. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, both calls must be&#10; guaranteed to succeed. This interface should be used when a single&#10; logical unit supports both getting and setting.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x403feab8" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Notify.nc">
          <interfacedef-ref qname="Notify"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x403feab8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="disable" ref="0x404074f0" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Notify.nc">
        <documentation loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Notify.nc">
          <short>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Disables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x40407010" loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Notify.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Notify.nc">
          <short>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.</short>
          <long>&#10; Enables delivery of notifications from the device to the calling&#10; generic client component.&#10;&#10; @return SUCCESS if notifications were enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="notify" ref="0x40407ae8" loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Notify.nc">
        <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Notify.nc">
          <short>&#10; Signals the arrival of a new value from the device.</short>
          <long>&#10; Signals the arrival of a new value from the device.&#10;&#10; @param val the value arriving from the device&#10;</long>
        </documentation>
        <interfacedef-ref qname="Notify"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x403feab8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40407990" loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Notify.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x403feab8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SetNow" loc="44:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SetNow.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SetNow.nc">
        <short> &#10; Similar to the &#60;tt>Set&#60;/tt> interface (see TEP 114) this interface can be&#10; used for storing small values, but in contrast to the &#60;tt>Set&#60;/tt> interface&#10; the value is stored asynchronously.</short>
        <long> &#10; Similar to the &#60;tt>Set&#60;/tt> interface (see TEP 114) this interface can be&#10; used for storing small values, but in contrast to the &#60;tt>Set&#60;/tt> interface&#10; the value is stored asynchronously.&#10;&#10; @param data_type the type of the object that will be stored&#10;</long>
      </documentation>
      <parameters>
        <typedef name="data_type" ref="0x40405198" loc="44:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SetNow.nc">
          <interfacedef-ref qname="SetNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="data_type" scoped="" ref="0x40405198"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setNow" ref="0x40405810" loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SetNow.nc">
        <documentation loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SetNow.nc">
          <short>&#10; Stores a value of type &#60;tt>data_type&#60;/tt>.</short>
          <long>&#10; Stores a value of type &#60;tt>data_type&#60;/tt>.&#10;&#10; @param val the value to be stored&#10; @return SUCCESS if the value was stored,&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SetNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="data_type" scoped="" ref="0x40405198"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x404056b8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SetNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="data_type" scoped="" ref="0x40405198"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x403e3750" loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x403e3b98" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x403e1038" loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x403e18a8" loc="83:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x403ea5b0" loc="100:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403eaa58" loc="117:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x403e1460" loc="77:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403e91c0" loc="134:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x403e9068" loc="134:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x403e3328" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x403e1d28" loc="89:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x403ea168" loc="94:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTypes" loc="4:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypes.nc">
      <function command="" provided="0" name="commandPacketToStr" ref="0x40403a88" loc="12:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypes.nc">
        <interfacedef-ref qname="PacketTypes"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x403f2398"/>
                <typename><typedef-ref name="command_packet_t" ref="0x403f00c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dp" ref="0x40403728" loc="12:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x403f2398"/>
                <typename><typedef-ref name="command_packet_t" ref="0x403f00c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x40403928" loc="12:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTypeOfPacket" ref="0x404011c0" loc="16:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypes.nc">
        <interfacedef-ref qname="PacketTypes"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40401068" loc="16:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="statusPacketToStr" ref="0x40402bb8" loc="14:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypes.nc">
        <interfacedef-ref qname="PacketTypes"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="status_packet" ref="0x4002e908"/>
                <typename><typedef-ref name="status_packet_t" ref="0x403f4850"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dp" ref="0x40402858" loc="14:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="status_packet" ref="0x4002e908"/>
                <typename><typedef-ref name="status_packet_t" ref="0x403f4850"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x40402a58" loc="14:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dataPacketToStr" ref="0x40402370" loc="13:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypes.nc">
        <interfacedef-ref qname="PacketTypes"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:14" alignment="I:1"><struct-ref name="data_packet" ref="0x403f3470"/>
                <typename><typedef-ref name="data_packet_t" ref="0x403f2188"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dp" ref="0x40402010" loc="13:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:14" alignment="I:1"><struct-ref name="data_packet" ref="0x403f3470"/>
                <typename><typedef-ref name="data_packet_t" ref="0x403f2188"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x40402210" loc="13:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="strToCommandPacket" ref="0x403fb190" loc="8:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypes.nc">
        <interfacedef-ref qname="PacketTypes"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x403f2398"/>
                <typename><typedef-ref name="command_packet_t" ref="0x403f00c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cp" ref="0x403f5e18" loc="8:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="command_packet" ref="0x403f2398"/>
                <typename><typedef-ref name="command_packet_t" ref="0x403f00c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x403fb030" loc="8:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="strToDataPacket" ref="0x403fb9b0" loc="9:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypes.nc">
        <interfacedef-ref qname="PacketTypes"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:14" alignment="I:1"><struct-ref name="data_packet" ref="0x403f3470"/>
                <typename><typedef-ref name="data_packet_t" ref="0x403f2188"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dp" ref="0x403fb650" loc="9:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:14" alignment="I:1"><struct-ref name="data_packet" ref="0x403f3470"/>
                <typename><typedef-ref name="data_packet_t" ref="0x403f2188"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x403fb850" loc="9:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="strToStatusPacket" ref="0x40403228" loc="10:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypes.nc">
        <interfacedef-ref qname="PacketTypes"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="status_packet" ref="0x4002e908"/>
                <typename><typedef-ref name="status_packet_t" ref="0x403f4850"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sp" ref="0x403fbe98" loc="10:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:4" alignment="I:1"><struct-ref name="status_packet" ref="0x4002e908"/>
                <typename><typedef-ref name="status_packet_t" ref="0x403f4850"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="buf" ref="0x404030c8" loc="10:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypes.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="asciihexToNum" ref="0x403f5918" loc="6:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypes.nc">
        <interfacedef-ref qname="PacketTypes"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x403f57c0" loc="6:/home/alpsayin/tinyos_workspace/SerialPacketForwarder/src/PacketTypes.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x40423de0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x404221d8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x40423650" loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x404229a8" loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40423a10" loc="43:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x404225b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403f7ef8" loc="40:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x404232a0" loc="41:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4042cf18" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x404c89f8" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x404c88a0" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x404bc070" loc="31:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x404bc6a8" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404bc550" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x404bcd70" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404bcc18" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bb848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x404c82f8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x404d2788" loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x404d2438" loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404d2628" loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x404ddba8" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x404dda50" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x404dc3d8" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x404dc088" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404dc278" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x404dd010" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x404db290" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x404dcd00" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404dcef0" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x404db128" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x404dd598" loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x404d1618" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x404d10c8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404d12b8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bb1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x404d14b0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x404b9d38" loc="95:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404d3210" loc="105:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-main/src/tinyos-main/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x40304010" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40304528" loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialInterrupts" loc="3:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
      <function command="" provided="0" name="setSendData" ref="0x404df5a8" loc="17:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="txInterruptHandler" ref="0x404eb010" loc="20:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxInterruptHandler" ref="0x404dfb50" loc="19:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x404df9f8" loc="19:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxInterrupt" ref="0x404e1828" loc="6:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxInterrupt" ref="0x404e1408" loc="5:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxInterrupt" ref="0x404e0090" loc="9:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearTxInterrupt" ref="0x404e04a8" loc="11:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxInterruptPending" ref="0x404e0d30" loc="14:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxInterrupt" ref="0x404e1c50" loc="8:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearRxInterrupt" ref="0x404e08c0" loc="12:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxInterruptPending" ref="0x404df1c8" loc="15:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x404ea4f0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x404ea4f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x404ea658" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404ea658"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x404eab40" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404ea658"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x404e9590" loc="76:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x404e9090" loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x404e99b8" loc="82:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403dcd68" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x403b7bc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403d16e0" loc="76:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403dfeb8" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCounter" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x40591038" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
          <interfacedef-ref qname="AtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40591038"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x4058f700" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x4058f5a8" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40590260" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40591530" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40591038"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40590618" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x4058fb10" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40591e58" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4058f1a8" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40591a70" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40591038"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40591918" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40591038"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405909e0" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40590d90" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCapture" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x405a7618" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
          <interfacedef-ref qname="AtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a7618"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x405b3cf8" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x405b3ba0" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x405a4830" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x405a4450" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405a7b10" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a7618"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405a4be8" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x405b2138" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x405b37a0" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405a4088" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a7618"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x405a7ef8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a7618"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405b3010" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405b33c0" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCompare" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x4059fd00" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
          <interfacedef-ref qname="AtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4059fd00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x405a9390" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x405a9238" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4059cef8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4059cb18" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x405a9b68" loc="78:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4059c210" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4059fd00"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405aa2c8" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x405a97a0" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x405aae20" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4059c750" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4059fd00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4059c5f8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4059fd00"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405aa690" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405aaa40" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403327e0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x402ff138" loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40332c20" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x4066c2a0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4066c2a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x406694a0" loc="73:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4066c2a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x406673b0" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40307a98"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4066c2a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40667258" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4066c2a0"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x401b8840"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x401b8840"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x40667ca8" loc="101:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4066c2a0"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40667b50" loc="101:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40669070" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40669b48" loc="81:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x4066c2a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x4066c740" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x4066cb88" loc="58:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bab68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x407023b8" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407023b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40702520" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40702520"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40716810" loc="109:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40702520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x407174d0" loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x407161c8" loc="103:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40702520"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40702520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40717e48" loc="103:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40702520"/></type-var>
          </variable>
          <variable name="dt" ref="0x40716068" loc="103:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40702520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40717940" loc="88:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f56e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40716ca0" loc="116:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40702520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40702b50" loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40702520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x407029f8" loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40702520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40717070" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
