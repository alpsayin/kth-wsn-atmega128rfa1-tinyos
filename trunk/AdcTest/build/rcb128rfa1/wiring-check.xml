<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="67:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40636520"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403ef820"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403ef820"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403fd338"/></to>
    </wire>
    <wire loc="69:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x4062e270"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40660330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40660330"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x406595a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x40621600"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407080f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x407080f0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x406595a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x4062b958"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40705e70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40705e70"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x406595a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x406378d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4047d580"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4047d580"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4048da88"/></to>
    </wire>
    <wire loc="74:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkAppC.nc">
      <from><interface-ref name="TempSensor" scoped="" ref="0x406382a0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40701d28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x40701d28"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4099c478"/></to>
    </wire>
    <wire loc="75:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkAppC.nc">
      <from><interface-ref name="Vol0" scoped="" ref="0x40627010"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40808538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x40808538"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x409cb430"/></to>
    </wire>
    <wire loc="76:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkAppC.nc">
      <from><interface-ref name="Vol1" scoped="" ref="0x40627cf0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40803da0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x40803da0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x409e5878"/></to>
    </wire>
    <wire loc="78:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkAppC.nc">
      <from><interface-ref name="SerialByte" scoped="" ref="0x40636938"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x407ff930"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x407ff930"/></from>
      <to><interface-ref name="Uart1Byte" scoped="" ref="0x40427858"/></to>
    </wire>
    <wire loc="79:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkAppC.nc">
      <from><interface-ref name="SerialStream" scoped="" ref="0x40636e58"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x407ff060"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x407ff060"/></from>
      <to><interface-ref name="Uart1Stream" scoped="" ref="0x4042a950"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403f64f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409b3db0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x403fd6d0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40303378"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40303378"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403cf3e0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x403fdc98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403f6cd8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403f6cd8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403f5b08"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405ee0e0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x403f64f0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x403fc2c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404a4440"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x403fc2c8"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x403f5108"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x403f5ef8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403ff250"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403ff250"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403fe410"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x403fc690"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x405f1010"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x403ffa08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40738288"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerInit" scoped="" ref="0x403ff658"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409529a0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x403ff658"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4054d440"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40405010"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x403ff658"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x404053c0"/></from>
      <to><interface-ref name="AdcInit" scoped="" ref="0x403ffa08"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="SerialInit" scoped="" ref="0x403fe820"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x4041dae0"/></to>
    </wire>
    <wire loc="12:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Init" scoped="" ref="0x4041dae0"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x40425cd0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x403fec08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40408910"/></to>
    </wire>
    <wire loc="13:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Byte" scoped="" ref="0x40427858"/></from>
      <to><interface-ref name="Uart1Byte" scoped="" ref="0x40431138"/></to>
    </wire>
    <wire loc="14:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Stream" scoped="" ref="0x4042a950"/></from>
      <to><interface-ref name="Uart1Stream" scoped="" ref="0x40431648"/></to>
    </wire>
    <wire loc="15:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x40427db8"/></from>
      <to><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x40430030"/></to>
    </wire>
    <wire loc="16:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4047bb10"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4047d580"/></to>
    </wire>
    <wire loc="17:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4042e040"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405388f0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x405388f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40534320"/></to>
    </wire>
    <wire loc="18:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Interrupts" scoped="" ref="0x40435240"/></from>
      <to><interface-ref name="Uart1Interrupts" scoped="" ref="0x4047fec8"/></to>
    </wire>
    <wire loc="19:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40434188"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4047d580"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403e2218"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40752108"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403e2218"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x4058e1e0"/></to>
    </wire>
    <wire loc="20:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403e2218"/></from>
      <to><interface-ref name="Uart1PowerOverride" scoped="" ref="0x40430a28"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="sendBlockingDoneTask" scoped="" ref="0x40439df8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="sendDoneTask" scoped="" ref="0x40438eb8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="unexpectedByteReceivedTask" scoped="" ref="0x40442010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="receiveBlockingDoneTask" scoped="" ref="0x404386b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="receiveDoneTask" scoped="" ref="0x40443708"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404a4440"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4048d740"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x4049d9a8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x4048c5a0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x4048c5a0"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x404b18e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x404953c0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x404a5010"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x404a5010"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x404be2f0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40495da8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x404a5a18"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x404a5a18"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x404bece8"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x404b18e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40504170"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x404be2f0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40504ac8"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x404bece8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x405034f0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x404b7c08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404f2ef8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404f2ef8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4086e7f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40504ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408a37f8"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x404b9670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40509410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40509410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408e1538"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x404c38f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40510128"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40510128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40908418"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x404c0c08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4050d170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4050d170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4091d6c0"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x404ba210"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4050a090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4050a090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408e4010"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x404a4f10"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404eccc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404eccc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40838458"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x404b5a98"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404fdba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404fdba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408696c0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x404addc8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404ea988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404ea988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40833228"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x404b3a08"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404fb890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404fb890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40864538"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x404bc210"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405017d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405017d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4089d6c0"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x404b2ea8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404f77f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404f77f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408a63b0"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x404c44b0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40507170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40507170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408dc538"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x404c1750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4050fd68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4050fd68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40920228"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x404abce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404f66b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404f66b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4082d0b0"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x404c22f8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40510a80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40510a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40907de0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x404b6670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404f0860"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404f0860"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4086c228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x405034f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408a1228"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x404c50a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40509d68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40509d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408df010"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x404ae928"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404eb6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404eb6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40837e18"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x404b4590"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404fc5d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x404fc5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408670b0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x404ac830"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404e9330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404e9330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40832c08"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x404bcc08"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40500170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40500170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4089b0b0"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x404c4ea8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40507ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40507ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408da010"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x404b7210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404f25a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404f25a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40857de8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x40504170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408a5d70"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x404bac08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4050a9e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4050a9e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408e39e8"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x404c0210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4050e790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4050e790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4091fc08"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x404aa750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404f5030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404f5030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4082ca88"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x404b50a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404fd250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404fd250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4086bc08"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x404bd750"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40503e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40503e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4089fc08"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x404ad3d0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404ea030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404ea030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408357f8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x404b3010"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404fcf28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404fcf28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40866a88"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x404bb670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4050b6f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4050b6f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408c8538"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x404c5a98"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40508790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40508790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408de9e8"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x404b24b0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404f8e78"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404f8e78"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408a8938"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x404c2cf0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4050f410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4050f410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x409057f8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x404ab2f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404e9c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x404e9c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x408306c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4050dac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4091b0b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4050c4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4091aa88"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x405335f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4054f368"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4054f368"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4054d878"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x4055ca48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40568c90"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40568c90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4057f278"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="BeaconCapture" scoped="" ref="0x405749a8"/></from>
      <to><interface-ref name="BeaconCapture" scoped="" ref="0x40590158"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x40575860"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x40583010"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40563470"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x4057c408"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40563470"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40589830"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40563470"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40587bd0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x4058e5d0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403e3148"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403cfc18"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403ce8b8"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x403dc470"/></to>
    </wire>
    <wire loc="128:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <from><interface-ref name="vol1ReadTask" scoped="" ref="0x4063d660"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <from><interface-ref name="processCommandTask" scoped="" ref="0x4064e6a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <from><interface-ref name="vol0ReadTask" scoped="" ref="0x4063f6a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <from><interface-ref name="tempSensorReadTask" scoped="" ref="0x406426d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x406595a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406dfcc8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x406cecc8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40669f20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40669f20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4095a7d0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x406f80c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406b8968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x409564c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4095edb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x4095edb8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40952dd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x40958278"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405388f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x40974898"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40568c90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x40972840"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40563470"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x406cb658"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x406f62b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x4099c478"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40720538"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4099b030"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4099a3b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4071d940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4099b030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4071c220"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x4072b220"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40729618"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4099b508"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40720538"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x407f5e78"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x4071b978"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x407cbbc0"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x407e97d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4071c220"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x407e3100"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4071d940"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x407ccba0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x407cebe8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x407e4860"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40727bf8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40727bf8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40735b58"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40723db0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40737110"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4072b220"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40754910"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40754910"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409af2e8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x407c5010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40729618"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40744958"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40726ea8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40726ea8"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40756c00"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x407c49f0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x407356c8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x407c3150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x407c6470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x407c6470"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x409afe30"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x407524c8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403e3148"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x407c6068"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x409afa28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x407c6b08"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x409ae510"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x409ae9d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x407c5010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x409aedf8"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x409b1170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x409ac030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x409d59b8"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x407c49f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x409d5db0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x407c4de8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x409d4150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x407c3150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x409d47e8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x407c37e8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x407da7c8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x409cb430"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40720538"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x409c9010"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x409c83b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4071d940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x409c9010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4071c220"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x4072b220"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40729618"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x409c94e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x409e5878"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40720538"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x409e4418"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x409e3798"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4071d940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x409e4418"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x4071c220"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x4072b220"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40729618"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x409e48f0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="UartStreamBlocking" scoped="" ref="0x407ffe88"/></from>
      <to><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x40427db8"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="McuInitC" loc="36:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128Rfa1SerialC" loc="1:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <configuration/>
    </component>
    <component qname="Atm128Rfa1SerialP" loc="10:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <module/>
    </component>
    <component qname="Atm128Rfa1Uart1InterruptsP" loc="5:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1Uart1InterruptsP.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="38:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
        <short>&#10; The implementation of the LED mote abstraction for the RCB128RFA1&#10; Platform.</short>
        <long>&#10; The implementation of the LED mote abstraction for the RCB128RFA1&#10; Platform.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="25:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the Atmega128RFA1's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the Atmega128RFA1's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega128RFA1 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG" loc="40(HplAtm128GeneralIOC.PortG):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit0" loc="41(HplAtm128GeneralIOC.PortG.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit1" loc="41(HplAtm128GeneralIOC.PortG.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit2" loc="41(HplAtm128GeneralIOC.PortG.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit3" loc="41(HplAtm128GeneralIOC.PortG.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit4" loc="41(HplAtm128GeneralIOC.PortG.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit5" loc="41(HplAtm128GeneralIOC.PortG.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit6" loc="41(HplAtm128GeneralIOC.PortG.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit7" loc="41(HplAtm128GeneralIOC.PortG.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.3 2010-08-10 01:28:33 mmaroti Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042f780"/>
            <typename><typedef-ref name="TMilli" ref="0x4042f948"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40524060"/>
            <typename><typedef-ref name="T62khz" ref="0x40524208"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter62khz32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterP):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40524060"/>
            <typename><typedef-ref name="T62khz" ref="0x40524208"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="BlinkC" loc="52:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc" safe="">
      <module/>
    </component>
    <component qname="BlinkAppC.Timer0" loc="44(BlinkAppC.Timer0):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C" loc="37(TimerMilliP.AlarmMilli32C.Alarm62khz32C):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP" loc="35(TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40524060"/>
            <typename><typedef-ref name="T62khz" ref="0x40524208"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042f780"/>
            <typename><typedef-ref name="TMilli" ref="0x4042f948"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40524060"/>
            <typename><typedef-ref name="T62khz" ref="0x40524208"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042f780"/>
            <typename><typedef-ref name="TMilli" ref="0x4042f948"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042f780"/>
            <typename><typedef-ref name="TMilli" ref="0x4042f948"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer1" loc="44(BlinkAppC.Timer1):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer2" loc="44(BlinkAppC.Timer2):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.TempSensor" loc="1(BlinkAppC.TempSensor):/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorC.nc">
      <instance number="0">
        <component-ref qname="PlatformSensorC"/>
        <arguments>
          <value cst="I:41">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.TempSensor.Adc" loc="21(BlinkAppC.TempSensor.Adc):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/WireAdcP.nc">
      <documentation loc="10:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <documentation loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-main/src/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-main/src/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.TempSensor.PlatformSensorP" loc="4(BlinkAppC.TempSensor.PlatformSensorP):/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorP.nc">
      <instance number="0">
        <component-ref qname="PlatformSensorP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Vol0" loc="1(BlinkAppC.Vol0):/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorC.nc">
      <instance number="1">
        <component-ref qname="PlatformSensorC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Vol0.Adc" loc="21(BlinkAppC.Vol0.Adc):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Vol0.PlatformSensorP" loc="4(BlinkAppC.Vol0.PlatformSensorP):/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorP.nc">
      <instance number="1">
        <component-ref qname="PlatformSensorP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Vol1" loc="1(BlinkAppC.Vol1):/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorC.nc">
      <instance number="2">
        <component-ref qname="PlatformSensorC"/>
        <arguments>
          <value cst="I:41">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Vol1.Adc" loc="21(BlinkAppC.Vol1.Adc):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Vol1.PlatformSensorP" loc="4(BlinkAppC.Vol1.PlatformSensorP):/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorP.nc">
      <instance number="2">
        <component-ref qname="PlatformSensorP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="36:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404cca18" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404ccc30" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404cce48" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404d2d60" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404cf010" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404cf238" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404cf428" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40535888" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40535888"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40535ce8" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40535ce8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40532010" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40532010"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40532480" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40532480"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x405326e8" loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40532b70" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40532b70"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x4054ed20" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4054ed20"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4054b168" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054b168"/></type-var>
        </typedef>
        <constant name="mode" ref="0x4054b358" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCompareP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x40670470" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40670470"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x406708a0" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406708a0"/></type-var>
        </typedef>
        <constant name="mode" ref="0x40670a90" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x40670c98" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x4069c648" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x4069c648"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x4069caa8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x4069caa8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x4069cd10" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x4069cd10"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x406991b8" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x406991b8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40699420" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406b7368" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406b7368"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406caef8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406caef8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x406dd0f0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PlatformSensorC" loc="1:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorC.nc" abstract="">
      <parameters>
        <constant name="channel" ref="0x40702b60" loc="1:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorC.nc">
          <component-ref qname="PlatformSensorC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40758ca8" loc="89:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40787238" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x407888e0" loc="52:/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-main/src/tinyos-main/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-main/src/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x407e82b8" loc="23:/opt/tinyos-main/src/tinyos-main/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x407e82b8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="PlatformSensorP" loc="4:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorP.nc" abstract="">
      <parameters>
        <constant name="channel" ref="0x40807010" loc="4:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorP.nc">
          <component-ref qname="PlatformSensorP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x403f64f0" loc="58:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x403f64f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f66c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403ef820" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403ef820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403ef9f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403f6cd8" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403f6cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f6eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x403f5108" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x403f5108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f52e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x403fc690" loc="45:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x403fc690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403fc868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403f5b08" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403f5b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f5ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x403fc2c8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x403fc2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403fc4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x403f5ef8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x403f5ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403fc0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403ff250" loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403ff250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ff428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x403ffa08" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x403ffa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ffbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x403ff658" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x403ff658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ff830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403fe410" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403fe410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403fe5e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x404053c0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x404053c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40405598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialInit" ref="0x403fe820" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialInit" scoped="" ref="0x403fe820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403fe9f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x403fec08" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x403fec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403fede0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x40405010" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x40405010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404051e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40408910" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40408910"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f77d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f77d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40408ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40416268" loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40416268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40416440"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40416520"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40416600"/>
        <function-ref name="actualMicro" scoped="" ref="0x404166e0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404167c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Byte" ref="0x40427858" loc="5:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Byte" scoped="" ref="0x40427858"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40427a30"/>
        <function-ref name="receive" scoped="" ref="0x40427b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Stream" ref="0x4042a950" loc="4:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Stream" scoped="" ref="0x4042a950"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4042ab28"/>
        <function-ref name="receivedByte" scoped="" ref="0x4042ac08"/>
        <function-ref name="receive" scoped="" ref="0x4042ace8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x4042adc8"/>
        <function-ref name="receiveDone" scoped="" ref="0x4042aea8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4041c010"/>
        <function-ref name="sendDone" scoped="" ref="0x4041c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x4041dae0" loc="3:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x4041dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4041dcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1StreamBlocking" ref="0x40427db8" loc="6:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x40427db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40425010"/>
        <function-ref name="receivedByte" scoped="" ref="0x404250f0"/>
        <function-ref name="receive" scoped="" ref="0x404251d0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x404252b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x40425390"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40425470"/>
        <function-ref name="sendDone" scoped="" ref="0x40425550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Byte" ref="0x40431138" loc="13:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Byte" scoped="" ref="0x40431138"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40431310"/>
        <function-ref name="receive" scoped="" ref="0x404313f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBlockingDoneTask" ref="0x40439df8" loc="33:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBlockingDoneTask" scoped="" ref="0x40439df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40438010"/>
        <function-ref name="runTask" scoped="" ref="0x404380f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDoneTask" ref="0x40438eb8" loc="36:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDoneTask" scoped="" ref="0x40438eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404430c0"/>
        <function-ref name="runTask" scoped="" ref="0x404431a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Stream" ref="0x40431648" loc="14:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Stream" scoped="" ref="0x40431648"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40431820"/>
        <function-ref name="receivedByte" scoped="" ref="0x40431900"/>
        <function-ref name="receive" scoped="" ref="0x404319e0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40431ac0"/>
        <function-ref name="receiveDone" scoped="" ref="0x40431ba0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40431c80"/>
        <function-ref name="sendDone" scoped="" ref="0x40431d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="unexpectedByteReceivedTask" ref="0x40442010" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="unexpectedByteReceivedTask" scoped="" ref="0x40442010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40442268"/>
        <function-ref name="runTask" scoped="" ref="0x40442348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1StreamBlocking" ref="0x40430030" loc="15:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x40430030"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40430208"/>
        <function-ref name="receivedByte" scoped="" ref="0x404302e8"/>
        <function-ref name="receive" scoped="" ref="0x404303c8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x404304a8"/>
        <function-ref name="receiveDone" scoped="" ref="0x40430588"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40430668"/>
        <function-ref name="sendDone" scoped="" ref="0x40430748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x40425cd0" loc="12:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x40425cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40425ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Uart1Interrupts" ref="0x40435240" loc="18:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Interrupts" scoped="" ref="0x40435240"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxInterruptPending" scoped="" ref="0x40435cd8"/>
        <function-ref name="txInterruptHandler" scoped="" ref="0x404354f8"/>
        <function-ref name="rxInterruptHandler" scoped="" ref="0x404355d8"/>
        <function-ref name="enableRxInterrupt" scoped="" ref="0x404356b8"/>
        <function-ref name="enableTxInterrupt" scoped="" ref="0x40435798"/>
        <function-ref name="disableRxInterrupt" scoped="" ref="0x40435878"/>
        <function-ref name="clearTxInterrupt" scoped="" ref="0x40435958"/>
        <function-ref name="isRxInterruptPending" scoped="" ref="0x40435a38"/>
        <function-ref name="disableTxInterrupt" scoped="" ref="0x40435b18"/>
        <function-ref name="setSendData" scoped="" ref="0x40435418"/>
        <function-ref name="clearRxInterrupt" scoped="" ref="0x40435bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4042e040" loc="19:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4042e040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042f780"/>
            <typename><typedef-ref name="TMilli" ref="0x4042f948"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4042e790"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4042ec80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4042ea08"/>
        <function-ref name="overflow" scoped="" ref="0x4042eef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40434188" loc="20:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40434188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40434360"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40434440"/>
        <function-ref name="led1On" scoped="" ref="0x40434520"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40434600"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404346e0"/>
        <function-ref name="get" scoped="" ref="0x404347c0"/>
        <function-ref name="led1Off" scoped="" ref="0x404348a0"/>
        <function-ref name="led2Off" scoped="" ref="0x40434c20"/>
        <function-ref name="set" scoped="" ref="0x40434980"/>
        <function-ref name="led0On" scoped="" ref="0x40434a60"/>
        <function-ref name="led2On" scoped="" ref="0x40434b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1PowerOverride" ref="0x40430a28" loc="16:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1PowerOverride" scoped="" ref="0x40430a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40430c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveBlockingDoneTask" ref="0x404386b0" loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveBlockingDoneTask" scoped="" ref="0x404386b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40438888"/>
        <function-ref name="runTask" scoped="" ref="0x40438968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDoneTask" ref="0x40443708" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDoneTask" scoped="" ref="0x40443708"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404438e0"/>
        <function-ref name="runTask" scoped="" ref="0x404439c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Interrupts" ref="0x4047fec8" loc="7:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1Uart1InterruptsP.nc">
      <component-ref qname="Atm128Rfa1Uart1InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Interrupts" scoped="" ref="0x4047fec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxInterruptPending" scoped="" ref="0x4047b980"/>
        <function-ref name="txInterruptHandler" scoped="" ref="0x4047b1a0"/>
        <function-ref name="rxInterruptHandler" scoped="" ref="0x4047b280"/>
        <function-ref name="enableRxInterrupt" scoped="" ref="0x4047b360"/>
        <function-ref name="enableTxInterrupt" scoped="" ref="0x4047b440"/>
        <function-ref name="disableRxInterrupt" scoped="" ref="0x4047b520"/>
        <function-ref name="clearTxInterrupt" scoped="" ref="0x4047b600"/>
        <function-ref name="isRxInterruptPending" scoped="" ref="0x4047b6e0"/>
        <function-ref name="disableTxInterrupt" scoped="" ref="0x4047b7c0"/>
        <function-ref name="setSendData" scoped="" ref="0x4047b0c0"/>
        <function-ref name="clearRxInterrupt" scoped="" ref="0x4047b8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4047bb10" loc="8:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1Uart1InterruptsP.nc">
      <component-ref qname="Atm128Rfa1Uart1InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4047bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4047bce8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4047bdc8"/>
        <function-ref name="led1On" scoped="" ref="0x4047bea8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4047a010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4047a0f0"/>
        <function-ref name="get" scoped="" ref="0x4047a1d0"/>
        <function-ref name="led1Off" scoped="" ref="0x4047a2b0"/>
        <function-ref name="led2Off" scoped="" ref="0x4047a630"/>
        <function-ref name="set" scoped="" ref="0x4047a390"/>
        <function-ref name="led0On" scoped="" ref="0x4047a470"/>
        <function-ref name="led2On" scoped="" ref="0x4047a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4047d580" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4047d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4047d758"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4047d838"/>
        <function-ref name="led1On" scoped="" ref="0x4047d918"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4047d9f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4047dad8"/>
        <function-ref name="get" scoped="" ref="0x4047dbb8"/>
        <function-ref name="led1Off" scoped="" ref="0x4047dc98"/>
        <function-ref name="led2Off" scoped="" ref="0x4048d0f0"/>
        <function-ref name="set" scoped="" ref="0x4047dd78"/>
        <function-ref name="led0On" scoped="" ref="0x4047de58"/>
        <function-ref name="led2On" scoped="" ref="0x4048d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x4049d9a8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x4049d9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049db80"/>
        <function-ref name="isInput" scoped="" ref="0x4049dc60"/>
        <function-ref name="toggle" scoped="" ref="0x4049dd40"/>
        <function-ref name="isOutput" scoped="" ref="0x4049de20"/>
        <function-ref name="get" scoped="" ref="0x4049df00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40495010"/>
        <function-ref name="set" scoped="" ref="0x404950f0"/>
        <function-ref name="clr" scoped="" ref="0x404951d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4048d740" loc="40:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4048d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4048d918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x404953c0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x404953c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40495598"/>
        <function-ref name="isInput" scoped="" ref="0x40495678"/>
        <function-ref name="toggle" scoped="" ref="0x40495758"/>
        <function-ref name="isOutput" scoped="" ref="0x40495838"/>
        <function-ref name="get" scoped="" ref="0x40495918"/>
        <function-ref name="makeOutput" scoped="" ref="0x404959f8"/>
        <function-ref name="set" scoped="" ref="0x40495ad8"/>
        <function-ref name="clr" scoped="" ref="0x40495bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4048da88" loc="41:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4048da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4048dc60"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4048dd40"/>
        <function-ref name="led1On" scoped="" ref="0x4048de20"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4048df00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40496010"/>
        <function-ref name="get" scoped="" ref="0x404960f0"/>
        <function-ref name="led1Off" scoped="" ref="0x404961d0"/>
        <function-ref name="led2Off" scoped="" ref="0x40496550"/>
        <function-ref name="set" scoped="" ref="0x404962b0"/>
        <function-ref name="led0On" scoped="" ref="0x40496390"/>
        <function-ref name="led2On" scoped="" ref="0x40496470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x40495da8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40495da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40494010"/>
        <function-ref name="isInput" scoped="" ref="0x404940f0"/>
        <function-ref name="toggle" scoped="" ref="0x404941d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404942b0"/>
        <function-ref name="get" scoped="" ref="0x40494390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40494470"/>
        <function-ref name="set" scoped="" ref="0x40494550"/>
        <function-ref name="clr" scoped="" ref="0x40494630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x4048c5a0" loc="37:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x4048c5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048c778"/>
        <function-ref name="isInput" scoped="" ref="0x4048c858"/>
        <function-ref name="toggle" scoped="" ref="0x4048c938"/>
        <function-ref name="isOutput" scoped="" ref="0x4048ca18"/>
        <function-ref name="get" scoped="" ref="0x4048caf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4048cbd8"/>
        <function-ref name="set" scoped="" ref="0x4048ccb8"/>
        <function-ref name="clr" scoped="" ref="0x4048cd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x404a5010" loc="38:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x404a5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a51e8"/>
        <function-ref name="isInput" scoped="" ref="0x404a52c8"/>
        <function-ref name="toggle" scoped="" ref="0x404a53a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404a5488"/>
        <function-ref name="get" scoped="" ref="0x404a5568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a5648"/>
        <function-ref name="set" scoped="" ref="0x404a5728"/>
        <function-ref name="clr" scoped="" ref="0x404a5808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x404a4440" loc="40:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404a4440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a4618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x404a5a18" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x404a5a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a5bf0"/>
        <function-ref name="isInput" scoped="" ref="0x404a5cd0"/>
        <function-ref name="toggle" scoped="" ref="0x404a5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x404a5e90"/>
        <function-ref name="get" scoped="" ref="0x404a4010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a40f0"/>
        <function-ref name="set" scoped="" ref="0x404a41d0"/>
        <function-ref name="clr" scoped="" ref="0x404a42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x404b7c08" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x404b7c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b7de0"/>
        <function-ref name="isInput" scoped="" ref="0x404b7ec0"/>
        <function-ref name="toggle" scoped="" ref="0x404b6010"/>
        <function-ref name="isOutput" scoped="" ref="0x404b60f0"/>
        <function-ref name="get" scoped="" ref="0x404b61d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b62b0"/>
        <function-ref name="set" scoped="" ref="0x404b6390"/>
        <function-ref name="clr" scoped="" ref="0x404b6470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x404be2f0" loc="58:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x404be2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404be4c8"/>
        <function-ref name="isInput" scoped="" ref="0x404be5a8"/>
        <function-ref name="toggle" scoped="" ref="0x404be688"/>
        <function-ref name="isOutput" scoped="" ref="0x404be768"/>
        <function-ref name="get" scoped="" ref="0x404be848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404be928"/>
        <function-ref name="set" scoped="" ref="0x404bea08"/>
        <function-ref name="clr" scoped="" ref="0x404beae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x404b9670" loc="67:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x404b9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b9848"/>
        <function-ref name="isInput" scoped="" ref="0x404b9928"/>
        <function-ref name="toggle" scoped="" ref="0x404b9a08"/>
        <function-ref name="isOutput" scoped="" ref="0x404b9ae8"/>
        <function-ref name="get" scoped="" ref="0x404b9bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b9ca8"/>
        <function-ref name="set" scoped="" ref="0x404b9d88"/>
        <function-ref name="clr" scoped="" ref="0x404b9e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x404c38f0" loc="74:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x404c38f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c3ac8"/>
        <function-ref name="isInput" scoped="" ref="0x404c3ba8"/>
        <function-ref name="toggle" scoped="" ref="0x404c3c88"/>
        <function-ref name="isOutput" scoped="" ref="0x404c3d68"/>
        <function-ref name="get" scoped="" ref="0x404c3e48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c3f28"/>
        <function-ref name="set" scoped="" ref="0x404c2018"/>
        <function-ref name="clr" scoped="" ref="0x404c20f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x404c0c08" loc="79:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x404c0c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c0de0"/>
        <function-ref name="isInput" scoped="" ref="0x404c0ec0"/>
        <function-ref name="toggle" scoped="" ref="0x404bf010"/>
        <function-ref name="isOutput" scoped="" ref="0x404bf0f0"/>
        <function-ref name="get" scoped="" ref="0x404bf1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bf2b0"/>
        <function-ref name="set" scoped="" ref="0x404bf390"/>
        <function-ref name="clr" scoped="" ref="0x404bf470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x404ba210" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x404ba210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ba3e8"/>
        <function-ref name="isInput" scoped="" ref="0x404ba4c8"/>
        <function-ref name="toggle" scoped="" ref="0x404ba5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ba688"/>
        <function-ref name="get" scoped="" ref="0x404ba768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ba848"/>
        <function-ref name="set" scoped="" ref="0x404ba928"/>
        <function-ref name="clr" scoped="" ref="0x404baa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x404a4f10" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x404a4f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ae108"/>
        <function-ref name="isInput" scoped="" ref="0x404ae1e8"/>
        <function-ref name="toggle" scoped="" ref="0x404ae2c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ae3a8"/>
        <function-ref name="get" scoped="" ref="0x404ae488"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ae568"/>
        <function-ref name="set" scoped="" ref="0x404ae648"/>
        <function-ref name="clr" scoped="" ref="0x404ae728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x404b5a98" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x404b5a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b5cf0"/>
        <function-ref name="isInput" scoped="" ref="0x404b5dd0"/>
        <function-ref name="toggle" scoped="" ref="0x404b5eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b4010"/>
        <function-ref name="get" scoped="" ref="0x404b40f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b41d0"/>
        <function-ref name="set" scoped="" ref="0x404b42b0"/>
        <function-ref name="clr" scoped="" ref="0x404b4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x404addc8" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x404addc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ac010"/>
        <function-ref name="isInput" scoped="" ref="0x404ac0f0"/>
        <function-ref name="toggle" scoped="" ref="0x404ac1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404ac2b0"/>
        <function-ref name="get" scoped="" ref="0x404ac390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ac470"/>
        <function-ref name="set" scoped="" ref="0x404ac550"/>
        <function-ref name="clr" scoped="" ref="0x404ac630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x404b3a08" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x404b3a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b3be0"/>
        <function-ref name="isInput" scoped="" ref="0x404b3cc0"/>
        <function-ref name="toggle" scoped="" ref="0x404b3da0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b3e80"/>
        <function-ref name="get" scoped="" ref="0x404b2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b20f0"/>
        <function-ref name="set" scoped="" ref="0x404b21d0"/>
        <function-ref name="clr" scoped="" ref="0x404b22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x404bc210" loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x404bc210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bc3e8"/>
        <function-ref name="isInput" scoped="" ref="0x404bc4c8"/>
        <function-ref name="toggle" scoped="" ref="0x404bc5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404bc688"/>
        <function-ref name="get" scoped="" ref="0x404bc768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bc848"/>
        <function-ref name="set" scoped="" ref="0x404bc928"/>
        <function-ref name="clr" scoped="" ref="0x404bca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x404b2ea8" loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x404b2ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b10c0"/>
        <function-ref name="isInput" scoped="" ref="0x404b11a0"/>
        <function-ref name="toggle" scoped="" ref="0x404b1280"/>
        <function-ref name="isOutput" scoped="" ref="0x404b1360"/>
        <function-ref name="get" scoped="" ref="0x404b1440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b1520"/>
        <function-ref name="set" scoped="" ref="0x404b1600"/>
        <function-ref name="clr" scoped="" ref="0x404b16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x404c44b0" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x404c44b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c4688"/>
        <function-ref name="isInput" scoped="" ref="0x404c4768"/>
        <function-ref name="toggle" scoped="" ref="0x404c4848"/>
        <function-ref name="isOutput" scoped="" ref="0x404c4928"/>
        <function-ref name="get" scoped="" ref="0x404c4a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c4ae8"/>
        <function-ref name="set" scoped="" ref="0x404c4bc8"/>
        <function-ref name="clr" scoped="" ref="0x404c4ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x404c1750" loc="77:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x404c1750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c1928"/>
        <function-ref name="isInput" scoped="" ref="0x404c1a08"/>
        <function-ref name="toggle" scoped="" ref="0x404c1ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404c1bc8"/>
        <function-ref name="get" scoped="" ref="0x404c1ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c1d88"/>
        <function-ref name="set" scoped="" ref="0x404c1e68"/>
        <function-ref name="clr" scoped="" ref="0x404c0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x404abce8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x404abce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404abec0"/>
        <function-ref name="isInput" scoped="" ref="0x404aa010"/>
        <function-ref name="toggle" scoped="" ref="0x404aa0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404aa1d0"/>
        <function-ref name="get" scoped="" ref="0x404aa2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404aa390"/>
        <function-ref name="set" scoped="" ref="0x404aa470"/>
        <function-ref name="clr" scoped="" ref="0x404aa550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x404c22f8" loc="75:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x404c22f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c24d0"/>
        <function-ref name="isInput" scoped="" ref="0x404c25b0"/>
        <function-ref name="toggle" scoped="" ref="0x404c2690"/>
        <function-ref name="isOutput" scoped="" ref="0x404c2770"/>
        <function-ref name="get" scoped="" ref="0x404c2850"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c2930"/>
        <function-ref name="set" scoped="" ref="0x404c2a10"/>
        <function-ref name="clr" scoped="" ref="0x404c2af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x404b6670" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x404b6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b6848"/>
        <function-ref name="isInput" scoped="" ref="0x404b6928"/>
        <function-ref name="toggle" scoped="" ref="0x404b6a08"/>
        <function-ref name="isOutput" scoped="" ref="0x404b6ae8"/>
        <function-ref name="get" scoped="" ref="0x404b6bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b6ca8"/>
        <function-ref name="set" scoped="" ref="0x404b6d88"/>
        <function-ref name="clr" scoped="" ref="0x404b6e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x404bece8" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x404bece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404beec0"/>
        <function-ref name="isInput" scoped="" ref="0x404bd010"/>
        <function-ref name="toggle" scoped="" ref="0x404bd0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404bd1d0"/>
        <function-ref name="get" scoped="" ref="0x404bd2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bd390"/>
        <function-ref name="set" scoped="" ref="0x404bd470"/>
        <function-ref name="clr" scoped="" ref="0x404bd550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x404c50a0" loc="68:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x404c50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c5278"/>
        <function-ref name="isInput" scoped="" ref="0x404c5358"/>
        <function-ref name="toggle" scoped="" ref="0x404c5438"/>
        <function-ref name="isOutput" scoped="" ref="0x404c5518"/>
        <function-ref name="get" scoped="" ref="0x404c55f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c56d8"/>
        <function-ref name="set" scoped="" ref="0x404c57b8"/>
        <function-ref name="clr" scoped="" ref="0x404c5898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x404ae928" loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x404ae928"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404aeb00"/>
        <function-ref name="isInput" scoped="" ref="0x404aebe0"/>
        <function-ref name="toggle" scoped="" ref="0x404aecc0"/>
        <function-ref name="isOutput" scoped="" ref="0x404aeda0"/>
        <function-ref name="get" scoped="" ref="0x404aee80"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ad010"/>
        <function-ref name="set" scoped="" ref="0x404ad0f0"/>
        <function-ref name="clr" scoped="" ref="0x404ad1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x404b4590" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x404b4590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b4768"/>
        <function-ref name="isInput" scoped="" ref="0x404b4848"/>
        <function-ref name="toggle" scoped="" ref="0x404b4928"/>
        <function-ref name="isOutput" scoped="" ref="0x404b4a08"/>
        <function-ref name="get" scoped="" ref="0x404b4ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b4bc8"/>
        <function-ref name="set" scoped="" ref="0x404b4ca8"/>
        <function-ref name="clr" scoped="" ref="0x404b4d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x404ac830" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x404ac830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404aca08"/>
        <function-ref name="isInput" scoped="" ref="0x404acae8"/>
        <function-ref name="toggle" scoped="" ref="0x404acbc8"/>
        <function-ref name="isOutput" scoped="" ref="0x404acca8"/>
        <function-ref name="get" scoped="" ref="0x404acd88"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ace68"/>
        <function-ref name="set" scoped="" ref="0x404ab010"/>
        <function-ref name="clr" scoped="" ref="0x404ab0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x404bcc08" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x404bcc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bcde0"/>
        <function-ref name="isInput" scoped="" ref="0x404bcec0"/>
        <function-ref name="toggle" scoped="" ref="0x404bb010"/>
        <function-ref name="isOutput" scoped="" ref="0x404bb0f0"/>
        <function-ref name="get" scoped="" ref="0x404bb1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bb2b0"/>
        <function-ref name="set" scoped="" ref="0x404bb390"/>
        <function-ref name="clr" scoped="" ref="0x404bb470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x404c4ea8" loc="71:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x404c4ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c30c0"/>
        <function-ref name="isInput" scoped="" ref="0x404c31a0"/>
        <function-ref name="toggle" scoped="" ref="0x404c3280"/>
        <function-ref name="isOutput" scoped="" ref="0x404c3360"/>
        <function-ref name="get" scoped="" ref="0x404c3440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c3520"/>
        <function-ref name="set" scoped="" ref="0x404c3600"/>
        <function-ref name="clr" scoped="" ref="0x404c36e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x404b7210" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x404b7210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b73e8"/>
        <function-ref name="isInput" scoped="" ref="0x404b74c8"/>
        <function-ref name="toggle" scoped="" ref="0x404b75a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b7688"/>
        <function-ref name="get" scoped="" ref="0x404b7768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b7848"/>
        <function-ref name="set" scoped="" ref="0x404b7928"/>
        <function-ref name="clr" scoped="" ref="0x404b7a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x404b18e0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x404b18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b1ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404b1b98"/>
        <function-ref name="toggle" scoped="" ref="0x404b1c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404b1d58"/>
        <function-ref name="get" scoped="" ref="0x404b1e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b1f18"/>
        <function-ref name="set" scoped="" ref="0x404be010"/>
        <function-ref name="clr" scoped="" ref="0x404be0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x404bac08" loc="66:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x404bac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bade0"/>
        <function-ref name="isInput" scoped="" ref="0x404baec0"/>
        <function-ref name="toggle" scoped="" ref="0x404b9010"/>
        <function-ref name="isOutput" scoped="" ref="0x404b90f0"/>
        <function-ref name="get" scoped="" ref="0x404b91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b92b0"/>
        <function-ref name="set" scoped="" ref="0x404b9390"/>
        <function-ref name="clr" scoped="" ref="0x404b9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x404c0210" loc="78:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x404c0210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c03e8"/>
        <function-ref name="isInput" scoped="" ref="0x404c04c8"/>
        <function-ref name="toggle" scoped="" ref="0x404c05a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404c0688"/>
        <function-ref name="get" scoped="" ref="0x404c0768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c0848"/>
        <function-ref name="set" scoped="" ref="0x404c0928"/>
        <function-ref name="clr" scoped="" ref="0x404c0a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x404aa750" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x404aa750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404aa928"/>
        <function-ref name="isInput" scoped="" ref="0x404aaa08"/>
        <function-ref name="toggle" scoped="" ref="0x404aaae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404aabc8"/>
        <function-ref name="get" scoped="" ref="0x404aaca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404aad88"/>
        <function-ref name="set" scoped="" ref="0x404aae68"/>
        <function-ref name="clr" scoped="" ref="0x404b7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x404b50a0" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x404b50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b5278"/>
        <function-ref name="isInput" scoped="" ref="0x404b5358"/>
        <function-ref name="toggle" scoped="" ref="0x404b5438"/>
        <function-ref name="isOutput" scoped="" ref="0x404b5518"/>
        <function-ref name="get" scoped="" ref="0x404b55f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b56d8"/>
        <function-ref name="set" scoped="" ref="0x404b57b8"/>
        <function-ref name="clr" scoped="" ref="0x404b5898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x404bd750" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x404bd750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bd928"/>
        <function-ref name="isInput" scoped="" ref="0x404bda08"/>
        <function-ref name="toggle" scoped="" ref="0x404bdae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404bdbc8"/>
        <function-ref name="get" scoped="" ref="0x404bdca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bdd88"/>
        <function-ref name="set" scoped="" ref="0x404bde68"/>
        <function-ref name="clr" scoped="" ref="0x404bc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x404ad3d0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x404ad3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ad5a8"/>
        <function-ref name="isInput" scoped="" ref="0x404ad688"/>
        <function-ref name="toggle" scoped="" ref="0x404ad768"/>
        <function-ref name="isOutput" scoped="" ref="0x404ad848"/>
        <function-ref name="get" scoped="" ref="0x404ad928"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ada08"/>
        <function-ref name="set" scoped="" ref="0x404adae8"/>
        <function-ref name="clr" scoped="" ref="0x404adbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x404b3010" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x404b3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b31e8"/>
        <function-ref name="isInput" scoped="" ref="0x404b32c8"/>
        <function-ref name="toggle" scoped="" ref="0x404b33a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b3488"/>
        <function-ref name="get" scoped="" ref="0x404b3568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b3648"/>
        <function-ref name="set" scoped="" ref="0x404b3728"/>
        <function-ref name="clr" scoped="" ref="0x404b3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x404bb670" loc="64:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x404bb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bb948"/>
        <function-ref name="isInput" scoped="" ref="0x404bba28"/>
        <function-ref name="toggle" scoped="" ref="0x404bbb08"/>
        <function-ref name="isOutput" scoped="" ref="0x404bbbe8"/>
        <function-ref name="get" scoped="" ref="0x404bbcc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bbda8"/>
        <function-ref name="set" scoped="" ref="0x404bbe88"/>
        <function-ref name="clr" scoped="" ref="0x404ba010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x404c5a98" loc="69:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x404c5a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c5c70"/>
        <function-ref name="isInput" scoped="" ref="0x404c5d50"/>
        <function-ref name="toggle" scoped="" ref="0x404c5e30"/>
        <function-ref name="isOutput" scoped="" ref="0x404c5f10"/>
        <function-ref name="get" scoped="" ref="0x404c4010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c40f0"/>
        <function-ref name="set" scoped="" ref="0x404c41d0"/>
        <function-ref name="clr" scoped="" ref="0x404c42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x404b24b0" loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x404b24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b2688"/>
        <function-ref name="isInput" scoped="" ref="0x404b2768"/>
        <function-ref name="toggle" scoped="" ref="0x404b2848"/>
        <function-ref name="isOutput" scoped="" ref="0x404b2928"/>
        <function-ref name="get" scoped="" ref="0x404b2a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b2ae8"/>
        <function-ref name="set" scoped="" ref="0x404b2bc8"/>
        <function-ref name="clr" scoped="" ref="0x404b2ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x404c2cf0" loc="76:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x404c2cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c2ec8"/>
        <function-ref name="isInput" scoped="" ref="0x404c1010"/>
        <function-ref name="toggle" scoped="" ref="0x404c10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404c11d0"/>
        <function-ref name="get" scoped="" ref="0x404c12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c1390"/>
        <function-ref name="set" scoped="" ref="0x404c1470"/>
        <function-ref name="clr" scoped="" ref="0x404c1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x404ab2f0" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x404ab2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ab4c8"/>
        <function-ref name="isInput" scoped="" ref="0x404ab5a8"/>
        <function-ref name="toggle" scoped="" ref="0x404ab688"/>
        <function-ref name="isOutput" scoped="" ref="0x404ab768"/>
        <function-ref name="get" scoped="" ref="0x404ab848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ab928"/>
        <function-ref name="set" scoped="" ref="0x404aba08"/>
        <function-ref name="clr" scoped="" ref="0x404abae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404ea030" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404ea030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ea208"/>
        <function-ref name="isInput" scoped="" ref="0x404ea2e8"/>
        <function-ref name="toggle" scoped="" ref="0x404ea3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ea4a8"/>
        <function-ref name="get" scoped="" ref="0x404ea588"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ea668"/>
        <function-ref name="set" scoped="" ref="0x404ea748"/>
        <function-ref name="clr" scoped="" ref="0x404ea828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404e9c88" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404e9c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e9e60"/>
        <function-ref name="isInput" scoped="" ref="0x404f6010"/>
        <function-ref name="toggle" scoped="" ref="0x404f60f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404f61d0"/>
        <function-ref name="get" scoped="" ref="0x404f62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f6390"/>
        <function-ref name="set" scoped="" ref="0x404f6470"/>
        <function-ref name="clr" scoped="" ref="0x404f6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404eccc8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404eccc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ecea0"/>
        <function-ref name="isInput" scoped="" ref="0x404eb010"/>
        <function-ref name="toggle" scoped="" ref="0x404eb0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404eb1d0"/>
        <function-ref name="get" scoped="" ref="0x404eb2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404eb390"/>
        <function-ref name="set" scoped="" ref="0x404eb470"/>
        <function-ref name="clr" scoped="" ref="0x404eb550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404ea988" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404ea988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404eab60"/>
        <function-ref name="isInput" scoped="" ref="0x404eac40"/>
        <function-ref name="toggle" scoped="" ref="0x404ead20"/>
        <function-ref name="isOutput" scoped="" ref="0x404eae00"/>
        <function-ref name="get" scoped="" ref="0x404eaee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e9010"/>
        <function-ref name="set" scoped="" ref="0x404e90f0"/>
        <function-ref name="clr" scoped="" ref="0x404e91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404f66b0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404f66b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f6888"/>
        <function-ref name="isInput" scoped="" ref="0x404f6968"/>
        <function-ref name="toggle" scoped="" ref="0x404f6a48"/>
        <function-ref name="isOutput" scoped="" ref="0x404f6b28"/>
        <function-ref name="get" scoped="" ref="0x404f6c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f6ce8"/>
        <function-ref name="set" scoped="" ref="0x404f6dc8"/>
        <function-ref name="clr" scoped="" ref="0x404f6ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404eb6b0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404eb6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404eb888"/>
        <function-ref name="isInput" scoped="" ref="0x404eb968"/>
        <function-ref name="toggle" scoped="" ref="0x404eba48"/>
        <function-ref name="isOutput" scoped="" ref="0x404ebb28"/>
        <function-ref name="get" scoped="" ref="0x404ebc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ebce8"/>
        <function-ref name="set" scoped="" ref="0x404ebdc8"/>
        <function-ref name="clr" scoped="" ref="0x404ebea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404e9330" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404e9330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e9508"/>
        <function-ref name="isInput" scoped="" ref="0x404e95e8"/>
        <function-ref name="toggle" scoped="" ref="0x404e96c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404e97a8"/>
        <function-ref name="get" scoped="" ref="0x404e9888"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e9968"/>
        <function-ref name="set" scoped="" ref="0x404e9a48"/>
        <function-ref name="clr" scoped="" ref="0x404e9b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404f5030" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404f5030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f5208"/>
        <function-ref name="isInput" scoped="" ref="0x404f52e8"/>
        <function-ref name="toggle" scoped="" ref="0x404f53c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404f54a8"/>
        <function-ref name="get" scoped="" ref="0x404f5588"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f5668"/>
        <function-ref name="set" scoped="" ref="0x404f5748"/>
        <function-ref name="clr" scoped="" ref="0x404f5828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40838458" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40838458"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40838630"/>
        <function-ref name="isInput" scoped="" ref="0x40838710"/>
        <function-ref name="toggle" scoped="" ref="0x408387f0"/>
        <function-ref name="isOutput" scoped="" ref="0x408388d0"/>
        <function-ref name="get" scoped="" ref="0x408389b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40838a90"/>
        <function-ref name="set" scoped="" ref="0x40838b70"/>
        <function-ref name="clr" scoped="" ref="0x40838c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40837e18" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40837e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40836010"/>
        <function-ref name="isInput" scoped="" ref="0x408360f0"/>
        <function-ref name="toggle" scoped="" ref="0x408361d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408362b0"/>
        <function-ref name="get" scoped="" ref="0x40836390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40836470"/>
        <function-ref name="set" scoped="" ref="0x40836550"/>
        <function-ref name="clr" scoped="" ref="0x40836630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408357f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408357f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408359d0"/>
        <function-ref name="isInput" scoped="" ref="0x40835ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40835b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40835c70"/>
        <function-ref name="get" scoped="" ref="0x40835d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40835e30"/>
        <function-ref name="set" scoped="" ref="0x40835f10"/>
        <function-ref name="clr" scoped="" ref="0x40834010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40833228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40833228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40833400"/>
        <function-ref name="isInput" scoped="" ref="0x408334e0"/>
        <function-ref name="toggle" scoped="" ref="0x408335c0"/>
        <function-ref name="isOutput" scoped="" ref="0x408336a0"/>
        <function-ref name="get" scoped="" ref="0x40833780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40833860"/>
        <function-ref name="set" scoped="" ref="0x40833940"/>
        <function-ref name="clr" scoped="" ref="0x40833a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40832c08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40832c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40832de0"/>
        <function-ref name="isInput" scoped="" ref="0x40832ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40831010"/>
        <function-ref name="isOutput" scoped="" ref="0x408310f0"/>
        <function-ref name="get" scoped="" ref="0x408311d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408312b0"/>
        <function-ref name="set" scoped="" ref="0x40831390"/>
        <function-ref name="clr" scoped="" ref="0x40831470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408306c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408306c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40830898"/>
        <function-ref name="isInput" scoped="" ref="0x40830978"/>
        <function-ref name="toggle" scoped="" ref="0x40830a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40830b38"/>
        <function-ref name="get" scoped="" ref="0x40830c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40830cf8"/>
        <function-ref name="set" scoped="" ref="0x40830dd8"/>
        <function-ref name="clr" scoped="" ref="0x40830eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4082d0b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4082d0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4082d288"/>
        <function-ref name="isInput" scoped="" ref="0x4082d368"/>
        <function-ref name="toggle" scoped="" ref="0x4082d448"/>
        <function-ref name="isOutput" scoped="" ref="0x4082d528"/>
        <function-ref name="get" scoped="" ref="0x4082d608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4082d6e8"/>
        <function-ref name="set" scoped="" ref="0x4082d7c8"/>
        <function-ref name="clr" scoped="" ref="0x4082d8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4082ca88" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4082ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4082cc60"/>
        <function-ref name="isInput" scoped="" ref="0x4082cd40"/>
        <function-ref name="toggle" scoped="" ref="0x4082ce20"/>
        <function-ref name="isOutput" scoped="" ref="0x4082cf00"/>
        <function-ref name="get" scoped="" ref="0x4082b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4082b0f0"/>
        <function-ref name="set" scoped="" ref="0x4082b1d0"/>
        <function-ref name="clr" scoped="" ref="0x4082b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404f0860" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404f0860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f0a38"/>
        <function-ref name="isInput" scoped="" ref="0x404f0b18"/>
        <function-ref name="toggle" scoped="" ref="0x404f0bf8"/>
        <function-ref name="isOutput" scoped="" ref="0x404f0cd8"/>
        <function-ref name="get" scoped="" ref="0x404f0db8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f0e98"/>
        <function-ref name="set" scoped="" ref="0x404fd010"/>
        <function-ref name="clr" scoped="" ref="0x404fd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404fc5d0" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404fc5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fc7a8"/>
        <function-ref name="isInput" scoped="" ref="0x404fc888"/>
        <function-ref name="toggle" scoped="" ref="0x404fc968"/>
        <function-ref name="isOutput" scoped="" ref="0x404fca48"/>
        <function-ref name="get" scoped="" ref="0x404fcb28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fcc08"/>
        <function-ref name="set" scoped="" ref="0x404fcce8"/>
        <function-ref name="clr" scoped="" ref="0x404fcdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404f25a0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404f25a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f2778"/>
        <function-ref name="isInput" scoped="" ref="0x404f2858"/>
        <function-ref name="toggle" scoped="" ref="0x404f2938"/>
        <function-ref name="isOutput" scoped="" ref="0x404f2a18"/>
        <function-ref name="get" scoped="" ref="0x404f2af8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f2bd8"/>
        <function-ref name="set" scoped="" ref="0x404f2cb8"/>
        <function-ref name="clr" scoped="" ref="0x404f2d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404fd250" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404fd250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fd428"/>
        <function-ref name="isInput" scoped="" ref="0x404fd508"/>
        <function-ref name="toggle" scoped="" ref="0x404fd5e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404fd6c8"/>
        <function-ref name="get" scoped="" ref="0x404fd7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fd888"/>
        <function-ref name="set" scoped="" ref="0x404fd968"/>
        <function-ref name="clr" scoped="" ref="0x404fda48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404fcf28" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404fcf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fb110"/>
        <function-ref name="isInput" scoped="" ref="0x404fb1f0"/>
        <function-ref name="toggle" scoped="" ref="0x404fb2d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404fb3b0"/>
        <function-ref name="get" scoped="" ref="0x404fb490"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fb570"/>
        <function-ref name="set" scoped="" ref="0x404fb650"/>
        <function-ref name="clr" scoped="" ref="0x404fb730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404f2ef8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404f2ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f00e0"/>
        <function-ref name="isInput" scoped="" ref="0x404f01c0"/>
        <function-ref name="toggle" scoped="" ref="0x404f02a0"/>
        <function-ref name="isOutput" scoped="" ref="0x404f0380"/>
        <function-ref name="get" scoped="" ref="0x404f0460"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f0540"/>
        <function-ref name="set" scoped="" ref="0x404f0620"/>
        <function-ref name="clr" scoped="" ref="0x404f0700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404fdba8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404fdba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fdd80"/>
        <function-ref name="isInput" scoped="" ref="0x404fde60"/>
        <function-ref name="toggle" scoped="" ref="0x404fc010"/>
        <function-ref name="isOutput" scoped="" ref="0x404fc0f0"/>
        <function-ref name="get" scoped="" ref="0x404fc1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fc2b0"/>
        <function-ref name="set" scoped="" ref="0x404fc390"/>
        <function-ref name="clr" scoped="" ref="0x404fc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404fb890" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404fb890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fba68"/>
        <function-ref name="isInput" scoped="" ref="0x404fbb48"/>
        <function-ref name="toggle" scoped="" ref="0x404fbc28"/>
        <function-ref name="isOutput" scoped="" ref="0x404fbd08"/>
        <function-ref name="get" scoped="" ref="0x404fbde8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fbec8"/>
        <function-ref name="set" scoped="" ref="0x404fa010"/>
        <function-ref name="clr" scoped="" ref="0x404fa0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40857de8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40857de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4086f010"/>
        <function-ref name="isInput" scoped="" ref="0x4086f0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4086f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4086f2b0"/>
        <function-ref name="get" scoped="" ref="0x4086f390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4086f470"/>
        <function-ref name="set" scoped="" ref="0x4086f550"/>
        <function-ref name="clr" scoped="" ref="0x4086f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4086e7f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4086e7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4086e9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4086eab0"/>
        <function-ref name="toggle" scoped="" ref="0x4086eb90"/>
        <function-ref name="isOutput" scoped="" ref="0x4086ec70"/>
        <function-ref name="get" scoped="" ref="0x4086ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4086ee30"/>
        <function-ref name="set" scoped="" ref="0x4086ef10"/>
        <function-ref name="clr" scoped="" ref="0x4086d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4086c228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4086c228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4086c400"/>
        <function-ref name="isInput" scoped="" ref="0x4086c4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4086c5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4086c6a0"/>
        <function-ref name="get" scoped="" ref="0x4086c780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4086c860"/>
        <function-ref name="set" scoped="" ref="0x4086c940"/>
        <function-ref name="clr" scoped="" ref="0x4086ca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4086bc08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4086bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4086bde0"/>
        <function-ref name="isInput" scoped="" ref="0x4086bec0"/>
        <function-ref name="toggle" scoped="" ref="0x4086a010"/>
        <function-ref name="isOutput" scoped="" ref="0x4086a0f0"/>
        <function-ref name="get" scoped="" ref="0x4086a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4086a2b0"/>
        <function-ref name="set" scoped="" ref="0x4086a390"/>
        <function-ref name="clr" scoped="" ref="0x4086a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408696c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408696c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40869898"/>
        <function-ref name="isInput" scoped="" ref="0x40869978"/>
        <function-ref name="toggle" scoped="" ref="0x40869a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40869b38"/>
        <function-ref name="get" scoped="" ref="0x40869c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40869cf8"/>
        <function-ref name="set" scoped="" ref="0x40869dd8"/>
        <function-ref name="clr" scoped="" ref="0x40869eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408670b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408670b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40867288"/>
        <function-ref name="isInput" scoped="" ref="0x40867368"/>
        <function-ref name="toggle" scoped="" ref="0x40867448"/>
        <function-ref name="isOutput" scoped="" ref="0x40867528"/>
        <function-ref name="get" scoped="" ref="0x40867608"/>
        <function-ref name="makeOutput" scoped="" ref="0x408676e8"/>
        <function-ref name="set" scoped="" ref="0x408677c8"/>
        <function-ref name="clr" scoped="" ref="0x408678a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40866a88" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40866a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40866c60"/>
        <function-ref name="isInput" scoped="" ref="0x40866d40"/>
        <function-ref name="toggle" scoped="" ref="0x40866e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40866f00"/>
        <function-ref name="get" scoped="" ref="0x40865010"/>
        <function-ref name="makeOutput" scoped="" ref="0x408650f0"/>
        <function-ref name="set" scoped="" ref="0x408651d0"/>
        <function-ref name="clr" scoped="" ref="0x408652b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40864538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40864538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40864710"/>
        <function-ref name="isInput" scoped="" ref="0x408647f0"/>
        <function-ref name="toggle" scoped="" ref="0x408648d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408649b0"/>
        <function-ref name="get" scoped="" ref="0x40864a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40864b70"/>
        <function-ref name="set" scoped="" ref="0x40864c50"/>
        <function-ref name="clr" scoped="" ref="0x40864d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40504170" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40504170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40504348"/>
        <function-ref name="isInput" scoped="" ref="0x40504428"/>
        <function-ref name="toggle" scoped="" ref="0x40504508"/>
        <function-ref name="isOutput" scoped="" ref="0x405045e8"/>
        <function-ref name="get" scoped="" ref="0x405046c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405047a8"/>
        <function-ref name="set" scoped="" ref="0x40504888"/>
        <function-ref name="clr" scoped="" ref="0x40504968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40503e48" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40503e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40501050"/>
        <function-ref name="isInput" scoped="" ref="0x40501130"/>
        <function-ref name="toggle" scoped="" ref="0x40501210"/>
        <function-ref name="isOutput" scoped="" ref="0x405012f0"/>
        <function-ref name="get" scoped="" ref="0x405013d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405014b0"/>
        <function-ref name="set" scoped="" ref="0x40501590"/>
        <function-ref name="clr" scoped="" ref="0x40501670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404f8e78" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404f8e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f7070"/>
        <function-ref name="isInput" scoped="" ref="0x404f7150"/>
        <function-ref name="toggle" scoped="" ref="0x404f7230"/>
        <function-ref name="isOutput" scoped="" ref="0x404f7310"/>
        <function-ref name="get" scoped="" ref="0x404f73f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f74d0"/>
        <function-ref name="set" scoped="" ref="0x404f75b0"/>
        <function-ref name="clr" scoped="" ref="0x404f7690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40504ac8" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40504ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40504ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40504d80"/>
        <function-ref name="toggle" scoped="" ref="0x40504e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40503010"/>
        <function-ref name="get" scoped="" ref="0x405030f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405031d0"/>
        <function-ref name="set" scoped="" ref="0x405032b0"/>
        <function-ref name="clr" scoped="" ref="0x40503390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405017d0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405017d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405019a8"/>
        <function-ref name="isInput" scoped="" ref="0x40501a88"/>
        <function-ref name="toggle" scoped="" ref="0x40501b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40501c48"/>
        <function-ref name="get" scoped="" ref="0x40501d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40501e08"/>
        <function-ref name="set" scoped="" ref="0x40501ee8"/>
        <function-ref name="clr" scoped="" ref="0x40500010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404f77f0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404f77f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f79c8"/>
        <function-ref name="isInput" scoped="" ref="0x404f7aa8"/>
        <function-ref name="toggle" scoped="" ref="0x404f7b88"/>
        <function-ref name="isOutput" scoped="" ref="0x404f7c68"/>
        <function-ref name="get" scoped="" ref="0x404f7d48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f7e28"/>
        <function-ref name="set" scoped="" ref="0x404f7f08"/>
        <function-ref name="clr" scoped="" ref="0x40504010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x405034f0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x405034f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405036c8"/>
        <function-ref name="isInput" scoped="" ref="0x405037a8"/>
        <function-ref name="toggle" scoped="" ref="0x40503888"/>
        <function-ref name="isOutput" scoped="" ref="0x40503968"/>
        <function-ref name="get" scoped="" ref="0x40503a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40503b28"/>
        <function-ref name="set" scoped="" ref="0x40503c08"/>
        <function-ref name="clr" scoped="" ref="0x40503ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40500170" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40500170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40500348"/>
        <function-ref name="isInput" scoped="" ref="0x40500428"/>
        <function-ref name="toggle" scoped="" ref="0x40500508"/>
        <function-ref name="isOutput" scoped="" ref="0x405005e8"/>
        <function-ref name="get" scoped="" ref="0x405006c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405007a8"/>
        <function-ref name="set" scoped="" ref="0x40500888"/>
        <function-ref name="clr" scoped="" ref="0x40500968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408a8938" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408a8938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408a8b10"/>
        <function-ref name="isInput" scoped="" ref="0x408a8bf0"/>
        <function-ref name="toggle" scoped="" ref="0x408a8cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x408a8db0"/>
        <function-ref name="get" scoped="" ref="0x408a8e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x408a7010"/>
        <function-ref name="set" scoped="" ref="0x408a70f0"/>
        <function-ref name="clr" scoped="" ref="0x408a71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408a63b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408a63b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408a6588"/>
        <function-ref name="isInput" scoped="" ref="0x408a6668"/>
        <function-ref name="toggle" scoped="" ref="0x408a6748"/>
        <function-ref name="isOutput" scoped="" ref="0x408a6828"/>
        <function-ref name="get" scoped="" ref="0x408a6908"/>
        <function-ref name="makeOutput" scoped="" ref="0x408a69e8"/>
        <function-ref name="set" scoped="" ref="0x408a6ac8"/>
        <function-ref name="clr" scoped="" ref="0x408a6ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408a5d70" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408a5d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408a4010"/>
        <function-ref name="isInput" scoped="" ref="0x408a40f0"/>
        <function-ref name="toggle" scoped="" ref="0x408a41d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408a42b0"/>
        <function-ref name="get" scoped="" ref="0x408a4390"/>
        <function-ref name="makeOutput" scoped="" ref="0x408a4470"/>
        <function-ref name="set" scoped="" ref="0x408a4550"/>
        <function-ref name="clr" scoped="" ref="0x408a4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408a37f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408a37f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408a39d0"/>
        <function-ref name="isInput" scoped="" ref="0x408a3ab0"/>
        <function-ref name="toggle" scoped="" ref="0x408a3b90"/>
        <function-ref name="isOutput" scoped="" ref="0x408a3c70"/>
        <function-ref name="get" scoped="" ref="0x408a3d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x408a3e30"/>
        <function-ref name="set" scoped="" ref="0x408a3f10"/>
        <function-ref name="clr" scoped="" ref="0x408a2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408a1228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408a1228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408a1400"/>
        <function-ref name="isInput" scoped="" ref="0x408a14e0"/>
        <function-ref name="toggle" scoped="" ref="0x408a15c0"/>
        <function-ref name="isOutput" scoped="" ref="0x408a16a0"/>
        <function-ref name="get" scoped="" ref="0x408a1780"/>
        <function-ref name="makeOutput" scoped="" ref="0x408a1860"/>
        <function-ref name="set" scoped="" ref="0x408a1940"/>
        <function-ref name="clr" scoped="" ref="0x408a1a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4089fc08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4089fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4089fde0"/>
        <function-ref name="isInput" scoped="" ref="0x4089fec0"/>
        <function-ref name="toggle" scoped="" ref="0x4089e010"/>
        <function-ref name="isOutput" scoped="" ref="0x4089e0f0"/>
        <function-ref name="get" scoped="" ref="0x4089e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4089e2b0"/>
        <function-ref name="set" scoped="" ref="0x4089e390"/>
        <function-ref name="clr" scoped="" ref="0x4089e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4089d6c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4089d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4089d898"/>
        <function-ref name="isInput" scoped="" ref="0x4089d978"/>
        <function-ref name="toggle" scoped="" ref="0x4089da58"/>
        <function-ref name="isOutput" scoped="" ref="0x4089db38"/>
        <function-ref name="get" scoped="" ref="0x4089dc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4089dcf8"/>
        <function-ref name="set" scoped="" ref="0x4089ddd8"/>
        <function-ref name="clr" scoped="" ref="0x4089deb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4089b0b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4089b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4089b288"/>
        <function-ref name="isInput" scoped="" ref="0x4089b368"/>
        <function-ref name="toggle" scoped="" ref="0x4089b448"/>
        <function-ref name="isOutput" scoped="" ref="0x4089b528"/>
        <function-ref name="get" scoped="" ref="0x4089b608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4089b6e8"/>
        <function-ref name="set" scoped="" ref="0x4089b7c8"/>
        <function-ref name="clr" scoped="" ref="0x4089b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4050a9e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4050a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050abc0"/>
        <function-ref name="isInput" scoped="" ref="0x4050aca0"/>
        <function-ref name="toggle" scoped="" ref="0x4050ad80"/>
        <function-ref name="isOutput" scoped="" ref="0x4050ae60"/>
        <function-ref name="get" scoped="" ref="0x40509010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405090f0"/>
        <function-ref name="set" scoped="" ref="0x405091d0"/>
        <function-ref name="clr" scoped="" ref="0x405092b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40508790" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40508790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40508968"/>
        <function-ref name="isInput" scoped="" ref="0x40508a48"/>
        <function-ref name="toggle" scoped="" ref="0x40508b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40508c08"/>
        <function-ref name="get" scoped="" ref="0x40508ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40508dc8"/>
        <function-ref name="set" scoped="" ref="0x40508ea8"/>
        <function-ref name="clr" scoped="" ref="0x40507010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4050b6f8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4050b6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050b8d0"/>
        <function-ref name="isInput" scoped="" ref="0x4050b9b0"/>
        <function-ref name="toggle" scoped="" ref="0x4050ba90"/>
        <function-ref name="isOutput" scoped="" ref="0x4050bb70"/>
        <function-ref name="get" scoped="" ref="0x4050bc50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050bd30"/>
        <function-ref name="set" scoped="" ref="0x4050be10"/>
        <function-ref name="clr" scoped="" ref="0x4050bef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40509410" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40509410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405095e8"/>
        <function-ref name="isInput" scoped="" ref="0x405096c8"/>
        <function-ref name="toggle" scoped="" ref="0x405097a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40509888"/>
        <function-ref name="get" scoped="" ref="0x40509968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40509a48"/>
        <function-ref name="set" scoped="" ref="0x40509b28"/>
        <function-ref name="clr" scoped="" ref="0x40509c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40507170" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40507170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40507348"/>
        <function-ref name="isInput" scoped="" ref="0x40507428"/>
        <function-ref name="toggle" scoped="" ref="0x40507508"/>
        <function-ref name="isOutput" scoped="" ref="0x405075e8"/>
        <function-ref name="get" scoped="" ref="0x405076c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405077a8"/>
        <function-ref name="set" scoped="" ref="0x40507888"/>
        <function-ref name="clr" scoped="" ref="0x40507968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4050a090" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4050a090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050a268"/>
        <function-ref name="isInput" scoped="" ref="0x4050a348"/>
        <function-ref name="toggle" scoped="" ref="0x4050a428"/>
        <function-ref name="isOutput" scoped="" ref="0x4050a508"/>
        <function-ref name="get" scoped="" ref="0x4050a5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050a6c8"/>
        <function-ref name="set" scoped="" ref="0x4050a7a8"/>
        <function-ref name="clr" scoped="" ref="0x4050a888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40509d68" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40509d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40508010"/>
        <function-ref name="isInput" scoped="" ref="0x405080f0"/>
        <function-ref name="toggle" scoped="" ref="0x405081d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405082b0"/>
        <function-ref name="get" scoped="" ref="0x40508390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40508470"/>
        <function-ref name="set" scoped="" ref="0x40508550"/>
        <function-ref name="clr" scoped="" ref="0x40508630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40507ac8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40507ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40507ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40507d80"/>
        <function-ref name="toggle" scoped="" ref="0x40507e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40506010"/>
        <function-ref name="get" scoped="" ref="0x405060f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405061d0"/>
        <function-ref name="set" scoped="" ref="0x405062b0"/>
        <function-ref name="clr" scoped="" ref="0x40506390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408c8538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408c8538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408c8710"/>
        <function-ref name="isInput" scoped="" ref="0x408c87f0"/>
        <function-ref name="toggle" scoped="" ref="0x408c88d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408c89b0"/>
        <function-ref name="get" scoped="" ref="0x408c8a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x408c8b70"/>
        <function-ref name="set" scoped="" ref="0x408c8c50"/>
        <function-ref name="clr" scoped="" ref="0x408c8d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408e4010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408e4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408e41e8"/>
        <function-ref name="isInput" scoped="" ref="0x408e42c8"/>
        <function-ref name="toggle" scoped="" ref="0x408e43a8"/>
        <function-ref name="isOutput" scoped="" ref="0x408e4488"/>
        <function-ref name="get" scoped="" ref="0x408e4568"/>
        <function-ref name="makeOutput" scoped="" ref="0x408e4648"/>
        <function-ref name="set" scoped="" ref="0x408e4728"/>
        <function-ref name="clr" scoped="" ref="0x408e4808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408e39e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408e39e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408e3bc0"/>
        <function-ref name="isInput" scoped="" ref="0x408e3ca0"/>
        <function-ref name="toggle" scoped="" ref="0x408e3d80"/>
        <function-ref name="isOutput" scoped="" ref="0x408e3e60"/>
        <function-ref name="get" scoped="" ref="0x408e2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x408e20f0"/>
        <function-ref name="set" scoped="" ref="0x408e21d0"/>
        <function-ref name="clr" scoped="" ref="0x408e22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408e1538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408e1538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408e1710"/>
        <function-ref name="isInput" scoped="" ref="0x408e17f0"/>
        <function-ref name="toggle" scoped="" ref="0x408e18d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408e19b0"/>
        <function-ref name="get" scoped="" ref="0x408e1a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x408e1b70"/>
        <function-ref name="set" scoped="" ref="0x408e1c50"/>
        <function-ref name="clr" scoped="" ref="0x408e1d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408df010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408df010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408df1e8"/>
        <function-ref name="isInput" scoped="" ref="0x408df2c8"/>
        <function-ref name="toggle" scoped="" ref="0x408df3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x408df488"/>
        <function-ref name="get" scoped="" ref="0x408df568"/>
        <function-ref name="makeOutput" scoped="" ref="0x408df648"/>
        <function-ref name="set" scoped="" ref="0x408df728"/>
        <function-ref name="clr" scoped="" ref="0x408df808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408de9e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408de9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408debc0"/>
        <function-ref name="isInput" scoped="" ref="0x408deca0"/>
        <function-ref name="toggle" scoped="" ref="0x408ded80"/>
        <function-ref name="isOutput" scoped="" ref="0x408dee60"/>
        <function-ref name="get" scoped="" ref="0x408dd010"/>
        <function-ref name="makeOutput" scoped="" ref="0x408dd0f0"/>
        <function-ref name="set" scoped="" ref="0x408dd1d0"/>
        <function-ref name="clr" scoped="" ref="0x408dd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408dc538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408dc538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408dc710"/>
        <function-ref name="isInput" scoped="" ref="0x408dc7f0"/>
        <function-ref name="toggle" scoped="" ref="0x408dc8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408dc9b0"/>
        <function-ref name="get" scoped="" ref="0x408dca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x408dcb70"/>
        <function-ref name="set" scoped="" ref="0x408dcc50"/>
        <function-ref name="clr" scoped="" ref="0x408dcd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x408da010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x408da010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408da1e8"/>
        <function-ref name="isInput" scoped="" ref="0x408da2c8"/>
        <function-ref name="toggle" scoped="" ref="0x408da3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x408da488"/>
        <function-ref name="get" scoped="" ref="0x408da568"/>
        <function-ref name="makeOutput" scoped="" ref="0x408da648"/>
        <function-ref name="set" scoped="" ref="0x408da728"/>
        <function-ref name="clr" scoped="" ref="0x408da808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4050f410" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4050f410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050f5e8"/>
        <function-ref name="isInput" scoped="" ref="0x4050f6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4050f7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4050f888"/>
        <function-ref name="get" scoped="" ref="0x4050f968"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050fa48"/>
        <function-ref name="set" scoped="" ref="0x4050fb28"/>
        <function-ref name="clr" scoped="" ref="0x4050fc08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4050d170" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4050d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050d348"/>
        <function-ref name="isInput" scoped="" ref="0x4050d428"/>
        <function-ref name="toggle" scoped="" ref="0x4050d508"/>
        <function-ref name="isOutput" scoped="" ref="0x4050d5e8"/>
        <function-ref name="get" scoped="" ref="0x4050d6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050d7a8"/>
        <function-ref name="set" scoped="" ref="0x4050d888"/>
        <function-ref name="clr" scoped="" ref="0x4050d968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40510128" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40510128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40510300"/>
        <function-ref name="isInput" scoped="" ref="0x405103e0"/>
        <function-ref name="toggle" scoped="" ref="0x405104c0"/>
        <function-ref name="isOutput" scoped="" ref="0x405105a0"/>
        <function-ref name="get" scoped="" ref="0x40510680"/>
        <function-ref name="makeOutput" scoped="" ref="0x40510760"/>
        <function-ref name="set" scoped="" ref="0x40510840"/>
        <function-ref name="clr" scoped="" ref="0x40510920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4050fd68" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4050fd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050e010"/>
        <function-ref name="isInput" scoped="" ref="0x4050e0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4050e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4050e2b0"/>
        <function-ref name="get" scoped="" ref="0x4050e390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050e470"/>
        <function-ref name="set" scoped="" ref="0x4050e550"/>
        <function-ref name="clr" scoped="" ref="0x4050e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4050dac8" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4050dac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050dca0"/>
        <function-ref name="isInput" scoped="" ref="0x4050dd80"/>
        <function-ref name="toggle" scoped="" ref="0x4050de60"/>
        <function-ref name="isOutput" scoped="" ref="0x4050c010"/>
        <function-ref name="get" scoped="" ref="0x4050c0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050c1d0"/>
        <function-ref name="set" scoped="" ref="0x4050c2b0"/>
        <function-ref name="clr" scoped="" ref="0x4050c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40510a80" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40510a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40510c58"/>
        <function-ref name="isInput" scoped="" ref="0x40510d38"/>
        <function-ref name="toggle" scoped="" ref="0x40510e18"/>
        <function-ref name="isOutput" scoped="" ref="0x40510ef8"/>
        <function-ref name="get" scoped="" ref="0x4050f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050f0f0"/>
        <function-ref name="set" scoped="" ref="0x4050f1d0"/>
        <function-ref name="clr" scoped="" ref="0x4050f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4050e790" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4050e790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050e968"/>
        <function-ref name="isInput" scoped="" ref="0x4050ea48"/>
        <function-ref name="toggle" scoped="" ref="0x4050eb28"/>
        <function-ref name="isOutput" scoped="" ref="0x4050ec08"/>
        <function-ref name="get" scoped="" ref="0x4050ece8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050edc8"/>
        <function-ref name="set" scoped="" ref="0x4050eea8"/>
        <function-ref name="clr" scoped="" ref="0x4050d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4050c4f0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4050c4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050c6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4050c7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4050c888"/>
        <function-ref name="isOutput" scoped="" ref="0x4050c968"/>
        <function-ref name="get" scoped="" ref="0x4050ca48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050cb28"/>
        <function-ref name="set" scoped="" ref="0x4050cc08"/>
        <function-ref name="clr" scoped="" ref="0x4050cce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40908418" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40908418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409085f0"/>
        <function-ref name="isInput" scoped="" ref="0x409086d0"/>
        <function-ref name="toggle" scoped="" ref="0x409087b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40908890"/>
        <function-ref name="get" scoped="" ref="0x40908970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40908a50"/>
        <function-ref name="set" scoped="" ref="0x40908b30"/>
        <function-ref name="clr" scoped="" ref="0x40908c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40907de0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40907de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40906010"/>
        <function-ref name="isInput" scoped="" ref="0x409060f0"/>
        <function-ref name="toggle" scoped="" ref="0x409061d0"/>
        <function-ref name="isOutput" scoped="" ref="0x409062b0"/>
        <function-ref name="get" scoped="" ref="0x40906390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40906470"/>
        <function-ref name="set" scoped="" ref="0x40906550"/>
        <function-ref name="clr" scoped="" ref="0x40906630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x409057f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x409057f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409059d0"/>
        <function-ref name="isInput" scoped="" ref="0x40905ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40905b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40905c70"/>
        <function-ref name="get" scoped="" ref="0x40905d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40905e30"/>
        <function-ref name="set" scoped="" ref="0x40905f10"/>
        <function-ref name="clr" scoped="" ref="0x40903010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40920228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40920228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40920400"/>
        <function-ref name="isInput" scoped="" ref="0x409204e0"/>
        <function-ref name="toggle" scoped="" ref="0x409205c0"/>
        <function-ref name="isOutput" scoped="" ref="0x409206a0"/>
        <function-ref name="get" scoped="" ref="0x40920780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40920860"/>
        <function-ref name="set" scoped="" ref="0x40920940"/>
        <function-ref name="clr" scoped="" ref="0x40920a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4091fc08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4091fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4091fde0"/>
        <function-ref name="isInput" scoped="" ref="0x4091fec0"/>
        <function-ref name="toggle" scoped="" ref="0x4091e010"/>
        <function-ref name="isOutput" scoped="" ref="0x4091e0f0"/>
        <function-ref name="get" scoped="" ref="0x4091e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4091e2b0"/>
        <function-ref name="set" scoped="" ref="0x4091e390"/>
        <function-ref name="clr" scoped="" ref="0x4091e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4091d6c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4091d6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4091d898"/>
        <function-ref name="isInput" scoped="" ref="0x4091d978"/>
        <function-ref name="toggle" scoped="" ref="0x4091da58"/>
        <function-ref name="isOutput" scoped="" ref="0x4091db38"/>
        <function-ref name="get" scoped="" ref="0x4091dc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4091dcf8"/>
        <function-ref name="set" scoped="" ref="0x4091ddd8"/>
        <function-ref name="clr" scoped="" ref="0x4091deb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4091b0b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4091b0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4091b288"/>
        <function-ref name="isInput" scoped="" ref="0x4091b368"/>
        <function-ref name="toggle" scoped="" ref="0x4091b448"/>
        <function-ref name="isOutput" scoped="" ref="0x4091b528"/>
        <function-ref name="get" scoped="" ref="0x4091b608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4091b6e8"/>
        <function-ref name="set" scoped="" ref="0x4091b7c8"/>
        <function-ref name="clr" scoped="" ref="0x4091b8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4091aa88" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4091aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4091ac60"/>
        <function-ref name="isInput" scoped="" ref="0x4091ad40"/>
        <function-ref name="toggle" scoped="" ref="0x4091ae20"/>
        <function-ref name="isOutput" scoped="" ref="0x4091af00"/>
        <function-ref name="get" scoped="" ref="0x40919010"/>
        <function-ref name="makeOutput" scoped="" ref="0x409190f0"/>
        <function-ref name="set" scoped="" ref="0x409191d0"/>
        <function-ref name="clr" scoped="" ref="0x409192b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403e2218" loc="88:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403e2218"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403e23f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x403e6560" loc="89:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x403e6560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x403e6738"/>
        <function-ref name="led0Toggle" scoped="" ref="0x403e6818"/>
        <function-ref name="led1On" scoped="" ref="0x403e68f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x403e69d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x403e6ab8"/>
        <function-ref name="get" scoped="" ref="0x403e6b98"/>
        <function-ref name="led1Off" scoped="" ref="0x403e6c78"/>
        <function-ref name="led2Off" scoped="" ref="0x403db010"/>
        <function-ref name="set" scoped="" ref="0x403e6d58"/>
        <function-ref name="led0On" scoped="" ref="0x403e6e38"/>
        <function-ref name="led2On" scoped="" ref="0x403e6f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x403dc470" loc="84:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403dc470"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403dc648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403e3148" loc="85:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403e3148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403e3320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x405388f0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x405388f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042f780"/>
            <typename><typedef-ref name="TMilli" ref="0x4042f948"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40537068"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40537558"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405372e0"/>
        <function-ref name="overflow" scoped="" ref="0x405377d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x405335f8" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x405335f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40524060"/>
            <typename><typedef-ref name="T62khz" ref="0x40524208"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40533d48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40542288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40542010"/>
        <function-ref name="overflow" scoped="" ref="0x40542500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40534320" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40534320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042f780"/>
            <typename><typedef-ref name="TMilli" ref="0x4042f948"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40534a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40533010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40534ce8"/>
        <function-ref name="overflow" scoped="" ref="0x40533288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4054f368" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4054f368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40524060"/>
            <typename><typedef-ref name="T62khz" ref="0x40524208"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4054fab8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4054e010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4054fd30"/>
        <function-ref name="overflow" scoped="" ref="0x4054e288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4054d440" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4054d440"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f77d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f77d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4054d618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4054d878" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4054d878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40524060"/>
            <typename><typedef-ref name="T62khz" ref="0x40524208"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4055c010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4055c500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4055c288"/>
        <function-ref name="overflow" scoped="" ref="0x4055c778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x4055ca48" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x4055ca48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4055a500"/>
        <function-ref name="test" scoped="" ref="0x4055b838"/>
        <function-ref name="get" scoped="" ref="0x4055b0a8"/>
        <function-ref name="reset" scoped="" ref="0x4055bab0"/>
        <function-ref name="getMode" scoped="" ref="0x4055a7a0"/>
        <function-ref name="overflow" scoped="" ref="0x4055b5c0"/>
        <function-ref name="isOn" scoped="" ref="0x4055a288"/>
        <function-ref name="set" scoped="" ref="0x4055b320"/>
        <function-ref name="start" scoped="" ref="0x4055bd28"/>
        <function-ref name="stop" scoped="" ref="0x4055a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconCapture" ref="0x405749a8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconCapture" scoped="" ref="0x405749a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40572418"/>
        <function-ref name="test" scoped="" ref="0x405737a0"/>
        <function-ref name="fired" scoped="" ref="0x40573528"/>
        <function-ref name="get" scoped="" ref="0x40573010"/>
        <function-ref name="reset" scoped="" ref="0x40573a18"/>
        <function-ref name="getMode" scoped="" ref="0x405726b8"/>
        <function-ref name="isOn" scoped="" ref="0x405721a0"/>
        <function-ref name="set" scoped="" ref="0x40573288"/>
        <function-ref name="start" scoped="" ref="0x40573c90"/>
        <function-ref name="stop" scoped="" ref="0x40573f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40568c90" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40568c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40564778"/>
        <function-ref name="test" scoped="" ref="0x40565a78"/>
        <function-ref name="get" scoped="" ref="0x405652e8"/>
        <function-ref name="reset" scoped="" ref="0x40565cf0"/>
        <function-ref name="getMode" scoped="" ref="0x40564a18"/>
        <function-ref name="overflow" scoped="" ref="0x40565800"/>
        <function-ref name="isOn" scoped="" ref="0x40564500"/>
        <function-ref name="set" scoped="" ref="0x40565560"/>
        <function-ref name="start" scoped="" ref="0x40564010"/>
        <function-ref name="stop" scoped="" ref="0x40564288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x40575860" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40575860"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405742e0"/>
        <function-ref name="test" scoped="" ref="0x4056b668"/>
        <function-ref name="fired" scoped="" ref="0x4056b3f0"/>
        <function-ref name="get" scoped="" ref="0x40575ea8"/>
        <function-ref name="reset" scoped="" ref="0x4056b8e0"/>
        <function-ref name="getMode" scoped="" ref="0x40574580"/>
        <function-ref name="isOn" scoped="" ref="0x40574068"/>
        <function-ref name="set" scoped="" ref="0x4056b150"/>
        <function-ref name="start" scoped="" ref="0x4056bb58"/>
        <function-ref name="stop" scoped="" ref="0x4056bdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40563470" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40563470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4056dee0"/>
        <function-ref name="test" scoped="" ref="0x4056d288"/>
        <function-ref name="fired" scoped="" ref="0x4056d010"/>
        <function-ref name="force" scoped="" ref="0x4056c438"/>
        <function-ref name="get" scoped="" ref="0x40563ab8"/>
        <function-ref name="reset" scoped="" ref="0x4056d500"/>
        <function-ref name="getMode" scoped="" ref="0x4056c1c0"/>
        <function-ref name="isOn" scoped="" ref="0x4056dc68"/>
        <function-ref name="set" scoped="" ref="0x40563d30"/>
        <function-ref name="start" scoped="" ref="0x4056d778"/>
        <function-ref name="stop" scoped="" ref="0x4056d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x4057c408" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x4057c408"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4057bee0"/>
        <function-ref name="test" scoped="" ref="0x4057b288"/>
        <function-ref name="fired" scoped="" ref="0x4057b010"/>
        <function-ref name="force" scoped="" ref="0x40589438"/>
        <function-ref name="get" scoped="" ref="0x4057ca50"/>
        <function-ref name="reset" scoped="" ref="0x4057b500"/>
        <function-ref name="getMode" scoped="" ref="0x405891c0"/>
        <function-ref name="isOn" scoped="" ref="0x4057bc68"/>
        <function-ref name="set" scoped="" ref="0x4057ccc8"/>
        <function-ref name="start" scoped="" ref="0x4057b778"/>
        <function-ref name="stop" scoped="" ref="0x4057b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconCapture" ref="0x40590158" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconCapture" scoped="" ref="0x40590158"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4058fc68"/>
        <function-ref name="test" scoped="" ref="0x4058f010"/>
        <function-ref name="fired" scoped="" ref="0x40590cb8"/>
        <function-ref name="get" scoped="" ref="0x405907a0"/>
        <function-ref name="reset" scoped="" ref="0x4058f288"/>
        <function-ref name="getMode" scoped="" ref="0x4058ff08"/>
        <function-ref name="isOn" scoped="" ref="0x4058f9f0"/>
        <function-ref name="set" scoped="" ref="0x40590a18"/>
        <function-ref name="start" scoped="" ref="0x4058f500"/>
        <function-ref name="stop" scoped="" ref="0x4058f778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x4058e1e0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4058e1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4058e3b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40589830" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40589830"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405872c0"/>
        <function-ref name="test" scoped="" ref="0x40588628"/>
        <function-ref name="fired" scoped="" ref="0x405883b0"/>
        <function-ref name="force" scoped="" ref="0x405877d8"/>
        <function-ref name="get" scoped="" ref="0x40589e78"/>
        <function-ref name="reset" scoped="" ref="0x405888a0"/>
        <function-ref name="getMode" scoped="" ref="0x40587560"/>
        <function-ref name="isOn" scoped="" ref="0x40587048"/>
        <function-ref name="set" scoped="" ref="0x40588110"/>
        <function-ref name="start" scoped="" ref="0x40588b18"/>
        <function-ref name="stop" scoped="" ref="0x40588d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4057f278" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4057f278"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4057dcc0"/>
        <function-ref name="test" scoped="" ref="0x4057d068"/>
        <function-ref name="get" scoped="" ref="0x4057f8c0"/>
        <function-ref name="reset" scoped="" ref="0x4057d2e0"/>
        <function-ref name="getMode" scoped="" ref="0x4057c010"/>
        <function-ref name="overflow" scoped="" ref="0x4057fdd8"/>
        <function-ref name="isOn" scoped="" ref="0x4057da48"/>
        <function-ref name="set" scoped="" ref="0x4057fb38"/>
        <function-ref name="start" scoped="" ref="0x4057d558"/>
        <function-ref name="stop" scoped="" ref="0x4057d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x4058e5d0" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x4058e5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4058e7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x40583010" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40583010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40582a68"/>
        <function-ref name="test" scoped="" ref="0x40583de8"/>
        <function-ref name="fired" scoped="" ref="0x40583b70"/>
        <function-ref name="get" scoped="" ref="0x40583658"/>
        <function-ref name="reset" scoped="" ref="0x40582088"/>
        <function-ref name="getMode" scoped="" ref="0x40582d08"/>
        <function-ref name="isOn" scoped="" ref="0x405827f0"/>
        <function-ref name="set" scoped="" ref="0x405838d0"/>
        <function-ref name="start" scoped="" ref="0x40582300"/>
        <function-ref name="stop" scoped="" ref="0x40582578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40587bd0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40587bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40584640"/>
        <function-ref name="test" scoped="" ref="0x405869c8"/>
        <function-ref name="fired" scoped="" ref="0x40586750"/>
        <function-ref name="force" scoped="" ref="0x40584b58"/>
        <function-ref name="get" scoped="" ref="0x40586238"/>
        <function-ref name="reset" scoped="" ref="0x40586c40"/>
        <function-ref name="getMode" scoped="" ref="0x405848e0"/>
        <function-ref name="isOn" scoped="" ref="0x405843c8"/>
        <function-ref name="set" scoped="" ref="0x405864b0"/>
        <function-ref name="start" scoped="" ref="0x40586eb8"/>
        <function-ref name="stop" scoped="" ref="0x40584150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x405f1010" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x405f1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405f11e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x405ee0e0" loc="60:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x405ee0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405ee2b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403fd338" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403fd338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403fd510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x403fdc98" loc="59:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x403fdc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403fde70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x403fd6d0" loc="58:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403fd6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403fd8a8"/>
        <function-ref name="taskLoop" scoped="" ref="0x403fd988"/>
        <function-ref name="runNextTask" scoped="" ref="0x403fda68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40306a98" loc="48:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40306c70"/>
        <function-ref name="runTask" scoped="" ref="0x40306d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40303378" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40303378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40303550"/>
        <function-ref name="taskLoop" scoped="" ref="0x40303630"/>
        <function-ref name="runNextTask" scoped="" ref="0x40303710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403cfc18" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403cfc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403cfdf0"/>
        <function-ref name="runTask" scoped="" ref="0x403cfed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403ce8b8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403ce8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403cea90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403cf3e0" loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403cf3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403cf5b8"/>
        <function-ref name="taskLoop" scoped="" ref="0x403cf698"/>
        <function-ref name="runNextTask" scoped="" ref="0x403cf778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x4062e270" loc="54:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x4062e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042f780"/>
            <typename><typedef-ref name="TMilli" ref="0x4042f948"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40622d58"/>
        <function-ref name="fired" scoped="" ref="0x40622010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40622718"/>
        <function-ref name="isOneShot" scoped="" ref="0x406224c0"/>
        <function-ref name="getdt" scoped="" ref="0x40621268"/>
        <function-ref name="gett0" scoped="" ref="0x40621010"/>
        <function-ref name="isRunning" scoped="" ref="0x40622268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4062e898"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40622a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x4062eb18"/>
        <function-ref name="stop" scoped="" ref="0x4062ed98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Vol0" ref="0x40627010" loc="58:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Vol0" scoped="" ref="0x40627010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40627638"/>
        <function-ref name="readDone" scoped="" ref="0x40627890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="vol1ReadTask" ref="0x4063d660" loc="128:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="vol1ReadTask" scoped="" ref="0x4063d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4063d8b8"/>
        <function-ref name="runTask" scoped="" ref="0x4063d998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40636520" loc="61:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40636520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x406366f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialStream" ref="0x40636e58" loc="64:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialStream" scoped="" ref="0x40636e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40635050"/>
        <function-ref name="receivedByte" scoped="" ref="0x40635130"/>
        <function-ref name="receive" scoped="" ref="0x40635210"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x406352f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x406353d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x406354b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40635590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="processCommandTask" ref="0x4064e6a0" loc="138:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="processCommandTask" scoped="" ref="0x4064e6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4064e878"/>
        <function-ref name="runTask" scoped="" ref="0x4064e958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="vol0ReadTask" ref="0x4063f6a0" loc="118:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="vol0ReadTask" scoped="" ref="0x4063f6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4063f878"/>
        <function-ref name="runTask" scoped="" ref="0x4063f958"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x40621600" loc="55:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x40621600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042f780"/>
            <typename><typedef-ref name="TMilli" ref="0x4042f948"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4062b110"/>
        <function-ref name="fired" scoped="" ref="0x4062c3a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4062cab0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4062c858"/>
        <function-ref name="getdt" scoped="" ref="0x4062b5c0"/>
        <function-ref name="gett0" scoped="" ref="0x4062b368"/>
        <function-ref name="isRunning" scoped="" ref="0x4062c600"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40621c28"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4062cdd0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40621ea8"/>
        <function-ref name="stop" scoped="" ref="0x4062c150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Vol1" ref="0x40627cf0" loc="59:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Vol1" scoped="" ref="0x40627cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40637350"/>
        <function-ref name="readDone" scoped="" ref="0x406375a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialByte" ref="0x40636938" loc="63:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialByte" scoped="" ref="0x40636938"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40636b10"/>
        <function-ref name="receive" scoped="" ref="0x40636bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x406378d0" loc="60:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x406378d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40637aa8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40637b88"/>
        <function-ref name="led1On" scoped="" ref="0x40637c68"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40637d48"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40637e28"/>
        <function-ref name="get" scoped="" ref="0x40637f08"/>
        <function-ref name="led1Off" scoped="" ref="0x40636010"/>
        <function-ref name="led2Off" scoped="" ref="0x40636390"/>
        <function-ref name="set" scoped="" ref="0x406360f0"/>
        <function-ref name="led0On" scoped="" ref="0x406361d0"/>
        <function-ref name="led2On" scoped="" ref="0x406362b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x4062b958" loc="56:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer2" scoped="" ref="0x4062b958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042f780"/>
            <typename><typedef-ref name="TMilli" ref="0x4042f948"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406284c8"/>
        <function-ref name="fired" scoped="" ref="0x4062a768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4062ae70"/>
        <function-ref name="isOneShot" scoped="" ref="0x4062ac18"/>
        <function-ref name="getdt" scoped="" ref="0x40628978"/>
        <function-ref name="gett0" scoped="" ref="0x40628720"/>
        <function-ref name="isRunning" scoped="" ref="0x4062a9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4062a010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406281a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x4062a290"/>
        <function-ref name="stop" scoped="" ref="0x4062a510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempSensor" ref="0x406382a0" loc="57:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempSensor" scoped="" ref="0x406382a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406388c8"/>
        <function-ref name="readDone" scoped="" ref="0x40638b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="tempSensorReadTask" ref="0x406426d0" loc="108:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="tempSensorReadTask" scoped="" ref="0x406426d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406428a8"/>
        <function-ref name="runTask" scoped="" ref="0x40642988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40660330" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40660330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042f780"/>
            <typename><typedef-ref name="TMilli" ref="0x4042f948"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4070ae38"/>
        <function-ref name="fired" scoped="" ref="0x4070a0f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4070a7f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x4070a5a0"/>
        <function-ref name="getdt" scoped="" ref="0x40709310"/>
        <function-ref name="gett0" scoped="" ref="0x407090b8"/>
        <function-ref name="isRunning" scoped="" ref="0x4070a348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40660958"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4070ab18"/>
        <function-ref name="startOneShot" scoped="" ref="0x40660bd8"/>
        <function-ref name="stop" scoped="" ref="0x40660e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x406595a0" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x406595a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042f780"/>
            <typename><typedef-ref name="TMilli" ref="0x4042f948"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4066a098"/>
        <function-ref name="fired" scoped="" ref="0x4066c330"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4066ca38"/>
        <function-ref name="isOneShot" scoped="" ref="0x4066c7e0"/>
        <function-ref name="getdt" scoped="" ref="0x4066a548"/>
        <function-ref name="gett0" scoped="" ref="0x4066a2f0"/>
        <function-ref name="isRunning" scoped="" ref="0x4066c588"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40659bc8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4066cd58"/>
        <function-ref name="startOneShot" scoped="" ref="0x40659e48"/>
        <function-ref name="stop" scoped="" ref="0x4066c0d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40669f20" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40669f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042f780"/>
            <typename><typedef-ref name="TMilli" ref="0x4042f948"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406bb3e8"/>
        <function-ref name="fired" scoped="" ref="0x40668ba0"/>
        <function-ref name="startAt" scoped="" ref="0x406bb0a8"/>
        <function-ref name="isRunning" scoped="" ref="0x40668e18"/>
        <function-ref name="getAlarm" scoped="" ref="0x406bb660"/>
        <function-ref name="start" scoped="" ref="0x40668688"/>
        <function-ref name="stop" scoped="" ref="0x40668928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4095edb8" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4095edb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40524060"/>
            <typename><typedef-ref name="T62khz" ref="0x40524208"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4095b278"/>
        <function-ref name="fired" scoped="" ref="0x4095ca30"/>
        <function-ref name="startAt" scoped="" ref="0x4095cf20"/>
        <function-ref name="isRunning" scoped="" ref="0x4095cca8"/>
        <function-ref name="getAlarm" scoped="" ref="0x4095b4f0"/>
        <function-ref name="start" scoped="" ref="0x4095c518"/>
        <function-ref name="stop" scoped="" ref="0x4095c7b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x40972840" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x40972840"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4096f2c0"/>
        <function-ref name="test" scoped="" ref="0x40970628"/>
        <function-ref name="fired" scoped="" ref="0x409703b0"/>
        <function-ref name="force" scoped="" ref="0x4096f7d8"/>
        <function-ref name="get" scoped="" ref="0x40972e88"/>
        <function-ref name="reset" scoped="" ref="0x409708a0"/>
        <function-ref name="getMode" scoped="" ref="0x4096f560"/>
        <function-ref name="isOn" scoped="" ref="0x4096f048"/>
        <function-ref name="set" scoped="" ref="0x40970110"/>
        <function-ref name="start" scoped="" ref="0x40970b18"/>
        <function-ref name="stop" scoped="" ref="0x40970d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40952dd8" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40952dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40524060"/>
            <typename><typedef-ref name="T62khz" ref="0x40524208"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40974350"/>
        <function-ref name="fired" scoped="" ref="0x40950a88"/>
        <function-ref name="startAt" scoped="" ref="0x40974010"/>
        <function-ref name="isRunning" scoped="" ref="0x40950d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x409745c8"/>
        <function-ref name="start" scoped="" ref="0x40950570"/>
        <function-ref name="stop" scoped="" ref="0x40950810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409529a0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409529a0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f77d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f77d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40952b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x40974898" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x40974898"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40972300"/>
        <function-ref name="test" scoped="" ref="0x40973688"/>
        <function-ref name="get" scoped="" ref="0x40974ee0"/>
        <function-ref name="reset" scoped="" ref="0x40973900"/>
        <function-ref name="getMode" scoped="" ref="0x409725a0"/>
        <function-ref name="overflow" scoped="" ref="0x40973410"/>
        <function-ref name="isOn" scoped="" ref="0x40972088"/>
        <function-ref name="set" scoped="" ref="0x40973170"/>
        <function-ref name="start" scoped="" ref="0x40973b78"/>
        <function-ref name="stop" scoped="" ref="0x40973df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4095a7d0" loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4095a7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042f780"/>
            <typename><typedef-ref name="TMilli" ref="0x4042f948"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40959c80"/>
        <function-ref name="fired" scoped="" ref="0x40959450"/>
        <function-ref name="startAt" scoped="" ref="0x40959940"/>
        <function-ref name="isRunning" scoped="" ref="0x409596c8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40959ef8"/>
        <function-ref name="start" scoped="" ref="0x4095af20"/>
        <function-ref name="stop" scoped="" ref="0x409591d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x409564c0" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x409564c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40524060"/>
            <typename><typedef-ref name="T62khz" ref="0x40524208"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40955980"/>
        <function-ref name="fired" scoped="" ref="0x40955150"/>
        <function-ref name="startAt" scoped="" ref="0x40955640"/>
        <function-ref name="isRunning" scoped="" ref="0x409553c8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40955bf8"/>
        <function-ref name="start" scoped="" ref="0x40956c10"/>
        <function-ref name="stop" scoped="" ref="0x40956eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40958278" loc="68:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40958278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042f780"/>
            <typename><typedef-ref name="TMilli" ref="0x4042f948"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409589c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40958eb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40958c40"/>
        <function-ref name="overflow" scoped="" ref="0x40956150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x406cb658" loc="74:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x406cb658"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406cb830"/>
        <function-ref name="runTask" scoped="" ref="0x406cb910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x406cecc8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x406cecc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042f780"/>
            <typename><typedef-ref name="TMilli" ref="0x4042f948"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406cb190"/>
        <function-ref name="fired" scoped="" ref="0x406cd950"/>
        <function-ref name="startAt" scoped="" ref="0x406cde40"/>
        <function-ref name="isRunning" scoped="" ref="0x406cdbc8"/>
        <function-ref name="getAlarm" scoped="" ref="0x406cb408"/>
        <function-ref name="start" scoped="" ref="0x406cd438"/>
        <function-ref name="stop" scoped="" ref="0x406cd6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406b8968" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406b8968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042f780"/>
            <typename><typedef-ref name="TMilli" ref="0x4042f948"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406ce4c8"/>
        <function-ref name="fired" scoped="" ref="0x406cf768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406cfe70"/>
        <function-ref name="isOneShot" scoped="" ref="0x406cfc18"/>
        <function-ref name="getdt" scoped="" ref="0x406ce978"/>
        <function-ref name="gett0" scoped="" ref="0x406ce720"/>
        <function-ref name="isRunning" scoped="" ref="0x406cf9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406cf010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406ce1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x406cf290"/>
        <function-ref name="stop" scoped="" ref="0x406cf510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x406f62b8" loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x406f62b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406f6490"/>
        <function-ref name="runTask" scoped="" ref="0x406f6570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x406f80c0" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x406f80c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042f780"/>
            <typename><typedef-ref name="TMilli" ref="0x4042f948"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406f7ba8"/>
        <function-ref name="fired" scoped="" ref="0x406f8e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406f7568"/>
        <function-ref name="isOneShot" scoped="" ref="0x406f7310"/>
        <function-ref name="getdt" scoped="" ref="0x406f6068"/>
        <function-ref name="gett0" scoped="" ref="0x406f7e00"/>
        <function-ref name="isRunning" scoped="" ref="0x406f70b8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406f86e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406f7888"/>
        <function-ref name="startOneShot" scoped="" ref="0x406f8968"/>
        <function-ref name="stop" scoped="" ref="0x406f8be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406dfcc8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406dfcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042f780"/>
            <typename><typedef-ref name="TMilli" ref="0x4042f948"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406fa8d8"/>
        <function-ref name="fired" scoped="" ref="0x406dead8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406fa278"/>
        <function-ref name="isOneShot" scoped="" ref="0x406fa010"/>
        <function-ref name="getdt" scoped="" ref="0x406fada8"/>
        <function-ref name="gett0" scoped="" ref="0x406fab40"/>
        <function-ref name="isRunning" scoped="" ref="0x406ded40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406de350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406fa5a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x406de5e0"/>
        <function-ref name="stop" scoped="" ref="0x406de870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407080f0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407080f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042f780"/>
            <typename><typedef-ref name="TMilli" ref="0x4042f948"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40707be0"/>
        <function-ref name="fired" scoped="" ref="0x40708e70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x407075a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40707348"/>
        <function-ref name="getdt" scoped="" ref="0x407050b8"/>
        <function-ref name="gett0" scoped="" ref="0x40707e38"/>
        <function-ref name="isRunning" scoped="" ref="0x407070f0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40708718"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x407078c0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40708998"/>
        <function-ref name="stop" scoped="" ref="0x40708c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40705e70" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40705e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042f780"/>
            <typename><typedef-ref name="TMilli" ref="0x4042f948"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40703988"/>
        <function-ref name="fired" scoped="" ref="0x40704c10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40703348"/>
        <function-ref name="isOneShot" scoped="" ref="0x407030f0"/>
        <function-ref name="getdt" scoped="" ref="0x40703e38"/>
        <function-ref name="gett0" scoped="" ref="0x40703be0"/>
        <function-ref name="isRunning" scoped="" ref="0x40704e68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407044b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40703668"/>
        <function-ref name="startOneShot" scoped="" ref="0x40704738"/>
        <function-ref name="stop" scoped="" ref="0x407049b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40701d28" loc="3:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorC.nc">
      <component-ref qname="BlinkAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40701d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40716370"/>
        <function-ref name="readDone" scoped="" ref="0x407165c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4099b508" loc="25:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
      <component-ref qname="BlinkAppC.TempSensor.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4099b508"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4099b6e0"/>
        <function-ref name="configure" scoped="" ref="0x4099b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4099c478" loc="22:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
      <component-ref qname="BlinkAppC.TempSensor.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4099c478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099caa0"/>
        <function-ref name="readDone" scoped="" ref="0x4099ccf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x4099b030" loc="24:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
      <component-ref qname="BlinkAppC.TempSensor.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4099b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x4099b208"/>
        <function-ref name="getChannel" scoped="" ref="0x4099b2e8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x4099b3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40720538" loc="18:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40720538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40720b60"/>
        <function-ref name="readDone" scoped="" ref="0x40720db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x4071b978" loc="19:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x4071b978"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4071d010"/>
        <function-ref name="readDone" scoped="" ref="0x4071d288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x4071d940" loc="22:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4071d940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x4071db18"/>
        <function-ref name="getChannel" scoped="" ref="0x4071dbf8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x4071dcd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x4071c220" loc="23:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4071c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4071c3f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4071c4d8"/>
        <function-ref name="request" scoped="" ref="0x4071c5b8"/>
        <function-ref name="granted" scoped="" ref="0x4071c698"/>
        <function-ref name="isOwner" scoped="" ref="0x4071c778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40729618" loc="58:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40729618"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x407297f0"/>
        <function-ref name="configure" scoped="" ref="0x407298d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x40723db0" loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40723db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40729010"/>
        <function-ref name="dataReady" scoped="" ref="0x407290f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x40727bf8" loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40727bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40727dd0"/>
        <function-ref name="cancel" scoped="" ref="0x40727eb0"/>
        <function-ref name="dataReady" scoped="" ref="0x4072a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4072b220" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4072b220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4072b3f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4072b4d8"/>
        <function-ref name="request" scoped="" ref="0x4072b5b8"/>
        <function-ref name="granted" scoped="" ref="0x4072b698"/>
        <function-ref name="isOwner" scoped="" ref="0x4072b778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40738288" loc="85:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40738288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40738460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x40737110" loc="88:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40737110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x407372e8"/>
        <function-ref name="dataReady" scoped="" ref="0x407373c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x40735b58" loc="87:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40735b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40735d30"/>
        <function-ref name="cancel" scoped="" ref="0x40735e10"/>
        <function-ref name="dataReady" scoped="" ref="0x40735ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x40744958" loc="91:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40744958"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40744b30"/>
        <function-ref name="getAdmux" scoped="" ref="0x40744c10"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40744cf0"/>
        <function-ref name="isEnabled" scoped="" ref="0x40744dd0"/>
        <function-ref name="enableAdc" scoped="" ref="0x40744eb0"/>
        <function-ref name="setAdmux" scoped="" ref="0x40736010"/>
        <function-ref name="enableInterruption" scoped="" ref="0x407360f0"/>
        <function-ref name="isComplete" scoped="" ref="0x407361d0"/>
        <function-ref name="cancel" scoped="" ref="0x407362b0"/>
        <function-ref name="disableAdc" scoped="" ref="0x40736390"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40736470"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40736550"/>
        <function-ref name="startConversion" scoped="" ref="0x40736630"/>
        <function-ref name="isStarted" scoped="" ref="0x40736790"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40736870"/>
        <function-ref name="setContinuous" scoped="" ref="0x40736950"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40736a30"/>
        <function-ref name="getValue" scoped="" ref="0x40736b10"/>
        <function-ref name="dataReady" scoped="" ref="0x40736bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x407356c8" loc="86:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x407356c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x407358a0"/>
        <function-ref name="stop" scoped="" ref="0x40735980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40726ea8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40726ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x407570c0"/>
        <function-ref name="getAdmux" scoped="" ref="0x407571a0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40757280"/>
        <function-ref name="isEnabled" scoped="" ref="0x40757360"/>
        <function-ref name="enableAdc" scoped="" ref="0x40757440"/>
        <function-ref name="setAdmux" scoped="" ref="0x40757520"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40757600"/>
        <function-ref name="isComplete" scoped="" ref="0x407576e0"/>
        <function-ref name="cancel" scoped="" ref="0x407577c0"/>
        <function-ref name="disableAdc" scoped="" ref="0x407578a0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40757980"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40757a60"/>
        <function-ref name="startConversion" scoped="" ref="0x40757b40"/>
        <function-ref name="isStarted" scoped="" ref="0x40757ca0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40757d80"/>
        <function-ref name="setContinuous" scoped="" ref="0x40757e60"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40756010"/>
        <function-ref name="getValue" scoped="" ref="0x407560f0"/>
        <function-ref name="dataReady" scoped="" ref="0x407561d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40752108" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40752108"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x407522e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40756c00" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40756c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40756dd8"/>
        <function-ref name="getAdmux" scoped="" ref="0x40756eb8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40753010"/>
        <function-ref name="isEnabled" scoped="" ref="0x407530f0"/>
        <function-ref name="enableAdc" scoped="" ref="0x407531d0"/>
        <function-ref name="setAdmux" scoped="" ref="0x407532b0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40753390"/>
        <function-ref name="isComplete" scoped="" ref="0x40753470"/>
        <function-ref name="cancel" scoped="" ref="0x40753550"/>
        <function-ref name="disableAdc" scoped="" ref="0x40753630"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40753710"/>
        <function-ref name="disableInterruption" scoped="" ref="0x407537f0"/>
        <function-ref name="startConversion" scoped="" ref="0x407538d0"/>
        <function-ref name="isStarted" scoped="" ref="0x40753a30"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40753b10"/>
        <function-ref name="setContinuous" scoped="" ref="0x40753bf0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40753cd0"/>
        <function-ref name="getValue" scoped="" ref="0x40753db0"/>
        <function-ref name="dataReady" scoped="" ref="0x40753e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x407524c8" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x407524c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x407526a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x407c6068" loc="92:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x407c6068"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x407c6250"/>
        <function-ref name="immediateRequested" scoped="" ref="0x407c6330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x407c5010" loc="96:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x407c5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x407c51f8"/>
        <function-ref name="configure" scoped="" ref="0x407c52d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x407c6470" loc="93:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x407c6470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407c6648"/>
        <function-ref name="requested" scoped="" ref="0x407c6728"/>
        <function-ref name="granted" scoped="" ref="0x407c6808"/>
        <function-ref name="isOwner" scoped="" ref="0x407c68e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x407c69c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40754910" loc="91:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40754910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40754af8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40754bd8"/>
        <function-ref name="request" scoped="" ref="0x40754cb8"/>
        <function-ref name="granted" scoped="" ref="0x40754d98"/>
        <function-ref name="isOwner" scoped="" ref="0x40754e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x407c6b08" loc="94:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x407c6b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x407c6ce0"/>
        <function-ref name="userId" scoped="" ref="0x407c6dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409b3db0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409b3db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409b1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x409b1170" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x409b1170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x409b1348"/>
        <function-ref name="isEmpty" scoped="" ref="0x409b1428"/>
        <function-ref name="isEnqueued" scoped="" ref="0x409b1508"/>
        <function-ref name="dequeue" scoped="" ref="0x409b15e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x409afa28" loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x409afa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x409afc10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x409afcf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x409ae9d0" loc="60:/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x409ae9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x409aebb8"/>
        <function-ref name="configure" scoped="" ref="0x409aec98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x409aedf8" loc="61:/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x409aedf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x409ad010"/>
        <function-ref name="isEmpty" scoped="" ref="0x409ad0f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x409ad1d0"/>
        <function-ref name="dequeue" scoped="" ref="0x409ad2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x409afe30" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x409afe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409ae050"/>
        <function-ref name="requested" scoped="" ref="0x409ae130"/>
        <function-ref name="granted" scoped="" ref="0x409ae210"/>
        <function-ref name="isOwner" scoped="" ref="0x409ae2f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x409ae3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x409ad3f0" loc="62:/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x409ad3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x409ad5c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x409ad6a8"/>
        <function-ref name="led1On" scoped="" ref="0x409ad788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x409ad868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x409ad948"/>
        <function-ref name="get" scoped="" ref="0x409ada28"/>
        <function-ref name="led1Off" scoped="" ref="0x409adb08"/>
        <function-ref name="led0On" scoped="" ref="0x409ade88"/>
        <function-ref name="set" scoped="" ref="0x409adcc8"/>
        <function-ref name="led2On" scoped="" ref="0x409adbe8"/>
        <function-ref name="led2Off" scoped="" ref="0x409adda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409af2e8" loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409af2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409af4d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409af5b0"/>
        <function-ref name="request" scoped="" ref="0x409af690"/>
        <function-ref name="granted" scoped="" ref="0x409af770"/>
        <function-ref name="isOwner" scoped="" ref="0x409af850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x409ae510" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x409ae510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x409ae6e8"/>
        <function-ref name="userId" scoped="" ref="0x409ae7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x409ac030" loc="75:/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x409ac030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409ac208"/>
        <function-ref name="runTask" scoped="" ref="0x409ac2e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x407c4de8" loc="72:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x407c4de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x407c3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x407c3150" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x407c3150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407c3328"/>
        <function-ref name="requested" scoped="" ref="0x407c3408"/>
        <function-ref name="granted" scoped="" ref="0x407c34e8"/>
        <function-ref name="isOwner" scoped="" ref="0x407c35c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x407c36a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x407c49f0" loc="70:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x407c49f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x407c4bc8"/>
        <function-ref name="stop" scoped="" ref="0x407c4ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x407c37e8" loc="74:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x407c37e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x407c39c0"/>
        <function-ref name="userId" scoped="" ref="0x407c3aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x409d5db0" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x409d5db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x409d4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x409d4150" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x409d4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409d4328"/>
        <function-ref name="requested" scoped="" ref="0x409d4408"/>
        <function-ref name="granted" scoped="" ref="0x409d44e8"/>
        <function-ref name="isOwner" scoped="" ref="0x409d45c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x409d46a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x409d59b8" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x409d59b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409d5b90"/>
        <function-ref name="stop" scoped="" ref="0x409d5c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x409d47e8" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x409d47e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x409d49c0"/>
        <function-ref name="userId" scoped="" ref="0x409d4aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x407cebe8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x407cebe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407cb258"/>
        <function-ref name="readDone" scoped="" ref="0x407cb4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x407cbbc0" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x407cbbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407e4238"/>
        <function-ref name="readDone" scoped="" ref="0x407e44b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x407e3100" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x407e3100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x407e32d8"/>
        <function-ref name="getChannel" scoped="" ref="0x407e33b8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x407e3498"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x407e4860" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x407e4860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x407e4a38"/>
        <function-ref name="cancel" scoped="" ref="0x407e4b18"/>
        <function-ref name="dataReady" scoped="" ref="0x407e4bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x407da7c8" loc="103:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x407da7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407da9a0"/>
        <function-ref name="runTask" scoped="" ref="0x407daa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x407f5e78" loc="24:/opt/tinyos-main/src/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x407f5e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407cc4d8"/>
        <function-ref name="readDone" scoped="" ref="0x407cc740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x407ccba0" loc="26:/opt/tinyos-main/src/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x407ccba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407e91f0"/>
        <function-ref name="readDone" scoped="" ref="0x407e9458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x407e97d8" loc="27:/opt/tinyos-main/src/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x407e97d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407e99c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407e9aa0"/>
        <function-ref name="request" scoped="" ref="0x407e9b80"/>
        <function-ref name="granted" scoped="" ref="0x407e9c60"/>
        <function-ref name="isOwner" scoped="" ref="0x407e9d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x4099a3b0" loc="6:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorP.nc">
      <component-ref qname="BlinkAppC.TempSensor.PlatformSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4099a3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x4099a588"/>
        <function-ref name="getChannel" scoped="" ref="0x4099a668"/>
        <function-ref name="getPrescaler" scoped="" ref="0x4099a748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40808538" loc="3:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorC.nc">
      <component-ref qname="BlinkAppC.Vol0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40808538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40808b60"/>
        <function-ref name="readDone" scoped="" ref="0x40808db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x409c94e8" loc="25:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
      <component-ref qname="BlinkAppC.Vol0.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x409c94e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x409c96c0"/>
        <function-ref name="configure" scoped="" ref="0x409c97a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x409cb430" loc="22:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
      <component-ref qname="BlinkAppC.Vol0.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x409cb430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409cba58"/>
        <function-ref name="readDone" scoped="" ref="0x409cbcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x409c9010" loc="24:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
      <component-ref qname="BlinkAppC.Vol0.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x409c9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x409c91e8"/>
        <function-ref name="getChannel" scoped="" ref="0x409c92c8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x409c93a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x409c83b0" loc="6:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorP.nc">
      <component-ref qname="BlinkAppC.Vol0.PlatformSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x409c83b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x409c8588"/>
        <function-ref name="getChannel" scoped="" ref="0x409c8668"/>
        <function-ref name="getPrescaler" scoped="" ref="0x409c8748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40803da0" loc="3:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorC.nc">
      <component-ref qname="BlinkAppC.Vol1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40803da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408023e0"/>
        <function-ref name="readDone" scoped="" ref="0x40802638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x409e48f0" loc="25:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
      <component-ref qname="BlinkAppC.Vol1.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x409e48f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x409e4ac8"/>
        <function-ref name="configure" scoped="" ref="0x409e4ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x409e5878" loc="22:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
      <component-ref qname="BlinkAppC.Vol1.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x409e5878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409e5ea0"/>
        <function-ref name="readDone" scoped="" ref="0x409e4110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x409e4418" loc="24:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
      <component-ref qname="BlinkAppC.Vol1.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x409e4418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x409e45f0"/>
        <function-ref name="getChannel" scoped="" ref="0x409e46d0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x409e47b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x409e3798" loc="6:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorP.nc">
      <component-ref qname="BlinkAppC.Vol1.PlatformSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x409e3798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x409e3970"/>
        <function-ref name="getChannel" scoped="" ref="0x409e3a50"/>
        <function-ref name="getPrescaler" scoped="" ref="0x409e3b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x407ff930" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x407ff930"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407ffb08"/>
        <function-ref name="receive" scoped="" ref="0x407ffbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStreamBlocking" ref="0x407ffe88" loc="40:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStreamBlocking" scoped="" ref="0x407ffe88"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40818070"/>
        <function-ref name="receivedByte" scoped="" ref="0x40818150"/>
        <function-ref name="receive" scoped="" ref="0x40818230"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40818310"/>
        <function-ref name="receiveDone" scoped="" ref="0x408183f0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x408184d0"/>
        <function-ref name="sendDone" scoped="" ref="0x408185b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x407ff060" loc="38:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x407ff060"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407ff238"/>
        <function-ref name="receivedByte" scoped="" ref="0x407ff318"/>
        <function-ref name="receive" scoped="" ref="0x407ff3f8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x407ff4d8"/>
        <function-ref name="receiveDone" scoped="" ref="0x407ff5b8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x407ff698"/>
        <function-ref name="sendDone" scoped="" ref="0x407ff778"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403f61a8" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x403ef590" loc="60:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x40416010" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x4040ddd8" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x4040e5c0" loc="31:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x4040ebf8" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4040eaa0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x4040d2d8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4040d180" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x4040d830" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4041c9a0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x4041c848" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40427250" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x4041ced0" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x404270f0" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x404247a8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40424458" loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40424648" loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40421ba8" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40421a50" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x4042b3d8" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x4042b088" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4042b278" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x40421010" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x4042a290" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x4042bd00" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4042bef0" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x4042a128" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x40421598" loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40423618" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x404230c8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404232b8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x404234b0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x40306010" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40306528" loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialInterrupts" loc="3:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
      <function command="" provided="0" name="setSendData" ref="0x404365a8" loc="17:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="txInterruptHandler" ref="0x40435010" loc="20:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxInterruptHandler" ref="0x40436b50" loc="19:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x404369f8" loc="19:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxInterrupt" ref="0x4042d828" loc="6:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxInterrupt" ref="0x4042d408" loc="5:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxInterrupt" ref="0x4042c090" loc="9:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearTxInterrupt" ref="0x4042c4a8" loc="11:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxInterruptPending" ref="0x4042cd30" loc="14:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxInterrupt" ref="0x4042dc50" loc="8:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearRxInterrupt" ref="0x4042c8c0" loc="12:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxInterruptPending" ref="0x404361c8" loc="15:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40433768" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40433768"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x404338d0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404338d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40433db8" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x404338d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x4043c810" loc="76:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x4043c310" loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4043cc38" loc="82:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x403e0750" loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x403e0b98" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x403e8038" loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x403e88a8" loc="83:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x403e75b0" loc="100:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403e7a58" loc="117:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x403e8460" loc="77:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403e61c0" loc="134:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x403e6068" loc="134:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x403e0328" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x403e8d28" loc="89:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x403e7168" loc="94:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403e3d68" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x403b4bc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x40493b50" loc="44:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x4049d010" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x404933c0" loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x4049d7e0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40493780" loc="43:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x4049d3e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40496c18" loc="40:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x40493010" loc="41:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403ce6e0" loc="76:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403dceb8" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCounter" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x40558298" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
          <interfacedef-ref qname="AtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40558298"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x40554970" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40554818" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x405554d8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40558790" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40558298"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40555890" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x40554d80" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x405550f8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40554418" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40558cd0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40558298"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40558b78" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40558298"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40555c58" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40554038" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCapture" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x4056c998" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
          <interfacedef-ref qname="AtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4056c998"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x40575168" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40575010" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40578b98" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x405787b8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4056ce90" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4056c998"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40576010" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x40575578" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40576b68" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405783f0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4056c998"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40578298" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4056c998"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405763d8" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40576788" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCompare" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x40571010" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
          <interfacedef-ref qname="AtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40571010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x4056e690" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x4056e538" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4056f210" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40571e10" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x4056ee68" loc="78:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40571508" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40571010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4056f5c8" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x4056eaa0" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4056e138" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40571a48" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40571010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x405718f0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40571010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4056f990" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4056fd40" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403367e0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x40303138" loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40336c20" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40623b28" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40623b28"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4062f520" loc="136:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4061f138" loc="83:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40630358" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40630010" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x406301f8" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x4061fa88" loc="98:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x4062fe98" loc="151:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x4062f968" loc="144:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4061f5c8" loc="92:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x406201c0" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40620068" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40630d40" loc="129:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x406309f8" loc="129:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40630be0" loc="129:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40620858" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40620700" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40620d28" loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40639270" loc="49:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40639270"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40639720" loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40639ed0" loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40639270"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40639ba0" loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40639d70" loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40639270"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40665400" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40665400"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40665568" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40665568"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40663830" loc="109:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40665568"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x406644f0" loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x406631e8" loc="103:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40665568"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40665568"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40664e68" loc="103:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40665568"/></type-var>
          </variable>
          <variable name="dt" ref="0x40663088" loc="103:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40665568"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40664960" loc="88:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40663cc0" loc="116:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40665568"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40665b98" loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40665568"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40665a40" loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40665568"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40664090" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40721588" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x407210c8" loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x40710bc0" loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x407106c8" loc="25:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x4070c0c8" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x4071f6a8" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4071f6a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x4071fb78" loc="58:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x4071b360" loc="66:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4071f6a8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x4071b030" loc="66:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x4071b200" loc="66:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4071f6a8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40718568" loc="120:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x40719c10" loc="97:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40719610" loc="88:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x407180f8" loc="102:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40718c60" loc="128:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x407255c8" loc="100:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x4072add0" loc="100:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x40725010" loc="100:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x40725238" loc="101:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x40725458" loc="101:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40723930" loc="119:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40725ee8" loc="119:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x407230f0" loc="119:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x407232f8" loc="119:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x40723550" loc="120:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x407237b8" loc="120:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x407288b0" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x407280d0" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x407282f8" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x40728520" loc="71:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x40728740" loc="71:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40727908" loc="91:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40727380" loc="81:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40727030" loc="81:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x40727220" loc="81:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x4072f610" loc="114:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="111:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x40737da8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403c3990"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x403c3c18"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x4072eb60" loc="140:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="135:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x4072ea08" loc="140:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x4072fad0" loc="122:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="118:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x40731810" loc="82:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x407333d8" loc="58:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403c3990"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x403c3c18"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x40733280" loc="58:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403c3990"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x403c3c18"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x40730070" loc="91:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="88:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x4072e4b8" loc="133:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="128:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40744038" loc="150:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="142:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x40731c10" loc="86:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x407308f8" loc="99:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="96:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x407304c8" loc="95:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x40730d30" loc="106:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="101:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x4072e010" loc="127:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="123:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x40733ef0" loc="69:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403c8330"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x403c86d8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x40733d98" loc="69:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403c8330"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x403c86d8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x4072f210" loc="110:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="107:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x407338c0" loc="64:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403c8330"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x403c86d8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x407313b0" loc="75:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="71:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40744788" loc="156:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="152:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40744630" loc="156:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40738e48" loc="95:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407353e0" loc="105:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40776158" loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40776730" loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40778dd8" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x4078b7e0" loc="73:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x407788a8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x4078b308" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x4078bdb8" loc="81:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x40789090" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x40789590" loc="98:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40781530" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40777df8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x407813d8" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40777df8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x407831a8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40783868" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40777df8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40783710" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40777df8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40783e18" loc="70:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40777df8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x407bf4d8" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
