<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="68:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40637dd8"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403ef820"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403ef820"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403fdf18"/></to>
    </wire>
    <wire loc="70:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x4062fd30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40661930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40661930"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4065ce48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x4062e110"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40709740"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40709740"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4065ce48"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x4062b488"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407054c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x407054c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4065ce48"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x406371b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4047edf8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4047edf8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40497280"/></to>
    </wire>
    <wire loc="75:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkAppC.nc">
      <from><interface-ref name="TempSensor" scoped="" ref="0x40639bd8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40702d28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x40702d28"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40dcb478"/></to>
    </wire>
    <wire loc="76:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkAppC.nc">
      <from><interface-ref name="Vol0" scoped="" ref="0x406278d0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40809538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x40809538"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40dfb430"/></to>
    </wire>
    <wire loc="77:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkAppC.nc">
      <from><interface-ref name="Vol1" scoped="" ref="0x4063a5e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40804da0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x40804da0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40df3878"/></to>
    </wire>
    <wire loc="79:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkAppC.nc">
      <from><interface-ref name="SerialByte" scoped="" ref="0x40636250"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x407ff930"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x407ff930"/></from>
      <to><interface-ref name="Uart1Byte" scoped="" ref="0x40428f28"/></to>
    </wire>
    <wire loc="80:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkAppC.nc">
      <from><interface-ref name="SerialStream" scoped="" ref="0x40636770"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x407ff060"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x407ff060"/></from>
      <to><interface-ref name="Uart1Stream" scoped="" ref="0x4041c0a0"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403f64f0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40b89e68"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403f64f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40addb50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403f64f0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40ef4170"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403f64f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a1c040"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403f64f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e90078"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403f64f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e57ba0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x403f64f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40dc2d60"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x405e02c8"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40303378"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40303378"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403cf3e0"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x405e0890"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40b89808"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x405e0890"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403f6cd8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403f6cd8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403f5b08"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x405e0c98"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x403f64f0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x403fc2c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404a5ba8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x403fc2c8"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x403f5108"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x403f5ef8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x403ff250"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x403ff250"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40406060"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x403fc690"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x403f4c20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerInit" scoped="" ref="0x403ff658"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e37160"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerInit" scoped="" ref="0x403ff658"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d9e9a0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x403ff658"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4054d440"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40406c20"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x403ff658"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="SerialInit" scoped="" ref="0x40406470"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x4041d130"/></to>
    </wire>
    <wire loc="12:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Init" scoped="" ref="0x4041d130"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x4042b380"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x40406858"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40409d98"/></to>
    </wire>
    <wire loc="13:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Byte" scoped="" ref="0x40428f28"/></from>
      <to><interface-ref name="Uart1Byte" scoped="" ref="0x4042b790"/></to>
    </wire>
    <wire loc="14:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Stream" scoped="" ref="0x4041c0a0"/></from>
      <to><interface-ref name="Uart1Stream" scoped="" ref="0x4042bca0"/></to>
    </wire>
    <wire loc="15:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x40425498"/></from>
      <to><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x40431718"/></to>
    </wire>
    <wire loc="16:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4047c440"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4047edf8"/></to>
    </wire>
    <wire loc="17:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4043c818"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405388f0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x405388f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40534320"/></to>
    </wire>
    <wire loc="18:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Uart1Interrupts" scoped="" ref="0x40436910"/></from>
      <to><interface-ref name="Uart1Interrupts" scoped="" ref="0x4047f768"/></to>
    </wire>
    <wire loc="19:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4042e9d8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4047edf8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403e2218"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40753c38"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403e2218"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x4058e1e0"/></to>
    </wire>
    <wire loc="20:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403e2218"/></from>
      <to><interface-ref name="Uart1PowerOverride" scoped="" ref="0x40430138"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="sendBlockingDoneTask" scoped="" ref="0x40439718"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="36:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="sendDoneTask" scoped="" ref="0x40438818"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="unexpectedByteReceivedTask" scoped="" ref="0x40443900"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="receiveBlockingDoneTask" scoped="" ref="0x40438010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <from><interface-ref name="receiveDoneTask" scoped="" ref="0x40443060"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404a5ba8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4048ef20"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x404950a0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x4048dd48"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x4048dd48"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x404b10a0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40495a88"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x404a6768"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x404a6768"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x404b1a98"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x404944a0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x404a5220"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x404a5220"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x404be4b0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x404b10a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404f7e48"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x404b1a98"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x405047d0"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x404be4b0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40503170"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x404b72f0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404f2b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404f2b80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c967f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x405047d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ce27f8"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x404bace8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40509030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x40509030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d05538"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x404c30a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40511dc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40511dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d2f418"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x404c02f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4050ee48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4050ee48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d566c0"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x404bb830"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4050bd30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x4050bd30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d08010"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x404a4698"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404ec8e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404ec8e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c473e8"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x404b5210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404fd7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404fd7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c916c0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x404ad590"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404ea5d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404ea5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c73228"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x404b3210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404fb4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404fb4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c8c538"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x404bd8e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x405024f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x405024f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cdd6c0"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x404b2670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404f74f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404f74f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cb73b0"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x404b8c08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40508c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x40508c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d00538"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x404c2ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4050fac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4050fac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d2a228"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x404ab4b0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404f6250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404f6250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c6e0b0"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x404c3a98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40510790"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40510790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d2ede0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x404b7ce8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404f14f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404f14f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c94228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40503170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ce0228"/></to>
    </wire>
    <wire loc="123:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x404b9750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40509988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x40509988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d03010"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x404ae0c0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404eb250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404eb250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c46da8"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x404b5c88"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404fc170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x404fc170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c8f0b0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x404ac010"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404eaf28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404eaf28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c72c08"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x404bc2f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40502e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x40502e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cda0b0"/></to>
    </wire>
    <wire loc="126:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x404c5670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x405076b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x405076b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cfe010"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x404aa8e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404f2228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404f2228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c9cde8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404f7e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cb6d70"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x404ba2f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4050a6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4050a6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d079e8"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x404c18e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4050e4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4050e4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d29c08"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x404abea8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404f6ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404f6ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c6da88"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x404b6750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404f1e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404f1e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c93c08"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x404beea8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40503ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40503ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cdfc08"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x404aeab8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404ebba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404ebba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c447f8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x404b4750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404fcac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404fcac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c8ea88"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x404bcce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4050b3d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x4050b3d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d0a538"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x404b8210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40508330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x40508330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d029e8"/></to>
    </wire>
    <wire loc="110:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x404b3c08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404f8b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404f8b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cb9938"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x404c24b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4050f170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4050f170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d2c7f8"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x404aca08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404e9890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x404e9890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c706c0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4050d7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d540b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4050c170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d53a88"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x405335f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4054f368"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4054f368"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4054d878"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x4055ca48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40568c90"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40568c90"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4057f278"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="BeaconCapture" scoped="" ref="0x405799a8"/></from>
      <to><interface-ref name="BeaconCapture" scoped="" ref="0x40590158"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x40575860"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x40583010"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40563470"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x4057c408"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40563470"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40589830"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40563470"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40587bd0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x4058e5d0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403e3148"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403cfc18"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403ce8b8"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x403dc470"/></to>
    </wire>
    <wire loc="128:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <from><interface-ref name="vol1ReadTask" scoped="" ref="0x4063d010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="138:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <from><interface-ref name="processCommandTask" scoped="" ref="0x4064e060"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <from><interface-ref name="vol0ReadTask" scoped="" ref="0x4063f010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <from><interface-ref name="tempSensorReadTask" scoped="" ref="0x40642010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x4065ce48"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406de338"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x406ce398"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40669900"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40669900"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40d767d0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x406fa688"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406b80a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x40d724c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40d7adb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40d7adb8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40d9edd8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x40d74278"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405388f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x40d9b898"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40568c90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x40d99840"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40563470"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x406cdd08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x406f7948"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x40dcb478"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4070fbb8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40dca030"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40dc93b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4071e010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40dca030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40718b68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x4071bb78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4072a100"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40dca508"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x4070fbb8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x407f5e78"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x4071f010"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x407cb978"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x407e97d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40718b68"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x407e4eb0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4071e010"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x407ccba0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x407ce938"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x407e4638"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40727540"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40727540"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40735628"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40723870"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40735bb0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4071bb78"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40754420"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40754420"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40df02e8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x407c7b58"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4072a100"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40744498"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40729a40"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40729a40"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40756738"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x407c49f0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40735198"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x407c3150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x407c7010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x407c7010"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40df0e30"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40752010"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403e3148"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40754b60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40df0a28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x407c76a8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40def510"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40def9d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x407c7b58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x40defdf8"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x40dc0170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x40ded030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x40e069b8"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x407c49f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x40e06db0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x407c4de8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40e04150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x407c3150"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40e047e8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x407c37e8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x407da538"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x40dfb430"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4070fbb8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40df9010"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40df83b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4071e010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40df9010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40718b68"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x4071bb78"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4072a100"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40df94e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x40df3878"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4070fbb8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40df2418"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40df1798"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4071e010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40df2418"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40718b68"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x4071bb78"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4072a100"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40df28f0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <from><interface-ref name="UartStreamBlocking" scoped="" ref="0x407ffe88"/></from>
      <to><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x40425498"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40812980"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408747e0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x408747e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4087be60"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x408453e0"/></from>
      <to><interface-ref name="SendResource" scoped="" ref="0x4086f258"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x4086f258"/></from>
      <to><interface-ref name="SendResource" scoped="" ref="0x408937d8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x4085d480"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40871960"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40871960"/></from>
      <to><interface-ref name="Ieee154Notifier" scoped="" ref="0x408930c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40856470"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408707b0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408707b0"/></from>
      <to><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40892a68"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x408525b8"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40871d00"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x40871d00"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40893ef8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40867e58"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x4086d010"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4086d010"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x408917b8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40842010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4086f9d0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4086f9d0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40891230"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x40847ce0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40874e08"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x40874e08"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x408944a0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x408627a0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x4086d630"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x4086d630"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40891dd8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x4085f1d8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x4086dd48"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x4086dd48"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x4088f550"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x40811010"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x408715c8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x408715c8"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x40894c30"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <from><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x40866010"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40880838"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40880838"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x408893a0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408609d8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4087c288"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4087c288"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408a3d68"/></to>
    </wire>
    <wire loc="213:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4087be60"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40a77e28"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40883bd8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x4088b3f8"/></to>
    </wire>
    <wire loc="292:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x4088b3f8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40b971c0"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x408937d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40920170"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x408930c8"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x4096e488"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40892a68"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4094b3e0"/></to>
    </wire>
    <wire loc="163:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x40893ef8"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x409ddf10"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x408877f0"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x4088d010"/></to>
    </wire>
    <wire loc="290:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x4088d010"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40b71e18"/></to>
    </wire>
    <wire loc="214:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x408917b8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40a6a3f0"/></to>
    </wire>
    <wire loc="263:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x408893a0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40b4a6f0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x4087ec58"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x4088a7a8"/></to>
    </wire>
    <wire loc="293:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x4088a7a8"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40b93d28"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x408843e0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x4088fc40"/></to>
    </wire>
    <wire loc="291:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x4088fc40"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40b94960"/></to>
    </wire>
    <wire loc="245:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40891230"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40af4150"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x408944a0"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x4094ba78"/></to>
    </wire>
    <wire loc="190:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40891dd8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40a58648"/></to>
    </wire>
    <wire loc="222:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x4088f550"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40ab9070"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x40894c30"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x4096e170"/></to>
    </wire>
    <wire loc="264:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408a3d68"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40b34ee8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40a77e28"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40a6a9f8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40b971c0"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40bac510"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40920170"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e55ec8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x409ddf10"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40e8ae30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40a6a3f0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40ec3778"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40b71e18"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40b861b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40b4a6f0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40f148f8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40b93d28"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40c273e0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40b94960"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40baad60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketLink" scoped="" ref="0x40a58648"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40eb3ac0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40ab9070"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40ef4cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40b34ee8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40f15108"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x408cba58"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x409e7530"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x409e7530"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40e8b3d0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x408bb620"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40b93d28"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x408c8480"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40b4a6f0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RFA1Packet" scoped="" ref="0x408c5a10"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40b71478"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40b71478"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40b877f0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x408efc00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40924260"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40924260"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e37598"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4096e7d0"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x409e7530"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4096c9e8"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40988ab0"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4096cee0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x40987010"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x4096c250"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40987348"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40987b10"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x409fa1d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x409fa1d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40e93798"/></to>
    </wire>
    <wire loc="172:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40997030"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a58330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40a58330"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40a57a18"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40997368"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x409fe948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x409fe948"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40e89890"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x409fd1a0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a58ce0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40a58ce0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40eb2230"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40a26428"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x408ad8e8"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409faaf8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a22d70"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40a22d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40eb35e8"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a564d8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40af4150"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40a57520"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a70450"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40a70450"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40a69010"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40a57a18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a70948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40a70948"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40a69508"/></to>
    </wire>
    <wire loc="197:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40a57d50"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40a70c60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40a70c60"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40a69840"/></to>
    </wire>
    <wire loc="209:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40a6a9f8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40a88248"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40a88248"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40ec1ae0"/></to>
    </wire>
    <wire loc="210:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40a69010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a88820"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x40a88820"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40ef44a8"/></to>
    </wire>
    <wire loc="211:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40a69508"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a88d18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40a88d18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40ef49a0"/></to>
    </wire>
    <wire loc="212:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40a69840"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40b49d88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40b49d88"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40f48010"/></to>
    </wire>
    <wire loc="219:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40ab9cf0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40ab5a38"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x40ab5a38"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40f0bb78"/></to>
    </wire>
    <wire loc="220:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40ab8230"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x409fa6b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x409fa6b0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40e93c70"/></to>
    </wire>
    <wire loc="221:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40ab9578"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40b7d800"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x40b7d800"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40b7a6a8"/></to>
    </wire>
    <wire loc="226:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40a26010"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40ab5f10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40ab5f10"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40f09070"/></to>
    </wire>
    <wire loc="235:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40ada338"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x408a86f8"/></to>
    </wire>
    <wire loc="236:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40ab3378"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40af57b8"/></to>
    </wire>
    <wire loc="237:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40ab3870"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40af5c90"/></to>
    </wire>
    <wire loc="238:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40ab3c68"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x408ef348"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="243:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x40b00050"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40b6b350"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="244:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40b01010"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x408ef348"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="246:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40b016c8"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x408af228"/></to>
    </wire>
    <wire loc="247:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40af4678"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40b17aa0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x40b17aa0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40b139c8"/></to>
    </wire>
    <wire loc="248:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40af4b70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40b16010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40b16010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40b13ec0"/></to>
    </wire>
    <wire loc="253:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40b12eb0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x40898da8"/></to>
    </wire>
    <wire loc="254:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b139c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40b7c010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x40b7c010"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40b7aec0"/></to>
    </wire>
    <wire loc="255:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40b13ec0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40b7c4e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40b7c4e8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40b793e0"/></to>
    </wire>
    <wire loc="256:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x40b12300"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40b71010"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40b71010"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40b87388"/></to>
    </wire>
    <wire loc="261:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40b70690"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40b93d28"/></to>
    </wire>
    <wire loc="262:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40b70f08"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40b6b918"/></to>
    </wire>
    <wire loc="265:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x40b6e6b0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40b6b350"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="270:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40b691a0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40b71478"/></to>
    </wire>
    <wire loc="280:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40b77410"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x40898da8"/></to>
    </wire>
    <wire loc="281:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b7aec0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40b72610"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40b72610"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40b889d0"/></to>
    </wire>
    <wire loc="282:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40b793e0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40b72b68"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40b72b68"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40b88f28"/></to>
    </wire>
    <wire loc="283:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40b7a6a8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40b75db8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40b75db8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40b881f8"/></to>
    </wire>
    <wire loc="288:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40b916f8"/></from>
      <to><interface-ref name="RFA1DriverConfig" scoped="" ref="0x40899ce0"/></to>
    </wire>
    <wire loc="289:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40b90010"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40b4a6f0"/></to>
    </wire>
    <wire loc="295:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40b8e7d0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40b6b350"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="296:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40b8eee8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40b6b350"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="297:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40b8d5c8"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40b6b350"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x408ef348"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40e0d440"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40e0dc38"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x408efc00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Tasklet" scoped="" ref="0x40e0b580"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40910d48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x40e34010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40568c90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x40e32010"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40563470"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x409208b0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40e54618"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40920cb8"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40e54a20"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40e54ee0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4094e208"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x40e52320"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40e57ed8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x40e52918"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40e88070"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x409e9bb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x40e88648"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x409fd1a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Neighborhood" scoped="" ref="0x40e8f310"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x409ff440"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x409ff440"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40a1c3d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40e8f9a8"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40e8ee88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40e8ee88"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40a1ce00"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x40e903e0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x409faaf8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x40e908d8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40a26010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x40e90cd0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40a26428"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x40eb29f8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40a57520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40eb2ed0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a564d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x40eae6f0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40a57d50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="DelayTimer" scoped="" ref="0x40eb1470"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40eac4c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40eac4c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4065ce48"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="send" scoped="" ref="0x40eaeea8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x40ef3260"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40ab9578"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Tasklet" scoped="" ref="0x40ef39d8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40910d48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioSend" scoped="" ref="0x40ef2010"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40ab9cf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40ef24e8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40ab8230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="sendTask" scoped="" ref="0x40ef2d58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x40ef1270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="deliverTask" scoped="" ref="0x40ef2920"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SubSend" scoped="" ref="0x40f094b8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40ab3378"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Config" scoped="" ref="0x40f078e8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40ada338"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubReceive" scoped="" ref="0x40f099b0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40ab3870"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40f09da8"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40ab3c68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Random" scoped="" ref="0x40f074d0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40adbe98"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40adbe98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40ad9948"/></to>
    </wire>
    <wire>
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x40f07ee0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40adb5d8"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40ad9088"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40ae0340"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40addb50"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40b21528"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40b14378"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40b16408"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40b12300"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioState" scoped="" ref="0x40b17328"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40b131b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40b16800"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40b12718"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40b14010"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40b12eb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareReceive" scoped="" ref="0x40b17010"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40b14e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareSend" scoped="" ref="0x40b21ae0"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40b14950"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubPacket" scoped="" ref="0x40f46030"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40b70f08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40f48e40"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40b70690"/></to>
    </wire>
    <wire>
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40f47798"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b57f10"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40b57f10"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b53348"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x40f487d8"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x40b6e6b0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b53ce0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405388f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x40b7e9e8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40b7b858"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40b7c8e0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40b797f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40b7ccd8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40b79c10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40b7b4f0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40b77410"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareReceive" scoped="" ref="0x40b7d4e8"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40b7a370"/></to>
    </wire>
    <wire>
      <from><interface-ref name="BareSend" scoped="" ref="0x40b7d010"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40b7be30"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40b95598"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40bab8e8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LocalTime62khzC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40c273e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40c24950"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40ba70a0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40b916f8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40ba7870"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40b8e7d0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40ba5010"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x40b8eee8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40ba56d0"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x40b8d5c8"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40ba2010"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x40b90010"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40ba07c8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40c273e0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x40ba5e80"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x40575860"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40b9f0a8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40910d48"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LocalTime62khzC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40c23360"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4054f368"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <documentation loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="McuInitC" loc="36:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128Rfa1SerialC" loc="1:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <configuration/>
    </component>
    <component qname="Atm128Rfa1SerialP" loc="10:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <module/>
    </component>
    <component qname="Atm128Rfa1Uart1InterruptsP" loc="5:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1Uart1InterruptsP.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="38:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
        <short>&#10; The implementation of the LED mote abstraction for the RCB128RFA1&#10; Platform.</short>
        <long>&#10; The implementation of the LED mote abstraction for the RCB128RFA1&#10; Platform.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="25:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the Atmega128RFA1's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the Atmega128RFA1's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philipp Sommer &#60;sommer@tik.ee.ethz.ch> (Atmega128RFA1 port)&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG" loc="40(HplAtm128GeneralIOC.PortG):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit0" loc="41(HplAtm128GeneralIOC.PortG.Bit0):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit1" loc="41(HplAtm128GeneralIOC.PortG.Bit1):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit2" loc="41(HplAtm128GeneralIOC.PortG.Bit2):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit3" loc="41(HplAtm128GeneralIOC.PortG.Bit3):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit4" loc="41(HplAtm128GeneralIOC.PortG.Bit4):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit5" loc="41(HplAtm128GeneralIOC.PortG.Bit5):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit6" loc="41(HplAtm128GeneralIOC.PortG.Bit6):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortG.Bit7" loc="41(HplAtm128GeneralIOC.PortG.Bit7):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.3 2010-08-10 01:28:33 mmaroti Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405240a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter62khz32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterP):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405240a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="BlinkC" loc="52:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc" safe="">
      <module/>
    </component>
    <component qname="BlinkAppC.Timer0" loc="44(BlinkAppC.Timer0):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C" loc="37(TimerMilliP.AlarmMilli32C.Alarm62khz32C):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="1">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP" loc="35(TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405240a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405240a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer1" loc="44(BlinkAppC.Timer1):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer2" loc="44(BlinkAppC.Timer2):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.TempSensor" loc="1(BlinkAppC.TempSensor):/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorC.nc">
      <instance number="0">
        <component-ref qname="PlatformSensorC"/>
        <arguments>
          <value cst="I:41">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.TempSensor.Adc" loc="21(BlinkAppC.TempSensor.Adc):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/WireAdcP.nc">
      <documentation loc="10:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <documentation loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="82:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-main/src/tinyos-main/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-main/src/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.TempSensor.PlatformSensorP" loc="4(BlinkAppC.TempSensor.PlatformSensorP):/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorP.nc">
      <instance number="0">
        <component-ref qname="PlatformSensorP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Vol0" loc="1(BlinkAppC.Vol0):/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorC.nc">
      <instance number="1">
        <component-ref qname="PlatformSensorC"/>
        <arguments>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Vol0.Adc" loc="21(BlinkAppC.Vol0.Adc):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Vol0.PlatformSensorP" loc="4(BlinkAppC.Vol0.PlatformSensorP):/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorP.nc">
      <instance number="1">
        <component-ref qname="PlatformSensorP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Vol1" loc="1(BlinkAppC.Vol1):/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorC.nc">
      <instance number="2">
        <component-ref qname="PlatformSensorC"/>
        <arguments>
          <value cst="I:41">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Vol1.Adc" loc="21(BlinkAppC.Vol1.Adc):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Vol1.PlatformSensorP" loc="4(BlinkAppC.Vol1.PlatformSensorP):/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorP.nc">
      <instance number="2">
        <component-ref qname="PlatformSensorP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="36:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <configuration/>
    </component>
    <component qname="Ieee154MessageC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <configuration/>
    </component>
    <component qname="RFA1Ieee154MessageC" loc="30:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioC" loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioP" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC" loc="37(RFA1RadioC.RadioAlarmC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC.RadioAlarmP" loc="39(RFA1RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.AlarmC" loc="37(RFA1RadioC.AlarmC):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.AlarmC.AtmegaCompareP" loc="35(RFA1RadioC.AlarmC.AtmegaCompareP):/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405240a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC" loc="83(RFA1RadioC.SendResourceC):/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Queue" loc="42(RFA1RadioC.SendResourceC.Queue):/opt/tinyos-main/src/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Arbiter" loc="49(RFA1RadioC.SendResourceC.Arbiter):/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154MessageLayerC" loc="35(RFA1RadioC.Ieee154MessageLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TinyosNetworkLayerC" loc="50(RFA1RadioC.TinyosNetworkLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC" loc="35(RFA1RadioC.Ieee154PacketLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-main/src/tinyos-main/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC" loc="35(RFA1RadioC.UniqueLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.UniqueLayerP" loc="38(RFA1RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RFA1RadioC.UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.PacketLinkLayerC" loc="73(RFA1RadioC.PacketLinkLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP" loc="40(RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <instance number="0">
        <component-ref qname="PacketLinkLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.PacketLinkLayerC.DelayTimerC" loc="44(RFA1RadioC.PacketLinkLayerC.DelayTimerC):/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC" loc="35(RFA1RadioC.LowPowerListeningLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC" loc="35(RFA1RadioC.MessageBufferLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC" loc="35(RFA1RadioC.CollisionAvoidanceLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-main/src/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.SoftwareAckLayerC" loc="38(RFA1RadioC.SoftwareAckLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CsmaLayerC" loc="35(RFA1RadioC.CsmaLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC" loc="37(RFA1RadioC.TimeStampingLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <configuration/>
    </component>
    <component qname="LocalTimeMilliC.CounterToLocalTimeC" loc="46(LocalTimeMilliC.CounterToLocalTimeC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.MetadataFlagsLayerC" loc="38(RFA1RadioC.MetadataFlagsLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TrafficMonitorLayerC" loc="35(RFA1RadioC.TrafficMonitorLayerC):/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerP" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <module/>
    </component>
    <component qname="LocalTime62khzC" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LocalTime62khzC.nc">
      <configuration/>
    </component>
    <component qname="LocalTime62khzC.LocalTime62khzC" loc="46(LocalTime62khzC.LocalTime62khzC):/opt/tinyos-main/src/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405240a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404ca0e8" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404ca300" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404ca518" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404d24f8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404d2720" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404d2948" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404d2b38" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40535888" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40535888"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40535ce8" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40535ce8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40532010" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40532010"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40532480" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40532480"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x405326e8" loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40532b70" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40532b70"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x4054ed20" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4054ed20"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4054b168" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4054b168"/></type-var>
        </typedef>
        <constant name="mode" ref="0x4054b358" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCompareP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x40671e50" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40671e50"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4066e2c0" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4066e2c0"/></type-var>
        </typedef>
        <constant name="mode" ref="0x4066e4b0" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x4066e6b8" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x4069a010" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x4069a010"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x4069a470" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x4069a470"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x4069a6d8" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x4069a6d8"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x4069ab48" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x4069ab48"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x4069adb0" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406bbd30" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406bbd30"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406ca630" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406ca630"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x406ca810" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PlatformSensorC" loc="1:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorC.nc" abstract="">
      <parameters>
        <constant name="channel" ref="0x407161f0" loc="1:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorC.nc">
          <component-ref qname="PlatformSensorC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x4077a6c8" loc="89:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40777c08" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x4078d528" loc="52:/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-main/src/tinyos-main/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-main/src/tinyos-main/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x407e82b8" loc="23:/opt/tinyos-main/src/tinyos-main/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x407e82b8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="PlatformSensorP" loc="4:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorP.nc" abstract="">
      <parameters>
        <constant name="channel" ref="0x40808010" loc="4:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorP.nc">
          <component-ref qname="PlatformSensorP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40922ed0" loc="83:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x4091c950" loc="42:/opt/tinyos-main/src/tinyos-main/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerP" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b51258" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b51258"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x403f64f0" loc="58:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x403f64f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f66c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403ef820" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403ef820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403ef9f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403f6cd8" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403f6cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f6eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x403f5108" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x403f5108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f52e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x403fc690" loc="45:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x403fc690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403fc868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403f5b08" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403f5b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f5ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x403fc2c8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x403fc2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403fc4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x403f5ef8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x403f5ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403fc0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x403ff250" loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x403ff250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ff428"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x403ff658" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x403ff658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ff830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40406060" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40406060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40406238"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialInit" ref="0x40406470" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialInit" scoped="" ref="0x40406470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40406648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x40406858" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x40406858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40406a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x40406c20" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x40406c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40406df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40409d98" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40409d98"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f77d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f77d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40408010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4040d740" loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4040d740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4040d918"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4040d9f8"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4040dad8"/>
        <function-ref name="actualMicro" scoped="" ref="0x4040dbb8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4040dc98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Byte" ref="0x40428f28" loc="5:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Byte" scoped="" ref="0x40428f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40425110"/>
        <function-ref name="receive" scoped="" ref="0x404251f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Stream" ref="0x4041c0a0" loc="4:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Stream" scoped="" ref="0x4041c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4041c278"/>
        <function-ref name="receivedByte" scoped="" ref="0x4041c358"/>
        <function-ref name="receive" scoped="" ref="0x4041c438"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x4041c518"/>
        <function-ref name="receiveDone" scoped="" ref="0x4041c5f8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x4041c6d8"/>
        <function-ref name="sendDone" scoped="" ref="0x4041c7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x4041d130" loc="3:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x4041d130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4041d308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1StreamBlocking" ref="0x40425498" loc="6:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialC.nc">
      <component-ref qname="Atm128Rfa1SerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x40425498"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40425670"/>
        <function-ref name="receivedByte" scoped="" ref="0x40425750"/>
        <function-ref name="receive" scoped="" ref="0x40425830"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40425910"/>
        <function-ref name="receiveDone" scoped="" ref="0x404259f0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40425ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x40425bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Byte" ref="0x4042b790" loc="13:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Byte" scoped="" ref="0x4042b790"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4042b968"/>
        <function-ref name="receive" scoped="" ref="0x4042ba48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBlockingDoneTask" ref="0x40439718" loc="33:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBlockingDoneTask" scoped="" ref="0x40439718"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404398f0"/>
        <function-ref name="runTask" scoped="" ref="0x404399d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDoneTask" ref="0x40438818" loc="36:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDoneTask" scoped="" ref="0x40438818"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404389f0"/>
        <function-ref name="runTask" scoped="" ref="0x40438ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Stream" ref="0x4042bca0" loc="14:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Stream" scoped="" ref="0x4042bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4042be78"/>
        <function-ref name="receivedByte" scoped="" ref="0x40431010"/>
        <function-ref name="receive" scoped="" ref="0x404310f0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x404311d0"/>
        <function-ref name="receiveDone" scoped="" ref="0x404312b0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40431390"/>
        <function-ref name="sendDone" scoped="" ref="0x40431470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="unexpectedByteReceivedTask" ref="0x40443900" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="unexpectedByteReceivedTask" scoped="" ref="0x40443900"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40443b58"/>
        <function-ref name="runTask" scoped="" ref="0x40443c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1StreamBlocking" ref="0x40431718" loc="15:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1StreamBlocking" scoped="" ref="0x40431718"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404318f0"/>
        <function-ref name="receivedByte" scoped="" ref="0x404319d0"/>
        <function-ref name="receive" scoped="" ref="0x40431ab0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40431b90"/>
        <function-ref name="receiveDone" scoped="" ref="0x40431c70"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40431d50"/>
        <function-ref name="sendDone" scoped="" ref="0x40431e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x4042b380" loc="12:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x4042b380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4042b558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Uart1Interrupts" ref="0x40436910" loc="18:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Interrupts" scoped="" ref="0x40436910"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxInterruptPending" scoped="" ref="0x4042f470"/>
        <function-ref name="txInterruptHandler" scoped="" ref="0x40436bc8"/>
        <function-ref name="rxInterruptHandler" scoped="" ref="0x40436ca8"/>
        <function-ref name="enableRxInterrupt" scoped="" ref="0x40436d88"/>
        <function-ref name="enableTxInterrupt" scoped="" ref="0x40436e68"/>
        <function-ref name="disableRxInterrupt" scoped="" ref="0x4042f010"/>
        <function-ref name="clearTxInterrupt" scoped="" ref="0x4042f0f0"/>
        <function-ref name="isRxInterruptPending" scoped="" ref="0x4042f1d0"/>
        <function-ref name="disableTxInterrupt" scoped="" ref="0x4042f2b0"/>
        <function-ref name="setSendData" scoped="" ref="0x40436ae8"/>
        <function-ref name="clearRxInterrupt" scoped="" ref="0x4042f390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4043c818" loc="19:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4043c818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4042e010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4042e500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4042e288"/>
        <function-ref name="overflow" scoped="" ref="0x4042e778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4042e9d8" loc="20:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4042e9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4042ebb0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4042ec90"/>
        <function-ref name="led1On" scoped="" ref="0x4042ed70"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4042ee50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40435010"/>
        <function-ref name="get" scoped="" ref="0x404350f0"/>
        <function-ref name="led1Off" scoped="" ref="0x404351d0"/>
        <function-ref name="led2Off" scoped="" ref="0x40435550"/>
        <function-ref name="set" scoped="" ref="0x404352b0"/>
        <function-ref name="led0On" scoped="" ref="0x40435390"/>
        <function-ref name="led2On" scoped="" ref="0x40435470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1PowerOverride" ref="0x40430138" loc="16:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1PowerOverride" scoped="" ref="0x40430138"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40430310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveBlockingDoneTask" ref="0x40438010" loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveBlockingDoneTask" scoped="" ref="0x40438010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404381e8"/>
        <function-ref name="runTask" scoped="" ref="0x404382c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDoneTask" ref="0x40443060" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1SerialP.nc">
      <component-ref qname="Atm128Rfa1SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDoneTask" scoped="" ref="0x40443060"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40443238"/>
        <function-ref name="runTask" scoped="" ref="0x40443318"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Interrupts" ref="0x4047f768" loc="7:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1Uart1InterruptsP.nc">
      <component-ref qname="Atm128Rfa1Uart1InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Interrupts" scoped="" ref="0x4047f768"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxInterruptPending" scoped="" ref="0x4047c2b0"/>
        <function-ref name="txInterruptHandler" scoped="" ref="0x4047fa20"/>
        <function-ref name="rxInterruptHandler" scoped="" ref="0x4047fb00"/>
        <function-ref name="enableRxInterrupt" scoped="" ref="0x4047fbe0"/>
        <function-ref name="enableTxInterrupt" scoped="" ref="0x4047fcc0"/>
        <function-ref name="disableRxInterrupt" scoped="" ref="0x4047fda0"/>
        <function-ref name="clearTxInterrupt" scoped="" ref="0x4047fe80"/>
        <function-ref name="isRxInterruptPending" scoped="" ref="0x4047c010"/>
        <function-ref name="disableTxInterrupt" scoped="" ref="0x4047c0f0"/>
        <function-ref name="setSendData" scoped="" ref="0x4047f940"/>
        <function-ref name="clearRxInterrupt" scoped="" ref="0x4047c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4047c440" loc="8:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/usart/Atm128Rfa1Uart1InterruptsP.nc">
      <component-ref qname="Atm128Rfa1Uart1InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4047c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4047c618"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4047c6f8"/>
        <function-ref name="led1On" scoped="" ref="0x4047c7d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4047c8b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4047c998"/>
        <function-ref name="get" scoped="" ref="0x4047ca78"/>
        <function-ref name="led1Off" scoped="" ref="0x4047cb58"/>
        <function-ref name="led2Off" scoped="" ref="0x4047ced8"/>
        <function-ref name="set" scoped="" ref="0x4047cc38"/>
        <function-ref name="led0On" scoped="" ref="0x4047cd18"/>
        <function-ref name="led2On" scoped="" ref="0x4047cdf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4047edf8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4047edf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4048e010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4048e0f0"/>
        <function-ref name="led1On" scoped="" ref="0x4048e1d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4048e2b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4048e390"/>
        <function-ref name="get" scoped="" ref="0x4048e470"/>
        <function-ref name="led1Off" scoped="" ref="0x4048e550"/>
        <function-ref name="led2Off" scoped="" ref="0x4048e8d0"/>
        <function-ref name="set" scoped="" ref="0x4048e630"/>
        <function-ref name="led0On" scoped="" ref="0x4048e710"/>
        <function-ref name="led2On" scoped="" ref="0x4048e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x404950a0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x404950a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40495278"/>
        <function-ref name="isInput" scoped="" ref="0x40495358"/>
        <function-ref name="toggle" scoped="" ref="0x40495438"/>
        <function-ref name="isOutput" scoped="" ref="0x40495518"/>
        <function-ref name="get" scoped="" ref="0x404955f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404956d8"/>
        <function-ref name="set" scoped="" ref="0x404957b8"/>
        <function-ref name="clr" scoped="" ref="0x40495898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4048ef20" loc="40:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4048ef20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40497110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40495a88" loc="45:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40495a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40495c60"/>
        <function-ref name="isInput" scoped="" ref="0x40495d40"/>
        <function-ref name="toggle" scoped="" ref="0x40495e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40495f00"/>
        <function-ref name="get" scoped="" ref="0x40494010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404940f0"/>
        <function-ref name="set" scoped="" ref="0x404941d0"/>
        <function-ref name="clr" scoped="" ref="0x404942b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40497280" loc="41:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40497280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40497458"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40497538"/>
        <function-ref name="led1On" scoped="" ref="0x40497618"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404976f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404977d8"/>
        <function-ref name="get" scoped="" ref="0x404978b8"/>
        <function-ref name="led1Off" scoped="" ref="0x40497998"/>
        <function-ref name="led2Off" scoped="" ref="0x40497d18"/>
        <function-ref name="set" scoped="" ref="0x40497a78"/>
        <function-ref name="led0On" scoped="" ref="0x40497b58"/>
        <function-ref name="led2On" scoped="" ref="0x40497c38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x404944a0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x404944a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40494678"/>
        <function-ref name="isInput" scoped="" ref="0x40494758"/>
        <function-ref name="toggle" scoped="" ref="0x40494838"/>
        <function-ref name="isOutput" scoped="" ref="0x40494918"/>
        <function-ref name="get" scoped="" ref="0x404949f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40494ad8"/>
        <function-ref name="set" scoped="" ref="0x40494bb8"/>
        <function-ref name="clr" scoped="" ref="0x40494c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x4048dd48" loc="37:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x4048dd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4048df20"/>
        <function-ref name="isInput" scoped="" ref="0x404a6018"/>
        <function-ref name="toggle" scoped="" ref="0x404a60f8"/>
        <function-ref name="isOutput" scoped="" ref="0x404a61d8"/>
        <function-ref name="get" scoped="" ref="0x404a62b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a6398"/>
        <function-ref name="set" scoped="" ref="0x404a6478"/>
        <function-ref name="clr" scoped="" ref="0x404a6558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x404a6768" loc="38:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x404a6768"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a6940"/>
        <function-ref name="isInput" scoped="" ref="0x404a6a20"/>
        <function-ref name="toggle" scoped="" ref="0x404a6b00"/>
        <function-ref name="isOutput" scoped="" ref="0x404a6be0"/>
        <function-ref name="get" scoped="" ref="0x404a6cc0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a6da0"/>
        <function-ref name="set" scoped="" ref="0x404a6e80"/>
        <function-ref name="clr" scoped="" ref="0x404a5010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x404a5ba8" loc="40:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404a5ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a5d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x404a5220" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x404a5220"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a53f8"/>
        <function-ref name="isInput" scoped="" ref="0x404a54d8"/>
        <function-ref name="toggle" scoped="" ref="0x404a55b8"/>
        <function-ref name="isOutput" scoped="" ref="0x404a5698"/>
        <function-ref name="get" scoped="" ref="0x404a5778"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a5858"/>
        <function-ref name="set" scoped="" ref="0x404a5938"/>
        <function-ref name="clr" scoped="" ref="0x404a5a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x404b72f0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x404b72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b74c8"/>
        <function-ref name="isInput" scoped="" ref="0x404b75a8"/>
        <function-ref name="toggle" scoped="" ref="0x404b7688"/>
        <function-ref name="isOutput" scoped="" ref="0x404b7768"/>
        <function-ref name="get" scoped="" ref="0x404b7848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b7928"/>
        <function-ref name="set" scoped="" ref="0x404b7a08"/>
        <function-ref name="clr" scoped="" ref="0x404b7ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x404b1a98" loc="58:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x404b1a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b1c70"/>
        <function-ref name="isInput" scoped="" ref="0x404b1d50"/>
        <function-ref name="toggle" scoped="" ref="0x404b1e30"/>
        <function-ref name="isOutput" scoped="" ref="0x404b1f10"/>
        <function-ref name="get" scoped="" ref="0x404be010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404be0f0"/>
        <function-ref name="set" scoped="" ref="0x404be1d0"/>
        <function-ref name="clr" scoped="" ref="0x404be2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x404bace8" loc="67:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x404bace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404baec0"/>
        <function-ref name="isInput" scoped="" ref="0x404b9010"/>
        <function-ref name="toggle" scoped="" ref="0x404b90f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b91d0"/>
        <function-ref name="get" scoped="" ref="0x404b92b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b9390"/>
        <function-ref name="set" scoped="" ref="0x404b9470"/>
        <function-ref name="clr" scoped="" ref="0x404b9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x404c30a0" loc="74:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x404c30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c3278"/>
        <function-ref name="isInput" scoped="" ref="0x404c3358"/>
        <function-ref name="toggle" scoped="" ref="0x404c3438"/>
        <function-ref name="isOutput" scoped="" ref="0x404c3518"/>
        <function-ref name="get" scoped="" ref="0x404c35f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c36d8"/>
        <function-ref name="set" scoped="" ref="0x404c37b8"/>
        <function-ref name="clr" scoped="" ref="0x404c3898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x404c02f0" loc="79:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x404c02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c04c8"/>
        <function-ref name="isInput" scoped="" ref="0x404c05a8"/>
        <function-ref name="toggle" scoped="" ref="0x404c0688"/>
        <function-ref name="isOutput" scoped="" ref="0x404c0768"/>
        <function-ref name="get" scoped="" ref="0x404c0848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c0928"/>
        <function-ref name="set" scoped="" ref="0x404c0a08"/>
        <function-ref name="clr" scoped="" ref="0x404c0ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x404bb830" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x404bb830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bba08"/>
        <function-ref name="isInput" scoped="" ref="0x404bbae8"/>
        <function-ref name="toggle" scoped="" ref="0x404bbbc8"/>
        <function-ref name="isOutput" scoped="" ref="0x404bbca8"/>
        <function-ref name="get" scoped="" ref="0x404bbd88"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bbe68"/>
        <function-ref name="set" scoped="" ref="0x404ba010"/>
        <function-ref name="clr" scoped="" ref="0x404ba0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x404a4698" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x404a4698"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a4870"/>
        <function-ref name="isInput" scoped="" ref="0x404a4950"/>
        <function-ref name="toggle" scoped="" ref="0x404a4a30"/>
        <function-ref name="isOutput" scoped="" ref="0x404a4b10"/>
        <function-ref name="get" scoped="" ref="0x404a4bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a4cd0"/>
        <function-ref name="set" scoped="" ref="0x404a4db0"/>
        <function-ref name="clr" scoped="" ref="0x404a4e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x404b5210" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x404b5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b5468"/>
        <function-ref name="isInput" scoped="" ref="0x404b5548"/>
        <function-ref name="toggle" scoped="" ref="0x404b5628"/>
        <function-ref name="isOutput" scoped="" ref="0x404b5708"/>
        <function-ref name="get" scoped="" ref="0x404b57e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b58c8"/>
        <function-ref name="set" scoped="" ref="0x404b59a8"/>
        <function-ref name="clr" scoped="" ref="0x404b5a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x404ad590" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x404ad590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ad768"/>
        <function-ref name="isInput" scoped="" ref="0x404ad848"/>
        <function-ref name="toggle" scoped="" ref="0x404ad928"/>
        <function-ref name="isOutput" scoped="" ref="0x404ada08"/>
        <function-ref name="get" scoped="" ref="0x404adae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404adbc8"/>
        <function-ref name="set" scoped="" ref="0x404adca8"/>
        <function-ref name="clr" scoped="" ref="0x404add88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x404b3210" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x404b3210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b33e8"/>
        <function-ref name="isInput" scoped="" ref="0x404b34c8"/>
        <function-ref name="toggle" scoped="" ref="0x404b35a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b3688"/>
        <function-ref name="get" scoped="" ref="0x404b3768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b3848"/>
        <function-ref name="set" scoped="" ref="0x404b3928"/>
        <function-ref name="clr" scoped="" ref="0x404b3a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x404bd8e0" loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x404bd8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bdab8"/>
        <function-ref name="isInput" scoped="" ref="0x404bdb98"/>
        <function-ref name="toggle" scoped="" ref="0x404bdc78"/>
        <function-ref name="isOutput" scoped="" ref="0x404bdd58"/>
        <function-ref name="get" scoped="" ref="0x404bde38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bdf18"/>
        <function-ref name="set" scoped="" ref="0x404bc010"/>
        <function-ref name="clr" scoped="" ref="0x404bc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x404b2670" loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x404b2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b2848"/>
        <function-ref name="isInput" scoped="" ref="0x404b2928"/>
        <function-ref name="toggle" scoped="" ref="0x404b2a08"/>
        <function-ref name="isOutput" scoped="" ref="0x404b2ae8"/>
        <function-ref name="get" scoped="" ref="0x404b2bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b2ca8"/>
        <function-ref name="set" scoped="" ref="0x404b2d88"/>
        <function-ref name="clr" scoped="" ref="0x404b2e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x404b8c08" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x404b8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b8de0"/>
        <function-ref name="isInput" scoped="" ref="0x404b8ec0"/>
        <function-ref name="toggle" scoped="" ref="0x404c5010"/>
        <function-ref name="isOutput" scoped="" ref="0x404c50f0"/>
        <function-ref name="get" scoped="" ref="0x404c51d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c52b0"/>
        <function-ref name="set" scoped="" ref="0x404c5390"/>
        <function-ref name="clr" scoped="" ref="0x404c5470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x404c2ea8" loc="77:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x404c2ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c10c0"/>
        <function-ref name="isInput" scoped="" ref="0x404c11a0"/>
        <function-ref name="toggle" scoped="" ref="0x404c1280"/>
        <function-ref name="isOutput" scoped="" ref="0x404c1360"/>
        <function-ref name="get" scoped="" ref="0x404c1440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c1520"/>
        <function-ref name="set" scoped="" ref="0x404c1600"/>
        <function-ref name="clr" scoped="" ref="0x404c16e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x404ab4b0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x404ab4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ab688"/>
        <function-ref name="isInput" scoped="" ref="0x404ab768"/>
        <function-ref name="toggle" scoped="" ref="0x404ab848"/>
        <function-ref name="isOutput" scoped="" ref="0x404ab928"/>
        <function-ref name="get" scoped="" ref="0x404aba08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404abae8"/>
        <function-ref name="set" scoped="" ref="0x404abbc8"/>
        <function-ref name="clr" scoped="" ref="0x404abca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x404c3a98" loc="75:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x404c3a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c3c70"/>
        <function-ref name="isInput" scoped="" ref="0x404c3d50"/>
        <function-ref name="toggle" scoped="" ref="0x404c3e30"/>
        <function-ref name="isOutput" scoped="" ref="0x404c3f10"/>
        <function-ref name="get" scoped="" ref="0x404c2010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c20f0"/>
        <function-ref name="set" scoped="" ref="0x404c21d0"/>
        <function-ref name="clr" scoped="" ref="0x404c22b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x404b7ce8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x404b7ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b7ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404b6010"/>
        <function-ref name="toggle" scoped="" ref="0x404b60f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b61d0"/>
        <function-ref name="get" scoped="" ref="0x404b62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b6390"/>
        <function-ref name="set" scoped="" ref="0x404b6470"/>
        <function-ref name="clr" scoped="" ref="0x404b6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x404be4b0" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x404be4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404be688"/>
        <function-ref name="isInput" scoped="" ref="0x404be768"/>
        <function-ref name="toggle" scoped="" ref="0x404be848"/>
        <function-ref name="isOutput" scoped="" ref="0x404be928"/>
        <function-ref name="get" scoped="" ref="0x404bea08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404beae8"/>
        <function-ref name="set" scoped="" ref="0x404bebc8"/>
        <function-ref name="clr" scoped="" ref="0x404beca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x404b9750" loc="68:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x404b9750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b9928"/>
        <function-ref name="isInput" scoped="" ref="0x404b9a08"/>
        <function-ref name="toggle" scoped="" ref="0x404b9ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b9bc8"/>
        <function-ref name="get" scoped="" ref="0x404b9ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b9d88"/>
        <function-ref name="set" scoped="" ref="0x404b9e68"/>
        <function-ref name="clr" scoped="" ref="0x404b8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x404ae0c0" loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x404ae0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ae298"/>
        <function-ref name="isInput" scoped="" ref="0x404ae378"/>
        <function-ref name="toggle" scoped="" ref="0x404ae458"/>
        <function-ref name="isOutput" scoped="" ref="0x404ae538"/>
        <function-ref name="get" scoped="" ref="0x404ae618"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ae6f8"/>
        <function-ref name="set" scoped="" ref="0x404ae7d8"/>
        <function-ref name="clr" scoped="" ref="0x404ae8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x404b5c88" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x404b5c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b5e60"/>
        <function-ref name="isInput" scoped="" ref="0x404b4010"/>
        <function-ref name="toggle" scoped="" ref="0x404b40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b41d0"/>
        <function-ref name="get" scoped="" ref="0x404b42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b4390"/>
        <function-ref name="set" scoped="" ref="0x404b4470"/>
        <function-ref name="clr" scoped="" ref="0x404b4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x404ac010" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x404ac010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ac1e8"/>
        <function-ref name="isInput" scoped="" ref="0x404ac2c8"/>
        <function-ref name="toggle" scoped="" ref="0x404ac3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ac488"/>
        <function-ref name="get" scoped="" ref="0x404ac568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ac648"/>
        <function-ref name="set" scoped="" ref="0x404ac728"/>
        <function-ref name="clr" scoped="" ref="0x404ac808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x404bc2f0" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x404bc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bc4c8"/>
        <function-ref name="isInput" scoped="" ref="0x404bc5a8"/>
        <function-ref name="toggle" scoped="" ref="0x404bc688"/>
        <function-ref name="isOutput" scoped="" ref="0x404bc768"/>
        <function-ref name="get" scoped="" ref="0x404bc848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bc928"/>
        <function-ref name="set" scoped="" ref="0x404bca08"/>
        <function-ref name="clr" scoped="" ref="0x404bcae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x404c5670" loc="71:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x404c5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c5848"/>
        <function-ref name="isInput" scoped="" ref="0x404c5928"/>
        <function-ref name="toggle" scoped="" ref="0x404c5a08"/>
        <function-ref name="isOutput" scoped="" ref="0x404c5ae8"/>
        <function-ref name="get" scoped="" ref="0x404c5bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c5ca8"/>
        <function-ref name="set" scoped="" ref="0x404c5d88"/>
        <function-ref name="clr" scoped="" ref="0x404c5e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x404aa8e0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x404aa8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404aaab8"/>
        <function-ref name="isInput" scoped="" ref="0x404aab98"/>
        <function-ref name="toggle" scoped="" ref="0x404aac78"/>
        <function-ref name="isOutput" scoped="" ref="0x404aad58"/>
        <function-ref name="get" scoped="" ref="0x404aae38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404aaf18"/>
        <function-ref name="set" scoped="" ref="0x404b7010"/>
        <function-ref name="clr" scoped="" ref="0x404b70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x404b10a0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x404b10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b1278"/>
        <function-ref name="isInput" scoped="" ref="0x404b1358"/>
        <function-ref name="toggle" scoped="" ref="0x404b1438"/>
        <function-ref name="isOutput" scoped="" ref="0x404b1518"/>
        <function-ref name="get" scoped="" ref="0x404b15f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b16d8"/>
        <function-ref name="set" scoped="" ref="0x404b17b8"/>
        <function-ref name="clr" scoped="" ref="0x404b1898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x404ba2f0" loc="66:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x404ba2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ba4c8"/>
        <function-ref name="isInput" scoped="" ref="0x404ba5a8"/>
        <function-ref name="toggle" scoped="" ref="0x404ba688"/>
        <function-ref name="isOutput" scoped="" ref="0x404ba768"/>
        <function-ref name="get" scoped="" ref="0x404ba848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ba928"/>
        <function-ref name="set" scoped="" ref="0x404baa08"/>
        <function-ref name="clr" scoped="" ref="0x404baae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x404c18e0" loc="78:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x404c18e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c1ab8"/>
        <function-ref name="isInput" scoped="" ref="0x404c1b98"/>
        <function-ref name="toggle" scoped="" ref="0x404c1c78"/>
        <function-ref name="isOutput" scoped="" ref="0x404c1d58"/>
        <function-ref name="get" scoped="" ref="0x404c1e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c1f18"/>
        <function-ref name="set" scoped="" ref="0x404c0010"/>
        <function-ref name="clr" scoped="" ref="0x404c00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x404abea8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x404abea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404aa0c0"/>
        <function-ref name="isInput" scoped="" ref="0x404aa1a0"/>
        <function-ref name="toggle" scoped="" ref="0x404aa280"/>
        <function-ref name="isOutput" scoped="" ref="0x404aa360"/>
        <function-ref name="get" scoped="" ref="0x404aa440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404aa520"/>
        <function-ref name="set" scoped="" ref="0x404aa600"/>
        <function-ref name="clr" scoped="" ref="0x404aa6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x404b6750" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x404b6750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b6928"/>
        <function-ref name="isInput" scoped="" ref="0x404b6a08"/>
        <function-ref name="toggle" scoped="" ref="0x404b6ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b6bc8"/>
        <function-ref name="get" scoped="" ref="0x404b6ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b6d88"/>
        <function-ref name="set" scoped="" ref="0x404b6e68"/>
        <function-ref name="clr" scoped="" ref="0x404b5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x404beea8" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x404beea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bd0c0"/>
        <function-ref name="isInput" scoped="" ref="0x404bd1a0"/>
        <function-ref name="toggle" scoped="" ref="0x404bd280"/>
        <function-ref name="isOutput" scoped="" ref="0x404bd360"/>
        <function-ref name="get" scoped="" ref="0x404bd440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bd520"/>
        <function-ref name="set" scoped="" ref="0x404bd600"/>
        <function-ref name="clr" scoped="" ref="0x404bd6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x404aeab8" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x404aeab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404aec90"/>
        <function-ref name="isInput" scoped="" ref="0x404aed70"/>
        <function-ref name="toggle" scoped="" ref="0x404aee50"/>
        <function-ref name="isOutput" scoped="" ref="0x404ad010"/>
        <function-ref name="get" scoped="" ref="0x404ad0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ad1d0"/>
        <function-ref name="set" scoped="" ref="0x404ad2b0"/>
        <function-ref name="clr" scoped="" ref="0x404ad390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x404b4750" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x404b4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b4928"/>
        <function-ref name="isInput" scoped="" ref="0x404b4a08"/>
        <function-ref name="toggle" scoped="" ref="0x404b4ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b4bc8"/>
        <function-ref name="get" scoped="" ref="0x404b4ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b4d88"/>
        <function-ref name="set" scoped="" ref="0x404b4e68"/>
        <function-ref name="clr" scoped="" ref="0x404b3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x404bcce8" loc="64:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x404bcce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bb010"/>
        <function-ref name="isInput" scoped="" ref="0x404bb0f0"/>
        <function-ref name="toggle" scoped="" ref="0x404bb1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404bb2b0"/>
        <function-ref name="get" scoped="" ref="0x404bb390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bb470"/>
        <function-ref name="set" scoped="" ref="0x404bb550"/>
        <function-ref name="clr" scoped="" ref="0x404bb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x404b8210" loc="69:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x404b8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b83e8"/>
        <function-ref name="isInput" scoped="" ref="0x404b84c8"/>
        <function-ref name="toggle" scoped="" ref="0x404b85a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b8688"/>
        <function-ref name="get" scoped="" ref="0x404b8768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b8848"/>
        <function-ref name="set" scoped="" ref="0x404b8928"/>
        <function-ref name="clr" scoped="" ref="0x404b8a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x404b3c08" loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x404b3c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b3de0"/>
        <function-ref name="isInput" scoped="" ref="0x404b3ec0"/>
        <function-ref name="toggle" scoped="" ref="0x404b2010"/>
        <function-ref name="isOutput" scoped="" ref="0x404b20f0"/>
        <function-ref name="get" scoped="" ref="0x404b21d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b22b0"/>
        <function-ref name="set" scoped="" ref="0x404b2390"/>
        <function-ref name="clr" scoped="" ref="0x404b2470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x404c24b0" loc="76:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x404c24b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c2688"/>
        <function-ref name="isInput" scoped="" ref="0x404c2768"/>
        <function-ref name="toggle" scoped="" ref="0x404c2848"/>
        <function-ref name="isOutput" scoped="" ref="0x404c2928"/>
        <function-ref name="get" scoped="" ref="0x404c2a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c2ae8"/>
        <function-ref name="set" scoped="" ref="0x404c2bc8"/>
        <function-ref name="clr" scoped="" ref="0x404c2ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x404aca08" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x404aca08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404acbe0"/>
        <function-ref name="isInput" scoped="" ref="0x404accc0"/>
        <function-ref name="toggle" scoped="" ref="0x404acda0"/>
        <function-ref name="isOutput" scoped="" ref="0x404ace80"/>
        <function-ref name="get" scoped="" ref="0x404ab010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ab0f0"/>
        <function-ref name="set" scoped="" ref="0x404ab1d0"/>
        <function-ref name="clr" scoped="" ref="0x404ab2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404ebba8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404ebba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ebd80"/>
        <function-ref name="isInput" scoped="" ref="0x404ebe60"/>
        <function-ref name="toggle" scoped="" ref="0x404ea010"/>
        <function-ref name="isOutput" scoped="" ref="0x404ea0f0"/>
        <function-ref name="get" scoped="" ref="0x404ea1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ea2b0"/>
        <function-ref name="set" scoped="" ref="0x404ea390"/>
        <function-ref name="clr" scoped="" ref="0x404ea470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404e9890" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404e9890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e9a68"/>
        <function-ref name="isInput" scoped="" ref="0x404e9b48"/>
        <function-ref name="toggle" scoped="" ref="0x404e9c28"/>
        <function-ref name="isOutput" scoped="" ref="0x404e9d08"/>
        <function-ref name="get" scoped="" ref="0x404e9de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e9ec8"/>
        <function-ref name="set" scoped="" ref="0x404f6010"/>
        <function-ref name="clr" scoped="" ref="0x404f60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404ec8e0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404ec8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ecab8"/>
        <function-ref name="isInput" scoped="" ref="0x404ecb98"/>
        <function-ref name="toggle" scoped="" ref="0x404ecc78"/>
        <function-ref name="isOutput" scoped="" ref="0x404ecd58"/>
        <function-ref name="get" scoped="" ref="0x404ece38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ecf18"/>
        <function-ref name="set" scoped="" ref="0x404eb010"/>
        <function-ref name="clr" scoped="" ref="0x404eb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404ea5d0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404ea5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ea7a8"/>
        <function-ref name="isInput" scoped="" ref="0x404ea888"/>
        <function-ref name="toggle" scoped="" ref="0x404ea968"/>
        <function-ref name="isOutput" scoped="" ref="0x404eaa48"/>
        <function-ref name="get" scoped="" ref="0x404eab28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404eac08"/>
        <function-ref name="set" scoped="" ref="0x404eace8"/>
        <function-ref name="clr" scoped="" ref="0x404eadc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404f6250" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404f6250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f6428"/>
        <function-ref name="isInput" scoped="" ref="0x404f6508"/>
        <function-ref name="toggle" scoped="" ref="0x404f65e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404f66c8"/>
        <function-ref name="get" scoped="" ref="0x404f67a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f6888"/>
        <function-ref name="set" scoped="" ref="0x404f6968"/>
        <function-ref name="clr" scoped="" ref="0x404f6a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404eb250" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404eb250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404eb428"/>
        <function-ref name="isInput" scoped="" ref="0x404eb508"/>
        <function-ref name="toggle" scoped="" ref="0x404eb5e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404eb6c8"/>
        <function-ref name="get" scoped="" ref="0x404eb7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404eb888"/>
        <function-ref name="set" scoped="" ref="0x404eb968"/>
        <function-ref name="clr" scoped="" ref="0x404eba48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404eaf28" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404eaf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e9110"/>
        <function-ref name="isInput" scoped="" ref="0x404e91f0"/>
        <function-ref name="toggle" scoped="" ref="0x404e92d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404e93b0"/>
        <function-ref name="get" scoped="" ref="0x404e9490"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e9570"/>
        <function-ref name="set" scoped="" ref="0x404e9650"/>
        <function-ref name="clr" scoped="" ref="0x404e9730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404f6ba8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404f6ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f6d80"/>
        <function-ref name="isInput" scoped="" ref="0x404f6e60"/>
        <function-ref name="toggle" scoped="" ref="0x404f5010"/>
        <function-ref name="isOutput" scoped="" ref="0x404f50f0"/>
        <function-ref name="get" scoped="" ref="0x404f51d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f52b0"/>
        <function-ref name="set" scoped="" ref="0x404f5390"/>
        <function-ref name="clr" scoped="" ref="0x404f5470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c473e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c473e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c475c0"/>
        <function-ref name="isInput" scoped="" ref="0x40c476a0"/>
        <function-ref name="toggle" scoped="" ref="0x40c47780"/>
        <function-ref name="isOutput" scoped="" ref="0x40c47860"/>
        <function-ref name="get" scoped="" ref="0x40c47940"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c47a20"/>
        <function-ref name="set" scoped="" ref="0x40c47b00"/>
        <function-ref name="clr" scoped="" ref="0x40c47be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c46da8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c46da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c45010"/>
        <function-ref name="isInput" scoped="" ref="0x40c450f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c451d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c452b0"/>
        <function-ref name="get" scoped="" ref="0x40c45390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c45470"/>
        <function-ref name="set" scoped="" ref="0x40c45550"/>
        <function-ref name="clr" scoped="" ref="0x40c45630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c447f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c447f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c449d0"/>
        <function-ref name="isInput" scoped="" ref="0x40c44ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40c44b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40c44c70"/>
        <function-ref name="get" scoped="" ref="0x40c44d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c44e30"/>
        <function-ref name="set" scoped="" ref="0x40c44f10"/>
        <function-ref name="clr" scoped="" ref="0x40c43010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c73228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c73228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c73400"/>
        <function-ref name="isInput" scoped="" ref="0x40c734e0"/>
        <function-ref name="toggle" scoped="" ref="0x40c735c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c736a0"/>
        <function-ref name="get" scoped="" ref="0x40c73780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c73860"/>
        <function-ref name="set" scoped="" ref="0x40c73940"/>
        <function-ref name="clr" scoped="" ref="0x40c73a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c72c08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c72c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c72de0"/>
        <function-ref name="isInput" scoped="" ref="0x40c72ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40c71010"/>
        <function-ref name="isOutput" scoped="" ref="0x40c710f0"/>
        <function-ref name="get" scoped="" ref="0x40c711d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c712b0"/>
        <function-ref name="set" scoped="" ref="0x40c71390"/>
        <function-ref name="clr" scoped="" ref="0x40c71470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c706c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c706c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c70898"/>
        <function-ref name="isInput" scoped="" ref="0x40c70978"/>
        <function-ref name="toggle" scoped="" ref="0x40c70a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40c70b38"/>
        <function-ref name="get" scoped="" ref="0x40c70c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c70cf8"/>
        <function-ref name="set" scoped="" ref="0x40c70dd8"/>
        <function-ref name="clr" scoped="" ref="0x40c70eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c6e0b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c6e0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c6e288"/>
        <function-ref name="isInput" scoped="" ref="0x40c6e368"/>
        <function-ref name="toggle" scoped="" ref="0x40c6e448"/>
        <function-ref name="isOutput" scoped="" ref="0x40c6e528"/>
        <function-ref name="get" scoped="" ref="0x40c6e608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c6e6e8"/>
        <function-ref name="set" scoped="" ref="0x40c6e7c8"/>
        <function-ref name="clr" scoped="" ref="0x40c6e8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c6da88" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c6da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c6dc60"/>
        <function-ref name="isInput" scoped="" ref="0x40c6dd40"/>
        <function-ref name="toggle" scoped="" ref="0x40c6de20"/>
        <function-ref name="isOutput" scoped="" ref="0x40c6df00"/>
        <function-ref name="get" scoped="" ref="0x40c6b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c6b0f0"/>
        <function-ref name="set" scoped="" ref="0x40c6b1d0"/>
        <function-ref name="clr" scoped="" ref="0x40c6b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404f14f0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404f14f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f16c8"/>
        <function-ref name="isInput" scoped="" ref="0x404f17a8"/>
        <function-ref name="toggle" scoped="" ref="0x404f1888"/>
        <function-ref name="isOutput" scoped="" ref="0x404f1968"/>
        <function-ref name="get" scoped="" ref="0x404f1a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f1b28"/>
        <function-ref name="set" scoped="" ref="0x404f1c08"/>
        <function-ref name="clr" scoped="" ref="0x404f1ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404fc170" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404fc170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fc348"/>
        <function-ref name="isInput" scoped="" ref="0x404fc428"/>
        <function-ref name="toggle" scoped="" ref="0x404fc508"/>
        <function-ref name="isOutput" scoped="" ref="0x404fc5e8"/>
        <function-ref name="get" scoped="" ref="0x404fc6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fc7a8"/>
        <function-ref name="set" scoped="" ref="0x404fc888"/>
        <function-ref name="clr" scoped="" ref="0x404fc968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404f2228" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404f2228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f2400"/>
        <function-ref name="isInput" scoped="" ref="0x404f24e0"/>
        <function-ref name="toggle" scoped="" ref="0x404f25c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404f26a0"/>
        <function-ref name="get" scoped="" ref="0x404f2780"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f2860"/>
        <function-ref name="set" scoped="" ref="0x404f2940"/>
        <function-ref name="clr" scoped="" ref="0x404f2a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404f1e48" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404f1e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fd050"/>
        <function-ref name="isInput" scoped="" ref="0x404fd130"/>
        <function-ref name="toggle" scoped="" ref="0x404fd210"/>
        <function-ref name="isOutput" scoped="" ref="0x404fd2f0"/>
        <function-ref name="get" scoped="" ref="0x404fd3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fd4b0"/>
        <function-ref name="set" scoped="" ref="0x404fd590"/>
        <function-ref name="clr" scoped="" ref="0x404fd670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404fcac8" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404fcac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fcca0"/>
        <function-ref name="isInput" scoped="" ref="0x404fcd80"/>
        <function-ref name="toggle" scoped="" ref="0x404fce60"/>
        <function-ref name="isOutput" scoped="" ref="0x404fb010"/>
        <function-ref name="get" scoped="" ref="0x404fb0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fb1d0"/>
        <function-ref name="set" scoped="" ref="0x404fb2b0"/>
        <function-ref name="clr" scoped="" ref="0x404fb390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404f2b80" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404f2b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f2d58"/>
        <function-ref name="isInput" scoped="" ref="0x404f2e38"/>
        <function-ref name="toggle" scoped="" ref="0x404f2f18"/>
        <function-ref name="isOutput" scoped="" ref="0x404f1010"/>
        <function-ref name="get" scoped="" ref="0x404f10f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f11d0"/>
        <function-ref name="set" scoped="" ref="0x404f12b0"/>
        <function-ref name="clr" scoped="" ref="0x404f1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404fd7d0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404fd7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fd9a8"/>
        <function-ref name="isInput" scoped="" ref="0x404fda88"/>
        <function-ref name="toggle" scoped="" ref="0x404fdb68"/>
        <function-ref name="isOutput" scoped="" ref="0x404fdc48"/>
        <function-ref name="get" scoped="" ref="0x404fdd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fde08"/>
        <function-ref name="set" scoped="" ref="0x404fdee8"/>
        <function-ref name="clr" scoped="" ref="0x404fc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404fb4f0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404fb4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fb6c8"/>
        <function-ref name="isInput" scoped="" ref="0x404fb7a8"/>
        <function-ref name="toggle" scoped="" ref="0x404fb888"/>
        <function-ref name="isOutput" scoped="" ref="0x404fb968"/>
        <function-ref name="get" scoped="" ref="0x404fba48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fbb28"/>
        <function-ref name="set" scoped="" ref="0x404fbc08"/>
        <function-ref name="clr" scoped="" ref="0x404fbce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c9cde8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c9cde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c97010"/>
        <function-ref name="isInput" scoped="" ref="0x40c970f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c971d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c972b0"/>
        <function-ref name="get" scoped="" ref="0x40c97390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c97470"/>
        <function-ref name="set" scoped="" ref="0x40c97550"/>
        <function-ref name="clr" scoped="" ref="0x40c97630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c967f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c967f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c969d0"/>
        <function-ref name="isInput" scoped="" ref="0x40c96ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40c96b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40c96c70"/>
        <function-ref name="get" scoped="" ref="0x40c96d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c96e30"/>
        <function-ref name="set" scoped="" ref="0x40c96f10"/>
        <function-ref name="clr" scoped="" ref="0x40c95010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c94228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c94228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c94400"/>
        <function-ref name="isInput" scoped="" ref="0x40c944e0"/>
        <function-ref name="toggle" scoped="" ref="0x40c945c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c946a0"/>
        <function-ref name="get" scoped="" ref="0x40c94780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c94860"/>
        <function-ref name="set" scoped="" ref="0x40c94940"/>
        <function-ref name="clr" scoped="" ref="0x40c94a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c93c08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c93c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c93de0"/>
        <function-ref name="isInput" scoped="" ref="0x40c93ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40c92010"/>
        <function-ref name="isOutput" scoped="" ref="0x40c920f0"/>
        <function-ref name="get" scoped="" ref="0x40c921d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c922b0"/>
        <function-ref name="set" scoped="" ref="0x40c92390"/>
        <function-ref name="clr" scoped="" ref="0x40c92470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c916c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c916c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c91898"/>
        <function-ref name="isInput" scoped="" ref="0x40c91978"/>
        <function-ref name="toggle" scoped="" ref="0x40c91a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40c91b38"/>
        <function-ref name="get" scoped="" ref="0x40c91c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c91cf8"/>
        <function-ref name="set" scoped="" ref="0x40c91dd8"/>
        <function-ref name="clr" scoped="" ref="0x40c91eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c8f0b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c8f0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c8f288"/>
        <function-ref name="isInput" scoped="" ref="0x40c8f368"/>
        <function-ref name="toggle" scoped="" ref="0x40c8f448"/>
        <function-ref name="isOutput" scoped="" ref="0x40c8f528"/>
        <function-ref name="get" scoped="" ref="0x40c8f608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c8f6e8"/>
        <function-ref name="set" scoped="" ref="0x40c8f7c8"/>
        <function-ref name="clr" scoped="" ref="0x40c8f8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c8ea88" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c8ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c8ec60"/>
        <function-ref name="isInput" scoped="" ref="0x40c8ed40"/>
        <function-ref name="toggle" scoped="" ref="0x40c8ee20"/>
        <function-ref name="isOutput" scoped="" ref="0x40c8ef00"/>
        <function-ref name="get" scoped="" ref="0x40c8d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c8d0f0"/>
        <function-ref name="set" scoped="" ref="0x40c8d1d0"/>
        <function-ref name="clr" scoped="" ref="0x40c8d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c8c538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c8c538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c8c710"/>
        <function-ref name="isInput" scoped="" ref="0x40c8c7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c8c8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c8c9b0"/>
        <function-ref name="get" scoped="" ref="0x40c8ca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c8cb70"/>
        <function-ref name="set" scoped="" ref="0x40c8cc50"/>
        <function-ref name="clr" scoped="" ref="0x40c8cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404f7e48" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404f7e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40504050"/>
        <function-ref name="isInput" scoped="" ref="0x40504130"/>
        <function-ref name="toggle" scoped="" ref="0x40504210"/>
        <function-ref name="isOutput" scoped="" ref="0x405042f0"/>
        <function-ref name="get" scoped="" ref="0x405043d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405044b0"/>
        <function-ref name="set" scoped="" ref="0x40504590"/>
        <function-ref name="clr" scoped="" ref="0x40504670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40503ac8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40503ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40503ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40503d80"/>
        <function-ref name="toggle" scoped="" ref="0x40503e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40502010"/>
        <function-ref name="get" scoped="" ref="0x405020f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405021d0"/>
        <function-ref name="set" scoped="" ref="0x405022b0"/>
        <function-ref name="clr" scoped="" ref="0x40502390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404f8b00" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404f8b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f8cd8"/>
        <function-ref name="isInput" scoped="" ref="0x404f8db8"/>
        <function-ref name="toggle" scoped="" ref="0x404f8e98"/>
        <function-ref name="isOutput" scoped="" ref="0x404f7010"/>
        <function-ref name="get" scoped="" ref="0x404f70f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f71d0"/>
        <function-ref name="set" scoped="" ref="0x404f72b0"/>
        <function-ref name="clr" scoped="" ref="0x404f7390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x405047d0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x405047d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405049a8"/>
        <function-ref name="isInput" scoped="" ref="0x40504a88"/>
        <function-ref name="toggle" scoped="" ref="0x40504b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40504c48"/>
        <function-ref name="get" scoped="" ref="0x40504d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40504e08"/>
        <function-ref name="set" scoped="" ref="0x40504ee8"/>
        <function-ref name="clr" scoped="" ref="0x40503010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x405024f0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x405024f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405026c8"/>
        <function-ref name="isInput" scoped="" ref="0x405027a8"/>
        <function-ref name="toggle" scoped="" ref="0x40502888"/>
        <function-ref name="isOutput" scoped="" ref="0x40502968"/>
        <function-ref name="get" scoped="" ref="0x40502a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40502b28"/>
        <function-ref name="set" scoped="" ref="0x40502c08"/>
        <function-ref name="clr" scoped="" ref="0x40502ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404f74f0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404f74f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f76c8"/>
        <function-ref name="isInput" scoped="" ref="0x404f77a8"/>
        <function-ref name="toggle" scoped="" ref="0x404f7888"/>
        <function-ref name="isOutput" scoped="" ref="0x404f7968"/>
        <function-ref name="get" scoped="" ref="0x404f7a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f7b28"/>
        <function-ref name="set" scoped="" ref="0x404f7c08"/>
        <function-ref name="clr" scoped="" ref="0x404f7ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40503170" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40503170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40503348"/>
        <function-ref name="isInput" scoped="" ref="0x40503428"/>
        <function-ref name="toggle" scoped="" ref="0x40503508"/>
        <function-ref name="isOutput" scoped="" ref="0x405035e8"/>
        <function-ref name="get" scoped="" ref="0x405036c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405037a8"/>
        <function-ref name="set" scoped="" ref="0x40503888"/>
        <function-ref name="clr" scoped="" ref="0x40503968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40502e48" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40502e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40500050"/>
        <function-ref name="isInput" scoped="" ref="0x40500130"/>
        <function-ref name="toggle" scoped="" ref="0x40500210"/>
        <function-ref name="isOutput" scoped="" ref="0x405002f0"/>
        <function-ref name="get" scoped="" ref="0x405003d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405004b0"/>
        <function-ref name="set" scoped="" ref="0x40500590"/>
        <function-ref name="clr" scoped="" ref="0x40500670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cb9938" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cb9938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb9b10"/>
        <function-ref name="isInput" scoped="" ref="0x40cb9bf0"/>
        <function-ref name="toggle" scoped="" ref="0x40cb9cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb9db0"/>
        <function-ref name="get" scoped="" ref="0x40cb9e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb8010"/>
        <function-ref name="set" scoped="" ref="0x40cb80f0"/>
        <function-ref name="clr" scoped="" ref="0x40cb81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cb73b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cb73b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cb7588"/>
        <function-ref name="isInput" scoped="" ref="0x40cb7668"/>
        <function-ref name="toggle" scoped="" ref="0x40cb7748"/>
        <function-ref name="isOutput" scoped="" ref="0x40cb7828"/>
        <function-ref name="get" scoped="" ref="0x40cb7908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cb79e8"/>
        <function-ref name="set" scoped="" ref="0x40cb7ac8"/>
        <function-ref name="clr" scoped="" ref="0x40cb7ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cb6d70" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cb6d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ce3010"/>
        <function-ref name="isInput" scoped="" ref="0x40ce30f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ce31d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ce32b0"/>
        <function-ref name="get" scoped="" ref="0x40ce3390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ce3470"/>
        <function-ref name="set" scoped="" ref="0x40ce3550"/>
        <function-ref name="clr" scoped="" ref="0x40ce3630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ce27f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ce27f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ce29d0"/>
        <function-ref name="isInput" scoped="" ref="0x40ce2ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40ce2b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40ce2c70"/>
        <function-ref name="get" scoped="" ref="0x40ce2d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ce2e30"/>
        <function-ref name="set" scoped="" ref="0x40ce2f10"/>
        <function-ref name="clr" scoped="" ref="0x40ce1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ce0228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ce0228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ce0400"/>
        <function-ref name="isInput" scoped="" ref="0x40ce04e0"/>
        <function-ref name="toggle" scoped="" ref="0x40ce05c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ce06a0"/>
        <function-ref name="get" scoped="" ref="0x40ce0780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ce0860"/>
        <function-ref name="set" scoped="" ref="0x40ce0940"/>
        <function-ref name="clr" scoped="" ref="0x40ce0a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cdfc08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cdfc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cdfde0"/>
        <function-ref name="isInput" scoped="" ref="0x40cdfec0"/>
        <function-ref name="toggle" scoped="" ref="0x40cde010"/>
        <function-ref name="isOutput" scoped="" ref="0x40cde0f0"/>
        <function-ref name="get" scoped="" ref="0x40cde1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cde2b0"/>
        <function-ref name="set" scoped="" ref="0x40cde390"/>
        <function-ref name="clr" scoped="" ref="0x40cde470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cdd6c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cdd6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cdd898"/>
        <function-ref name="isInput" scoped="" ref="0x40cdd978"/>
        <function-ref name="toggle" scoped="" ref="0x40cdda58"/>
        <function-ref name="isOutput" scoped="" ref="0x40cddb38"/>
        <function-ref name="get" scoped="" ref="0x40cddc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cddcf8"/>
        <function-ref name="set" scoped="" ref="0x40cdddd8"/>
        <function-ref name="clr" scoped="" ref="0x40cddeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cda0b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cda0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cda288"/>
        <function-ref name="isInput" scoped="" ref="0x40cda368"/>
        <function-ref name="toggle" scoped="" ref="0x40cda448"/>
        <function-ref name="isOutput" scoped="" ref="0x40cda528"/>
        <function-ref name="get" scoped="" ref="0x40cda608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cda6e8"/>
        <function-ref name="set" scoped="" ref="0x40cda7c8"/>
        <function-ref name="clr" scoped="" ref="0x40cda8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4050a6b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4050a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050a888"/>
        <function-ref name="isInput" scoped="" ref="0x4050a968"/>
        <function-ref name="toggle" scoped="" ref="0x4050aa48"/>
        <function-ref name="isOutput" scoped="" ref="0x4050ab28"/>
        <function-ref name="get" scoped="" ref="0x4050ac08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050ace8"/>
        <function-ref name="set" scoped="" ref="0x4050adc8"/>
        <function-ref name="clr" scoped="" ref="0x4050aea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40508330" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40508330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40508508"/>
        <function-ref name="isInput" scoped="" ref="0x405085e8"/>
        <function-ref name="toggle" scoped="" ref="0x405086c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405087a8"/>
        <function-ref name="get" scoped="" ref="0x40508888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40508968"/>
        <function-ref name="set" scoped="" ref="0x40508a48"/>
        <function-ref name="clr" scoped="" ref="0x40508b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4050b3d8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4050b3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050b5b0"/>
        <function-ref name="isInput" scoped="" ref="0x4050b690"/>
        <function-ref name="toggle" scoped="" ref="0x4050b770"/>
        <function-ref name="isOutput" scoped="" ref="0x4050b850"/>
        <function-ref name="get" scoped="" ref="0x4050b930"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050ba10"/>
        <function-ref name="set" scoped="" ref="0x4050baf0"/>
        <function-ref name="clr" scoped="" ref="0x4050bbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40509030" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40509030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40509208"/>
        <function-ref name="isInput" scoped="" ref="0x405092e8"/>
        <function-ref name="toggle" scoped="" ref="0x405093c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405094a8"/>
        <function-ref name="get" scoped="" ref="0x40509588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40509668"/>
        <function-ref name="set" scoped="" ref="0x40509748"/>
        <function-ref name="clr" scoped="" ref="0x40509828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40508c88" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40508c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40508e60"/>
        <function-ref name="isInput" scoped="" ref="0x40507010"/>
        <function-ref name="toggle" scoped="" ref="0x405070f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405071d0"/>
        <function-ref name="get" scoped="" ref="0x405072b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40507390"/>
        <function-ref name="set" scoped="" ref="0x40507470"/>
        <function-ref name="clr" scoped="" ref="0x40507550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4050bd30" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4050bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050bf08"/>
        <function-ref name="isInput" scoped="" ref="0x4050a010"/>
        <function-ref name="toggle" scoped="" ref="0x4050a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4050a1d0"/>
        <function-ref name="get" scoped="" ref="0x4050a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050a390"/>
        <function-ref name="set" scoped="" ref="0x4050a470"/>
        <function-ref name="clr" scoped="" ref="0x4050a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40509988" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40509988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40509b60"/>
        <function-ref name="isInput" scoped="" ref="0x40509c40"/>
        <function-ref name="toggle" scoped="" ref="0x40509d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40509e00"/>
        <function-ref name="get" scoped="" ref="0x40509ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40508010"/>
        <function-ref name="set" scoped="" ref="0x405080f0"/>
        <function-ref name="clr" scoped="" ref="0x405081d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x405076b0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x405076b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40507888"/>
        <function-ref name="isInput" scoped="" ref="0x40507968"/>
        <function-ref name="toggle" scoped="" ref="0x40507a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40507b28"/>
        <function-ref name="get" scoped="" ref="0x40507c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40507ce8"/>
        <function-ref name="set" scoped="" ref="0x40507dc8"/>
        <function-ref name="clr" scoped="" ref="0x40507ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d0a538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d0a538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d0a710"/>
        <function-ref name="isInput" scoped="" ref="0x40d0a7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d0a8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d0a9b0"/>
        <function-ref name="get" scoped="" ref="0x40d0aa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d0ab70"/>
        <function-ref name="set" scoped="" ref="0x40d0ac50"/>
        <function-ref name="clr" scoped="" ref="0x40d0ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d08010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d08010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d081e8"/>
        <function-ref name="isInput" scoped="" ref="0x40d082c8"/>
        <function-ref name="toggle" scoped="" ref="0x40d083a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40d08488"/>
        <function-ref name="get" scoped="" ref="0x40d08568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d08648"/>
        <function-ref name="set" scoped="" ref="0x40d08728"/>
        <function-ref name="clr" scoped="" ref="0x40d08808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d079e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d079e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d07bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40d07ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40d07d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40d07e60"/>
        <function-ref name="get" scoped="" ref="0x40d06010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d060f0"/>
        <function-ref name="set" scoped="" ref="0x40d061d0"/>
        <function-ref name="clr" scoped="" ref="0x40d062b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d05538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d05538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d05710"/>
        <function-ref name="isInput" scoped="" ref="0x40d057f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d058d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d059b0"/>
        <function-ref name="get" scoped="" ref="0x40d05a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d05b70"/>
        <function-ref name="set" scoped="" ref="0x40d05c50"/>
        <function-ref name="clr" scoped="" ref="0x40d05d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d03010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d03010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d031e8"/>
        <function-ref name="isInput" scoped="" ref="0x40d032c8"/>
        <function-ref name="toggle" scoped="" ref="0x40d033a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40d03488"/>
        <function-ref name="get" scoped="" ref="0x40d03568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d03648"/>
        <function-ref name="set" scoped="" ref="0x40d03728"/>
        <function-ref name="clr" scoped="" ref="0x40d03808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d029e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d029e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d02bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40d02ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40d02d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40d02e60"/>
        <function-ref name="get" scoped="" ref="0x40d01010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d010f0"/>
        <function-ref name="set" scoped="" ref="0x40d011d0"/>
        <function-ref name="clr" scoped="" ref="0x40d012b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d00538" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d00538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d00710"/>
        <function-ref name="isInput" scoped="" ref="0x40d007f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d008d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d009b0"/>
        <function-ref name="get" scoped="" ref="0x40d00a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d00b70"/>
        <function-ref name="set" scoped="" ref="0x40d00c50"/>
        <function-ref name="clr" scoped="" ref="0x40d00d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cfe010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cfe010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cfe1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40cfe2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40cfe3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40cfe488"/>
        <function-ref name="get" scoped="" ref="0x40cfe568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cfe648"/>
        <function-ref name="set" scoped="" ref="0x40cfe728"/>
        <function-ref name="clr" scoped="" ref="0x40cfe808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4050f170" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4050f170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050f348"/>
        <function-ref name="isInput" scoped="" ref="0x4050f428"/>
        <function-ref name="toggle" scoped="" ref="0x4050f508"/>
        <function-ref name="isOutput" scoped="" ref="0x4050f5e8"/>
        <function-ref name="get" scoped="" ref="0x4050f6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050f7a8"/>
        <function-ref name="set" scoped="" ref="0x4050f888"/>
        <function-ref name="clr" scoped="" ref="0x4050f968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4050ee48" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4050ee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050d050"/>
        <function-ref name="isInput" scoped="" ref="0x4050d130"/>
        <function-ref name="toggle" scoped="" ref="0x4050d210"/>
        <function-ref name="isOutput" scoped="" ref="0x4050d2f0"/>
        <function-ref name="get" scoped="" ref="0x4050d3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050d4b0"/>
        <function-ref name="set" scoped="" ref="0x4050d590"/>
        <function-ref name="clr" scoped="" ref="0x4050d670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40511dc8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40511dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40510010"/>
        <function-ref name="isInput" scoped="" ref="0x405100f0"/>
        <function-ref name="toggle" scoped="" ref="0x405101d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405102b0"/>
        <function-ref name="get" scoped="" ref="0x40510390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40510470"/>
        <function-ref name="set" scoped="" ref="0x40510550"/>
        <function-ref name="clr" scoped="" ref="0x40510630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4050fac8" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4050fac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050fca0"/>
        <function-ref name="isInput" scoped="" ref="0x4050fd80"/>
        <function-ref name="toggle" scoped="" ref="0x4050fe60"/>
        <function-ref name="isOutput" scoped="" ref="0x4050e010"/>
        <function-ref name="get" scoped="" ref="0x4050e0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050e1d0"/>
        <function-ref name="set" scoped="" ref="0x4050e2b0"/>
        <function-ref name="clr" scoped="" ref="0x4050e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4050d7d0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4050d7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050d9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4050da88"/>
        <function-ref name="toggle" scoped="" ref="0x4050db68"/>
        <function-ref name="isOutput" scoped="" ref="0x4050dc48"/>
        <function-ref name="get" scoped="" ref="0x4050dd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050de08"/>
        <function-ref name="set" scoped="" ref="0x4050dee8"/>
        <function-ref name="clr" scoped="" ref="0x4050c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40510790" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40510790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40510968"/>
        <function-ref name="isInput" scoped="" ref="0x40510a48"/>
        <function-ref name="toggle" scoped="" ref="0x40510b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40510c08"/>
        <function-ref name="get" scoped="" ref="0x40510ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40510dc8"/>
        <function-ref name="set" scoped="" ref="0x40510ea8"/>
        <function-ref name="clr" scoped="" ref="0x4050f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4050e4f0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4050e4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050e6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4050e7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4050e888"/>
        <function-ref name="isOutput" scoped="" ref="0x4050e968"/>
        <function-ref name="get" scoped="" ref="0x4050ea48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050eb28"/>
        <function-ref name="set" scoped="" ref="0x4050ec08"/>
        <function-ref name="clr" scoped="" ref="0x4050ece8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4050c170" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4050c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050c348"/>
        <function-ref name="isInput" scoped="" ref="0x4050c428"/>
        <function-ref name="toggle" scoped="" ref="0x4050c508"/>
        <function-ref name="isOutput" scoped="" ref="0x4050c5e8"/>
        <function-ref name="get" scoped="" ref="0x4050c6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050c7a8"/>
        <function-ref name="set" scoped="" ref="0x4050c888"/>
        <function-ref name="clr" scoped="" ref="0x4050c968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d2f418" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d2f418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d2f5f0"/>
        <function-ref name="isInput" scoped="" ref="0x40d2f6d0"/>
        <function-ref name="toggle" scoped="" ref="0x40d2f7b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d2f890"/>
        <function-ref name="get" scoped="" ref="0x40d2f970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d2fa50"/>
        <function-ref name="set" scoped="" ref="0x40d2fb30"/>
        <function-ref name="clr" scoped="" ref="0x40d2fc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d2ede0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d2ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d2d010"/>
        <function-ref name="isInput" scoped="" ref="0x40d2d0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d2d1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d2d2b0"/>
        <function-ref name="get" scoped="" ref="0x40d2d390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d2d470"/>
        <function-ref name="set" scoped="" ref="0x40d2d550"/>
        <function-ref name="clr" scoped="" ref="0x40d2d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d2c7f8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d2c7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d2c9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40d2cab0"/>
        <function-ref name="toggle" scoped="" ref="0x40d2cb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40d2cc70"/>
        <function-ref name="get" scoped="" ref="0x40d2cd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d2ce30"/>
        <function-ref name="set" scoped="" ref="0x40d2cf10"/>
        <function-ref name="clr" scoped="" ref="0x40d2b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d2a228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d2a228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d2a400"/>
        <function-ref name="isInput" scoped="" ref="0x40d2a4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40d2a5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d2a6a0"/>
        <function-ref name="get" scoped="" ref="0x40d2a780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d2a860"/>
        <function-ref name="set" scoped="" ref="0x40d2a940"/>
        <function-ref name="clr" scoped="" ref="0x40d2aa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d29c08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d29c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d29de0"/>
        <function-ref name="isInput" scoped="" ref="0x40d29ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40d57010"/>
        <function-ref name="isOutput" scoped="" ref="0x40d570f0"/>
        <function-ref name="get" scoped="" ref="0x40d571d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d572b0"/>
        <function-ref name="set" scoped="" ref="0x40d57390"/>
        <function-ref name="clr" scoped="" ref="0x40d57470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d566c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d566c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d56898"/>
        <function-ref name="isInput" scoped="" ref="0x40d56978"/>
        <function-ref name="toggle" scoped="" ref="0x40d56a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40d56b38"/>
        <function-ref name="get" scoped="" ref="0x40d56c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d56cf8"/>
        <function-ref name="set" scoped="" ref="0x40d56dd8"/>
        <function-ref name="clr" scoped="" ref="0x40d56eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d540b0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d540b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d54288"/>
        <function-ref name="isInput" scoped="" ref="0x40d54368"/>
        <function-ref name="toggle" scoped="" ref="0x40d54448"/>
        <function-ref name="isOutput" scoped="" ref="0x40d54528"/>
        <function-ref name="get" scoped="" ref="0x40d54608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d546e8"/>
        <function-ref name="set" scoped="" ref="0x40d547c8"/>
        <function-ref name="clr" scoped="" ref="0x40d548a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d53a88" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortG.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d53a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d53c60"/>
        <function-ref name="isInput" scoped="" ref="0x40d53d40"/>
        <function-ref name="toggle" scoped="" ref="0x40d53e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40d53f00"/>
        <function-ref name="get" scoped="" ref="0x40d52010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d520f0"/>
        <function-ref name="set" scoped="" ref="0x40d521d0"/>
        <function-ref name="clr" scoped="" ref="0x40d522b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403e2218" loc="88:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403e2218"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403e23f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x403e6560" loc="89:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x403e6560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x403e6738"/>
        <function-ref name="led0Toggle" scoped="" ref="0x403e6818"/>
        <function-ref name="led1On" scoped="" ref="0x403e68f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x403e69d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x403e6ab8"/>
        <function-ref name="get" scoped="" ref="0x403e6b98"/>
        <function-ref name="led1Off" scoped="" ref="0x403e6c78"/>
        <function-ref name="led2Off" scoped="" ref="0x403db010"/>
        <function-ref name="set" scoped="" ref="0x403e6d58"/>
        <function-ref name="led0On" scoped="" ref="0x403e6e38"/>
        <function-ref name="led2On" scoped="" ref="0x403e6f18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x403dc470" loc="84:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403dc470"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403dc648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403e3148" loc="85:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403e3148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403e3320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x405388f0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x405388f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40537068"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40537558"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x405372e0"/>
        <function-ref name="overflow" scoped="" ref="0x405377d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x405335f8" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x405335f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405240a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40533d48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40543288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40543010"/>
        <function-ref name="overflow" scoped="" ref="0x40543500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40534320" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40534320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40534a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40533010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40534ce8"/>
        <function-ref name="overflow" scoped="" ref="0x40533288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4054f368" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4054f368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405240a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4054fab8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4054e010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4054fd30"/>
        <function-ref name="overflow" scoped="" ref="0x4054e288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4054d440" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4054d440"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f77d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f77d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4054d618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4054d878" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4054d878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405240a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4055c010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4055c500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4055c288"/>
        <function-ref name="overflow" scoped="" ref="0x4055c778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x4055ca48" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x4055ca48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4055a500"/>
        <function-ref name="test" scoped="" ref="0x4055b838"/>
        <function-ref name="get" scoped="" ref="0x4055b0a8"/>
        <function-ref name="reset" scoped="" ref="0x4055bab0"/>
        <function-ref name="getMode" scoped="" ref="0x4055a7a0"/>
        <function-ref name="overflow" scoped="" ref="0x4055b5c0"/>
        <function-ref name="isOn" scoped="" ref="0x4055a288"/>
        <function-ref name="set" scoped="" ref="0x4055b320"/>
        <function-ref name="start" scoped="" ref="0x4055bd28"/>
        <function-ref name="stop" scoped="" ref="0x4055a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconCapture" ref="0x405799a8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconCapture" scoped="" ref="0x405799a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40572418"/>
        <function-ref name="test" scoped="" ref="0x405737a0"/>
        <function-ref name="fired" scoped="" ref="0x40573528"/>
        <function-ref name="get" scoped="" ref="0x40573010"/>
        <function-ref name="reset" scoped="" ref="0x40573a18"/>
        <function-ref name="getMode" scoped="" ref="0x405726b8"/>
        <function-ref name="isOn" scoped="" ref="0x405721a0"/>
        <function-ref name="set" scoped="" ref="0x40573288"/>
        <function-ref name="start" scoped="" ref="0x40573c90"/>
        <function-ref name="stop" scoped="" ref="0x40573f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40568c90" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40568c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40564778"/>
        <function-ref name="test" scoped="" ref="0x40565a78"/>
        <function-ref name="get" scoped="" ref="0x405652e8"/>
        <function-ref name="reset" scoped="" ref="0x40565cf0"/>
        <function-ref name="getMode" scoped="" ref="0x40564a18"/>
        <function-ref name="overflow" scoped="" ref="0x40565800"/>
        <function-ref name="isOn" scoped="" ref="0x40564500"/>
        <function-ref name="set" scoped="" ref="0x40565560"/>
        <function-ref name="start" scoped="" ref="0x40564010"/>
        <function-ref name="stop" scoped="" ref="0x40564288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x40575860" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40575860"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405792e0"/>
        <function-ref name="test" scoped="" ref="0x4056b668"/>
        <function-ref name="fired" scoped="" ref="0x4056b3f0"/>
        <function-ref name="get" scoped="" ref="0x40575ea8"/>
        <function-ref name="reset" scoped="" ref="0x4056b8e0"/>
        <function-ref name="getMode" scoped="" ref="0x40579580"/>
        <function-ref name="isOn" scoped="" ref="0x40579068"/>
        <function-ref name="set" scoped="" ref="0x4056b150"/>
        <function-ref name="start" scoped="" ref="0x4056bb58"/>
        <function-ref name="stop" scoped="" ref="0x4056bdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40563470" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40563470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40562ee0"/>
        <function-ref name="test" scoped="" ref="0x40562288"/>
        <function-ref name="fired" scoped="" ref="0x40562010"/>
        <function-ref name="force" scoped="" ref="0x4056c438"/>
        <function-ref name="get" scoped="" ref="0x40563ab8"/>
        <function-ref name="reset" scoped="" ref="0x40562500"/>
        <function-ref name="getMode" scoped="" ref="0x4056c1c0"/>
        <function-ref name="isOn" scoped="" ref="0x40562c68"/>
        <function-ref name="set" scoped="" ref="0x40563d30"/>
        <function-ref name="start" scoped="" ref="0x40562778"/>
        <function-ref name="stop" scoped="" ref="0x405629f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x4057c408" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x4057c408"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4057bee0"/>
        <function-ref name="test" scoped="" ref="0x4057b288"/>
        <function-ref name="fired" scoped="" ref="0x4057b010"/>
        <function-ref name="force" scoped="" ref="0x40589438"/>
        <function-ref name="get" scoped="" ref="0x4057ca50"/>
        <function-ref name="reset" scoped="" ref="0x4057b500"/>
        <function-ref name="getMode" scoped="" ref="0x405891c0"/>
        <function-ref name="isOn" scoped="" ref="0x4057bc68"/>
        <function-ref name="set" scoped="" ref="0x4057ccc8"/>
        <function-ref name="start" scoped="" ref="0x4057b778"/>
        <function-ref name="stop" scoped="" ref="0x4057b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BeaconCapture" ref="0x40590158" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BeaconCapture" scoped="" ref="0x40590158"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4058fc68"/>
        <function-ref name="test" scoped="" ref="0x4058f010"/>
        <function-ref name="fired" scoped="" ref="0x40590cb8"/>
        <function-ref name="get" scoped="" ref="0x405907a0"/>
        <function-ref name="reset" scoped="" ref="0x4058f288"/>
        <function-ref name="getMode" scoped="" ref="0x4058ff08"/>
        <function-ref name="isOn" scoped="" ref="0x4058f9f0"/>
        <function-ref name="set" scoped="" ref="0x40590a18"/>
        <function-ref name="start" scoped="" ref="0x4058f500"/>
        <function-ref name="stop" scoped="" ref="0x4058f778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x4058e1e0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4058e1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4058e3b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40589830" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40589830"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405872c0"/>
        <function-ref name="test" scoped="" ref="0x40588628"/>
        <function-ref name="fired" scoped="" ref="0x405883b0"/>
        <function-ref name="force" scoped="" ref="0x405877d8"/>
        <function-ref name="get" scoped="" ref="0x40589e78"/>
        <function-ref name="reset" scoped="" ref="0x405888a0"/>
        <function-ref name="getMode" scoped="" ref="0x40587560"/>
        <function-ref name="isOn" scoped="" ref="0x40587048"/>
        <function-ref name="set" scoped="" ref="0x40588110"/>
        <function-ref name="start" scoped="" ref="0x40588b18"/>
        <function-ref name="stop" scoped="" ref="0x40588d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4057f278" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4057f278"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4057dcc0"/>
        <function-ref name="test" scoped="" ref="0x4057d068"/>
        <function-ref name="get" scoped="" ref="0x4057f8c0"/>
        <function-ref name="reset" scoped="" ref="0x4057d2e0"/>
        <function-ref name="getMode" scoped="" ref="0x4057c010"/>
        <function-ref name="overflow" scoped="" ref="0x4057fdd8"/>
        <function-ref name="isOn" scoped="" ref="0x4057da48"/>
        <function-ref name="set" scoped="" ref="0x4057fb38"/>
        <function-ref name="start" scoped="" ref="0x4057d558"/>
        <function-ref name="stop" scoped="" ref="0x4057d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x4058e5d0" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x4058e5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4058e7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x40583010" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40583010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40582a68"/>
        <function-ref name="test" scoped="" ref="0x40583de8"/>
        <function-ref name="fired" scoped="" ref="0x40583b70"/>
        <function-ref name="get" scoped="" ref="0x40583658"/>
        <function-ref name="reset" scoped="" ref="0x40582088"/>
        <function-ref name="getMode" scoped="" ref="0x40582d08"/>
        <function-ref name="isOn" scoped="" ref="0x405827f0"/>
        <function-ref name="set" scoped="" ref="0x405838d0"/>
        <function-ref name="start" scoped="" ref="0x40582300"/>
        <function-ref name="stop" scoped="" ref="0x40582578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40587bd0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40587bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40584640"/>
        <function-ref name="test" scoped="" ref="0x405869c8"/>
        <function-ref name="fired" scoped="" ref="0x40586750"/>
        <function-ref name="force" scoped="" ref="0x40584b58"/>
        <function-ref name="get" scoped="" ref="0x40586238"/>
        <function-ref name="reset" scoped="" ref="0x40586c40"/>
        <function-ref name="getMode" scoped="" ref="0x405848e0"/>
        <function-ref name="isOn" scoped="" ref="0x405843c8"/>
        <function-ref name="set" scoped="" ref="0x405864b0"/>
        <function-ref name="start" scoped="" ref="0x40586eb8"/>
        <function-ref name="stop" scoped="" ref="0x40584150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x403f4c20" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x403f4c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403f4df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x405e0c98" loc="60:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x405e0c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405e0e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403fdf18" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403fdf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x405e0108"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x405e0890" loc="59:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x405e0890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405e0a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x405e02c8" loc="58:/opt/tinyos-main/src/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x405e02c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405e04a0"/>
        <function-ref name="taskLoop" scoped="" ref="0x405e0580"/>
        <function-ref name="runNextTask" scoped="" ref="0x405e0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40306a98" loc="48:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40306a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40306c70"/>
        <function-ref name="runTask" scoped="" ref="0x40306d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40303378" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40303378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40303550"/>
        <function-ref name="taskLoop" scoped="" ref="0x40303630"/>
        <function-ref name="runNextTask" scoped="" ref="0x40303710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403cfc18" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403cfc18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403cfdf0"/>
        <function-ref name="runTask" scoped="" ref="0x403cfed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403ce8b8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403ce8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403cea90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403cf3e0" loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403cf3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403cf5b8"/>
        <function-ref name="taskLoop" scoped="" ref="0x403cf698"/>
        <function-ref name="runNextTask" scoped="" ref="0x403cf778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x4062fd30" loc="54:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x4062fd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406218a8"/>
        <function-ref name="fired" scoped="" ref="0x40622ac8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40621268"/>
        <function-ref name="isOneShot" scoped="" ref="0x40621010"/>
        <function-ref name="getdt" scoped="" ref="0x40621d58"/>
        <function-ref name="gett0" scoped="" ref="0x40621b00"/>
        <function-ref name="isRunning" scoped="" ref="0x40622d20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40622370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40621588"/>
        <function-ref name="startOneShot" scoped="" ref="0x406225f0"/>
        <function-ref name="stop" scoped="" ref="0x40622870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Vol0" ref="0x406278d0" loc="58:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Vol0" scoped="" ref="0x406278d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40627ef8"/>
        <function-ref name="readDone" scoped="" ref="0x4063a180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="vol1ReadTask" ref="0x4063d010" loc="128:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="vol1ReadTask" scoped="" ref="0x4063d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4063d268"/>
        <function-ref name="runTask" scoped="" ref="0x4063d348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40637dd8" loc="61:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40637dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40636010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialStream" ref="0x40636770" loc="64:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialStream" scoped="" ref="0x40636770"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40636948"/>
        <function-ref name="receivedByte" scoped="" ref="0x40636a28"/>
        <function-ref name="receive" scoped="" ref="0x40636b08"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40636be8"/>
        <function-ref name="receiveDone" scoped="" ref="0x40636cc8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40636da8"/>
        <function-ref name="sendDone" scoped="" ref="0x40636e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="processCommandTask" ref="0x4064e060" loc="138:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="processCommandTask" scoped="" ref="0x4064e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4064e238"/>
        <function-ref name="runTask" scoped="" ref="0x4064e318"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="vol0ReadTask" ref="0x4063f010" loc="118:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="vol0ReadTask" scoped="" ref="0x4063f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4063f1e8"/>
        <function-ref name="runTask" scoped="" ref="0x4063f2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x4062e110" loc="55:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x4062e110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4062cc00"/>
        <function-ref name="fired" scoped="" ref="0x4062ee90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4062c5c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4062c368"/>
        <function-ref name="getdt" scoped="" ref="0x4062b0f0"/>
        <function-ref name="gett0" scoped="" ref="0x4062ce58"/>
        <function-ref name="isRunning" scoped="" ref="0x4062c110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4062e738"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4062c8e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x4062e9b8"/>
        <function-ref name="stop" scoped="" ref="0x4062ec38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Vol1" ref="0x4063a5e0" loc="59:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Vol1" scoped="" ref="0x4063a5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4063ac08"/>
        <function-ref name="readDone" scoped="" ref="0x4063ae60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialByte" ref="0x40636250" loc="63:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialByte" scoped="" ref="0x40636250"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40636428"/>
        <function-ref name="receive" scoped="" ref="0x40636508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x406371b0" loc="60:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x406371b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40637388"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40637468"/>
        <function-ref name="led1On" scoped="" ref="0x40637548"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40637628"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40637708"/>
        <function-ref name="get" scoped="" ref="0x406377e8"/>
        <function-ref name="led1Off" scoped="" ref="0x406378c8"/>
        <function-ref name="led2Off" scoped="" ref="0x40637c48"/>
        <function-ref name="set" scoped="" ref="0x406379a8"/>
        <function-ref name="led0On" scoped="" ref="0x40637a88"/>
        <function-ref name="led2On" scoped="" ref="0x40637b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x4062b488" loc="56:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer2" scoped="" ref="0x4062b488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40628010"/>
        <function-ref name="fired" scoped="" ref="0x4062a268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4062a970"/>
        <function-ref name="isOneShot" scoped="" ref="0x4062a718"/>
        <function-ref name="getdt" scoped="" ref="0x406284c0"/>
        <function-ref name="gett0" scoped="" ref="0x40628268"/>
        <function-ref name="isRunning" scoped="" ref="0x4062a4c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4062bab0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4062ac90"/>
        <function-ref name="startOneShot" scoped="" ref="0x4062bd30"/>
        <function-ref name="stop" scoped="" ref="0x4062a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempSensor" ref="0x40639bd8" loc="57:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempSensor" scoped="" ref="0x40639bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40627218"/>
        <function-ref name="readDone" scoped="" ref="0x40627470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="tempSensorReadTask" ref="0x40642010" loc="108:/home/alpsayin/tinyos_workspace/AdcTest/src/BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="tempSensorReadTask" scoped="" ref="0x40642010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406421e8"/>
        <function-ref name="runTask" scoped="" ref="0x406422c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40661930" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40661930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4070a4c8"/>
        <function-ref name="fired" scoped="" ref="0x40660768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40660e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40660c18"/>
        <function-ref name="getdt" scoped="" ref="0x4070a978"/>
        <function-ref name="gett0" scoped="" ref="0x4070a720"/>
        <function-ref name="isRunning" scoped="" ref="0x406609c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40660010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4070a1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40660290"/>
        <function-ref name="stop" scoped="" ref="0x40660510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x4065ce48" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x4065ce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4066c988"/>
        <function-ref name="fired" scoped="" ref="0x40659c10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4066c348"/>
        <function-ref name="isOneShot" scoped="" ref="0x4066c0f0"/>
        <function-ref name="getdt" scoped="" ref="0x4066ce38"/>
        <function-ref name="gett0" scoped="" ref="0x4066cbe0"/>
        <function-ref name="isRunning" scoped="" ref="0x40659e68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406594b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4066c668"/>
        <function-ref name="startOneShot" scoped="" ref="0x40659738"/>
        <function-ref name="stop" scoped="" ref="0x406599b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40669900" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40669900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40668db0"/>
        <function-ref name="fired" scoped="" ref="0x40668580"/>
        <function-ref name="startAt" scoped="" ref="0x40668a70"/>
        <function-ref name="isRunning" scoped="" ref="0x406687f8"/>
        <function-ref name="getAlarm" scoped="" ref="0x406bb048"/>
        <function-ref name="start" scoped="" ref="0x40668068"/>
        <function-ref name="stop" scoped="" ref="0x40668308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40d7adb8" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40d7adb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405240a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d77278"/>
        <function-ref name="fired" scoped="" ref="0x40d78a30"/>
        <function-ref name="startAt" scoped="" ref="0x40d78f20"/>
        <function-ref name="isRunning" scoped="" ref="0x40d78ca8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40d774f0"/>
        <function-ref name="start" scoped="" ref="0x40d78518"/>
        <function-ref name="stop" scoped="" ref="0x40d787b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x40d99840" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x40d99840"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40d962c0"/>
        <function-ref name="test" scoped="" ref="0x40d98628"/>
        <function-ref name="fired" scoped="" ref="0x40d983b0"/>
        <function-ref name="force" scoped="" ref="0x40d967d8"/>
        <function-ref name="get" scoped="" ref="0x40d99e88"/>
        <function-ref name="reset" scoped="" ref="0x40d988a0"/>
        <function-ref name="getMode" scoped="" ref="0x40d96560"/>
        <function-ref name="isOn" scoped="" ref="0x40d96048"/>
        <function-ref name="set" scoped="" ref="0x40d98110"/>
        <function-ref name="start" scoped="" ref="0x40d98b18"/>
        <function-ref name="stop" scoped="" ref="0x40d98d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40d9edd8" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40d9edd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405240a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d9b350"/>
        <function-ref name="fired" scoped="" ref="0x40d9da88"/>
        <function-ref name="startAt" scoped="" ref="0x40d9b010"/>
        <function-ref name="isRunning" scoped="" ref="0x40d9dd00"/>
        <function-ref name="getAlarm" scoped="" ref="0x40d9b5c8"/>
        <function-ref name="start" scoped="" ref="0x40d9d570"/>
        <function-ref name="stop" scoped="" ref="0x40d9d810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d9e9a0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d9e9a0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f77d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f77d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d9eb78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x40d9b898" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x40d9b898"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40d99300"/>
        <function-ref name="test" scoped="" ref="0x40d9a688"/>
        <function-ref name="get" scoped="" ref="0x40d9bee0"/>
        <function-ref name="reset" scoped="" ref="0x40d9a900"/>
        <function-ref name="getMode" scoped="" ref="0x40d995a0"/>
        <function-ref name="overflow" scoped="" ref="0x40d9a410"/>
        <function-ref name="isOn" scoped="" ref="0x40d99088"/>
        <function-ref name="set" scoped="" ref="0x40d9a170"/>
        <function-ref name="start" scoped="" ref="0x40d9ab78"/>
        <function-ref name="stop" scoped="" ref="0x40d9adf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40d767d0" loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40d767d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d75c80"/>
        <function-ref name="fired" scoped="" ref="0x40d75450"/>
        <function-ref name="startAt" scoped="" ref="0x40d75940"/>
        <function-ref name="isRunning" scoped="" ref="0x40d756c8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40d75ef8"/>
        <function-ref name="start" scoped="" ref="0x40d76f20"/>
        <function-ref name="stop" scoped="" ref="0x40d751d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x40d724c0" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x40d724c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405240a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d71980"/>
        <function-ref name="fired" scoped="" ref="0x40d71150"/>
        <function-ref name="startAt" scoped="" ref="0x40d71640"/>
        <function-ref name="isRunning" scoped="" ref="0x40d713c8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40d71bf8"/>
        <function-ref name="start" scoped="" ref="0x40d72c10"/>
        <function-ref name="stop" scoped="" ref="0x40d72eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40d74278" loc="68:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40d74278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40d749c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40d74eb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40d74c40"/>
        <function-ref name="overflow" scoped="" ref="0x40d72150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x406cdd08" loc="74:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x406cdd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406cdee0"/>
        <function-ref name="runTask" scoped="" ref="0x406cb010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x406ce398" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x406ce398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406cd840"/>
        <function-ref name="fired" scoped="" ref="0x406cd010"/>
        <function-ref name="startAt" scoped="" ref="0x406cd500"/>
        <function-ref name="isRunning" scoped="" ref="0x406cd288"/>
        <function-ref name="getAlarm" scoped="" ref="0x406cdab8"/>
        <function-ref name="start" scoped="" ref="0x406ceae8"/>
        <function-ref name="stop" scoped="" ref="0x406ced88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406b80a0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406b80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406cfb88"/>
        <function-ref name="fired" scoped="" ref="0x406b8e20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406cf548"/>
        <function-ref name="isOneShot" scoped="" ref="0x406cf2f0"/>
        <function-ref name="getdt" scoped="" ref="0x406ce048"/>
        <function-ref name="gett0" scoped="" ref="0x406cfde0"/>
        <function-ref name="isRunning" scoped="" ref="0x406cf098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406b86c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406cf868"/>
        <function-ref name="startOneShot" scoped="" ref="0x406b8948"/>
        <function-ref name="stop" scoped="" ref="0x406b8bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x406f7948" loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x406f7948"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406f7b20"/>
        <function-ref name="runTask" scoped="" ref="0x406f7c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x406fa688" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x406fa688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406f7248"/>
        <function-ref name="fired" scoped="" ref="0x406f84e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406f8bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x406f8998"/>
        <function-ref name="getdt" scoped="" ref="0x406f76f8"/>
        <function-ref name="gett0" scoped="" ref="0x406f74a0"/>
        <function-ref name="isRunning" scoped="" ref="0x406f8740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406facb0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406f8f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x406f8010"/>
        <function-ref name="stop" scoped="" ref="0x406f8290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406de338" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406de338"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406fbea8"/>
        <function-ref name="fired" scoped="" ref="0x406fb110"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406fb848"/>
        <function-ref name="isOneShot" scoped="" ref="0x406fb5e0"/>
        <function-ref name="getdt" scoped="" ref="0x406fa398"/>
        <function-ref name="gett0" scoped="" ref="0x406fa130"/>
        <function-ref name="isRunning" scoped="" ref="0x406fb378"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406de970"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406fbb78"/>
        <function-ref name="startOneShot" scoped="" ref="0x406dec00"/>
        <function-ref name="stop" scoped="" ref="0x406dee90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40709740" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40709740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40707248"/>
        <function-ref name="fired" scoped="" ref="0x407084e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40708bf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40708998"/>
        <function-ref name="getdt" scoped="" ref="0x407076f8"/>
        <function-ref name="gett0" scoped="" ref="0x407074a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40708740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40709d68"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40708f10"/>
        <function-ref name="startOneShot" scoped="" ref="0x40708010"/>
        <function-ref name="stop" scoped="" ref="0x40708290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407054c8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407054c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40703010"/>
        <function-ref name="fired" scoped="" ref="0x40704268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40704970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40704718"/>
        <function-ref name="getdt" scoped="" ref="0x407034c0"/>
        <function-ref name="gett0" scoped="" ref="0x40703268"/>
        <function-ref name="isRunning" scoped="" ref="0x407044c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40705af0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40704c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40705d70"/>
        <function-ref name="stop" scoped="" ref="0x40704010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40702d28" loc="3:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorC.nc">
      <component-ref qname="BlinkAppC.TempSensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40702d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40701370"/>
        <function-ref name="readDone" scoped="" ref="0x407015c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40dca508" loc="25:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
      <component-ref qname="BlinkAppC.TempSensor.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40dca508"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40dca6e0"/>
        <function-ref name="configure" scoped="" ref="0x40dca7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40dcb478" loc="22:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
      <component-ref qname="BlinkAppC.TempSensor.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40dcb478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40dcbaa0"/>
        <function-ref name="readDone" scoped="" ref="0x40dcbcf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40dca030" loc="24:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
      <component-ref qname="BlinkAppC.TempSensor.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40dca030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40dca208"/>
        <function-ref name="getChannel" scoped="" ref="0x40dca2e8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40dca3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4070fbb8" loc="18:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4070fbb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407201f0"/>
        <function-ref name="readDone" scoped="" ref="0x40720448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x4071f010" loc="19:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x4071f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4071f658"/>
        <function-ref name="readDone" scoped="" ref="0x4071f8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x4071e010" loc="22:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x4071e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x4071e1e8"/>
        <function-ref name="getChannel" scoped="" ref="0x4071e2c8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x4071e3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40718b68" loc="23:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40718b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40718d40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40718e20"/>
        <function-ref name="request" scoped="" ref="0x40718f00"/>
        <function-ref name="granted" scoped="" ref="0x4071b010"/>
        <function-ref name="isOwner" scoped="" ref="0x4071b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4072a100" loc="58:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4072a100"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4072a2d8"/>
        <function-ref name="configure" scoped="" ref="0x4072a3b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x40723870" loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40723870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40723a48"/>
        <function-ref name="dataReady" scoped="" ref="0x40723b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x40727540" loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40727540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40727718"/>
        <function-ref name="cancel" scoped="" ref="0x407277f8"/>
        <function-ref name="dataReady" scoped="" ref="0x407278d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4071bb78" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4071bb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4071bd50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4071be30"/>
        <function-ref name="request" scoped="" ref="0x4071bf10"/>
        <function-ref name="granted" scoped="" ref="0x4072b010"/>
        <function-ref name="isOwner" scoped="" ref="0x4072b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4072ad50" loc="85:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4072ad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4072af28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x40735bb0" loc="88:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40735bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40735d88"/>
        <function-ref name="dataReady" scoped="" ref="0x40735e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x40735628" loc="87:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40735628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40735800"/>
        <function-ref name="cancel" scoped="" ref="0x407358e0"/>
        <function-ref name="dataReady" scoped="" ref="0x407359c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x40744498" loc="91:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40744498"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40744670"/>
        <function-ref name="getAdmux" scoped="" ref="0x40744750"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40744830"/>
        <function-ref name="isEnabled" scoped="" ref="0x40744910"/>
        <function-ref name="enableAdc" scoped="" ref="0x407449f0"/>
        <function-ref name="setAdmux" scoped="" ref="0x40744ad0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40744bb0"/>
        <function-ref name="isComplete" scoped="" ref="0x40744c90"/>
        <function-ref name="cancel" scoped="" ref="0x40744d70"/>
        <function-ref name="disableAdc" scoped="" ref="0x40744e50"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40736010"/>
        <function-ref name="disableInterruption" scoped="" ref="0x407360f0"/>
        <function-ref name="startConversion" scoped="" ref="0x407361d0"/>
        <function-ref name="isStarted" scoped="" ref="0x40736330"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40736410"/>
        <function-ref name="setContinuous" scoped="" ref="0x407364f0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x407365d0"/>
        <function-ref name="getValue" scoped="" ref="0x407366b0"/>
        <function-ref name="dataReady" scoped="" ref="0x40736790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40735198" loc="86:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40735198"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40735370"/>
        <function-ref name="stop" scoped="" ref="0x40735450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40729a40" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40729a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40729c18"/>
        <function-ref name="getAdmux" scoped="" ref="0x40729cf8"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40729dd8"/>
        <function-ref name="isEnabled" scoped="" ref="0x40729eb8"/>
        <function-ref name="enableAdc" scoped="" ref="0x40757010"/>
        <function-ref name="setAdmux" scoped="" ref="0x407570f0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x407571d0"/>
        <function-ref name="isComplete" scoped="" ref="0x407572b0"/>
        <function-ref name="cancel" scoped="" ref="0x40757390"/>
        <function-ref name="disableAdc" scoped="" ref="0x40757470"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40757550"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40757630"/>
        <function-ref name="startConversion" scoped="" ref="0x40757710"/>
        <function-ref name="isStarted" scoped="" ref="0x40757870"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40757950"/>
        <function-ref name="setContinuous" scoped="" ref="0x40757a30"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40757b10"/>
        <function-ref name="getValue" scoped="" ref="0x40757bf0"/>
        <function-ref name="dataReady" scoped="" ref="0x40757cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40753c38" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40753c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40753e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40756738" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40756738"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40756910"/>
        <function-ref name="getAdmux" scoped="" ref="0x407569f0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40756ad0"/>
        <function-ref name="isEnabled" scoped="" ref="0x40756bb0"/>
        <function-ref name="enableAdc" scoped="" ref="0x40756c90"/>
        <function-ref name="setAdmux" scoped="" ref="0x40756d70"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40756e50"/>
        <function-ref name="isComplete" scoped="" ref="0x40753010"/>
        <function-ref name="cancel" scoped="" ref="0x407530f0"/>
        <function-ref name="disableAdc" scoped="" ref="0x407531d0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x407532b0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40753390"/>
        <function-ref name="startConversion" scoped="" ref="0x40753470"/>
        <function-ref name="isStarted" scoped="" ref="0x407535d0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x407536b0"/>
        <function-ref name="setContinuous" scoped="" ref="0x40753790"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40753870"/>
        <function-ref name="getValue" scoped="" ref="0x40753950"/>
        <function-ref name="dataReady" scoped="" ref="0x40753a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40752010" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40752010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x407521e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40754b60" loc="92:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40754b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40754d48"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40754e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x407c7b58" loc="96:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x407c7b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x407c7d40"/>
        <function-ref name="configure" scoped="" ref="0x407c7e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x407c7010" loc="93:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x407c7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407c71e8"/>
        <function-ref name="requested" scoped="" ref="0x407c72c8"/>
        <function-ref name="granted" scoped="" ref="0x407c73a8"/>
        <function-ref name="isOwner" scoped="" ref="0x407c7488"/>
        <function-ref name="immediateRequested" scoped="" ref="0x407c7568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40754420" loc="91:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40754420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40754608"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407546e8"/>
        <function-ref name="request" scoped="" ref="0x407547c8"/>
        <function-ref name="granted" scoped="" ref="0x407548a8"/>
        <function-ref name="isOwner" scoped="" ref="0x40754988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x407c76a8" loc="94:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x407c76a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x407c7880"/>
        <function-ref name="userId" scoped="" ref="0x407c7960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40dc2d60" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40dc2d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40dc0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x40dc0170" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x40dc0170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40dc0348"/>
        <function-ref name="isEmpty" scoped="" ref="0x40dc0428"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40dc0508"/>
        <function-ref name="dequeue" scoped="" ref="0x40dc05e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40df0a28" loc="55:/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40df0a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40df0c10"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40df0cf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40def9d0" loc="60:/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40def9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40defbb8"/>
        <function-ref name="configure" scoped="" ref="0x40defc98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40defdf8" loc="61:/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40defdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40dee010"/>
        <function-ref name="isEmpty" scoped="" ref="0x40dee0f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40dee1d0"/>
        <function-ref name="dequeue" scoped="" ref="0x40dee2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40df0e30" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40df0e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40def050"/>
        <function-ref name="requested" scoped="" ref="0x40def130"/>
        <function-ref name="granted" scoped="" ref="0x40def210"/>
        <function-ref name="isOwner" scoped="" ref="0x40def2f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40def3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40dee3f0" loc="62:/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40dee3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40dee5c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40dee6a8"/>
        <function-ref name="led1On" scoped="" ref="0x40dee788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40dee868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40dee948"/>
        <function-ref name="get" scoped="" ref="0x40deea28"/>
        <function-ref name="led1Off" scoped="" ref="0x40deeb08"/>
        <function-ref name="led0On" scoped="" ref="0x40deee88"/>
        <function-ref name="set" scoped="" ref="0x40deecc8"/>
        <function-ref name="led2On" scoped="" ref="0x40deebe8"/>
        <function-ref name="led2Off" scoped="" ref="0x40deeda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40df02e8" loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40df02e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40df04d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40df05b0"/>
        <function-ref name="request" scoped="" ref="0x40df0690"/>
        <function-ref name="granted" scoped="" ref="0x40df0770"/>
        <function-ref name="isOwner" scoped="" ref="0x40df0850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40def510" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40def510"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40def6e8"/>
        <function-ref name="userId" scoped="" ref="0x40def7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40ded030" loc="75:/opt/tinyos-main/src/tinyos-main/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40ded030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ded208"/>
        <function-ref name="runTask" scoped="" ref="0x40ded2e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x407c4de8" loc="72:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x407c4de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x407c3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x407c3150" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x407c3150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407c3328"/>
        <function-ref name="requested" scoped="" ref="0x407c3408"/>
        <function-ref name="granted" scoped="" ref="0x407c34e8"/>
        <function-ref name="isOwner" scoped="" ref="0x407c35c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x407c36a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x407c49f0" loc="70:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x407c49f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x407c4bc8"/>
        <function-ref name="stop" scoped="" ref="0x407c4ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x407c37e8" loc="74:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x407c37e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x407c39c0"/>
        <function-ref name="userId" scoped="" ref="0x407c3aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40e06db0" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40e06db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40e04010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40e04150" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40e04150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e04328"/>
        <function-ref name="requested" scoped="" ref="0x40e04408"/>
        <function-ref name="granted" scoped="" ref="0x40e044e8"/>
        <function-ref name="isOwner" scoped="" ref="0x40e045c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40e046a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x40e069b8" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40e069b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e06b90"/>
        <function-ref name="stop" scoped="" ref="0x40e06c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40e047e8" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40e047e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40e049c0"/>
        <function-ref name="userId" scoped="" ref="0x40e04aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x407ce938" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x407ce938"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407cb010"/>
        <function-ref name="readDone" scoped="" ref="0x407cb268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x407cb978" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x407cb978"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407e4010"/>
        <function-ref name="readDone" scoped="" ref="0x407e4288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x407e4eb0" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x407e4eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x407e30c0"/>
        <function-ref name="getChannel" scoped="" ref="0x407e31a0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x407e3280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x407e4638" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x407e4638"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x407e4810"/>
        <function-ref name="cancel" scoped="" ref="0x407e48f0"/>
        <function-ref name="dataReady" scoped="" ref="0x407e49d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x407da538" loc="103:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x407da538"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407da710"/>
        <function-ref name="runTask" scoped="" ref="0x407da7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x407f5e78" loc="24:/opt/tinyos-main/src/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x407f5e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407cc4d8"/>
        <function-ref name="readDone" scoped="" ref="0x407cc740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x407ccba0" loc="26:/opt/tinyos-main/src/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x407ccba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407e91f0"/>
        <function-ref name="readDone" scoped="" ref="0x407e9458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x407e97d8" loc="27:/opt/tinyos-main/src/tinyos-main/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x407e97d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407e99c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407e9aa0"/>
        <function-ref name="request" scoped="" ref="0x407e9b80"/>
        <function-ref name="granted" scoped="" ref="0x407e9c60"/>
        <function-ref name="isOwner" scoped="" ref="0x407e9d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x40dc93b0" loc="6:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorP.nc">
      <component-ref qname="BlinkAppC.TempSensor.PlatformSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40dc93b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40dc9588"/>
        <function-ref name="getChannel" scoped="" ref="0x40dc9668"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40dc9748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40809538" loc="3:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorC.nc">
      <component-ref qname="BlinkAppC.Vol0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40809538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40809b60"/>
        <function-ref name="readDone" scoped="" ref="0x40809db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40df94e8" loc="25:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
      <component-ref qname="BlinkAppC.Vol0.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40df94e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40df96c0"/>
        <function-ref name="configure" scoped="" ref="0x40df97a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40dfb430" loc="22:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
      <component-ref qname="BlinkAppC.Vol0.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40dfb430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40dfba58"/>
        <function-ref name="readDone" scoped="" ref="0x40dfbcb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40df9010" loc="24:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
      <component-ref qname="BlinkAppC.Vol0.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40df9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40df91e8"/>
        <function-ref name="getChannel" scoped="" ref="0x40df92c8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40df93a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x40df83b0" loc="6:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorP.nc">
      <component-ref qname="BlinkAppC.Vol0.PlatformSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40df83b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40df8588"/>
        <function-ref name="getChannel" scoped="" ref="0x40df8668"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40df8748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40804da0" loc="3:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorC.nc">
      <component-ref qname="BlinkAppC.Vol1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40804da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408023e0"/>
        <function-ref name="readDone" scoped="" ref="0x40802638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40df28f0" loc="25:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
      <component-ref qname="BlinkAppC.Vol1.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40df28f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40df2ac8"/>
        <function-ref name="configure" scoped="" ref="0x40df2ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40df3878" loc="22:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
      <component-ref qname="BlinkAppC.Vol1.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40df3878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40df3ea0"/>
        <function-ref name="readDone" scoped="" ref="0x40df2110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40df2418" loc="24:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/AdcReadClientC.nc">
      <component-ref qname="BlinkAppC.Vol1.Adc"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40df2418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40df25f0"/>
        <function-ref name="getChannel" scoped="" ref="0x40df26d0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40df27b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x40df1798" loc="6:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSensorP.nc">
      <component-ref qname="BlinkAppC.Vol1.PlatformSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40df1798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40df1970"/>
        <function-ref name="getChannel" scoped="" ref="0x40df1a50"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40df1b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x407ff930" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x407ff930"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407ffb08"/>
        <function-ref name="receive" scoped="" ref="0x407ffbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStreamBlocking" ref="0x407ffe88" loc="40:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStreamBlocking" scoped="" ref="0x407ffe88"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40818070"/>
        <function-ref name="receivedByte" scoped="" ref="0x40818150"/>
        <function-ref name="receive" scoped="" ref="0x40818230"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40818310"/>
        <function-ref name="receiveDone" scoped="" ref="0x408183f0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x408184d0"/>
        <function-ref name="sendDone" scoped="" ref="0x408185b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x407ff060" loc="38:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x407ff060"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407ff238"/>
        <function-ref name="receivedByte" scoped="" ref="0x407ff318"/>
        <function-ref name="receive" scoped="" ref="0x407ff3f8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x407ff4d8"/>
        <function-ref name="receiveDone" scoped="" ref="0x407ff5b8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x407ff698"/>
        <function-ref name="sendDone" scoped="" ref="0x407ff778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40812980" loc="39:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <component-ref qname="Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40812980"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40812b58"/>
        <function-ref name="stopDone" scoped="" ref="0x40812c38"/>
        <function-ref name="start" scoped="" ref="0x40812d18"/>
        <function-ref name="stop" scoped="" ref="0x40812df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x408453e0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <component-ref qname="Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x408453e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408455b8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40845698"/>
        <function-ref name="request" scoped="" ref="0x40845778"/>
        <function-ref name="granted" scoped="" ref="0x40845858"/>
        <function-ref name="isOwner" scoped="" ref="0x40845938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x4085d480" loc="43:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <component-ref qname="Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x4085d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4085d658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40856470" loc="45:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <component-ref qname="Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40856470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40856648"/>
        <function-ref name="payloadLength" scoped="" ref="0x40856728"/>
        <function-ref name="getPayload" scoped="" ref="0x40856808"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408568e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408569c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x408525b8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <component-ref qname="Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x408525b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40852790"/>
        <function-ref name="address" scoped="" ref="0x40852870"/>
        <function-ref name="destination" scoped="" ref="0x40852950"/>
        <function-ref name="setSource" scoped="" ref="0x40852a30"/>
        <function-ref name="setDestination" scoped="" ref="0x40852b10"/>
        <function-ref name="pan" scoped="" ref="0x40852bf0"/>
        <function-ref name="setPan" scoped="" ref="0x40852cd0"/>
        <function-ref name="isForMe" scoped="" ref="0x40852db0"/>
        <function-ref name="localPan" scoped="" ref="0x40852e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40867e58" loc="50:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <component-ref qname="Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40867e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40851050"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40851130"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40851210"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x408512f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40842010" loc="49:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <component-ref qname="Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40842010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408421e8"/>
        <function-ref name="noAck" scoped="" ref="0x408422c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x408423a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40847ce0" loc="41:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <component-ref qname="Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40847ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40847eb8"/>
        <function-ref name="getPayload" scoped="" ref="0x40814010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408140f0"/>
        <function-ref name="cancel" scoped="" ref="0x408141d0"/>
        <function-ref name="sendDone" scoped="" ref="0x408142b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x408627a0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <component-ref qname="Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x408627a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40862978"/>
        <function-ref name="setRetries" scoped="" ref="0x40862a58"/>
        <function-ref name="getRetries" scoped="" ref="0x40862b38"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40862c18"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40862cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x4085f1d8" loc="52:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <component-ref qname="Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x4085f1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4085f3b0"/>
        <function-ref name="setChannel" scoped="" ref="0x4085f490"/>
        <function-ref name="getChannel" scoped="" ref="0x4085f570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40811010" loc="42:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <component-ref qname="Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40811010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408111e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMicro" ref="0x40866010" loc="54:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <component-ref qname="Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMicro" scoped="" ref="0x40866010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="TRadio" ref="0x4082ab98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40866b10"/>
        <function-ref name="clear" scoped="" ref="0x40866ec0"/>
        <function-ref name="isValid" scoped="" ref="0x40866760"/>
        <function-ref name="set" scoped="" ref="0x408602a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x408609d8" loc="55:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/Ieee154MessageC.nc">
      <component-ref qname="Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408609d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408755b0"/>
        <function-ref name="clear" scoped="" ref="0x40875960"/>
        <function-ref name="isValid" scoped="" ref="0x40875200"/>
        <function-ref name="set" scoped="" ref="0x40875d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408747e0" loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408747e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408749b8"/>
        <function-ref name="stopDone" scoped="" ref="0x40874a98"/>
        <function-ref name="start" scoped="" ref="0x40874b78"/>
        <function-ref name="stop" scoped="" ref="0x40874c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40883bd8" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40883bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408827b8"/>
        <function-ref name="get" scoped="" ref="0x408824f8"/>
        <function-ref name="isSet" scoped="" ref="0x40882238"/>
        <function-ref name="set" scoped="" ref="0x40882a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x4086f258" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x4086f258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4086f430"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4086f510"/>
        <function-ref name="request" scoped="" ref="0x4086f5f0"/>
        <function-ref name="granted" scoped="" ref="0x4086f6d0"/>
        <function-ref name="isOwner" scoped="" ref="0x4086f7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40871960" loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40871960"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40871b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x408707b0" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408707b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40870988"/>
        <function-ref name="payloadLength" scoped="" ref="0x40870a68"/>
        <function-ref name="getPayload" scoped="" ref="0x40870b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40870c28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40870d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40871d00" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40871d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40871ed8"/>
        <function-ref name="address" scoped="" ref="0x40870010"/>
        <function-ref name="destination" scoped="" ref="0x408700f0"/>
        <function-ref name="setSource" scoped="" ref="0x408701d0"/>
        <function-ref name="setDestination" scoped="" ref="0x408702b0"/>
        <function-ref name="pan" scoped="" ref="0x40870390"/>
        <function-ref name="setPan" scoped="" ref="0x40870470"/>
        <function-ref name="isForMe" scoped="" ref="0x40870550"/>
        <function-ref name="localPan" scoped="" ref="0x40870630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x408877f0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x408877f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40883450"/>
        <function-ref name="get" scoped="" ref="0x40883190"/>
        <function-ref name="isSet" scoped="" ref="0x40887eb8"/>
        <function-ref name="set" scoped="" ref="0x40883710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4086d010" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4086d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x4086d1e8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x4086d2c8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x4086d3a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x4086d488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40880838" loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40880838"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="TRadio" ref="0x4082ab98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4087f3c0"/>
        <function-ref name="clear" scoped="" ref="0x4087f770"/>
        <function-ref name="isValid" scoped="" ref="0x4087f010"/>
        <function-ref name="set" scoped="" ref="0x4087fb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x4087ec58" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x4087ec58"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="TRadio" ref="0x4082ab98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408802e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x408843e0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x408843e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40887010"/>
        <function-ref name="get" scoped="" ref="0x40884ce8"/>
        <function-ref name="isSet" scoped="" ref="0x40884a28"/>
        <function-ref name="set" scoped="" ref="0x408872d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4086f9d0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4086f9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4086fba8"/>
        <function-ref name="noAck" scoped="" ref="0x4086fc88"/>
        <function-ref name="wasAcked" scoped="" ref="0x4086fd68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40874e08" loc="36:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40874e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40871010"/>
        <function-ref name="getPayload" scoped="" ref="0x408710f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408711d0"/>
        <function-ref name="cancel" scoped="" ref="0x408712b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40871390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4086d630" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x4086d630"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x4086d808"/>
        <function-ref name="setRetries" scoped="" ref="0x4086d8e8"/>
        <function-ref name="getRetries" scoped="" ref="0x4086d9c8"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4086daa8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x4086db88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x4086dd48" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x4086dd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4086df20"/>
        <function-ref name="setChannel" scoped="" ref="0x4086c018"/>
        <function-ref name="getChannel" scoped="" ref="0x4086c0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x408715c8" loc="37:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x408715c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408717a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4087c288" loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4087c288"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4087cd88"/>
        <function-ref name="clear" scoped="" ref="0x4087b150"/>
        <function-ref name="isValid" scoped="" ref="0x4087c9d8"/>
        <function-ref name="set" scoped="" ref="0x4087b500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4087be60" loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4087be60"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40894050"/>
        <function-ref name="stopDone" scoped="" ref="0x40894130"/>
        <function-ref name="start" scoped="" ref="0x40894210"/>
        <function-ref name="stop" scoped="" ref="0x408942f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x4088b3f8" loc="83:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x4088b3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4088a010"/>
        <function-ref name="get" scoped="" ref="0x4088bd00"/>
        <function-ref name="isSet" scoped="" ref="0x4088ba40"/>
        <function-ref name="set" scoped="" ref="0x4088a2d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x408930c8" loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x408930c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x408932a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x408937d8" loc="63:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x408937d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408939b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40893a90"/>
        <function-ref name="request" scoped="" ref="0x40893b70"/>
        <function-ref name="granted" scoped="" ref="0x40893c50"/>
        <function-ref name="isOwner" scoped="" ref="0x40893d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40893ef8" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40893ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x408920e0"/>
        <function-ref name="address" scoped="" ref="0x408921c0"/>
        <function-ref name="destination" scoped="" ref="0x408922a0"/>
        <function-ref name="setSource" scoped="" ref="0x40892380"/>
        <function-ref name="setDestination" scoped="" ref="0x40892460"/>
        <function-ref name="pan" scoped="" ref="0x40892540"/>
        <function-ref name="setPan" scoped="" ref="0x40892620"/>
        <function-ref name="isForMe" scoped="" ref="0x40892700"/>
        <function-ref name="localPan" scoped="" ref="0x408927e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x40892a68" loc="66:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40892a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40892c40"/>
        <function-ref name="payloadLength" scoped="" ref="0x40892d20"/>
        <function-ref name="getPayload" scoped="" ref="0x40892e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40892ee0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40891010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x408917b8" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x408917b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40891990"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40891a70"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40891b50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40891c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x4088d010" loc="82:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x4088d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4088dc58"/>
        <function-ref name="get" scoped="" ref="0x4088d998"/>
        <function-ref name="isSet" scoped="" ref="0x4088d6d8"/>
        <function-ref name="set" scoped="" ref="0x4088df18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x408893a0" loc="86:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x408893a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="TRadio" ref="0x4082ab98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40889ea0"/>
        <function-ref name="clear" scoped="" ref="0x408a3280"/>
        <function-ref name="isValid" scoped="" ref="0x40889af0"/>
        <function-ref name="set" scoped="" ref="0x408a3630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x4088a7a8" loc="85:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x4088a7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="TRadio" ref="0x4082ab98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4088adf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x4088fc40" loc="81:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x4088fc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4088e818"/>
        <function-ref name="get" scoped="" ref="0x4088e558"/>
        <function-ref name="isSet" scoped="" ref="0x4088e298"/>
        <function-ref name="set" scoped="" ref="0x4088ead8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40891230" loc="69:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40891230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40891408"/>
        <function-ref name="noAck" scoped="" ref="0x408914e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x408915c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x408944a0" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x408944a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40894678"/>
        <function-ref name="getPayload" scoped="" ref="0x40894758"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40894838"/>
        <function-ref name="cancel" scoped="" ref="0x40894918"/>
        <function-ref name="sendDone" scoped="" ref="0x408949f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40891dd8" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40891dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x4088f010"/>
        <function-ref name="setRetries" scoped="" ref="0x4088f0f0"/>
        <function-ref name="getRetries" scoped="" ref="0x4088f1d0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4088f2b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x4088f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x4088f550" loc="79:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x4088f550"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4088f728"/>
        <function-ref name="setChannel" scoped="" ref="0x4088f808"/>
        <function-ref name="getChannel" scoped="" ref="0x4088f8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40894c30" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40894c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40894e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x408a3d68" loc="87:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x408a3d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408a2898"/>
        <function-ref name="clear" scoped="" ref="0x408a2c48"/>
        <function-ref name="isValid" scoped="" ref="0x408a24e8"/>
        <function-ref name="set" scoped="" ref="0x408a1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x40898da8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x40898da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x408ab010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x408aa5f8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x408aa5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x408aa7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x408bdda0" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x408bdda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40898010"/>
        <function-ref name="checkFrame" scoped="" ref="0x408980f0"/>
        <function-ref name="source" scoped="" ref="0x408981d0"/>
        <function-ref name="destination" scoped="" ref="0x408982b0"/>
        <function-ref name="setSource" scoped="" ref="0x40898390"/>
        <function-ref name="setDestination" scoped="" ref="0x40898470"/>
        <function-ref name="setGroup" scoped="" ref="0x40898550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x408a4360" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x408a4360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x408a4538"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x408a4618"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x408a46f8"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x408a47d8"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x408a48b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x408bb620" loc="63:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x408bb620"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="TRadio" ref="0x4082ab98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408bbc68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x408c8480" loc="66:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x408c8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="TRadio" ref="0x4082ab98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x408c4010"/>
        <function-ref name="clear" scoped="" ref="0x408c43c0"/>
        <function-ref name="isValid" scoped="" ref="0x408c8c50"/>
        <function-ref name="set" scoped="" ref="0x408c4770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x4089b8c8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x4089b8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x4089baa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x408af228" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x408af228"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x408af400"/>
        <function-ref name="createAckPacket" scoped="" ref="0x408af4e0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x408af5c0"/>
        <function-ref name="isAckPacket" scoped="" ref="0x408af6a0"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x408af780"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x408af860"/>
        <function-ref name="setAckRequired" scoped="" ref="0x408af940"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x408afa20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x408cba58" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x408cba58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x408cbc30"/>
        <function-ref name="getDSN" scoped="" ref="0x408cbd10"/>
        <function-ref name="setFCF" scoped="" ref="0x408cbdf0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x408cbed0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x408bc010"/>
        <function-ref name="createDataFrame" scoped="" ref="0x408bc0f0"/>
        <function-ref name="setDSN" scoped="" ref="0x408bc1d0"/>
        <function-ref name="createAckReply" scoped="" ref="0x408bc2b0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x408bc390"/>
        <function-ref name="isDataFrame" scoped="" ref="0x408bc470"/>
        <function-ref name="getAckRequired" scoped="" ref="0x408bc550"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x408bc630"/>
        <function-ref name="localAddr" scoped="" ref="0x408bc710"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x408bc870"/>
        <function-ref name="localPan" scoped="" ref="0x408bc950"/>
        <function-ref name="setDestAddr" scoped="" ref="0x408bca30"/>
        <function-ref name="createAckFrame" scoped="" ref="0x408bcb10"/>
        <function-ref name="setFramePending" scoped="" ref="0x408bcbf0"/>
        <function-ref name="setDestPan" scoped="" ref="0x408bccd0"/>
        <function-ref name="isForMe" scoped="" ref="0x408bcdb0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x408bce90"/>
        <function-ref name="getFCF" scoped="" ref="0x408bb010"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x408bb0f0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x408bb1d0"/>
        <function-ref name="getFramePending" scoped="" ref="0x408bb2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x408ad8e8" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x408ad8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x408adac0"/>
        <function-ref name="reportChannelError" scoped="" ref="0x408adba0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x408adc80"/>
        <function-ref name="getSender" scoped="" ref="0x408add60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x408a86f8" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x408a86f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x408a88d0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x408a89b0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x408a8a90"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x408a8b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RFA1Packet" ref="0x408c5a10" loc="64:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1Packet" scoped="" ref="0x408c5a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408c5be8"/>
        <function-ref name="payloadLength" scoped="" ref="0x408c5cc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408c5da8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408c5e88"/>
        <function-ref name="headerLength" scoped="" ref="0x408c8010"/>
        <function-ref name="metadataLength" scoped="" ref="0x408c80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1DriverConfig" ref="0x40899ce0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1DriverConfig" scoped="" ref="0x40899ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40899eb8"/>
        <function-ref name="headerLength" scoped="" ref="0x4089c010"/>
        <function-ref name="metadataLength" scoped="" ref="0x4089c0f0"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x4089c1d0"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x4089c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x408ef348" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x408ef348"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408ef530"/>
        <function-ref name="wait" scoped="" ref="0x408ef610"/>
        <function-ref name="cancel" scoped="" ref="0x408ef6f0"/>
        <function-ref name="isFree" scoped="" ref="0x408ef7d0"/>
        <function-ref name="getNow" scoped="" ref="0x408ef8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x408efc00" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x408efc00"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f77d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f77d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="TRadio" ref="0x4082ab98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x4082ae50"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409250f8"/>
        <function-ref name="fired" scoped="" ref="0x408ee898"/>
        <function-ref name="startAt" scoped="" ref="0x408eed88"/>
        <function-ref name="isRunning" scoped="" ref="0x408eeb10"/>
        <function-ref name="getAlarm" scoped="" ref="0x40925370"/>
        <function-ref name="start" scoped="" ref="0x408ee380"/>
        <function-ref name="stop" scoped="" ref="0x408ee620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x40e0d440" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40e0d440"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40e0d628"/>
        <function-ref name="wait" scoped="" ref="0x40e0d708"/>
        <function-ref name="cancel" scoped="" ref="0x40e0d7e8"/>
        <function-ref name="isFree" scoped="" ref="0x40e0d8c8"/>
        <function-ref name="getNow" scoped="" ref="0x40e0d9a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40e0dc38" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e0dc38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="TRadio" ref="0x4082ab98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x4082ae50"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e0b0f8"/>
        <function-ref name="fired" scoped="" ref="0x40e0c8b8"/>
        <function-ref name="startAt" scoped="" ref="0x40e0cda8"/>
        <function-ref name="isRunning" scoped="" ref="0x40e0cb30"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e0b370"/>
        <function-ref name="start" scoped="" ref="0x40e0c3a0"/>
        <function-ref name="stop" scoped="" ref="0x40e0c640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40e0b580" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40e0b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40e0b758"/>
        <function-ref name="suspend" scoped="" ref="0x40e0b838"/>
        <function-ref name="resume" scoped="" ref="0x40e0b918"/>
        <function-ref name="run" scoped="" ref="0x40e0b9f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x40910d48" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40910d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40910f20"/>
        <function-ref name="suspend" scoped="" ref="0x4090d018"/>
        <function-ref name="resume" scoped="" ref="0x4090d0f8"/>
        <function-ref name="run" scoped="" ref="0x4090d1d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40924260" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="RFA1RadioC.AlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40924260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405240a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40923728"/>
        <function-ref name="fired" scoped="" ref="0x40924ec8"/>
        <function-ref name="startAt" scoped="" ref="0x409233e8"/>
        <function-ref name="isRunning" scoped="" ref="0x40923170"/>
        <function-ref name="getAlarm" scoped="" ref="0x409239a0"/>
        <function-ref name="start" scoped="" ref="0x409249b0"/>
        <function-ref name="stop" scoped="" ref="0x40924c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x40e32010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1RadioC.AlarmC.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x40e32010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40e30a68"/>
        <function-ref name="test" scoped="" ref="0x40e32de8"/>
        <function-ref name="fired" scoped="" ref="0x40e32b70"/>
        <function-ref name="force" scoped="" ref="0x40e2f010"/>
        <function-ref name="get" scoped="" ref="0x40e32658"/>
        <function-ref name="reset" scoped="" ref="0x40e30088"/>
        <function-ref name="getMode" scoped="" ref="0x40e30d08"/>
        <function-ref name="isOn" scoped="" ref="0x40e307f0"/>
        <function-ref name="set" scoped="" ref="0x40e328d0"/>
        <function-ref name="start" scoped="" ref="0x40e30300"/>
        <function-ref name="stop" scoped="" ref="0x40e30578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e37598" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1RadioC.AlarmC.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e37598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405240a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e36ab8"/>
        <function-ref name="fired" scoped="" ref="0x40e36288"/>
        <function-ref name="startAt" scoped="" ref="0x40e36778"/>
        <function-ref name="isRunning" scoped="" ref="0x40e36500"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e36d30"/>
        <function-ref name="start" scoped="" ref="0x40e37ce8"/>
        <function-ref name="stop" scoped="" ref="0x40e36010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e37160" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1RadioC.AlarmC.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e37160"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f77d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f77d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e37338"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x40e34010" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1RadioC.AlarmC.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x40e34010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40e33a68"/>
        <function-ref name="test" scoped="" ref="0x40e34de8"/>
        <function-ref name="get" scoped="" ref="0x40e34658"/>
        <function-ref name="reset" scoped="" ref="0x40e33088"/>
        <function-ref name="getMode" scoped="" ref="0x40e33d08"/>
        <function-ref name="overflow" scoped="" ref="0x40e34b70"/>
        <function-ref name="isOn" scoped="" ref="0x40e337f0"/>
        <function-ref name="set" scoped="" ref="0x40e348d0"/>
        <function-ref name="start" scoped="" ref="0x40e33300"/>
        <function-ref name="stop" scoped="" ref="0x40e33578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x409208b0" loc="86:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x409208b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40920a98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40920b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4094e208" loc="89:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4094e208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4094e3f0"/>
        <function-ref name="configure" scoped="" ref="0x4094e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40920170" loc="85:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40920170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40920358"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40920438"/>
        <function-ref name="request" scoped="" ref="0x40920518"/>
        <function-ref name="granted" scoped="" ref="0x409205f8"/>
        <function-ref name="isOwner" scoped="" ref="0x409206d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40920cb8" loc="87:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40920cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40920e90"/>
        <function-ref name="userId" scoped="" ref="0x4094e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e57ba0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e57ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e57d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40e57ed8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40e57ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40e550c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x40e551a0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40e55280"/>
        <function-ref name="dequeue" scoped="" ref="0x40e55360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40e54618" loc="52:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40e54618"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40e54800"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40e548e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40e54ee0" loc="56:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40e54ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40e520e0"/>
        <function-ref name="configure" scoped="" ref="0x40e521c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40e52320" loc="57:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40e52320"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40e524f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40e525d8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40e526b8"/>
        <function-ref name="dequeue" scoped="" ref="0x40e52798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40e55ec8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e55ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e540c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e541a0"/>
        <function-ref name="request" scoped="" ref="0x40e54280"/>
        <function-ref name="granted" scoped="" ref="0x40e54360"/>
        <function-ref name="isOwner" scoped="" ref="0x40e54440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40e54a20" loc="53:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40e54a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40e54bf8"/>
        <function-ref name="userId" scoped="" ref="0x40e54cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40e52918" loc="69:/opt/tinyos-main/src/tinyos-main/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40e52918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e52af0"/>
        <function-ref name="runTask" scoped="" ref="0x40e52bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4096c9e8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4096c9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4096cbc0"/>
        <function-ref name="cancel" scoped="" ref="0x4096cca0"/>
        <function-ref name="sendDone" scoped="" ref="0x4096cd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4096cee0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4096cee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4096b0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x4096e488" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x4096e488"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4096e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4094b3e0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4094b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4094b5b8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4094b698"/>
        <function-ref name="getPayload" scoped="" ref="0x4094b778"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4094b858"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4094b938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x4096c250" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4096c250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4096c428"/>
        <function-ref name="payloadLength" scoped="" ref="0x4096c508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4096c5e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4096c6c8"/>
        <function-ref name="headerLength" scoped="" ref="0x4096c7a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x4096c888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x4096e7d0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4096e7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4096e9a8"/>
        <function-ref name="getDSN" scoped="" ref="0x4096ea88"/>
        <function-ref name="setFCF" scoped="" ref="0x4096eb68"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4096ec48"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4096ed28"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4096ee08"/>
        <function-ref name="setDSN" scoped="" ref="0x4096eee8"/>
        <function-ref name="createAckReply" scoped="" ref="0x4096d010"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4096d0f0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4096d1d0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4096d2b0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4096d390"/>
        <function-ref name="localAddr" scoped="" ref="0x4096d470"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4096d5d0"/>
        <function-ref name="localPan" scoped="" ref="0x4096d6b0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4096d790"/>
        <function-ref name="createAckFrame" scoped="" ref="0x4096d870"/>
        <function-ref name="setFramePending" scoped="" ref="0x4096d950"/>
        <function-ref name="setDestPan" scoped="" ref="0x4096da30"/>
        <function-ref name="isForMe" scoped="" ref="0x4096db10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4096dbf0"/>
        <function-ref name="getFCF" scoped="" ref="0x4096dcd0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4096ddb0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x4096de90"/>
        <function-ref name="getFramePending" scoped="" ref="0x4096c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x4094ba78" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x4094ba78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4094bc50"/>
        <function-ref name="getPayload" scoped="" ref="0x4094bd30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4094be10"/>
        <function-ref name="cancel" scoped="" ref="0x4094bef0"/>
        <function-ref name="sendDone" scoped="" ref="0x4096e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x4096e170" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x4096e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4096e348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40987b10" loc="69:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40987b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40987ce8"/>
        <function-ref name="cancel" scoped="" ref="0x40987dc8"/>
        <function-ref name="sendDone" scoped="" ref="0x40987ea8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40997030" loc="70:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40997030"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40997208"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40987348" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40987348"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40987520"/>
        <function-ref name="payloadLength" scoped="" ref="0x40987600"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409876e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409877c0"/>
        <function-ref name="headerLength" scoped="" ref="0x409878a0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40987980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40997368" loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40997368"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40997540"/>
        <function-ref name="payloadLength" scoped="" ref="0x40997620"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40997700"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409977e0"/>
        <function-ref name="headerLength" scoped="" ref="0x409978c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x409979a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40988ab0" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40988ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40988c88"/>
        <function-ref name="cancel" scoped="" ref="0x40988d68"/>
        <function-ref name="sendDone" scoped="" ref="0x40988e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40987010" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40987010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409871e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x409ddf10" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x409ddf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x409fe108"/>
        <function-ref name="address" scoped="" ref="0x409fe1e8"/>
        <function-ref name="destination" scoped="" ref="0x409fe2c8"/>
        <function-ref name="setSource" scoped="" ref="0x409fe3a8"/>
        <function-ref name="setDestination" scoped="" ref="0x409fe488"/>
        <function-ref name="pan" scoped="" ref="0x409fe568"/>
        <function-ref name="setPan" scoped="" ref="0x409fe648"/>
        <function-ref name="isForMe" scoped="" ref="0x409fe728"/>
        <function-ref name="localPan" scoped="" ref="0x409fe808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x409fe948" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x409fe948"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409feb20"/>
        <function-ref name="payloadLength" scoped="" ref="0x409fec00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409fece0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409fedc0"/>
        <function-ref name="headerLength" scoped="" ref="0x409feea0"/>
        <function-ref name="metadataLength" scoped="" ref="0x409fd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x409e7530" loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x409e7530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x409e7708"/>
        <function-ref name="getDSN" scoped="" ref="0x409e77e8"/>
        <function-ref name="setFCF" scoped="" ref="0x409e78c8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x409e79a8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x409e7a88"/>
        <function-ref name="createDataFrame" scoped="" ref="0x409e7b68"/>
        <function-ref name="setDSN" scoped="" ref="0x409e7c48"/>
        <function-ref name="createAckReply" scoped="" ref="0x409e7d28"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x409e7e08"/>
        <function-ref name="isDataFrame" scoped="" ref="0x409e7ee8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x409dd010"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x409dd0f0"/>
        <function-ref name="localAddr" scoped="" ref="0x409dd1d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x409dd330"/>
        <function-ref name="localPan" scoped="" ref="0x409dd410"/>
        <function-ref name="setDestAddr" scoped="" ref="0x409dd4f0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x409dd5d0"/>
        <function-ref name="setFramePending" scoped="" ref="0x409dd6b0"/>
        <function-ref name="setDestPan" scoped="" ref="0x409dd790"/>
        <function-ref name="isForMe" scoped="" ref="0x409dd870"/>
        <function-ref name="setAckRequired" scoped="" ref="0x409dd950"/>
        <function-ref name="getFCF" scoped="" ref="0x409dda30"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x409ddb10"/>
        <function-ref name="getDestAddr" scoped="" ref="0x409ddbf0"/>
        <function-ref name="getFramePending" scoped="" ref="0x409ddcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x409fd1a0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x409fd1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409fd378"/>
        <function-ref name="payloadLength" scoped="" ref="0x409fd458"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409fd538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409fd618"/>
        <function-ref name="headerLength" scoped="" ref="0x409fd6f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x409fd7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40e8ae30" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40e8ae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40e89050"/>
        <function-ref name="address" scoped="" ref="0x40e89130"/>
        <function-ref name="destination" scoped="" ref="0x40e89210"/>
        <function-ref name="setSource" scoped="" ref="0x40e892f0"/>
        <function-ref name="setDestination" scoped="" ref="0x40e893d0"/>
        <function-ref name="pan" scoped="" ref="0x40e894b0"/>
        <function-ref name="setPan" scoped="" ref="0x40e89590"/>
        <function-ref name="isForMe" scoped="" ref="0x40e89670"/>
        <function-ref name="localPan" scoped="" ref="0x40e89750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40e89890" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40e89890"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e89a68"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e89b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e89c28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e89d08"/>
        <function-ref name="headerLength" scoped="" ref="0x40e89de8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40e89ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x40e8b3d0" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40e8b3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40e8b5a8"/>
        <function-ref name="getDSN" scoped="" ref="0x40e8b688"/>
        <function-ref name="setFCF" scoped="" ref="0x40e8b768"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40e8b848"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40e8b928"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40e8ba08"/>
        <function-ref name="setDSN" scoped="" ref="0x40e8bae8"/>
        <function-ref name="createAckReply" scoped="" ref="0x40e8bbc8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40e8bca8"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40e8bd88"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40e8be68"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40e8a010"/>
        <function-ref name="localAddr" scoped="" ref="0x40e8a0f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40e8a250"/>
        <function-ref name="localPan" scoped="" ref="0x40e8a330"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40e8a410"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40e8a4f0"/>
        <function-ref name="setFramePending" scoped="" ref="0x40e8a5d0"/>
        <function-ref name="setDestPan" scoped="" ref="0x40e8a6b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40e8a790"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40e8a870"/>
        <function-ref name="getFCF" scoped="" ref="0x40e8a950"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40e8aa30"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40e8ab10"/>
        <function-ref name="getFramePending" scoped="" ref="0x40e8abf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40e88070" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40e88070"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40e88248"/>
        <function-ref name="changed" scoped="" ref="0x40e88328"/>
        <function-ref name="amGroup" scoped="" ref="0x40e88408"/>
        <function-ref name="setAddress" scoped="" ref="0x40e884e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40e88648" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40e88648"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e88820"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e88900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e889e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e88ac0"/>
        <function-ref name="headerLength" scoped="" ref="0x40e88ba0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40e88c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x409e9bb0" loc="54:/opt/tinyos-main/src/tinyos-main/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x409e9bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x409e9d88"/>
        <function-ref name="changed" scoped="" ref="0x409e9e68"/>
        <function-ref name="amGroup" scoped="" ref="0x409e6010"/>
        <function-ref name="setAddress" scoped="" ref="0x409e60f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409faaf8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409faaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409facd0"/>
        <function-ref name="cancel" scoped="" ref="0x409fadb0"/>
        <function-ref name="sendDone" scoped="" ref="0x409fae90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40a26010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40a26010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a261e8"/>
        <function-ref name="header" scoped="" ref="0x40a262c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x409fa1d8" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x409fa1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409fa3b0"/>
        <function-ref name="cancel" scoped="" ref="0x409fa490"/>
        <function-ref name="sendDone" scoped="" ref="0x409fa570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40a26428" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40a26428"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40a26600"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40a266e0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40a267c0"/>
        <function-ref name="getSender" scoped="" ref="0x40a268a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x409fa6b0" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x409fa6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409fa888"/>
        <function-ref name="header" scoped="" ref="0x409fa968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40e903e0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40e903e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e905b8"/>
        <function-ref name="cancel" scoped="" ref="0x40e90698"/>
        <function-ref name="sendDone" scoped="" ref="0x40e90778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40e908d8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40e908d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e90ab0"/>
        <function-ref name="header" scoped="" ref="0x40e90b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x40e8f9a8" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40e8f9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e8fb80"/>
        <function-ref name="clearAll" scoped="" ref="0x40e8fc60"/>
        <function-ref name="get" scoped="" ref="0x40e8fd40"/>
        <function-ref name="set" scoped="" ref="0x40e8fe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40e93798" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40e93798"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e93970"/>
        <function-ref name="cancel" scoped="" ref="0x40e93a50"/>
        <function-ref name="sendDone" scoped="" ref="0x40e93b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x40e8f310" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40e8f310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40e8f4e8"/>
        <function-ref name="insertNode" scoped="" ref="0x40e8f5c8"/>
        <function-ref name="getNode" scoped="" ref="0x40e8f6a8"/>
        <function-ref name="evicted" scoped="" ref="0x40e8f788"/>
        <function-ref name="getIndex" scoped="" ref="0x40e8f868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40e93c70" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40e93c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e93e48"/>
        <function-ref name="header" scoped="" ref="0x40e93f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e90078" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e90078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e90250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x40e90cd0" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x40e90cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40e90ea8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40e8f010"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40e8f0f0"/>
        <function-ref name="getSender" scoped="" ref="0x40e8f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x409ff440" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x409ff440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x409ff618"/>
        <function-ref name="insertNode" scoped="" ref="0x409ff6f8"/>
        <function-ref name="getNode" scoped="" ref="0x409ff7d8"/>
        <function-ref name="evicted" scoped="" ref="0x409ff8b8"/>
        <function-ref name="getIndex" scoped="" ref="0x409ff998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40a1ce00" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40a1ce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a1b010"/>
        <function-ref name="clearAll" scoped="" ref="0x40a1b0f0"/>
        <function-ref name="get" scoped="" ref="0x40a1b1d0"/>
        <function-ref name="set" scoped="" ref="0x40a1b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40a1c3d8" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40a1c3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40a1c5b0"/>
        <function-ref name="insertNode" scoped="" ref="0x40a1c690"/>
        <function-ref name="getNode" scoped="" ref="0x40a1c770"/>
        <function-ref name="evicted" scoped="" ref="0x40a1c850"/>
        <function-ref name="getIndex" scoped="" ref="0x40a1c930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a1c040" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a1c040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a1c218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40e8ee88" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40e8ee88"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e8d070"/>
        <function-ref name="clearAll" scoped="" ref="0x40e8d150"/>
        <function-ref name="get" scoped="" ref="0x40e8d230"/>
        <function-ref name="set" scoped="" ref="0x40e8d310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40a57520" loc="82:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40a57520"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a576f8"/>
        <function-ref name="cancel" scoped="" ref="0x40a577d8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a578b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40a57a18" loc="83:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40a57a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a57bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40a22d70" loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a22d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a58010"/>
        <function-ref name="cancel" scoped="" ref="0x40a580f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a581d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a58ce0" loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a58ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a58eb8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a57010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a570f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a571d0"/>
        <function-ref name="headerLength" scoped="" ref="0x40a572b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a57390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40a57d50" loc="84:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40a57d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a57f28"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a56018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a560f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a561d8"/>
        <function-ref name="headerLength" scoped="" ref="0x40a562b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a56398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a58330" loc="76:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a58330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a58508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40a564d8" loc="85:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40a564d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40a566b0"/>
        <function-ref name="noAck" scoped="" ref="0x40a56790"/>
        <function-ref name="wasAcked" scoped="" ref="0x40a56870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40a58648" loc="77:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40a58648"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40a58820"/>
        <function-ref name="setRetries" scoped="" ref="0x40a58900"/>
        <function-ref name="getRetries" scoped="" ref="0x40a589e0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40a58ac0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40a58ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40eb29f8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40eb29f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40eb2bd0"/>
        <function-ref name="cancel" scoped="" ref="0x40eb2cb0"/>
        <function-ref name="sendDone" scoped="" ref="0x40eb2d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x40eaeea8" loc="77:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="send" scoped="" ref="0x40eaeea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ead0c0"/>
        <function-ref name="runTask" scoped="" ref="0x40ead1a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x40eb1470" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelayTimer" scoped="" ref="0x40eb1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40eae010"/>
        <function-ref name="fired" scoped="" ref="0x40eb0268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40eb0970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40eb0718"/>
        <function-ref name="getdt" scoped="" ref="0x40eae4c0"/>
        <function-ref name="gett0" scoped="" ref="0x40eae268"/>
        <function-ref name="isRunning" scoped="" ref="0x40eb04c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40eb1a98"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40eb0c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40eb1d18"/>
        <function-ref name="stop" scoped="" ref="0x40eb0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40eb35e8" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40eb35e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40eb37c0"/>
        <function-ref name="cancel" scoped="" ref="0x40eb38a0"/>
        <function-ref name="sendDone" scoped="" ref="0x40eb3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40eb2230" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40eb2230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40eb2408"/>
        <function-ref name="payloadLength" scoped="" ref="0x40eb24e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40eb25c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40eb26a8"/>
        <function-ref name="headerLength" scoped="" ref="0x40eb2788"/>
        <function-ref name="metadataLength" scoped="" ref="0x40eb2868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40eae6f0" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40eae6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40eae8c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40eae9a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40eaea88"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40eaeb68"/>
        <function-ref name="headerLength" scoped="" ref="0x40eaec48"/>
        <function-ref name="metadataLength" scoped="" ref="0x40eaed28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40eb2ed0" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40eb2ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40eb10c0"/>
        <function-ref name="noAck" scoped="" ref="0x40eb11a0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40eb1280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40eb3ac0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40eb3ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40eb3c98"/>
        <function-ref name="setRetries" scoped="" ref="0x40eb3d78"/>
        <function-ref name="getRetries" scoped="" ref="0x40eb3e58"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40eb2010"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40eb20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40eac4c8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40eac4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40eaa010"/>
        <function-ref name="fired" scoped="" ref="0x40eab268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40eab970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40eab718"/>
        <function-ref name="getdt" scoped="" ref="0x40eaa4c0"/>
        <function-ref name="gett0" scoped="" ref="0x40eaa268"/>
        <function-ref name="isRunning" scoped="" ref="0x40eab4c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40eacaf0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40eabc90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40eacd70"/>
        <function-ref name="stop" scoped="" ref="0x40eab010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40a77e28" loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40a77e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a70050"/>
        <function-ref name="stopDone" scoped="" ref="0x40a70130"/>
        <function-ref name="start" scoped="" ref="0x40a70210"/>
        <function-ref name="stop" scoped="" ref="0x40a702f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40a69010" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40a69010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a691e8"/>
        <function-ref name="cancel" scoped="" ref="0x40a692c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a693a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40a69508" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40a69508"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a696e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40a70450" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a70450"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a70628"/>
        <function-ref name="cancel" scoped="" ref="0x40a70708"/>
        <function-ref name="sendDone" scoped="" ref="0x40a707e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40a70c60" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40a70c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a70e38"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a70f18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a6a010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a6a0f0"/>
        <function-ref name="headerLength" scoped="" ref="0x40a6a1d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a6a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40a6a3f0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40a6a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40a6a5c8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40a6a6a8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40a6a788"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40a6a868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40a6a9f8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40a6a9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a6abd0"/>
        <function-ref name="stopDone" scoped="" ref="0x40a6acb0"/>
        <function-ref name="start" scoped="" ref="0x40a6ad90"/>
        <function-ref name="stop" scoped="" ref="0x40a6ae70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a70948" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a70948"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a70b20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40a69840" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40a69840"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a69a18"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a69af8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a69bd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a69cb8"/>
        <function-ref name="headerLength" scoped="" ref="0x40a69d98"/>
        <function-ref name="metadataLength" scoped="" ref="0x40a69e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40ec3778" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40ec3778"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40ec3950"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40ec3a30"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40ec3b10"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40ec3bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40a88248" loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40a88248"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40a88420"/>
        <function-ref name="stopDone" scoped="" ref="0x40a88500"/>
        <function-ref name="start" scoped="" ref="0x40a885e0"/>
        <function-ref name="stop" scoped="" ref="0x40a886c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x40ab9578" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40ab9578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40ab9750"/>
        <function-ref name="turnOn" scoped="" ref="0x40ab9830"/>
        <function-ref name="setChannel" scoped="" ref="0x40ab9910"/>
        <function-ref name="done" scoped="" ref="0x40ab99f0"/>
        <function-ref name="standby" scoped="" ref="0x40ab9ad0"/>
        <function-ref name="getChannel" scoped="" ref="0x40ab9bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40a88820" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a88820"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a889f8"/>
        <function-ref name="cancel" scoped="" ref="0x40a88ad8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a88bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x40ab8230" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40ab8230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ab8408"/>
        <function-ref name="header" scoped="" ref="0x40ab84e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a88d18" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a88d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a88ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x40ab9cf0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40ab9cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ab9ec8"/>
        <function-ref name="ready" scoped="" ref="0x40ab8010"/>
        <function-ref name="sendDone" scoped="" ref="0x40ab80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40ab9070" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40ab9070"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40ab9248"/>
        <function-ref name="setChannel" scoped="" ref="0x40ab9328"/>
        <function-ref name="getChannel" scoped="" ref="0x40ab9408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40ec1ae0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40ec1ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40ec1cb8"/>
        <function-ref name="stopDone" scoped="" ref="0x40ec1d98"/>
        <function-ref name="start" scoped="" ref="0x40ec1e78"/>
        <function-ref name="stop" scoped="" ref="0x40ef4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40ef4170" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40ef4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ef4348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x40ef3260" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40ef3260"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40ef3438"/>
        <function-ref name="turnOn" scoped="" ref="0x40ef3518"/>
        <function-ref name="setChannel" scoped="" ref="0x40ef35f8"/>
        <function-ref name="done" scoped="" ref="0x40ef36d8"/>
        <function-ref name="standby" scoped="" ref="0x40ef37b8"/>
        <function-ref name="getChannel" scoped="" ref="0x40ef3898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40ef44a8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40ef44a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ef4680"/>
        <function-ref name="cancel" scoped="" ref="0x40ef4760"/>
        <function-ref name="sendDone" scoped="" ref="0x40ef4840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x40ef2d58" loc="189:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x40ef2d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ef1010"/>
        <function-ref name="runTask" scoped="" ref="0x40ef10f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x40ef24e8" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40ef24e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ef26c0"/>
        <function-ref name="header" scoped="" ref="0x40ef27a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x40ef1270" loc="144:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x40ef1270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ef1448"/>
        <function-ref name="runTask" scoped="" ref="0x40ef1528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40ef49a0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40ef49a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ef4b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x40ef2920" loc="322:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x40ef2920"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ef2af8"/>
        <function-ref name="runTask" scoped="" ref="0x40ef2bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x40ef2010" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40ef2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ef21e8"/>
        <function-ref name="ready" scoped="" ref="0x40ef22c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40ef23a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40ef4cb8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40ef4cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40ef4e90"/>
        <function-ref name="setChannel" scoped="" ref="0x40ef3010"/>
        <function-ref name="getChannel" scoped="" ref="0x40ef30f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40ef39d8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40ef39d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40ef3bb0"/>
        <function-ref name="suspend" scoped="" ref="0x40ef3c90"/>
        <function-ref name="resume" scoped="" ref="0x40ef3d70"/>
        <function-ref name="run" scoped="" ref="0x40ef3e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40ab3378" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40ab3378"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ab3550"/>
        <function-ref name="ready" scoped="" ref="0x40ab3630"/>
        <function-ref name="sendDone" scoped="" ref="0x40ab3710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40ab3870" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40ab3870"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ab3a48"/>
        <function-ref name="header" scoped="" ref="0x40ab3b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40ab3c68" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40ab3c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ab3e40"/>
        <function-ref name="wait" scoped="" ref="0x40ab3f20"/>
        <function-ref name="cancel" scoped="" ref="0x40ada018"/>
        <function-ref name="isFree" scoped="" ref="0x40ada0f8"/>
        <function-ref name="getNow" scoped="" ref="0x40ada1d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40ada338" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40ada338"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40ada510"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40ada5f0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40ada6d0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40ada7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40ab5f10" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40ab5f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ab3108"/>
        <function-ref name="header" scoped="" ref="0x40ab31e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40ab5a38" loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40ab5a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ab5c10"/>
        <function-ref name="ready" scoped="" ref="0x40ab5cf0"/>
        <function-ref name="sendDone" scoped="" ref="0x40ab5dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40f094b8" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40f094b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f09690"/>
        <function-ref name="ready" scoped="" ref="0x40f09770"/>
        <function-ref name="sendDone" scoped="" ref="0x40f09850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40f099b0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40f099b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f09b88"/>
        <function-ref name="header" scoped="" ref="0x40f09c68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40f09da8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40f09da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40f07010"/>
        <function-ref name="wait" scoped="" ref="0x40f070f0"/>
        <function-ref name="cancel" scoped="" ref="0x40f071d0"/>
        <function-ref name="isFree" scoped="" ref="0x40f072b0"/>
        <function-ref name="getNow" scoped="" ref="0x40f07390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40f074d0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40f074d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40f076a8"/>
        <function-ref name="rand32" scoped="" ref="0x40f07788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40f078e8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40f078e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40f07ac0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40f07ba0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40f07c80"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40f07d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40f09070" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40f09070"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f09248"/>
        <function-ref name="header" scoped="" ref="0x40f09328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40f0bb78" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40f0bb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f0bd50"/>
        <function-ref name="ready" scoped="" ref="0x40f0be30"/>
        <function-ref name="sendDone" scoped="" ref="0x40f0bf10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x40f07ee0" loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x40f07ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f060e0"/>
        <function-ref name="runTask" scoped="" ref="0x40f061c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40adbe98" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40adbe98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40add0c0"/>
        <function-ref name="rand32" scoped="" ref="0x40add1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40adb5d8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40adb5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40adbc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ae0340" loc="44:/opt/tinyos-main/src/tinyos-main/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ae0340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ae0518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40ad9948" loc="48:/opt/tinyos-main/src/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40ad9948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40ad9b20"/>
        <function-ref name="rand32" scoped="" ref="0x40ad9c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40ad9088" loc="47:/opt/tinyos-main/src/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40ad9088"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ad96b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40addb50" loc="46:/opt/tinyos-main/src/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40addb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40addd28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40af4678" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40af4678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40af4850"/>
        <function-ref name="ready" scoped="" ref="0x40af4930"/>
        <function-ref name="sendDone" scoped="" ref="0x40af4a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40af4b70" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40af4b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40af4d48"/>
        <function-ref name="header" scoped="" ref="0x40af4e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40b01010" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40b01010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40b011e8"/>
        <function-ref name="wait" scoped="" ref="0x40b012c8"/>
        <function-ref name="cancel" scoped="" ref="0x40b013a8"/>
        <function-ref name="isFree" scoped="" ref="0x40b01488"/>
        <function-ref name="getNow" scoped="" ref="0x40b01568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x40b00050" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x40b00050"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b00228"/>
        <function-ref name="get" scoped="" ref="0x40b00308"/>
        <function-ref name="setValue" scoped="" ref="0x40b003e8"/>
        <function-ref name="set" scoped="" ref="0x40b004c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40b016c8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40b016c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40b018a0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40b01980"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40b01a60"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40b01b40"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40b01c20"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40b01d00"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40b01de0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40b01ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40af5c90" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40af5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40af5e68"/>
        <function-ref name="header" scoped="" ref="0x40af4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40af57b8" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40af57b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40af5990"/>
        <function-ref name="ready" scoped="" ref="0x40af5a70"/>
        <function-ref name="sendDone" scoped="" ref="0x40af5b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40af4150" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40af4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40af4328"/>
        <function-ref name="noAck" scoped="" ref="0x40af4408"/>
        <function-ref name="wasAcked" scoped="" ref="0x40af44e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40b21528" loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40b21528"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b21700"/>
        <function-ref name="stopDone" scoped="" ref="0x40b217e0"/>
        <function-ref name="start" scoped="" ref="0x40b218c0"/>
        <function-ref name="stop" scoped="" ref="0x40b219a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40b16408" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40b16408"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40b165e0"/>
        <function-ref name="request" scoped="" ref="0x40b166c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b139c8" loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b139c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b13ba0"/>
        <function-ref name="ready" scoped="" ref="0x40b13c80"/>
        <function-ref name="sendDone" scoped="" ref="0x40b13d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40b13ec0" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40b13ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b120c0"/>
        <function-ref name="header" scoped="" ref="0x40b121a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40b17328" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40b17328"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40b17500"/>
        <function-ref name="turnOn" scoped="" ref="0x40b175e0"/>
        <function-ref name="setChannel" scoped="" ref="0x40b176c0"/>
        <function-ref name="done" scoped="" ref="0x40b177a0"/>
        <function-ref name="standby" scoped="" ref="0x40b17880"/>
        <function-ref name="getChannel" scoped="" ref="0x40b17960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40b16800" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40b16800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b169d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b16ab8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b16b98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b16c78"/>
        <function-ref name="headerLength" scoped="" ref="0x40b16d58"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b16e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40b131b0" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40b131b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40b13408"/>
        <function-ref name="turnOn" scoped="" ref="0x40b134e8"/>
        <function-ref name="setChannel" scoped="" ref="0x40b135c8"/>
        <function-ref name="done" scoped="" ref="0x40b136a8"/>
        <function-ref name="standby" scoped="" ref="0x40b13788"/>
        <function-ref name="getChannel" scoped="" ref="0x40b13868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40b14010" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40b14010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40b141e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40b16010" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40b16010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b161e8"/>
        <function-ref name="header" scoped="" ref="0x40b162c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40b14e48" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40b14e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b13050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40b14378" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40b14378"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b14550"/>
        <function-ref name="stopDone" scoped="" ref="0x40b14630"/>
        <function-ref name="start" scoped="" ref="0x40b14710"/>
        <function-ref name="stop" scoped="" ref="0x40b147f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40b12718" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40b12718"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b128f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b129d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b12ab0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b12b90"/>
        <function-ref name="headerLength" scoped="" ref="0x40b12c70"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b12d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40b17010" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40b17010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b171e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40b12eb0" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40b12eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40b110c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40b14950" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40b14950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b14b28"/>
        <function-ref name="cancel" scoped="" ref="0x40b14c08"/>
        <function-ref name="sendDone" scoped="" ref="0x40b14ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40b17aa0" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40b17aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b17c78"/>
        <function-ref name="ready" scoped="" ref="0x40b17d58"/>
        <function-ref name="sendDone" scoped="" ref="0x40b17e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40b12300" loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40b12300"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40b124d8"/>
        <function-ref name="request" scoped="" ref="0x40b125b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40b21ae0" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40b21ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b21cb8"/>
        <function-ref name="cancel" scoped="" ref="0x40b21d98"/>
        <function-ref name="sendDone" scoped="" ref="0x40b21e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x40b6e6b0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x40b6e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b6e888"/>
        <function-ref name="get" scoped="" ref="0x40b6e968"/>
        <function-ref name="setValue" scoped="" ref="0x40b6ea48"/>
        <function-ref name="set" scoped="" ref="0x40b6eb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40b49d88" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40b49d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b70010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b700f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b701d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b702b0"/>
        <function-ref name="headerLength" scoped="" ref="0x40b70390"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b70470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40b70f08" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40b70f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b6e0f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b6e1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b6e2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b6e390"/>
        <function-ref name="headerLength" scoped="" ref="0x40b6e470"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b6e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40b4a6f0" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40b4a6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="TRadio" ref="0x4082ab98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40b49230"/>
        <function-ref name="clear" scoped="" ref="0x40b495e0"/>
        <function-ref name="isValid" scoped="" ref="0x40b4ae40"/>
        <function-ref name="set" scoped="" ref="0x40b49990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x40b70690" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40b70690"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="TRadio" ref="0x4082ab98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b70cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40b34ee8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40b34ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40b33a30"/>
        <function-ref name="clear" scoped="" ref="0x40b33de0"/>
        <function-ref name="isValid" scoped="" ref="0x40b33680"/>
        <function-ref name="set" scoped="" ref="0x40b4a1b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x40f487d8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x40f487d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f489b0"/>
        <function-ref name="get" scoped="" ref="0x40f48a90"/>
        <function-ref name="setValue" scoped="" ref="0x40f48b70"/>
        <function-ref name="set" scoped="" ref="0x40f48c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40f48010" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40f48010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f481e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f482c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f483a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f48488"/>
        <function-ref name="headerLength" scoped="" ref="0x40f48568"/>
        <function-ref name="metadataLength" scoped="" ref="0x40f48648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40f46030" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40f46030"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f46208"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f462e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f463c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f464a8"/>
        <function-ref name="headerLength" scoped="" ref="0x40f46588"/>
        <function-ref name="metadataLength" scoped="" ref="0x40f46668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40f148f8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40f148f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="TRadio" ref="0x4082ab98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40f12418"/>
        <function-ref name="clear" scoped="" ref="0x40f127c8"/>
        <function-ref name="isValid" scoped="" ref="0x40f12068"/>
        <function-ref name="set" scoped="" ref="0x40f12b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x40f48e40" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40f48e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="TRadio" ref="0x4082ab98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f474d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40f47798" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40f47798"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f47de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40f15108" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40f15108"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40f15c08"/>
        <function-ref name="clear" scoped="" ref="0x40f14010"/>
        <function-ref name="isValid" scoped="" ref="0x40f15858"/>
        <function-ref name="set" scoped="" ref="0x40f143c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40b57f10" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40b57f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b54578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40b53348" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40b53348"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b53990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40b53ce0" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b53ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4042feb0"/>
            <typename><typedef-ref name="TMilli" ref="0x404340c8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b52478"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b52968"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b526f0"/>
        <function-ref name="overflow" scoped="" ref="0x40b52be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40b6b918" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40b6b918"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b6baf0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b6bbd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b6bcb0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b6bd90"/>
        <function-ref name="headerLength" scoped="" ref="0x40b6be70"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b69010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40b691a0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40b691a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b69378"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b69458"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b69538"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b69618"/>
        <function-ref name="headerLength" scoped="" ref="0x40b696f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b697d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40b6b350" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40b6b350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b6b538"/>
        <function-ref name="get" scoped="" ref="0x40b6b618"/>
        <function-ref name="setValue" scoped="" ref="0x40b6b6f8"/>
        <function-ref name="set" scoped="" ref="0x40b6b7d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40b7e9e8" loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40b7e9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b7ebc0"/>
        <function-ref name="stopDone" scoped="" ref="0x40b7eca0"/>
        <function-ref name="start" scoped="" ref="0x40b7ed80"/>
        <function-ref name="stop" scoped="" ref="0x40b7ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40b7c8e0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40b7c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40b7cab8"/>
        <function-ref name="request" scoped="" ref="0x40b7cb98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b7aec0" loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b7aec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b790c0"/>
        <function-ref name="ready" scoped="" ref="0x40b791a0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b79280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40b793e0" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40b793e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b795b8"/>
        <function-ref name="header" scoped="" ref="0x40b79698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40b7d800" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40b7d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40b7d9d8"/>
        <function-ref name="turnOn" scoped="" ref="0x40b7dab8"/>
        <function-ref name="setChannel" scoped="" ref="0x40b7db98"/>
        <function-ref name="done" scoped="" ref="0x40b7dc78"/>
        <function-ref name="standby" scoped="" ref="0x40b7dd58"/>
        <function-ref name="getChannel" scoped="" ref="0x40b7de38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40b7ccd8" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40b7ccd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b7ceb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b7b010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b7b0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b7b1d0"/>
        <function-ref name="headerLength" scoped="" ref="0x40b7b2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b7b390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40b7a6a8" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40b7a6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40b7a900"/>
        <function-ref name="turnOn" scoped="" ref="0x40b7a9e0"/>
        <function-ref name="setChannel" scoped="" ref="0x40b7aac0"/>
        <function-ref name="done" scoped="" ref="0x40b7aba0"/>
        <function-ref name="standby" scoped="" ref="0x40b7ac80"/>
        <function-ref name="getChannel" scoped="" ref="0x40b7ad60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40b7b4f0" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40b7b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40b7b6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40b7c4e8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40b7c4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b7c6c0"/>
        <function-ref name="header" scoped="" ref="0x40b7c7a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40b7a370" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40b7a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b7a548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40b7b858" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40b7b858"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b7ba30"/>
        <function-ref name="stopDone" scoped="" ref="0x40b7bb10"/>
        <function-ref name="start" scoped="" ref="0x40b7bbf0"/>
        <function-ref name="stop" scoped="" ref="0x40b7bcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40b79c10" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40b79c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b79de8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b79ec8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b77010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b770f0"/>
        <function-ref name="headerLength" scoped="" ref="0x40b771d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b772b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40b7d4e8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40b7d4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b7d6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40b77410" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40b77410"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40b775e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40b7be30" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40b7be30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b7a050"/>
        <function-ref name="cancel" scoped="" ref="0x40b7a130"/>
        <function-ref name="sendDone" scoped="" ref="0x40b7a210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40b7c010" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40b7c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b7c1e8"/>
        <function-ref name="ready" scoped="" ref="0x40b7c2c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40b7c3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40b797f8" loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40b797f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40b799d0"/>
        <function-ref name="request" scoped="" ref="0x40b79ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40b7d010" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40b7d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b7d1e8"/>
        <function-ref name="cancel" scoped="" ref="0x40b7d2c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40b7d3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40b71010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40b71010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40b711e8"/>
        <function-ref name="request" scoped="" ref="0x40b712c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40b971c0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40b971c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b97d88"/>
        <function-ref name="get" scoped="" ref="0x40b97ac8"/>
        <function-ref name="isSet" scoped="" ref="0x40b97808"/>
        <function-ref name="set" scoped="" ref="0x40b95068"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40b8eee8" loc="64:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40b8eee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b8d0e0"/>
        <function-ref name="get" scoped="" ref="0x40b8d1c0"/>
        <function-ref name="setValue" scoped="" ref="0x40b8d2a0"/>
        <function-ref name="set" scoped="" ref="0x40b8d380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40b90010" loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40b90010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="TRadio" ref="0x4082ab98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40b90b10"/>
        <function-ref name="clear" scoped="" ref="0x40b90ec0"/>
        <function-ref name="isValid" scoped="" ref="0x40b90760"/>
        <function-ref name="set" scoped="" ref="0x40b8e2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40b75db8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40b75db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40b72010"/>
        <function-ref name="turnOn" scoped="" ref="0x40b720f0"/>
        <function-ref name="setChannel" scoped="" ref="0x40b721d0"/>
        <function-ref name="done" scoped="" ref="0x40b722b0"/>
        <function-ref name="standby" scoped="" ref="0x40b72390"/>
        <function-ref name="getChannel" scoped="" ref="0x40b72470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40b71e18" loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40b71e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b98a08"/>
        <function-ref name="get" scoped="" ref="0x40b98748"/>
        <function-ref name="isSet" scoped="" ref="0x40b98488"/>
        <function-ref name="set" scoped="" ref="0x40b98cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40b71478" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40b71478"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b71650"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b71730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b71810"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b718f0"/>
        <function-ref name="headerLength" scoped="" ref="0x40b719d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b71ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40b916f8" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40b916f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b918d0"/>
        <function-ref name="headerLength" scoped="" ref="0x40b919b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b91a90"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40b91b70"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40b91c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40b72b68" loc="45:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40b72b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b72d40"/>
        <function-ref name="header" scoped="" ref="0x40b72e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40b95598" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40b95598"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b94190"/>
        <function-ref name="get" scoped="" ref="0x40b95ea0"/>
        <function-ref name="isSet" scoped="" ref="0x40b95be0"/>
        <function-ref name="set" scoped="" ref="0x40b94450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40b93d28" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40b93d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="TRadio" ref="0x4082ab98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b91390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40b72610" loc="44:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40b72610"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b727e8"/>
        <function-ref name="ready" scoped="" ref="0x40b728c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40b729a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40b94960" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40b94960"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b93590"/>
        <function-ref name="get" scoped="" ref="0x40b932d0"/>
        <function-ref name="isSet" scoped="" ref="0x40b93010"/>
        <function-ref name="set" scoped="" ref="0x40b93850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40b8d5c8" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40b8d5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b8d7a0"/>
        <function-ref name="get" scoped="" ref="0x40b8d880"/>
        <function-ref name="setValue" scoped="" ref="0x40b8d960"/>
        <function-ref name="set" scoped="" ref="0x40b8da40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40b8e7d0" loc="63:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40b8e7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b8ea28"/>
        <function-ref name="get" scoped="" ref="0x40b8eb08"/>
        <function-ref name="setValue" scoped="" ref="0x40b8ebe8"/>
        <function-ref name="set" scoped="" ref="0x40b8ecc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40b87388" loc="58:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40b87388"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40b87560"/>
        <function-ref name="request" scoped="" ref="0x40b87640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40bac510" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40bac510"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bab0f8"/>
        <function-ref name="get" scoped="" ref="0x40bace18"/>
        <function-ref name="isSet" scoped="" ref="0x40bacb58"/>
        <function-ref name="set" scoped="" ref="0x40bab3b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40ba5010" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40ba5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ba51e8"/>
        <function-ref name="get" scoped="" ref="0x40ba52c8"/>
        <function-ref name="setValue" scoped="" ref="0x40ba53a8"/>
        <function-ref name="set" scoped="" ref="0x40ba5488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40b89e68" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40b89e68"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f77d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f77d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b88050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40ba2010" loc="77:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40ba2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="TRadio" ref="0x4082ab98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40ba2b10"/>
        <function-ref name="clear" scoped="" ref="0x40ba2ec0"/>
        <function-ref name="isValid" scoped="" ref="0x40ba2760"/>
        <function-ref name="set" scoped="" ref="0x40ba02a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40b881f8" loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40b881f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40b883d0"/>
        <function-ref name="turnOn" scoped="" ref="0x40b884b0"/>
        <function-ref name="setChannel" scoped="" ref="0x40b88590"/>
        <function-ref name="done" scoped="" ref="0x40b88670"/>
        <function-ref name="standby" scoped="" ref="0x40b88750"/>
        <function-ref name="getChannel" scoped="" ref="0x40b88830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40ba07c8" loc="78:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40ba07c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="TRadio" ref="0x4082ab98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ba0e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40b861b0" loc="61:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40b861b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b86d78"/>
        <function-ref name="get" scoped="" ref="0x40b86ab8"/>
        <function-ref name="isSet" scoped="" ref="0x40b867f8"/>
        <function-ref name="set" scoped="" ref="0x40bac048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40b877f0" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40b877f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40b879c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40b87aa8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b87b88"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40b87c68"/>
        <function-ref name="headerLength" scoped="" ref="0x40b87d48"/>
        <function-ref name="metadataLength" scoped="" ref="0x40b87e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40ba70a0" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40ba70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ba7278"/>
        <function-ref name="headerLength" scoped="" ref="0x40ba7358"/>
        <function-ref name="metadataLength" scoped="" ref="0x40ba7438"/>
        <function-ref name="headerPreloadLength" scoped="" ref="0x40ba7518"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40ba75f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40b88f28" loc="57:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40b88f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b87110"/>
        <function-ref name="header" scoped="" ref="0x40b871f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40bab8e8" loc="63:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40bab8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40baa590"/>
        <function-ref name="get" scoped="" ref="0x40baa2d0"/>
        <function-ref name="isSet" scoped="" ref="0x40baa010"/>
        <function-ref name="set" scoped="" ref="0x40baa850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40b89808" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40b89808"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x402f77d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x402f77d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b899e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40b889d0" loc="56:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40b889d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b88ba8"/>
        <function-ref name="ready" scoped="" ref="0x40b88c88"/>
        <function-ref name="sendDone" scoped="" ref="0x40b88d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40baad60" loc="64:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40baad60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ba8960"/>
        <function-ref name="get" scoped="" ref="0x40ba86a0"/>
        <function-ref name="isSet" scoped="" ref="0x40ba83e0"/>
        <function-ref name="set" scoped="" ref="0x40ba8c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40ba56d0" loc="74:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40ba56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ba58a8"/>
        <function-ref name="get" scoped="" ref="0x40ba5988"/>
        <function-ref name="setValue" scoped="" ref="0x40ba5a68"/>
        <function-ref name="set" scoped="" ref="0x40ba5b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SfdCapture" ref="0x40ba5e80" loc="76:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40ba5e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40ba38d8"/>
        <function-ref name="test" scoped="" ref="0x40ba4c68"/>
        <function-ref name="fired" scoped="" ref="0x40ba49f0"/>
        <function-ref name="get" scoped="" ref="0x40ba44d8"/>
        <function-ref name="reset" scoped="" ref="0x40ba4ee0"/>
        <function-ref name="getMode" scoped="" ref="0x40ba3b78"/>
        <function-ref name="isOn" scoped="" ref="0x40ba3660"/>
        <function-ref name="set" scoped="" ref="0x40ba4750"/>
        <function-ref name="start" scoped="" ref="0x40ba3170"/>
        <function-ref name="stop" scoped="" ref="0x40ba33e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40ba7870" loc="72:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40ba7870"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ba7ac8"/>
        <function-ref name="get" scoped="" ref="0x40ba7ba8"/>
        <function-ref name="setValue" scoped="" ref="0x40ba7c88"/>
        <function-ref name="set" scoped="" ref="0x40ba7d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40b9f0a8" loc="80:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40b9f0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40b9f280"/>
        <function-ref name="suspend" scoped="" ref="0x40b9f360"/>
        <function-ref name="resume" scoped="" ref="0x40b9f440"/>
        <function-ref name="run" scoped="" ref="0x40b9f520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40c273e0" loc="41:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/LocalTime62khzC.nc">
      <component-ref qname="LocalTime62khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40c273e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405240a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c27a28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40c24950" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.LocalTime62khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40c24950"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405240a8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c23010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40c23360" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.LocalTime62khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40c23360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x4048fee0"/>
            <typename><typedef-ref name="T62khz" ref="0x405240a8"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c23ab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40c21010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40c23d28"/>
        <function-ref name="overflow" scoped="" ref="0x40c21288"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403f61a8" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x403ef590" loc="60:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x4040d4e8" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x4040d390" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x40408a78" loc="31:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x4040e168" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4040e010" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x4040e830" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4040e6d8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x4040ed88" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40428088" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x4041cf10" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40428920" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x404285b8" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x404287c0" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4041dde0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x4041da90" loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4041dc80" loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x404222b8" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40422160" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40422ac0" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40422770" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40422960" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x404216d8" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x4042a960" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x4042a410" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4042a600" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x4042a7f8" loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x40421c60" loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40424d68" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40424818" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40424a08" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40424c00" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x40306010" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40306528" loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialInterrupts" loc="3:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
      <function command="" provided="0" name="setSendData" ref="0x40437cd0" loc="17:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="txInterruptHandler" ref="0x404366e0" loc="20:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxInterruptHandler" ref="0x404362b8" loc="19:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40436160" loc="19:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxInterrupt" ref="0x40430eb8" loc="6:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxInterrupt" ref="0x40430a98" loc="5:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxInterrupt" ref="0x4042d730" loc="9:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearTxInterrupt" ref="0x4042db48" loc="11:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxInterruptPending" ref="0x40437480" loc="14:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxInterrupt" ref="0x4042d308" loc="8:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearRxInterrupt" ref="0x40437010" loc="12:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxInterruptPending" ref="0x404378f0" loc="15:/opt/tinyos-main/src/tinyos-main/tos/platforms/rcb128rfa1/SerialInterrupts.nc">
        <interfacedef-ref qname="SerialInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40434ed8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40434ed8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40432098" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40432098"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40432580" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40432098"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x4043c010" loc="76:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40432aa8" loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4043c438" loc="82:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x403e0750" loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x403e0b98" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x403e8038" loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x403e88a8" loc="83:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x403e75b0" loc="100:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x403e7a58" loc="117:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x403e8460" loc="77:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x403e61c0" loc="134:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x403e6068" loc="134:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x403e0328" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x403e8d28" loc="89:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x403e7168" loc="94:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403e3d68" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x403b4bc0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x40493300" loc="44:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x404936e8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x40496b58" loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x40493eb8" loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40496f18" loc="43:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x40493ac0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40496418" loc="40:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x404967a8" loc="41:/opt/tinyos-main/src/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403ce6e0" loc="76:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403dceb8" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCounter" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x40558298" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
          <interfacedef-ref qname="AtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40558298"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x40554970" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40554818" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x405554d8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40558790" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40558298"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40555890" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x40554d80" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x405550f8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40554418" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40558cd0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40558298"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40558b78" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40558298"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40555c58" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40554038" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCapture" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x4056c998" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
          <interfacedef-ref qname="AtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4056c998"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x40575168" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40575010" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40578b98" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x405787b8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4056ce90" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4056c998"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40576010" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x40575578" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40576b68" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405783f0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4056c998"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40578298" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4056c998"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405763d8" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40576788" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCompare" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x40571010" loc="35:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
          <interfacedef-ref qname="AtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40571010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x4056e690" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x4056e538" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4056f210" loc="51:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40571e10" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x4056ee68" loc="78:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40571508" loc="40:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40571010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4056f5c8" loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x4056eaa0" loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4056e138" loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40571a48" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40571010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x405718f0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40571010"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4056f990" loc="59:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4056fd40" loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x403367e0" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x40303138" loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40336c20" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406237e8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406237e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4062f038" loc="136:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40620e28" loc="83:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x4061e010" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4061fc48" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4061fe30" loc="114:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x4061f7a0" loc="98:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x4062f9b0" loc="151:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x4062f480" loc="144:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4061f2e0" loc="92:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40623e40" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40623ce8" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x4061e9f8" loc="129:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4061e6b0" loc="129:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x4061e898" loc="129:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40620590" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40620438" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40620a60" loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40628bc8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40628bc8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40639090" loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40639840" loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40628bc8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40639510" loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x406396e0" loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40628bc8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4066acc0" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4066acc0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4066ae28" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4066ae28"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40663138" loc="109:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4066ae28"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40665de8" loc="78:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40664ac8" loc="103:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4066ae28"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4066ae28"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40664778" loc="103:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4066ae28"/></type-var>
          </variable>
          <variable name="dt" ref="0x40664968" loc="103:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4066ae28"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40664270" loc="88:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x406635c8" loc="116:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4066ae28"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406654a8" loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4066ae28"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40665350" loc="66:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4066ae28"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40665988" loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40710c30" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40710770" loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x4070d298" loc="32:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40711d68" loc="25:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x4070d788" loc="39:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40720d00" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40720d00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x4071d1f0" loc="58:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x4071d9c0" loc="66:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40720d00"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x4071d690" loc="66:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x4071d860" loc="66:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40720d00"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40719c40" loc="120:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x40719320" loc="97:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x4071ecc8" loc="88:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x407197d0" loc="102:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x407185f0" loc="128:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x40725070" loc="100:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40726860" loc="100:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x40726a88" loc="100:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x40726cb0" loc="101:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x40726ed0" loc="101:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x407233f0" loc="119:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40725990" loc="119:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x40725b80" loc="119:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x40725d88" loc="119:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x40723010" loc="120:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x40723278" loc="120:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x407281f8" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x4072b9f8" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x4072bc20" loc="70:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x4072be48" loc="71:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x40728088" loc="71:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40727250" loc="91:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40728ca8" loc="81:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40728958" loc="81:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x40728b48" loc="81:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x4072f1a8" loc="114:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="111:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x407378c0" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403c3990"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x403c3c18"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x4072e6b8" loc="140:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="135:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x4072e560" loc="140:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x4072f668" loc="122:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="118:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x40732360" loc="82:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x40737ed8" loc="58:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="54:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403c3990"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x403c3c18"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x40737d80" loc="58:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403c3990"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x403c3c18"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x40732bb0" loc="91:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="88:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x4072e010" loc="133:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="128:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4072eb60" loc="150:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="142:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x40732760" loc="86:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x40730468" loc="99:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="96:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x40730038" loc="95:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x407308a0" loc="106:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="101:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x4072fad8" loc="127:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="123:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x40733a18" loc="69:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="65:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403c8330"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x403c86d8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x407338c0" loc="69:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403c8330"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x403c86d8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x40730d68" loc="110:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="107:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x407333e8" loc="64:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x403c8330"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x403c86d8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x40733ec8" loc="75:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="71:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x407442c8" loc="156:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="152:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40744170" loc="156:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40738920" loc="95:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40738e08" loc="105:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-main/src/tinyos-main/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40779b78" loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40776168" loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40775808" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x4078b210" loc="73:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x407752d8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40775d18" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x4078b7e8" loc="81:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x40778a80" loc="90:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x40789010" loc="98:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40783eb0" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40777858"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40783d58" loc="79:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40777858"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40786b40" loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40783218" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40777858"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x407830c0" loc="62:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40777858"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x407837c8" loc="70:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40777858"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x407bf4d8" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x40813738" loc="113:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408135e0" loc="113:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x40812730" loc="138:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408125d8" loc="138:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40801c90" loc="104:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40813c48" loc="130:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x40811ea8" loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40826868"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x40811b30" loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40826868"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40811d48" loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4085c010" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4085ddd8" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x4085c9e0" loc="78:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4085c888" loc="78:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40859960" loc="126:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40859600" loc="126:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408597e0" loc="126:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40859018" loc="106:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4085a668" loc="94:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4085a328" loc="94:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4085a508" loc="94:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x40857d08" loc="41:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x4084e460"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40857bb0" loc="41:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40857138" loc="37:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x4084e460"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40857738" loc="39:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x4084e460"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408575e0" loc="39:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40855cc8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4084e460"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40855928" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40855b68" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4084e460"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40855528" loc="43:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4084e460"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40855188" loc="43:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408553c8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4084e460"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x40854850" loc="49:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x4084e1c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408546f8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x40852010" loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x4084e1c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40854c30" loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40854e60" loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x4084e1c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x408542a0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40854148" loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x40852450" loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x4084e1c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x40868de0" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40868a48" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x40868c80" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x40867978" loc="71:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40867820" loc="71:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x40868570" loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x40842d88" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x40842c30" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x40850420" loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408502c8" loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x40850f18" loc="71:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40850dc0" loc="71:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x4086a9b8" loc="85:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086a860" loc="85:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
      <function command="" provided="0" name="send" ref="0x40849730" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4084e460"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x408491d0" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x4084e460"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x408493e8" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408495c8" loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40847a18" loc="122:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408476b8" loc="122:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40847898" loc="122:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40847158" loc="110:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40848168" loc="83:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40848010" loc="83:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40848b48" loc="97:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408487f0" loc="97:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x408489e8" loc="97:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x40864970" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40864818" loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x40851da0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40851a08" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x40851c40" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x40864020" loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40863eb0" loc="59:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x40863990" loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408635f8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x40863830" loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x408622e0" loc="71:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40862188" loc="71:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x40869ab0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x408695d0" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40869478" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x4085f010" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x40843010" loc="78:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
              <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40814a58" loc="78:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40814c38" loc="78:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40814e18" loc="78:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x4085fe40" loc="35:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4085fe40"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4085e010" loc="35:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4085e010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x40879200" loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4085e010"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408790a8" loc="63:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40879c98" loc="70:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40879b40" loc="70:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x4085e698" loc="49:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4085e540" loc="49:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x408767b0" loc="78:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4085e010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40876440" loc="78:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40876650" loc="78:/opt/tinyos-main/src/tinyos-main/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4085e010"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x4086c558" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4086c558"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x40885840" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408856e8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40885220" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4086c558"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408850c8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x4086cbd0" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4086ca78" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40884010" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4086c558"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40885c70" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40885e88" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4086c558"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4087e3c8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4087e3c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4087e8a8" loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x40898bf8" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x408aa430" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
          <long>&#10; Returns the number of bytes in this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408aa2d8" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x408bfd70" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40826608"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408bfc18" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x408bdae0" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408bd988" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x408bf010" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40826868"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c0e80" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x408c0240" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40826868"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c00e8" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x408bf7a8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40826868"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408bf440" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408bf648" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40826868"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x408c0a08" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40826868"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c06a0" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408c08a8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40826868"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x408bd508" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40826608"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408bd1a8" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x408bd3a8" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40826608"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x408a7490" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x408a7a98" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
          <long>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x408a4168" loc="65:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a4010" loc="65:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x408a5200" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a50a8" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x408a58f8" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a57a0" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x4089b670" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4089b518" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x408af010" loc="86:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x408b0aa0" loc="80:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408b0728" loc="80:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x408b0940" loc="80:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x408979f8" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408978a0" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x408b1168" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b1010" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x408b1aa0" loc="69:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408b1728" loc="69:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x408b1940" loc="69:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x4089ca88" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x40897338" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
          <long>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40897010" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x408971d8" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x408b01e0" loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
          <long>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b0088" loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x408b2440" loc="131:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b22e8" loc="131:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x408b3620" loc="120:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b34c8" loc="120:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x408ba3b8" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ba068" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x408ba258" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x408b8800" loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b86a8" loc="75:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x408cd940" loc="156:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cd5e0" loc="156:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408cd7e0" loc="156:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x408b8168" loc="69:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b8010" loc="69:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x408b3e18" loc="125:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b3ad8" loc="125:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x408b3cb8" loc="125:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x408b7798" loc="88:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408b7420" loc="88:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x408b7638" loc="88:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x408cd168" loc="151:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cd010" loc="151:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x408baa20" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ba8c8" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x408b6820" loc="99:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b66c8" loc="99:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x408b6170" loc="94:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408b7d28" loc="94:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x408b6010" loc="94:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x408cb138" loc="178:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x4084e460"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x408cc010" loc="162:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cde10" loc="162:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x408ccc80" loc="173:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x4084e1c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x408cfa80" loc="146:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cf720" loc="146:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408cf920" loc="146:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x408b8eb0" loc="81:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b8d58" loc="81:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x408b3010" loc="115:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b4bf8" loc="115:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x408b4de8" loc="115:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x408b2c28" loc="136:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b28d8" loc="136:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x408b2ac8" loc="136:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x408cb710" loc="184:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cb5b8" loc="184:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x408b4060" loc="105:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b6d00" loc="105:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x408b6ec8" loc="105:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x408abba0" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408aba48" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x408cc720" loc="168:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cc5c8" loc="168:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x408cf2a0" loc="141:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408cf148" loc="141:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x408b4710" loc="110:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b45b8" loc="110:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x408ad1e8" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408aee60" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x408ad088" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x408ad680" loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x408ae370" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ae218" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x408ae9b8" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40826868"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408ae860" loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x408a98c0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a9768" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x408a91e0" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a9088" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x408a9db8" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x408a8490" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a8338" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x408c5780" loc="70:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c5628" loc="70:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x408c9d48" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c9bf0" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x408c6a80" loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x408c65c0" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c6260" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x408c6460" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x408c9650" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c94f8" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x408c5168" loc="65:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c5010" loc="65:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RFA1DriverConfig" loc="36:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x4089a6c0" loc="47:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="43:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x4089a1c0" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="38:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4089a068" loc="41:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x4089ada0" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="49:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4089ac48" loc="53:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerPreloadLength" ref="0x40899338" loc="60:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired.</short>
          <long>&#10; Gets the number of bytes we should read before the RadioReceive.header&#10; event is fired. If the length of the packet is less than this amount, &#10; then that event is fired earlier. The header length must be at least one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x40899a68" loc="66:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="62:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
          <long>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40899910" loc="66:/opt/tinyos-main/src/tinyos-main/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x40908038" loc="60:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x409097c8" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x4082ae50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x40909670" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x4082ae50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40909c10" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x40909138" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x409084f8" loc="65:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x4082ae50"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x408fd5d0" loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x408fdba0" loc="72:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x4091a210" loc="79:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x408fd1a8" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
          <long>&#10; This method is executed atomically. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x409653e8" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40965290" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40963460" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40963308" loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40965d58" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40965a00" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40965bf8" loc="54:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40962420" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
              <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409622a8" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x4098ad40" loc="50:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40826868"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x409a65c8" loc="60:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x409a61c8" loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x40826608"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x4098a850" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40826608"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40826868"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x4098a4e8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x40826608"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x4098a6f0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40826868"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x409f6330" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
              <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409f61b8" loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x409f9b28" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409f99d0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40a0c168" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40a0c010" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x40a0c5e8" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40a0d638" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40a0d4e0" loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40a0db80" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40a0da28" loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x40a0f010" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x409f1e08" loc="57:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x40a0fcf8" loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40826868"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40a0fba0" loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40826868"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x40a0f6e0" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40826868"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40a0f588" loc="62:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x40a0e3c8" loc="80:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40a0e270" loc="80:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x409f18e0" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40826868"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x409f1788" loc="49:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40826868"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x40a87e80" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x40a84908" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40a83010" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40a84df8" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x40a83480" loc="69:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each successfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each successfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x40a84410" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40a839c0" loc="74:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x401bcb68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x40a86a48" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40a868f0" loc="48:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x40a806f8" loc="63:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40a801e0" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40a80088" loc="56:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x40ad04e0" loc="52:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x401bd1e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x40ad0038" loc="46:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x401bd848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-main/src/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40ae0a98" loc="53:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40ae0a98"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40adb168" loc="64:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40ae0a98"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40adb010" loc="64:/opt/tinyos-main/src/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40ae0a98"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x40aedd70" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40aedc18" loc="55:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40af0a18" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40af08c0" loc="40:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x40aed220" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40af0ea8" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40aed0c0" loc="45:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x402f96e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40aed7e0" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40aed688" loc="50:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:50" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40835740"/>
                <typename><typedef-ref name="message_t" ref="0x40834518"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x40b1eb40" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40b1e9e8" loc="52:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40b1e508" loc="44:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/opt/tinyos-main/src/tinyos-main/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40301a98"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
